[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"checkstyle {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    ","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"    mainClassName \u003d \"Ava.Launcher\"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"    archiveBaseName \u003d \"Ava.Launcher\"","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"anshumaantgi":22,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"# Ava User Guide","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"### `todo` Task ","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"Adds a Task with text description.","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"### `deadline` Task `\\by \u003cdd/mm/YYYY HHMM\u003e`","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"Adds a Task with text description and the deadline date.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"### `event` Task `\\from \u003cdd/mm/YYYY HHMM\u003e \\to \u003cdd/mm/YYYY HHMM\u003e`","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"Adds a Task with text description and the event from and to date.","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"### `mark X`","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"Marks a task as completed `X: Index of task to be marked`","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"### `unmark X`","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"Unmarks the completed task. `X: Index of task to be unmarked`","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"### `delete X`","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"Deletes selected task `X: Index of task to be deleted`","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"### `find W`","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"Searches for a task whose text description contains the keyword `W: Keyword`","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"### `list`","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"Lists all tasks made.","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"### `sort`","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"Sorts All tasks made by deadline date (`deadline`) , event start date(`Event`) and message length(`todo`).","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"### `bye`","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"exits the program.","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"\u003e*NOTE: To Enter commands press `Send Button` or **Enter ↵** on Keyboard.*","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"### `todo [DESCRIPTION]` - Add todo task","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"Adds a Task with text `[DESCRIPTION]`.","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"`todo read book`","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"Added this task for you:","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"  [T][ ] read book ","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"### `deadline [DESCRIPTION] /by [DUEDATE]` - Add deadline task","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"Adds a Task with text `[DESCRIPTION]` and the deadline date `[DUEDATE]`  .","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"`deadline return book /by 20/02/2023 2300`","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"anshumaantgi"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"Added this task for you:","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"  [D][ ] return book","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"  (By: Mon,20th","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"anshumaantgi"},"content":"  February,2023 11PM)","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"anshumaantgi"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"anshumaantgi"},"content":"### `event [DESCRIPTION] /from [FROMDATE] /to [TODATE]` - Add event task","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"anshumaantgi"},"content":"Adds a Task with text `[DESCRIPTION]`,the from date `[FROMDATE]` and the to date `[TODATE]` .","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"anshumaantgi"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"anshumaantgi"},"content":"`event party /from 20/02/2023 2100 /to 20/02/2023 2200`","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"anshumaantgi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":93,"author":{"gitId":"anshumaantgi"},"content":"Added this task for you:","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"anshumaantgi"},"content":"  [E][ ] party (FROM:","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"anshumaantgi"},"content":"  Mon,20th","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"anshumaantgi"},"content":"  February,2023 9PM","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"anshumaantgi"},"content":"  TO: Mon,20th","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"anshumaantgi"},"content":"  February,2023 10PM)","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"anshumaantgi"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"anshumaantgi"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"anshumaantgi"},"content":"### `list` - Lists all tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"anshumaantgi"},"content":"Displays all stored tasks with their Index number, Task Sign (`[T],[D] or [E]`) and Task Content.","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"anshumaantgi"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"anshumaantgi"},"content":"`list`","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"anshumaantgi"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"anshumaantgi"},"content":"You\u0027ve got a busy day ","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"anshumaantgi"},"content":"ahead:","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"anshumaantgi"},"content":"    1.[T][ ] read book","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"anshumaantgi"},"content":"    2.[D][ ] return book","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"anshumaantgi"},"content":"    (By: Mon,20th","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"anshumaantgi"},"content":"    February,2023 11PM)","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"anshumaantgi"},"content":"    3.[E][ ] party (FROM:","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"anshumaantgi"},"content":"    Mon,20th","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"anshumaantgi"},"content":"    February,2023 9PM","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"anshumaantgi"},"content":"    TO: Mon,20th","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"anshumaantgi"},"content":"    February,2023 10PM)","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"anshumaantgi"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"anshumaantgi"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"anshumaantgi"},"content":"### `mark [INDEX]` - Mark task as complete","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"anshumaantgi"},"content":"Marks the task with the list [INDEX] as completed.","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"anshumaantgi"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"anshumaantgi"},"content":"`mark 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"anshumaantgi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"anshumaantgi"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"anshumaantgi"},"content":"Yayy! One more Task done: ","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"anshumaantgi"},"content":"    [T][X] read book","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"anshumaantgi"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"anshumaantgi"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"anshumaantgi"},"content":"### `unmark [INDEX]` - Unmark completed task","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"anshumaantgi"},"content":"Unmarks the completed task with the list [INDEX] .","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"anshumaantgi"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"anshumaantgi"},"content":"`unmark 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"anshumaantgi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"anshumaantgi"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":148,"author":{"gitId":"anshumaantgi"},"content":"Ahh! More Work to be ","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"anshumaantgi"},"content":"done on this task: ","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"anshumaantgi"},"content":"    [T][ ] read book","lastModifiedDate":"2023-02-18"},{"lineNumber":151,"author":{"gitId":"anshumaantgi"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"anshumaantgi"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":153,"author":{"gitId":"anshumaantgi"},"content":"### `delete [INDEX]` - deletes Task","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"anshumaantgi"},"content":"deletes the task with the list [INDEX] .","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"anshumaantgi"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":159,"author":{"gitId":"anshumaantgi"},"content":"`delete 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":160,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":161,"author":{"gitId":"anshumaantgi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"anshumaantgi"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":163,"author":{"gitId":"anshumaantgi"},"content":"Oof! I have deleted ","lastModifiedDate":"2023-02-18"},{"lineNumber":164,"author":{"gitId":"anshumaantgi"},"content":"this Task: ","lastModifiedDate":"2023-02-18"},{"lineNumber":165,"author":{"gitId":"anshumaantgi"},"content":"    [T][ ] read book","lastModifiedDate":"2023-02-18"},{"lineNumber":166,"author":{"gitId":"anshumaantgi"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":168,"author":{"gitId":"anshumaantgi"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":169,"author":{"gitId":"anshumaantgi"},"content":"### `find [KEYWORD]` - Finds tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":170,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":171,"author":{"gitId":"anshumaantgi"},"content":"Searches the tasks whose text description contains [KEYWORD] and lists the result found with their list index.","lastModifiedDate":"2023-02-18"},{"lineNumber":172,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":173,"author":{"gitId":"anshumaantgi"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":174,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":175,"author":{"gitId":"anshumaantgi"},"content":"`find book`","lastModifiedDate":"2023-02-18"},{"lineNumber":176,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":177,"author":{"gitId":"anshumaantgi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":178,"author":{"gitId":"anshumaantgi"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":179,"author":{"gitId":"anshumaantgi"},"content":"Here\u0027s what I found:","lastModifiedDate":"2023-02-18"},{"lineNumber":180,"author":{"gitId":"anshumaantgi"},"content":"    2. [T][ ] read book","lastModifiedDate":"2023-02-18"},{"lineNumber":181,"author":{"gitId":"anshumaantgi"},"content":"    3. [D][ ] return book","lastModifiedDate":"2023-02-18"},{"lineNumber":182,"author":{"gitId":"anshumaantgi"},"content":"    (By: Mon,20th","lastModifiedDate":"2023-02-18"},{"lineNumber":183,"author":{"gitId":"anshumaantgi"},"content":"    February,2023 11PM)","lastModifiedDate":"2023-02-18"},{"lineNumber":184,"author":{"gitId":"anshumaantgi"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":185,"author":{"gitId":"anshumaantgi"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":186,"author":{"gitId":"anshumaantgi"},"content":"### `sort` - sorts task added","lastModifiedDate":"2023-02-18"},{"lineNumber":187,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":188,"author":{"gitId":"anshumaantgi"},"content":"Sorts All tasks on different basis:","lastModifiedDate":"2023-02-18"},{"lineNumber":189,"author":{"gitId":"anshumaantgi"},"content":"1. Todo by description length","lastModifiedDate":"2023-02-18"},{"lineNumber":190,"author":{"gitId":"anshumaantgi"},"content":"2. Deadline by deadline date","lastModifiedDate":"2023-02-18"},{"lineNumber":191,"author":{"gitId":"anshumaantgi"},"content":"3. event by from date","lastModifiedDate":"2023-02-18"},{"lineNumber":192,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":193,"author":{"gitId":"anshumaantgi"},"content":"\u003e*NOTE: Todo\u0027s are always displayed first and then deadline and event are displayed by their","lastModifiedDate":"2023-02-18"},{"lineNumber":194,"author":{"gitId":"anshumaantgi"},"content":"respective dates.*","lastModifiedDate":"2023-02-18"},{"lineNumber":195,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":196,"author":{"gitId":"anshumaantgi"},"content":"\u003e**Warning: sort changes position of current tasks. So `list` before performing task","lastModifiedDate":"2023-02-18"},{"lineNumber":197,"author":{"gitId":"anshumaantgi"},"content":"specific action such as `mark`,`unmark` and `delete`.**","lastModifiedDate":"2023-02-18"},{"lineNumber":198,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":199,"author":{"gitId":"anshumaantgi"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":200,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":201,"author":{"gitId":"anshumaantgi"},"content":"`sort`","lastModifiedDate":"2023-02-18"},{"lineNumber":202,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":203,"author":{"gitId":"anshumaantgi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":204,"author":{"gitId":"anshumaantgi"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":205,"author":{"gitId":"anshumaantgi"},"content":"I have organised it","lastModifiedDate":"2023-02-18"},{"lineNumber":206,"author":{"gitId":"anshumaantgi"},"content":"for you:","lastModifiedDate":"2023-02-18"},{"lineNumber":207,"author":{"gitId":"anshumaantgi"},"content":"    1. [T][ ] read book","lastModifiedDate":"2023-02-18"},{"lineNumber":208,"author":{"gitId":"anshumaantgi"},"content":"    2. [E][ ] [E][ ] party (FROM:","lastModifiedDate":"2023-02-18"},{"lineNumber":209,"author":{"gitId":"anshumaantgi"},"content":"    Mon,20th","lastModifiedDate":"2023-02-18"},{"lineNumber":210,"author":{"gitId":"anshumaantgi"},"content":"    February,2023 9PM","lastModifiedDate":"2023-02-18"},{"lineNumber":211,"author":{"gitId":"anshumaantgi"},"content":"    TO: Mon,20th","lastModifiedDate":"2023-02-18"},{"lineNumber":212,"author":{"gitId":"anshumaantgi"},"content":"    February,2023 10PM)","lastModifiedDate":"2023-02-18"},{"lineNumber":213,"author":{"gitId":"anshumaantgi"},"content":"    3. [D][ ] return book","lastModifiedDate":"2023-02-18"},{"lineNumber":214,"author":{"gitId":"anshumaantgi"},"content":"    (By: Mon,20th","lastModifiedDate":"2023-02-18"},{"lineNumber":215,"author":{"gitId":"anshumaantgi"},"content":"    February,2023 11PM)","lastModifiedDate":"2023-02-18"},{"lineNumber":216,"author":{"gitId":"anshumaantgi"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":217,"author":{"gitId":"anshumaantgi"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":218,"author":{"gitId":"anshumaantgi"},"content":"### `bye` - exits the program","lastModifiedDate":"2023-02-18"},{"lineNumber":219,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":220,"author":{"gitId":"anshumaantgi"},"content":"Ends Ava operations.","lastModifiedDate":"2023-02-18"},{"lineNumber":221,"author":{"gitId":"anshumaantgi"},"content":"\u003e*NOTE: To Exit the GUI(Program) press the `Close button` or **Enter ↵** on Keyboard.*","lastModifiedDate":"2023-02-18"},{"lineNumber":222,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":223,"author":{"gitId":"anshumaantgi"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":224,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":225,"author":{"gitId":"anshumaantgi"},"content":"`find book`","lastModifiedDate":"2023-02-18"},{"lineNumber":226,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":227,"author":{"gitId":"anshumaantgi"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":229,"author":{"gitId":"anshumaantgi"},"content":"Have a nice day !!","lastModifiedDate":"2023-02-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":231,"author":{"gitId":"anshumaantgi"},"content":"---","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"anshumaantgi":200,"-":31}},{"path":"src/main/java/Ava/Ava.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"import Ava.commands.AvaCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"public class Ava extends Application {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/AvaImage.png\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserImage.png\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"    private boolean isRunning \u003d true;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"    private String formatSpace \u003d \"  \";","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"    public static enum TASK_TYPE {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"        TODO,","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"        DEADLINE,","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"        EVENT","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"    };","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"    private static TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"    private static Storage store \u003d new Storage();","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"        ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"        VBox dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"        TextField userInput \u003d new TextField();","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"        Label introText \u003d new Label(getResponse(\"enter\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"                DialogBox.getDukeDialog(introText, new ImageView(duke))","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"                );","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"        sendButton.setStyle(\"-fx-background-color: \" + \"lightgreen\");","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"        stage.show();","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"        // more code to be added here later","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"        //step 2","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"        stage.setTitle(\"Ava\");","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"anshumaantgi"},"content":"        mainLayout.setPrefSize(600.0, 800.0);","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"        scrollPane.setPrefSize(400, 535);","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"anshumaantgi"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"anshumaantgi"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"anshumaantgi"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"anshumaantgi"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"anshumaantgi"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"anshumaantgi"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"anshumaantgi"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"anshumaantgi"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"anshumaantgi"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"anshumaantgi"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"anshumaantgi"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"anshumaantgi"},"content":"        //Step 3","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"anshumaantgi"},"content":"            sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"anshumaantgi"},"content":"                if (!isRunning) {","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"anshumaantgi"},"content":"                    stage.close();","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"anshumaantgi"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"anshumaantgi"},"content":"                this.handleUserInput(userInput, dialogContainer);","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"anshumaantgi"},"content":"            });","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"anshumaantgi"},"content":"            userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"anshumaantgi"},"content":"                if(!isRunning) {","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"anshumaantgi"},"content":"                    stage.close();","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"anshumaantgi"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"anshumaantgi"},"content":"                this.handleUserInput(userInput, dialogContainer);","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"anshumaantgi"},"content":"            });","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"anshumaantgi"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"anshumaantgi"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":117,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":120,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"anshumaantgi"},"content":"    private void handleUserInput(TextField userInput, VBox dialogContainer) {","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"anshumaantgi"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"anshumaantgi"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"anshumaantgi"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"anshumaantgi"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"anshumaantgi"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"anshumaantgi"},"content":"        );","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"anshumaantgi"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"anshumaantgi"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"anshumaantgi"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":133,"author":{"gitId":"anshumaantgi"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"anshumaantgi"},"content":"            AvaCommand c \u003d Ava.parser.parse(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"anshumaantgi"},"content":"            this.isRunning \u003d c.run(Ava.tasks,Ava.store);","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"anshumaantgi"},"content":"            if (!isRunning) {","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"anshumaantgi"},"content":"                sendButton.setStyle(\"-fx-background-color: lightpink;\");","lastModifiedDate":"2023-02-15"},{"lineNumber":138,"author":{"gitId":"anshumaantgi"},"content":"                sendButton.setText(\"Close\");","lastModifiedDate":"2023-02-15"},{"lineNumber":139,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":140,"author":{"gitId":"anshumaantgi"},"content":"            output \u003d c.output(formatSpace);","lastModifiedDate":"2023-02-15"},{"lineNumber":141,"author":{"gitId":"anshumaantgi"},"content":"        } catch (AvaException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"anshumaantgi"},"content":"            output \u003d e.getMessage();","lastModifiedDate":"2023-02-11"},{"lineNumber":143,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"anshumaantgi"},"content":"        return output;","lastModifiedDate":"2023-02-11"},{"lineNumber":145,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":147,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":147}},{"path":"src/main/java/Ava/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"public class DialogBox extends StackPane {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    private Label text;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"        text.setFont(Font.font (\"Verdana\", FontWeight.BOLD, 12));","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"        //Setting the maximum width of the label (So that text feild align with text","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"        text.setMaxWidth(150);","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"        this.setStyle(\"-fx-background-color: lightgrey;-fx-background-radius: 15 15 15 15;-fx-padding: 5px;\" +","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"                \"-fx-border-insets: 5px;\" +","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"                \"-fx-background-insets: 5px;\");","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"        this.setAlignment(displayPicture, Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"        this.setAlignment(text, Pos.CENTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"    private void flip() {","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"        this.setAlignment(displayPicture, Pos.TOP_LEFT);","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"        db.flip();","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"        return db;","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"anshumaantgi":56}},{"path":"src/main/java/Ava/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"public class Launcher {","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"        Application.launch(Ava.class, args);","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"anshumaantgi":9}},{"path":"src/main/java/Ava/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import Ava.commands.*;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CommandNotFound;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"    public AvaCommand parse (String input) throws AvaException {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"        input \u003d input.toLowerCase().trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"        AvaCommand command \u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"        String[] inputArray \u003d splitInput(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"            String indentifier \u003d inputArray[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"            switch (indentifier) {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"            case \"enter\":","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"                command \u003d new Enter();","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"                break;","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"                command \u003d new AddTask(parseTodo(inputArray[1]), Ava.TASK_TYPE.TODO);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"                command \u003d new AddTask(parseDeadline(inputArray[1]), Ava.TASK_TYPE.DEADLINE);","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"            case \"event\" :","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"                command \u003d new AddTask(parseEvent(inputArray[1]), Ava.TASK_TYPE.EVENT);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"                command \u003d new MarkTask(parseMarkUnmark(inputArray[1]));","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"                command \u003d new UnmarkTask(parseMarkUnmark(inputArray[1]));","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"                command \u003d new DeleteTask(parseDelete(inputArray[1]));","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"            case \"list\" :","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"                command \u003d new ListTask();","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"            case \"sort\":","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"                command \u003d new SortTasks();","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"                break;","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"            case \"bye\" :","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"                command \u003d new Exit();","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"            case \"find\":","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"                command \u003d new FindTask(parseFindTask(inputArray[1]));","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"                break;","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"            default:","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"                throw new CommandNotFound(input);","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"            return command;","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"        } catch (ArrayIndexOutOfBoundsException | AvaException e){","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"            throw new CommandNotFound(input);","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"    private String[] splitInput(String input){","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"        return input.split(\" \" , 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"    private String[] parseTodo(String mes){","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"        return new String[]{mes};","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"    private String[] parseDeadline(String mes) {","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"        return mes.split(\"/by\", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"anshumaantgi"},"content":"    private String[] parseEvent(String mes) {","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"        String[] output \u003d new String[3];","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"        String[] messageFromTo \u003d mes.split(\"/from\", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"        output[0] \u003d messageFromTo[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"anshumaantgi"},"content":"        String[] fromTo \u003d messageFromTo[1].split(\"/to\", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"anshumaantgi"},"content":"        output[1] \u003d fromTo[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"        output[2] \u003d fromTo[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"anshumaantgi"},"content":"        return output;","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"anshumaantgi"},"content":"    private String[] parseFindTask(String mes) {","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"anshumaantgi"},"content":"        return new String[]{mes.trim()};","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"anshumaantgi"},"content":"    private String[] parseMarkUnmark(String mes){","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"anshumaantgi"},"content":"        return new String[]{mes.trim()};","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"anshumaantgi"},"content":"    private String[] parseDelete(String mes){","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"anshumaantgi"},"content":"        return new String[]{mes.trim()};","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":99}},{"path":"src/main/java/Ava/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotCreateDirectory;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotReadFromFile;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotWriteToFile;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"public class Storage  {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    private final static String STORAGE_DIR \u003d \"storage/\";","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    // File Name is stored here , so all storage functionality remains in the storage class","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    private final static String FILE_NAME \u003d \"tasks.txt\";","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"    private final static String FILE_PATH \u003d STORAGE_DIR + FILE_NAME;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"    private void CheckandCreateDirectory() throws CannotCreateDirectory{","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"        File directory \u003d new File(STORAGE_DIR);","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"            boolean success \u003d directory.mkdir();","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"            if (!success){","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"                throw new CannotCreateDirectory(this.STORAGE_DIR);","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"    public void writeToStorage(String input) throws CannotCreateDirectory, CannotWriteToFile {","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"        File file  \u003d new File(Storage.FILE_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"            this.CheckandCreateDirectory();","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"            boolean s \u003d file.createNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"            FileWriter fw \u003d new FileWriter(file, true);","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"            //Design Decesion that each input will be stored in a new line","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"            fw.write(input + \"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"            fw.flush();","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"            fw.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"            throw new CannotWriteToFile(Storage.FILE_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"    public ArrayList\u003cString\u003e readStorage() throws CannotCreateDirectory, CannotReadFromFile  {","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"        ArrayList\u003cString\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"        File file  \u003d new File(Storage.FILE_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"                // Creates a new file if file does not exists .","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"                this.CheckandCreateDirectory();","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"                return res;","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"                res.add(sc.nextLine());","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"            throw new CannotReadFromFile(Storage.FILE_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"        return res;","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"    public void deleteFile() throws CannotReadFromFile {","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"        File file  \u003d new File(STORAGE_DIR + FILE_NAME);","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"        boolean success \u003d file.delete();","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"        if (!success) {","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"            // Throw Error","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"anshumaantgi"},"content":"            throw new CannotReadFromFile(FILE_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":81}},{"path":"src/main/java/Ava/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotWriteToFile;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.NonExistentTask;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotCreateDirectory;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotReadFromFile;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.DateTimeNotParsed;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":" * Wrapper for List Containing Task Objects","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"public class TaskList {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    private int taskCount \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    private String FILE_NAME \u003d \"tasks.txt\";","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"    private Storage storage \u003d new Storage();","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"     * Add Task to the list and increments taskCount","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"     * @param t Task Object","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"        taskCount++;","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"     * deletes task from List","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"     * @param index delete task index","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"     * @return deleted Task","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"     * @throws NonExistentTask indicate task does not exist","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"    public Task deleteTask(int index) throws NonExistentTask {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"        index -\u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"        if (index \u003e\u003d this.taskCount) {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"            throw new NonExistentTask(\"\");","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"        Task temp \u003d tasks.get(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"        taskCount--;","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"        return temp;","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"     * mark task from List","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"     * @param index int indicate index of task to be marked","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"     * @return marked task","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"     * @throws NonExistentTask indicate task does not exist","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"    public Task mark(int index) throws NonExistentTask {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"        index -\u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"        if (!this.validUnMarkedTask(index)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"            throw new NonExistentTask(\"\");","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"        tasks.get(index).mark();","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"     * unmark task from List","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"     * @param index int indicate index of task to be unmarked","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"     * @return unmarked task","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"     * @throws NonExistentTask indicate task does not exist","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"    public Task unmark(int index) throws NonExistentTask {","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"        index \u003d index - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"anshumaantgi"},"content":"        if (!this.validMarkedTask(index)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"            throw new NonExistentTask(\"\");","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"        tasks.get(index).unmark();","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"anshumaantgi"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"anshumaantgi"},"content":"     * Retreives Tasks from the list and formats according to UI specifications.","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"anshumaantgi"},"content":"     * @param formatSpace indentation reuired by UI","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"anshumaantgi"},"content":"     * @return formatted tasks from taskList","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"anshumaantgi"},"content":"    public String formatTasks(String formatSpace) {","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"anshumaantgi"},"content":"        String  res \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"anshumaantgi"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++){","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"anshumaantgi"},"content":"                res +\u003d  formatSpace + (i+1) + \". \" + tasks.get(i).getRepresentation() + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"anshumaantgi"},"content":"        return res;","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"anshumaantgi"},"content":"     * Sort the tasks inside the list","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"anshumaantgi"},"content":"    public void sortTasks(){","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"anshumaantgi"},"content":"        Collections.sort(this.tasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"anshumaantgi"},"content":"     * Update current TaskList to storage","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"anshumaantgi"},"content":"     * @param storage a storage Object","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CannotCreateDirectory, CannotReadFromFile,CannotWriteToFile indicate problem in updating storage from TaskList","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"anshumaantgi"},"content":"    public void updateStorage(Storage storage) throws CannotCreateDirectory, CannotReadFromFile,CannotWriteToFile {","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"anshumaantgi"},"content":"        storage.deleteFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"anshumaantgi"},"content":"        for(Task t: tasks){","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"anshumaantgi"},"content":"            storage.writeToStorage(t.getStorageFormat());","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"anshumaantgi"},"content":"     * retrieve current Storage to TaskList","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"anshumaantgi"},"content":"     * @param storage a storage Object","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CannotCreateDirectory, CannotReadFromFile,CannotWriteToFile indicate problem in reading storage","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"anshumaantgi"},"content":"    public void retreiveStorage(Storage storage) throws CannotCreateDirectory,CannotReadFromFile,DateTimeNotParsed {","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"anshumaantgi"},"content":"        ArrayList\u003cString\u003e taskStrings \u003d storage.readStorage();","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"anshumaantgi"},"content":"        for (String task : taskStrings){","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"anshumaantgi"},"content":"            String[] parsed \u003d task.split(\",\");","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"anshumaantgi"},"content":"            Task newTask \u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"anshumaantgi"},"content":"            if (parsed[0].contains(Todo.TASK_SIGN)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"anshumaantgi"},"content":"                newTask \u003d new Todo(parsed[2]);","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"anshumaantgi"},"content":"            } else if (parsed[0].contains(Deadline.TASK_SIGN) ) {","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"anshumaantgi"},"content":"                newTask \u003d new Deadline(parsed[2] , parsed[3]);","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"anshumaantgi"},"content":"            } else if (parsed[0].contains(Event.TASK_SIGN) ) {","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"anshumaantgi"},"content":"                newTask \u003d new Event(parsed[2] , parsed[3], parsed[4]);","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"anshumaantgi"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"anshumaantgi"},"content":"                //Uknown ouput","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"anshumaantgi"},"content":"            if (Boolean.valueOf(parsed[1])) {","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"anshumaantgi"},"content":"                newTask.mark();","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"anshumaantgi"},"content":"            tasks.add(newTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"anshumaantgi"},"content":"            taskCount++;","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":143,"author":{"gitId":"anshumaantgi"},"content":"     * Find keyword inside the List","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"anshumaantgi"},"content":"     * @param keyword","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"anshumaantgi"},"content":"     * @param formatSpace indentation required by UI","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"anshumaantgi"},"content":"     * @return representations of task containing keyword","lastModifiedDate":"2023-01-31"},{"lineNumber":147,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"anshumaantgi"},"content":"    public String find(String keyword, String formatSpace){","lastModifiedDate":"2023-01-31"},{"lineNumber":149,"author":{"gitId":"anshumaantgi"},"content":"        String  res \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":150,"author":{"gitId":"anshumaantgi"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++){","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"anshumaantgi"},"content":"            if (this.tasks.get(i).taskContains(keyword)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":152,"author":{"gitId":"anshumaantgi"},"content":"                res +\u003d formatSpace + (i + 1) + \". \" + tasks.get(i).getRepresentation() + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":154,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":155,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":156,"author":{"gitId":"anshumaantgi"},"content":"        return res;","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":159,"author":{"gitId":"anshumaantgi"},"content":"    public boolean validUnMarkedTask(int index) {","lastModifiedDate":"2023-02-15"},{"lineNumber":160,"author":{"gitId":"anshumaantgi"},"content":"        return index \u003c this.taskCount;","lastModifiedDate":"2023-02-15"},{"lineNumber":161,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":162,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":163,"author":{"gitId":"anshumaantgi"},"content":"    public boolean validMarkedTask(int index) {","lastModifiedDate":"2023-02-15"},{"lineNumber":164,"author":{"gitId":"anshumaantgi"},"content":"        return index \u003c this.taskCount \u0026\u0026 this.tasks.get(index).isMarked();","lastModifiedDate":"2023-02-15"},{"lineNumber":165,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":166,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":167,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":168,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":168}},{"path":"src/main/java/Ava/commands/AddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Ava.TASK_TYPE;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotWriteToFile;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.DateTimeNotParsed;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CommandNotFound;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotCreateDirectory;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":" * Command to Add Task to the TaskList","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"public class AddTask implements AvaCommand {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"    String[] parsedInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    private final static String MESSAGE \u003d \"Added this task for you: \";","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    Task newTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    TASK_TYPE task;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"     * Constructor for AddTask Command","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"     * @param input string array containing parsed task message","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"     * @param t enum containing the task types","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CommandNotFound parsedInput is incorrect","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    public AddTask(String[] input, TASK_TYPE t) throws CommandNotFound {","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"        this.parsedInput \u003d input;","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"        this.task \u003d t;","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"        this.isInputCorrect();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"     * Add Task to TaskList and Add Task to Storage","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"     * @param t TaskList object","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"     * @param s Storage object","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"     * @return Nothing","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CannotCreateDirectory indicating directory could not be created","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CannotWriteToFile indicates that storage was unable to write to File","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"     * @throws DateTimeNotParsed indicates Date/Time Format passed is incorrect","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s) throws CannotCreateDirectory, CannotWriteToFile, DateTimeNotParsed {","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"       switch (this.task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"       case DEADLINE:","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"           newTask \u003d new Deadline(parsedInput[0], parsedInput[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"           break;","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"       case EVENT:","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"           newTask \u003d new Event(parsedInput[0] , parsedInput[1] ,parsedInput[2]);","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"           break;","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"       default:","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"           newTask \u003d new Todo(parsedInput[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"       }","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"       // Write the Current Task To Storage","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"        s.writeToStorage(newTask.getStorageFormat());","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"       // Add the Task tasklist","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"        t.addTask(newTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"        return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"     * @param formatSpace identation required by the UI","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"     * @return  return UI Message + Task representation","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace) {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"        return MESSAGE + \"\\n\" + formatSpace + newTask.getRepresentation();","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"     * Before Adding the Task , check if the parsedInputArray is correct","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CommandNotFound parsedInput is incorrect","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"    private void  isInputCorrect() throws CommandNotFound {","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"anshumaantgi"},"content":"        switch (this.task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"anshumaantgi"},"content":"        case EVENT:","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"anshumaantgi"},"content":"             if (this.parsedInput.length !\u003d 3){","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"anshumaantgi"},"content":"                 throw new CommandNotFound(\"\");","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"anshumaantgi"},"content":"             }","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"anshumaantgi"},"content":"             break;","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"anshumaantgi"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"anshumaantgi"},"content":"            if (this.parsedInput.length !\u003d 2){","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"anshumaantgi"},"content":"                throw new CommandNotFound(\"\");","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"anshumaantgi"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"anshumaantgi"},"content":"        default:","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"anshumaantgi"},"content":"            if (this.parsedInput.length !\u003d 1){","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"anshumaantgi"},"content":"                throw new CommandNotFound(\"\");","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":99}},{"path":"src/main/java/Ava/commands/AvaCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"public interface AvaCommand {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"     * Implement the logic of the command","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"     * @param t","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"     * @param s","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"     * @throws AvaException","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s) throws AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"     * Return the reuired String Output.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"     * @return","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":22}},{"path":"src/main/java/Ava/commands/DeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotWriteToFile;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.NonExistentTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CommandNotFound;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotCreateDirectory;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotReadFromFile;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"import static java.lang.Character.isDigit;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":" * Deletes task","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"public class DeleteTask implements AvaCommand {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"    String[] parsedInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    Task deletedTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    private final static String MESSAGE \u003d \"Oof! I have deleted this task:\";","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"     * DeleteTask contructor","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"     * @param parsedInput string array containing parsed index of the task that needs to be deleted","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CommandNotFound incorrect parsedInput","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"    public DeleteTask(String[] parsedInput) throws CommandNotFound {","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"        this.parsedInput \u003d parsedInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"        this.isCorrectInput();","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"     * Deletes Task from TaskList and Storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"     * @param t TaskList Object","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"     * @param s Storage Object","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"     * @return Boolean value indicating programs still running","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"     * @throws NonExistentTask idicate array index out of bounds","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CannotCreateDirectory indicating directory could not be created","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CannotWriteToFile indicating that storage was unable to write to File","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CannotReadFromFile indicating that storage was inable to read from File","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s) throws NonExistentTask, CannotReadFromFile,","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"            CannotCreateDirectory, CannotWriteToFile {","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"        //Already Check parsedInput is valid , if still execute until here then input is invalid","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"        assert parsedInput.length \u003d\u003d 1: \"Invalid Input\";","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"        int index \u003d Integer.valueOf(parsedInput[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"        this.deletedTask \u003d t.deleteTask(index); // Throws NonExistentTask","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"        t.updateStorage(s); // Throws CannotReadFromFile CannotCreateDirectory, CannotWriteToFile","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"        return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"     * @param formatSpace identation required by the UI","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"     * @return  return UI Message + Deleted Task representation","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace) {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"        return MESSAGE + \"\\n\" + formatSpace + this.deletedTask.getRepresentation();","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"     * Before Deleting the Task , check if the parsedInputArray is correct","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CommandNotFound parsedInput is incorrect","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"    private void isCorrectInput() throws CommandNotFound {","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"        if (parsedInput.length !\u003d 1  || !isDigit(parsedInput[0].charAt(0))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"            throw new CommandNotFound(\"\");","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":74}},{"path":"src/main/java/Ava/commands/Enter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotCreateDirectory;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotReadFromFile;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.DateTimeNotParsed;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":" * Exits the Program","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"public class Enter implements AvaCommand {","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    private static final String INTRO_MESSAGE \u003d \"Heya! I am Ava.\";","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"    private static final String GREET \u003d \"Nice to meet you!!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"    private static final String ASK_MESSAGE \u003d \"How can I help?\";","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"     * @param t a TaskList object","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"     * @param s a Storage object","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"     * @return False to indicate program has stopped running","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s) throws CannotCreateDirectory,CannotReadFromFile, DateTimeNotParsed {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"            t.retreiveStorage(s);","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"            return true;","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"    };","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace){","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"        return INTRO_MESSAGE + \"\\n\" + GREET + \"\\n\" + ASK_MESSAGE;","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"anshumaantgi":35}},{"path":"src/main/java/Ava/commands/Exit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":" * Exits the Program","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"public class Exit implements AvaCommand {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"     * @param t a TaskList object","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"     * @param s a Storage object","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"     * @return False to indicate program has stopped runnign","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    private final static String MESSAGE \u003d \"Have a nice day !!\";;","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s){","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"        return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace){","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"        return MESSAGE;","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":31}},{"path":"src/main/java/Ava/commands/FindTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CommandNotFound;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":" * finds Task","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"public class FindTask implements AvaCommand {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"    private String keyword;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"    private final static String MESSAGE \u003d \"Here\u0027s what I found: \";","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    String[] parsedInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"     * @param parsedInput contains keyword to find","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CommandNotFound inidicate incorrectly parsed input","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    public FindTask(String[] parsedInput) throws CommandNotFound {","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"        this.parsedInput \u003d parsedInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"        this.isInputCorrect();","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"     * Find the corresponding keyword in the taskList","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"     * @param t a TaskList Object","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"     * @param s a Storage Object","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"     * @return","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s) {","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"        //Already Check parsedInput is valid , if still execute until here then input is invalid","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"        assert parsedInput.length \u003d\u003d 1 : \"Invalid Input\";","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"        this.keyword \u003d this.parsedInput[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"        this.tasks \u003d t;","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"        return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"     * @param formatSpace indentation required by UI","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace){","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"        return MESSAGE + \"\\n\" + this.tasks.find(keyword, formatSpace);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"     * Before Finding the Task , check if the parsedInputArray is correct","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CommandNotFound","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"    private void  isInputCorrect() throws CommandNotFound {","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"        if (this.parsedInput.length !\u003d 1){","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"            throw new CommandNotFound(\"\");","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":62}},{"path":"src/main/java/Ava/commands/ListTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":" * Lists task","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"public class ListTask implements AvaCommand {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    private final static String MESSAGE \u003d \"You\u0027ve got a busy day ahead:\";","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"     * Retreives fromatted tasks from TaskList","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"     * @param t a TaskList object","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"     * @param s s Storage object","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"     * @return true indicate program still running","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s){","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"        this.tasks \u003d t;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"        return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"     * @param formatSpace identation required by the UI","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"     * @return  return UI Message + formatted tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace){","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"        return MESSAGE +\"\\n\" + tasks.formatTasks(formatSpace);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":38}},{"path":"src/main/java/Ava/commands/MarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotWriteToFile;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.NonExistentTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CommandNotFound;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotCreateDirectory;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotReadFromFile;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"import static java.lang.Character.isDigit;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":" * Marks Task","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"public class MarkTask implements AvaCommand {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"    String[] parsedInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    Task changedTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    private final static String MESSAGE \u003d \"Yayy! One more task done:\";","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"     * MarkTask Contructor","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"     * @param parsedInput string array of the index of the task to be marked.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CommandNotFound parsedInput is incorrect","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"    public MarkTask(String[] parsedInput) throws CommandNotFound {","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"        this.parsedInput \u003d parsedInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"        this.isCorrectInput();","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"     * Retreive marked task","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"     * @param t a TaskList object","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"     * @param s a Storage object","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"     * @return true indicate program running","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"     * @throws NonExistentTask idicate array index out of bounds","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CannotCreateDirectory indicating directory could not be created","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CannotWriteToFile indicating that storage was unable to write to File","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CannotReadFromFile indicating that storage was inable to read from File","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s) throws NonExistentTask, CannotCreateDirectory,","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"            CannotWriteToFile, CannotReadFromFile {","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"        assert this.parsedInput.length \u003d\u003d 1 \u0026\u0026 isDigit(parsedInput[0].charAt(0)): \"Invalid Input\";","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"        this.changedTask \u003d t.mark(Integer.valueOf(this.parsedInput[0]));","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"        t.updateStorage(s);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"        return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"     * @param formatSpace identation required by the UI","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"     * @return  return UI Message + Task representation","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace){","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"        return MESSAGE + \"\\n\" + formatSpace + changedTask.getRepresentation();","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"     * Before marking the Task , check if the parsedInputArray is correct","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CommandNotFound  parsedInput is incorrect","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"    private void isCorrectInput() throws CommandNotFound {","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"        if (parsedInput.length !\u003d 1  || !isDigit(parsedInput[0].charAt(0))){","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"            throw new CommandNotFound(\"\");","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":74}},{"path":"src/main/java/Ava/commands/SortTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"public class SortTasks implements AvaCommand {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"    private final static String MESSAGE \u003d \"I have organised it for you:\";","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"     * Sorts Task inside the list","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"     * @param t a TaskList object","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"     * @param s s Storage object","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"     * @return true indicate program still running","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s){","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"        t.sortTasks();","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"        this.tasks \u003d t;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"        return true;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"     * @param formatSpace identation required by the UI","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"     * @return  return UI Message + formatted tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace){","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"        return MESSAGE +\"\\n\" + tasks.formatTasks(formatSpace);","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"anshumaantgi":33}},{"path":"src/main/java/Ava/commands/UnmarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotWriteToFile;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.NonExistentTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CommandNotFound;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotCreateDirectory;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CannotReadFromFile;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"import static java.lang.Character.isDigit;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":" * Unmarks Task","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"public class UnmarkTask implements AvaCommand {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"    String[] parsedInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    Task changedTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    private final static String MESSAGE \u003d \"Ahh! More work to be done on this task:\";","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"     * UnmarkTask Contructor","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"     * @param parsedInput","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CommandNotFound string array of the index of the task to be marked.","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"    public UnmarkTask(String[] parsedInput) throws CommandNotFound {","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"        this.parsedInput \u003d parsedInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"        this.isCorrectInput();","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"     * Retreive unmarked task","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"     * @param t a TaskList object","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"     * @param s a Storage object","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"     * @return true indicate program running","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"     * @throws NonExistentTask idicate array index out of bounds","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CannotCreateDirectory indicating directory could not be created","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CannotWriteToFile indicating that storage was unable to write to File","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CannotReadFromFile indicating that storage was inable to read from File","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s) throws NonExistentTask, CannotCreateDirectory,","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"            CannotWriteToFile, CannotReadFromFile {","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"        assert this.parsedInput.length \u003d\u003d 1 \u0026\u0026 isDigit(parsedInput[0].charAt(0)): \"Invalid Input\";","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"        this.changedTask \u003d t.unmark(Integer.valueOf(this.parsedInput[0]));","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"        t.updateStorage(s);","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"        return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"     * @param formatSpace identation required by the UI","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"     * @return  return UI Message + Task representation","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace){","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"        return MESSAGE + \"\\n\" + formatSpace + changedTask.getRepresentation();","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"     * Before marking the Task , check if the parsedInputArray is correct","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"     * @throws NonExistentTask parsedInput is incorrect","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"    private void isCorrectInput() throws CommandNotFound {","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"        if (parsedInput.length !\u003d 1  || !isDigit(parsedInput[0].charAt(0))){","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"            throw new CommandNotFound(\"\");","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":71}},{"path":"src/main/java/Ava/exceptions/AvaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.exceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"public abstract class AvaException extends Exception {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"    protected final String SORRY \u003d \"Sorryy!\";","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":7}},{"path":"src/main/java/Ava/exceptions/CannotCreateDirectory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"public class CannotCreateDirectory extends AvaException {","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"    private final String ERROR_PROMPT \u003d \"Directory cannot be created !!\";","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"    private String dirName;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"    public CannotCreateDirectory(String dirName) {","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"        this.dirName \u003d dirName;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    public String getMessage(){","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"        return super.SORRY + \" \" + this.dirName +  \" \" + ERROR_PROMPT;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"anshumaantgi":17}},{"path":"src/main/java/Ava/exceptions/CannotReadFromFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"public class CannotReadFromFile extends AvaException {","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"    private final String ERROR_PROMPT \u003d \" file path not found or Error reading to this File !!\";","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"    private String filePath;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"    public CannotReadFromFile(String filePath) {","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    public String getMessage(){","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"        return super.SORRY + \" \" + this.filePath +  \" \" + ERROR_PROMPT;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"anshumaantgi":17}},{"path":"src/main/java/Ava/exceptions/CannotWriteToFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"public class CannotWriteToFile extends AvaException {","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"    private final String ERROR_PROMPT \u003d \" file path not found or Error writing to this File !!\";","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"    private String filePath;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"    public CannotWriteToFile(String filePath) {","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    public String getMessage(){","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"        return super.SORRY + \" \" + this.filePath +  \" \" + ERROR_PROMPT;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"anshumaantgi":17}},{"path":"src/main/java/Ava/exceptions/CommandNotFound.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.exceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"public class CommandNotFound extends AvaException {","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"    private final String ERROR_PROMPT \u003d \"Command Not Complete or Possible !!\";","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"    private String input;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"    public CommandNotFound(String input) {","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    public String getMessage(){","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"        return super.SORRY + \" \" + this.input +  \" \" + ERROR_PROMPT;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":15}},{"path":"src/main/java/Ava/exceptions/DateTimeNotParsed.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.exceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"public class DateTimeNotParsed extends AvaException {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"    private final String ERROR_PROMPT \u003d \"I don\u0027t recognize the date and time , follow this format \u0027d/mm/yy HHMM\u0027 \" +","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"            \"For Eg. \u0027/by 10/09/2002 1500\u0027-\u003e 10th September 2002 3PM \" ;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"    private String input;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"    public DateTimeNotParsed(String input) {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"    public String getMessage(){","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"        return super.SORRY +  \" \" + ERROR_PROMPT;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":17}},{"path":"src/main/java/Ava/exceptions/NonExistentTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.exceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"public class NonExistentTask extends AvaException {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"    private final String ERROR_PROMPT \u003d \"Cannot be done, you have not made a task like that yet!!\";","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"    private String input;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"    public NonExistentTask(String input) {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    public String getMessage(){","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"        return super.SORRY + \" \" + this.input +  \" \" + ERROR_PROMPT;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":16}},{"path":"src/main/java/Ava/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.DateTimeNotParsed;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":" * Deadline class extends Task","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    public static final String TASK_SIGN \u003d \"[D]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"    private String by;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    private TimeParser tpBy;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"     * Contructor for Deadline message","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"     * @param message String message","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"     * @param by Date and Time String","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"     * @throws DateTimeNotParsed throw when TimeParse is unable to parse by input","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    public Deadline(String message, String by) throws DateTimeNotParsed {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"        super(message);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"        this.tpBy \u003d new TimeParser(this.by);","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"        super.deadline \u003d tpBy; //Used for comparing","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"     * @return message + formatted Date \u0026 Time","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"    public String getMessage(){","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"        return this.message + \" (BY: \" + this.tpBy + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"     * @return task_sign + mark/unmark sign + message","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"    public String getRepresentation(){","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"        return TASK_SIGN + this.getStatusIcon() + \" \" + this.getMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"     * @return storage format of the task","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"    public String getStorageFormat() {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"        return TASK_SIGN + \",\" +this.isMarked()+\",\"+this.message+\",\" +this.by;","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":52}},{"path":"src/main/java/Ava/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.DateTimeNotParsed;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":" * Event class extends Task","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"    public static final String TASK_SIGN \u003d \"[E]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    private String from;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"    private String to;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    private TimeParser tpFrom;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    private TimeParser tpTo;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"     * Contructor for Event message","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"     * @param message String message","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"     * @param from Date and Time String","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"     * @param to Date and Time String","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"     * @throws DateTimeNotParsed throw when TimeParse is unable to parse by input","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    public Event(String message, String from, String to) throws DateTimeNotParsed {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"        super(message);","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"        this.tpFrom \u003d new TimeParser(this.from);","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"        this.tpTo \u003d new TimeParser(this.to);","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"        super.deadline \u003d tpTo; //Used for comparing","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"     * @return message + formatted Date \u0026 Time","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"    public String getMessage(){","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"        return this.message + \" (FROM: \" + this.tpFrom + \" TO: \" + this.tpTo + \")\";","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"     * @return storage format of the task","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"    public String getStorageFormat() {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"        return TASK_SIGN + \",\" +this.isMarked()+\",\"+this.message+\",\" +this.to + \",\" + this.from;","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"     * @return task_sign + mark/unmark sign + message","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"    public String getRepresentation(){","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"        return TASK_SIGN + this.getStatusIcon() + \" \" + this.getMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":54}},{"path":"src/main/java/Ava/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"public class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"    protected String message;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"    protected boolean marked \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"    public static final String TASK_SIGN \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"    protected TimeParser deadline \u003d TimeParser.NO_DEADLINE;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"     * Constructor for the Task","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"     * @param m message string","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"    public Task(String m) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"        this.message \u003d m;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"     * Getter for the message inside task","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"     * @return this.message","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    public String getMessage(){","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"        return this.message;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"     * Getter for the status icon of marked or unmarked","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"     * @return String of marked or unmarked icon","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"        return (this.isMarked()? \"[X]\": \"[ ]\");","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"     * @return Return the Storage Representation of the Task","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"    public String getStorageFormat() {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"        return TASK_SIGN + \",\" + this.isMarked()+\",\"+this.getMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"     * @return mark/unmark sign + message","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"    public String getRepresentation(){","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"        return this.getStatusIcon() + \" \" + this.getMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"     * Compares the Deadline, if same compares the message","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"     * @param other","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"     * @return","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"    public int compareTo(Task other){","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"        int first_indi \u003d deadline.compareTo(other.deadline);","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"        if (first_indi \u003d\u003d 0 ){","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"            return message.compareTo(other.message);","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"        return first_indi;","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"     * Toggles the marked boolean to true","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"    public void mark() {","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"        this.marked \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"anshumaantgi"},"content":"     * toggles the marked boolean to false","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"    public void unmark(){","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"anshumaantgi"},"content":"        this.marked \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"anshumaantgi"},"content":"     * Return the current value of marked feild","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"anshumaantgi"},"content":"     * @return this.marked","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"anshumaantgi"},"content":"    public boolean isMarked(){","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"anshumaantgi"},"content":"        return this.marked;","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"anshumaantgi"},"content":"     * Check if the task message contains key","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"anshumaantgi"},"content":"     * @param key string to be checked","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"anshumaantgi"},"content":"     * @return boolean indicate if message is contained","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"anshumaantgi"},"content":"    public boolean taskContains(String key){","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"anshumaantgi"},"content":"        return this.message.contains(key);","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":101}},{"path":"src/main/java/Ava/tasks/TimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.DateTimeNotParsed;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":" * Parses Date and Time String","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"public class TimeParser implements Comparable\u003cTimeParser\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    public static final TimeParser NO_DEADLINE \u003d new TimeParser(LocalDateTime.MIN);","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    private static final DateTimeFormatter DATE_TIME_PATTERN \u003d DateTimeFormatter.ofPattern(\"E,dd\u0027%s\u0027 MMMM,yyyy ha\", Locale.ENGLISH);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"    private static final DateTimeFormatter DATE_PARSE_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/y\", Locale.ENGLISH);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    private static final DateTimeFormatter TIME_PARSE_FORMAT \u003d DateTimeFormatter.ofPattern(\"HHMM\", Locale.ENGLISH);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    private LocalDate ld;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    private LocalTime lt;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"    private LocalDateTime ldt;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"     * TimeParser Constructor","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"     * @param input Date and Time String","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"     * @throws DateTimeNotParsed indicate Date and Time formatted incorrectly","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"    public TimeParser(String input) throws DateTimeNotParsed {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"            String[] DateTime \u003d input.trim().split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"            this.ld \u003d LocalDate.parse(DateTime[0], DATE_PARSE_FORMAT); // dd/mm/yyyy","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"            this.lt \u003d LocalTime.parse(DateTime[1], TIME_PARSE_FORMAT);// HHMM","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"            this.ldt \u003d LocalDateTime.of(ld, lt);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"        } catch (DateTimeParseException | ArrayIndexOutOfBoundsException  e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"            throw new DateTimeNotParsed(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"     * TimeParser Contructor Only for the Sentinel Value","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"     * @param ldt","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"    private TimeParser(LocalDateTime ldt){","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"        this.ldt  \u003d ldt;","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"        this.ld \u003d ldt.toLocalDate();","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"        this.lt \u003d ldt.toLocalTime();","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"     * @return Formatted Date Time String","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"    public String toString(){","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"        //This was adapted from https://stackoverflow.com/questions/4011075/how-do-you-format-the-day-of-the-month-to-say-11th-21st-or-23rd-ordinal","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"        int day \u003d ldt.getDayOfMonth();","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"        String daySuff \u003d this.getDaySuffix(day);","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"        return String.format(DATE_TIME_PATTERN.format(ldt), daySuff);","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"     * TimeParser elemts are compared to on the basis of LocalDateTime object","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"     * @param other","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"     * @return","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"    public int compareTo(TimeParser other){","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"        return this.ldt.compareTo(other.ldt);","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"     * @param day","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"anshumaantgi"},"content":"     * @return suffix for days","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"    public String getDaySuffix(int day) {","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"            if (day  \u003d\u003d 1 || day \u003d\u003d 21 || day \u003d\u003d 31) {","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"anshumaantgi"},"content":"                return \"st\";","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"anshumaantgi"},"content":"            } else if(day \u003d\u003d 2 || day \u003d\u003d 22) {","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"                return \"nd\";","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"anshumaantgi"},"content":"            } else if (day \u003d\u003d 3 || day \u003d\u003d23) {","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"anshumaantgi"},"content":"                return \"rd\";","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"anshumaantgi"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"anshumaantgi"},"content":"                return \"th\";","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":89}},{"path":"src/main/java/Ava/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":" * Todo class extends Task","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":" **/","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"    public static final String TASK_SIGN \u003d \"[T]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"     * Todo Contructor","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"     * @param input string message","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"    public Todo(String input) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"        super(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"     * @return task_sign + mark/unmark sign + message","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    public String getRepresentation(){","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"        return TASK_SIGN + this.getStatusIcon() + \" \" + this.getMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"     * @return storage representation of Todo","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    public String getStorageFormat() {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"        return TASK_SIGN + \",\" +this.isMarked()+\",\"+this.message;","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"     * Compare Two Deadlines , first compare the by time and if that fails compare messages.","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"     * @param other","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"     * @return","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"    public int compareTo(Task other){","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"        return super.compareTo(other);","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":43}},{"path":"src/test/java/ava/commands/AddTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Ava;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.commands.AddTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"public class AddTaskTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    public void addTodoTest(){","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"            String[] parsedInput \u003d new String[]{\"read book\"};","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"            Ava.TASK_TYPE tt \u003d Ava.TASK_TYPE.TODO;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"            Storage s \u003d new Storage();","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"            AddTask command \u003d new AddTask(parsedInput, tt);","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"            Todo newTodo \u003d new Todo(parsedInput[0]);","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"            boolean running \u003d command.run(tasks, s);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"            assertEquals(tasks.formatTasks(\"\"),\"1. \" + newTodo.getRepresentation()+\"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"        }catch (AvaException e){","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"            fail();","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":31}},{"path":"src/test/java/ava/commands/MarkTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Ava;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.commands.AddTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"public class MarkTaskTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    public void markTodoTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"            String[] parsedInput \u003d new String[]{\"read book\"};","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"            Ava.TASK_TYPE tt \u003d Ava.TASK_TYPE.TODO;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"            Storage s \u003d new Storage();","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"            AddTask command \u003d new AddTask(parsedInput, tt);","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"            Todo newTodo \u003d new Todo(parsedInput[0]);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"            boolean running \u003d command.run(tasks, s);","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"            tasks.mark(1);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"            newTodo.mark();","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"            assertEquals(tasks.formatTasks(\"\"), \"1. \" + newTodo.getRepresentation() + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"        } catch (AvaException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"            fail();","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":34}}]
