[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"    mainClassName \u003d \"Ava.Ava\"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"    archiveBaseName \u003d \"Ava\"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"anshumaantgi":2,"-":39}},{"path":"src/main/java/Ava/Ava.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.commands.AvaCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"public class Ava {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    public static enum TASK_TYPE {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"        TODO,","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"        DEADLINE,","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"        EVENT","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"    };","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"    private static TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    private static Storage store \u003d new Storage();","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"    public Ava() {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"        Ui.displayIntro();","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"        Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"        boolean running \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"            this.tasks.retreiveStorage(store);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"        } catch (AvaException e){","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"            // Trouble Retrieving the storage","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"            Ui.displayOutput(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"            running \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"        while (running) {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"                Ui.ask();","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"                String input \u003d myObj.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"                AvaCommand c \u003d Ava.parser.parse(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"                running \u003d c.run(Ava.tasks,Ava.store);","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"                if (running) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"                    String output \u003d c.output(Ui.getFormatSpace());","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"                    Ui.displayOutput(output);","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"            } catch (AvaException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"                Ui.displayOutput(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"        Ui.displayExit();","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"        Ava a \u003d new Ava();","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":51}},{"path":"src/main/java/Ava/Commands/FindTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CommandNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":" * finds Task","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"public class FindTask implements AvaCommand {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"    private String keyword;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"    private final static String MESSAGE \u003d \"Here\u0027s what I found: \";","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    String[] parsedInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"     * @param parsedInput contains keyword to find","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    public FindTask(String[] parsedInput) throws AvaException {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"        this.parsedInput \u003d parsedInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"     * Find the corresponding keyword in the taskList","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"     * @param t a TaskList Object","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"     * @param s a Storage Object","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"     * @return","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s) throws AvaException {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"        this.keyword \u003d this.parsedInput[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"        this.tasks \u003d t;","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"        return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"     * @param formatSpace indentation required by UI","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace){","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"        return MESSAGE + \"\\n\" + this.tasks.find(keyword, formatSpace);","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"     * Before Finding the Task , check if the parsedInputArray is correct","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CommandNotFoundException","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"    private void  isInputCorrect() throws CommandNotFoundException  {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"        if (this.parsedInput.length !\u003d 1){","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"            throw new CommandNotFoundException(\"\");","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anshumaantgi":56}},{"path":"src/main/java/Ava/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import Ava.commands.*;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CommandNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"public class Parser {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"    public AvaCommand parse (String input) throws AvaException  {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"        input \u003d input.toLowerCase().trim();","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"        AvaCommand command \u003d null;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"        String[] inputArray \u003d splitInput(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"            String indentifier \u003d inputArray[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"            switch (indentifier) {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"                    command \u003d new AddTask(parseTodo(inputArray[1]), Ava.TASK_TYPE.TODO);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"                    command \u003d new AddTask(parseDeadline(inputArray[1]), Ava.TASK_TYPE.DEADLINE);","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"                case \"event\" :","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"                    command \u003d new AddTask(parseEvent(inputArray[1]), Ava.TASK_TYPE.EVENT);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"                    command \u003d new MarkTask(parseMarkUnmark(inputArray[1]));","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"                    command \u003d new UnmarkTask(parseMarkUnmark(inputArray[1]));","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"                case \"delete\":","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"                    command \u003d new DeleteTask(parseDelete(inputArray[1]));","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"                case \"list\" :","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"                    command \u003d new ListTask();","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"                case \"bye\" :","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"                    command \u003d new Exit();","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"                default:","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"                    throw new CommandNotFoundException(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"            return command;","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"        }catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"            throw new CommandNotFoundException(\"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"    private String[] splitInput(String input){","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"        return input.split(\" \" , 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"    private String[] parseTodo(String mes){","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"        return new String[]{mes};","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"    private String[] parseDeadline(String mes) {","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"        return mes.split(\"/by\", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"    private String[] parseEvent(String mes) {","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"        String[] output \u003d new String[3];","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"        String[] messageFromTo \u003d mes.split(\"/from\", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"        output[0] \u003d messageFromTo[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"        String[] fromTo \u003d messageFromTo[1].split(\"/to\", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"        output[1] \u003d fromTo[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"        output[2] \u003d fromTo[1];","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"        return output;","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"    private String[] parseMarkUnmark(String mes){","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"        return new String[]{mes.trim()};","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"anshumaantgi"},"content":"    private String[] parseDelete(String mes){","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"        return new String[]{mes.trim()};","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":79}},{"path":"src/main/java/ava/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import java.io.File;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"public class Storage {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"    private final static String STORAGE_DIR \u003d \"storage/\";","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    // File Name is stored here , so all storage functionality remains in the storage class","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    private final static String FILE_NAME \u003d \"tasks.txt\";","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"    public Storage(){","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"        File directory \u003d new File(STORAGE_DIR);","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"            boolean success \u003d directory.mkdir();","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"            if (!success){","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"                //throw AvaErrorCreatingDirectoryException();","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"    public void writeToStorage(String input) /*throws AvaErrorUnableToStoreException*/ {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"        File file  \u003d new File(STORAGE_DIR + FILE_NAME);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"            boolean s \u003d file.createNewFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"            FileWriter fw \u003d new FileWriter(file, true);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"            //Design Decesion that each input will be stored in a new line","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"            fw.write(input + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"            fw.flush();","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"            fw.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"            //throw AvaErrorUnableToStoreException","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"    public ArrayList\u003cString\u003e readStorage()/*throws AvaErrorUnableToReadStorageException*/ {","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"        ArrayList\u003cString\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"        File file  \u003d new File(STORAGE_DIR + FILE_NAME);","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"                // Creates a new file if file does not exists .","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"                return res;","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"                res.add(sc.nextLine());","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"            //throw AvaErrorUnableToReadStorageException","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"        return res;","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"    public void deleteFile() {","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"        File file  \u003d new File(STORAGE_DIR + FILE_NAME);","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"        boolean success \u003d file.delete();","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"        if (!success) {","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"            // Throw Error","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":71}},{"path":"src/main/java/ava/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.NonExistentTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":" * Wrapper for List Containing Task Objects","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"public class TaskList {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    private  ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    private int taskCount \u003d 0;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"    private String FILE_NAME \u003d \"tasks.txt\";","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    private Storage storage \u003d new Storage();","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"     * Add Task to the list and increments taskCount","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"     * @param t Task Object","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"        taskCount++;","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"     * deletes task from List","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"     * @param index delete task index","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"     * @return deleted Task","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"     * @throws NonExistentTask indicate task does not exist","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"    public Task deleteTask(int index) throws NonExistentTask {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"        index -\u003d 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"        if (index \u003e\u003d this.taskCount) {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"            throw new NonExistentTask(\"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"        Task temp \u003d tasks.get(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"        taskCount--;","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"        return temp;","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"     * mark task from List","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"     * @param index int indicate index of task to be marked","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"     * @return marked task","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"     * @throws NonExistentTask indicate task does not exist","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"    public Task mark(int index) throws NonExistentTask{","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"        index -\u003d 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"        if (index \u003e\u003d this.taskCount) {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"            throw new NonExistentTask(\"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"        tasks.get(index).mark();","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"     * unmark task from List","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"     * @param index int indicate index of task to be unmarked","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"     * @return unmarked task","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"     * @throws NonExistentTask indicate task does not exist","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"    public Task unmark(int index) throws NonExistentTask{","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"        index \u003d index - 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"        if (index \u003e\u003d this.taskCount) {","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"            throw new NonExistentTask(\"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"anshumaantgi"},"content":"        tasks.get(index).unmark();","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"anshumaantgi"},"content":"     * Retreives Tasks from the list and formats according to UI specifications.","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"     * @param formatSpace indentation reuired by UI","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"anshumaantgi"},"content":"     * @return formatted tasks from taskList","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"anshumaantgi"},"content":"    public String formatTasks(String formatSpace) {","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"anshumaantgi"},"content":"        String  res \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"anshumaantgi"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++){","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"anshumaantgi"},"content":"                res +\u003d  formatSpace + (i+1) + \". \" + tasks.get(i).getRepresentation() + \"\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"anshumaantgi"},"content":"        return res;","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"anshumaantgi"},"content":"     * Update current TaskList to storage","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"anshumaantgi"},"content":"     * @param storage a storage Object","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"anshumaantgi"},"content":"     * @throws AvaException indicate problem in updating storage from TaskList","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"anshumaantgi"},"content":"    public void updateStorage(Storage storage) throws AvaException {","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"anshumaantgi"},"content":"        storage.deleteFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"anshumaantgi"},"content":"        for(Task t: tasks){","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"anshumaantgi"},"content":"            storage.writeToStorage(t.getStorageFormat());","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"anshumaantgi"},"content":"     * retrieve current Storage to TaskList","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"anshumaantgi"},"content":"     * @param storage a storage Object","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"anshumaantgi"},"content":"     * @throws AvaException indicate problem in reading storage","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"anshumaantgi"},"content":"    public void retreiveStorage(Storage storage) throws AvaException {","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"anshumaantgi"},"content":"        ArrayList\u003cString\u003e taskStrings \u003d storage.readStorage();","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"anshumaantgi"},"content":"        for (String task : taskStrings){","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"anshumaantgi"},"content":"            String[] parsed \u003d task.split(\",\");","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"anshumaantgi"},"content":"            Task newTask \u003d null;","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"anshumaantgi"},"content":"            if (parsed[0].contains(Todo.TASK_SIGN)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"anshumaantgi"},"content":"                newTask \u003d new Todo(parsed[2]);","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"anshumaantgi"},"content":"            } else if (parsed[0].contains(Deadline.TASK_SIGN) ) {","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"anshumaantgi"},"content":"                newTask \u003d new Deadline(parsed[2] , parsed[3]);","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"anshumaantgi"},"content":"            } else if (parsed[0].contains(Event.TASK_SIGN) ) {","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"anshumaantgi"},"content":"                newTask \u003d new Event(parsed[2] , parsed[3], parsed[4]);","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"anshumaantgi"},"content":"            } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"anshumaantgi"},"content":"                //Uknown ouput","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"anshumaantgi"},"content":"            if (Boolean.valueOf(parsed[1])) {","lastModifiedDate":"2023-01-30"},{"lineNumber":124,"author":{"gitId":"anshumaantgi"},"content":"                newTask.mark();","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":126,"author":{"gitId":"anshumaantgi"},"content":"            tasks.add(newTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":127,"author":{"gitId":"anshumaantgi"},"content":"            taskCount++;","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":130,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":131,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"anshumaantgi"},"content":"     * Find keyword inside the List","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"anshumaantgi"},"content":"     * @param keyword","lastModifiedDate":"2023-01-30"},{"lineNumber":135,"author":{"gitId":"anshumaantgi"},"content":"     * @param formatSpace indentation required by UI","lastModifiedDate":"2023-01-30"},{"lineNumber":136,"author":{"gitId":"anshumaantgi"},"content":"     * @return representations of task containing keyword","lastModifiedDate":"2023-01-30"},{"lineNumber":137,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":138,"author":{"gitId":"anshumaantgi"},"content":"    public String find(String keyword, String formatSpace){","lastModifiedDate":"2023-01-30"},{"lineNumber":139,"author":{"gitId":"anshumaantgi"},"content":"        String  res \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":140,"author":{"gitId":"anshumaantgi"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++){","lastModifiedDate":"2023-01-30"},{"lineNumber":141,"author":{"gitId":"anshumaantgi"},"content":"            if (this.tasks.get(i).taskContains(keyword)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":142,"author":{"gitId":"anshumaantgi"},"content":"                res +\u003d formatSpace + (i + 1) + \". \" + tasks.get(i).getRepresentation() + \"\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":143,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":144,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":145,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":146,"author":{"gitId":"anshumaantgi"},"content":"        return res;","lastModifiedDate":"2023-01-30"},{"lineNumber":147,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":148,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":149,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":150,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":150}},{"path":"src/main/java/ava/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import Ava.commands.AvaCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"public class Ui {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"    //ASCII Emoticons","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"    private static final String AVA_EYES_OPEN \u003d \"(｡◕‿◕｡)\";","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    private static final String AVA_EYES_CLOSE \u003d \"( ^_^)\";","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"    private static final String BOUNDARY \u003d \"﹋\";","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    private static final String FORMAT_SPACE \u003d \"         \";","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    //Boundary Constants","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"    private static int BNUM \u003d 50;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"    //Introduction Constant","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    private static final String INTRO_MESSAGE \u003d \"Heya! I am Ava.\";","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    private static final String GREET \u003d \"Nice to meet you!!\";","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    private static final String ASK_MESSAGE \u003d \"How can I brighten you\u0027re day ?\";","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"    private static final String EXIT_MESSAGE \u003d \"Have a nice day !!\";","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    public static String getFormatSpace(){","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"        return Ui.FORMAT_SPACE;","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"     * Prints the Intro message","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"    public static void displayIntro(){","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"        Ui.displayBoundary();","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"        Ui.printOutput(INTRO_MESSAGE);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"        Ui.printOutput(GREET);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"        Ui.printOutput(ASK_MESSAGE);","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"        Ui.displayBoundary();","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"     * Prints the exit message.","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"    public static void displayExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"        Ui.displayBoundary();","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"        Ui.printOutput(EXIT_MESSAGE);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"        Ui.displayBoundary();","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"     * Prints a Boilerplate to ask user the command.","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"    public static void ask() {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"        System.out.print(\"\\n\"+ Ui.AVA_EYES_OPEN + \": \");","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"     * Displays Output with boundaries","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"    public static void displayOutput(String output) {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"        Ui.displayBoundary();","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"        printOutput(output);","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"        Ui.displayBoundary();","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"     * PRINTING MESSAGE WITH A SPECIAL EMOTICON","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"    private static void printOutput(String emote, String message ) {","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"        System.out.println(emote + message);","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"     * Default Way to print a message with AVA_EYES_CLOSE EMOTICON","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"    private static void printOutput(String message) {","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"anshumaantgi"},"content":"        System.out.println(Ui.AVA_EYES_CLOSE +\" \"+message);","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"anshumaantgi"},"content":"     * Displays Boundary According to Constant BOUNDARY and the number is determined by BNUM","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"    private static void displayBoundary() {","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"anshumaantgi"},"content":"        String res \u003d \"\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"anshumaantgi"},"content":"        for (int i \u003d 0; i \u003c BNUM ; i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"anshumaantgi"},"content":"            res +\u003d Ui.BOUNDARY;","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"anshumaantgi"},"content":"        System.out.println(res);","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":91}},{"path":"src/main/java/ava/commands/AddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Ava.TASK_TYPE;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.CommandNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":" * Add Task to the TaskList","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"public class AddTask implements AvaCommand {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    String[] parsedInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    private final static String MESSAGE \u003d \"Added this task for you: \";","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"    Task newTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    TASK_TYPE task;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"     * Constructor for AddTask Command","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"     * @param input string array containing parsed task message","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"     * @param t enum containing the task types","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CommandNotFoundException parsedInput is incorrect","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"    public AddTask(String[] input, TASK_TYPE t) throws CommandNotFoundException {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"        this.parsedInput \u003d input;","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"        this.task \u003d t;","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"        this.isInputCorrect();","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"     * Add Task to TaskList and Add Task to Storage","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"     * @param t TaskList object","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"     * @param s Storage object","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"     * @return Nothing","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"     * @throws AvaException CommandNotFoundException if parsedInput\u0027s contents are not correct","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s) throws AvaException {","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"       switch (this.task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"           case DEADLINE:","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"               newTask \u003d new Deadline(parsedInput[0], parsedInput[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"               break;","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"           case EVENT:","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"               newTask \u003d new Event(parsedInput[0] , parsedInput[1] ,parsedInput[2]);","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"               break;","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"           default:","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"               newTask \u003d new Todo(parsedInput[0]);","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"       }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"       // Write the Current Task To Storage","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"        s.writeToStorage(newTask.getStorageFormat());","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"       // Add the Task tasklist","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"        t.addTask(newTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"        return true;","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"     * @param formatSpace identation required by the UI","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"     * @return  return UI Message + Task representation","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace) {","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"        return MESSAGE + \"\\n\" + formatSpace + newTask.getRepresentation();","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"     * Before Adding the Task , check if the parsedInputArray is correct","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"     * @throws CommandNotFoundException parsedInput is incorrect","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"anshumaantgi"},"content":"    private void  isInputCorrect() throws CommandNotFoundException  {","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"        switch (this.task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"            case EVENT:","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"                 if (this.parsedInput.length !\u003d 3){","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"anshumaantgi"},"content":"                     throw new CommandNotFoundException(\"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"anshumaantgi"},"content":"                 }","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"                 break;","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"anshumaantgi"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"anshumaantgi"},"content":"                if (this.parsedInput.length !\u003d 2){","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"anshumaantgi"},"content":"                    throw new CommandNotFoundException(\"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"anshumaantgi"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"anshumaantgi"},"content":"                break;","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"anshumaantgi"},"content":"            default:","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"anshumaantgi"},"content":"                if (this.parsedInput.length !\u003d 1){","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"anshumaantgi"},"content":"                    throw new CommandNotFoundException(\"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"anshumaantgi"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":93}},{"path":"src/main/java/ava/commands/AvaCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"public interface AvaCommand {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"     * Implement the logic of the command","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"     * @param t","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"     * @param s","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"     * @throws AvaException","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s) throws AvaException;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"     * Return the reuired String Output.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"     * @return","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":22}},{"path":"src/main/java/ava/commands/DeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.NonExistentTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import static java.lang.Character.isDigit;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":" * Deletes task","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"public class DeleteTask implements AvaCommand {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    String[] parsedInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    Task deletedTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    private final static String MESSAGE \u003d \"Oof! I have deleted this task:\";","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"     * DeleteTask contructor","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"     * @param parsedInput string array containing parsed index of the task that needs to be deleted","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"     * @throws AvaException incorrect parsedInput","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"    public DeleteTask(String[] parsedInput) throws AvaException{","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"        this.parsedInput \u003d parsedInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"        this.isCorrectInput();","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"     * Deletes Task from TaskList and Storage.","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"     * @param t TaskList Object","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"     * @param s Storage Object","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"     * @return Boolean value indicating programs still running","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"     * @throws AvaException parsed Index is not correct or out of bounds.","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s) throws AvaException {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"        int index \u003d Integer.valueOf(parsedInput[0]);","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"        this.deletedTask \u003d t.deleteTask(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"        t.updateStorage(s);","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"        return true;","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"     * @param formatSpace identation required by the UI","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"     * @return  return UI Message + Deleted Task representation","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace) {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"        return MESSAGE + \"\\n\" + formatSpace + this.deletedTask.getRepresentation();","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"     * Before Deleting the Task , check if the parsedInputArray is correct","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"     * @throws NonExistentTask parsedInput is incorrect","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"    private void isCorrectInput() throws NonExistentTask {","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"        if (parsedInput.length !\u003d 1  || !isDigit(parsedInput[0].charAt(0))) {","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"            throw new NonExistentTask(\"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":64}},{"path":"src/main/java/ava/commands/Exit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":" * Exits the Program","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"public class Exit implements AvaCommand {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"     * @param t a TaskList object","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"     * @param s a Storage object","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"     * @return False to indicate program has stopped runnign","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s){","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace){","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"        return \"Will Never reach here\";","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":28}},{"path":"src/main/java/ava/commands/ListTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":" * Lists task","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"public class ListTask implements AvaCommand {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    private final static String MESSAGE \u003d \"You\u0027ve got a busy day ahead:\";","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"     * Retreives fromatted tasks from TaskList","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"     * @param t a TaskList object","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"     * @param s s Storage object","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"     * @return true indicate program still running","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s){","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"        this.tasks \u003d t;","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"        return true;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"     * @param formatSpace identation required by the UI","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"     * @return  return UI Message + formatted tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace){","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"        return MESSAGE +\"\\n\" + tasks.formatTasks(formatSpace);","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":37}},{"path":"src/main/java/ava/commands/MarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.NonExistentTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import static java.lang.Character.isDigit;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":" * Marks Task","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"public class MarkTask implements AvaCommand {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    String[] parsedInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    Task changedTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    private final static String MESSAGE \u003d \"Yayy! One more task done:\";","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"     * MarkTask Contructor","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"     * @param parsedInput string array of the index of the task to be marked.","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"    public MarkTask(String[] parsedInput) {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"        this.parsedInput \u003d parsedInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"     * Retreive marked task","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"     * @param t a TaskList object","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"     * @param s a Storage object","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"     * @return true indicate program running","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"     * @throws AvaException idicate array index out of bounds","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s) throws AvaException {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"        this.changedTask \u003d t.mark(Integer.valueOf(this.parsedInput[0]));","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"        t.updateStorage(s);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"        return true;","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"     * @param formatSpace identation required by the UI","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"     * @return  return UI Message + Task representation","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace){","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"        return MESSAGE + \"\\n\" + formatSpace + changedTask.getRepresentation();","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"     * Before marking the Task , check if the parsedInputArray is correct","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"     * @throws NonExistentTask parsedInput is incorrect","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"    private void isCorrectInput() throws NonExistentTask {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"        if (parsedInput.length !\u003d 1  || !isDigit(parsedInput[0].charAt(0))){","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"            throw new NonExistentTask(\"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":61}},{"path":"src/main/java/ava/commands/UnmarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.NonExistentTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import static java.lang.Character.isDigit;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":" * Unmarks Task","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"public class UnmarkTask implements AvaCommand {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    String[] parsedInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    Task changedTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    private final static String MESSAGE \u003d \"Ahh! More work to be done on this task:\";","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"     * UnmarkTask Contructor","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"     * @param parsedInput string array of the index of the task to be marked.","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"    public UnmarkTask(String[] parsedInput){","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"        this.parsedInput \u003d parsedInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"     * Retreive unmarked task","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"     * @param t a TaskList object","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"     * @param s a Storage object","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"     * @return true indicate program running","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"     * @throws AvaException idicate array index out of bounds","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"    public boolean run(TaskList t, Storage s) throws AvaException {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"        this.changedTask \u003d t.unmark(Integer.valueOf(this.parsedInput[0]));","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"        t.updateStorage(s);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"        return true;","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"     * @param formatSpace identation required by the UI","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"     * @return  return UI Message + Task representation","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"    public String output(String formatSpace){","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"        return MESSAGE + \"\\n\" + formatSpace + changedTask.getRepresentation();","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"     * Before marking the Task , check if the parsedInputArray is correct","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"     * @throws NonExistentTask parsedInput is incorrect","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"    private void isCorrectInput() throws NonExistentTask {","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"        if (parsedInput.length !\u003d 1  || !isDigit(parsedInput[0].charAt(0))){","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"            throw new NonExistentTask(\"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":60}},{"path":"src/main/java/ava/exceptions/AvaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.exceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"public abstract class AvaException extends Exception {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"    protected final String SORRY \u003d \"Sorryy!\";","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":7}},{"path":"src/main/java/ava/exceptions/CommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.exceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"public class CommandNotFoundException extends AvaException {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"    private final String ERROR_PROMPT \u003d \"Command Not Complete or Possible !!\";","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"    private String input;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"    public CommandNotFoundException(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    public String getMessage(){","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"        return super.SORRY + \" \" + this.input +  \" \" + ERROR_PROMPT;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":15}},{"path":"src/main/java/ava/exceptions/DateTimeNotParsed.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.exceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"public class DateTimeNotParsed extends AvaException{","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"    private final String ERROR_PROMPT \u003d \"I don\u0027t recognize the date and time , follow this format \u0027d/mm/yy HHMM\u0027 \" +","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"            \"For Eg. \u0027/by 10/09/2002 1500\u0027-\u003e 10th September 2002 3PM \" ;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"    private String input;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"    public DateTimeNotParsed(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"    public String getMessage(){","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"        return super.SORRY +  \" \" + ERROR_PROMPT;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":17}},{"path":"src/main/java/ava/exceptions/NonExistentTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.exceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"public class NonExistentTask extends AvaException {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"    private final String ERROR_PROMPT \u003d \"Cannot be done, you have not made a task like that yet!!\";","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"    private String input;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"    public NonExistentTask(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    public String getMessage(){","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"        return super.SORRY + \" \" + this.input +  \" \" + ERROR_PROMPT;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":16}},{"path":"src/main/java/ava/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.DateTimeNotParsed;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":" * Deadline class extends Task","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    public static final String TASK_SIGN \u003d \"[D]\";","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"    private String by;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    private TimeParser tpBy;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"     * Contructor for Deadline message","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"     * @param message String message","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"     * @param by Date and Time String","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"     * @throws DateTimeNotParsed throw when TimeParse is unable to parse by input","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    public Deadline(String message, String by) throws DateTimeNotParsed {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"        super(message);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"        this.tpBy \u003d new TimeParser(this.by);","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"     * @return message + formatted Date \u0026 Time","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    public String getMessage(){","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"        return this.message + \" (BY: \" + this.tpBy + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"     * @return task_sign + mark/unmark sign + message","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"    public String getRepresentation(){","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"        return TASK_SIGN + this.getStatusIcon() + \" \" + this.getMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"     * @return storage format of the task","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"    public String getStorageFormat() {","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"        return TASK_SIGN + \",\" +this.isMarked()+\",\"+this.message+\",\" +this.by;","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":49}},{"path":"src/main/java/ava/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.DateTimeNotParsed;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":" * Event class extends Task","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"    public static final String TASK_SIGN \u003d \"[E]\";","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    private String from;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"    private String to;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"    private TimeParser fromTp;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    private TimeParser toTp;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"     * Contructor for Event message","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"     * @param message String message","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"     * @param from Date and Time String","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"     * @param to Date and Time String","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"     * @throws DateTimeNotParsed throw when TimeParse is unable to parse by input","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    public Event(String message, String from, String to) throws DateTimeNotParsed {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"        super(message);","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"        this.fromTp \u003d new TimeParser(this.from);","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"        this.toTp \u003d new TimeParser(this.to);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"     * @return message + formatted Date \u0026 Time","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"    public String getMessage(){","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"        return this.message + \" (FROM: \" + this.fromTp + \" TO: \" + this.toTp + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"     * @return storage format of the task","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"    public String getStorageFormat() {","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"        return TASK_SIGN + \",\" +this.isMarked()+\",\"+this.message+\",\" +this.to + \",\" + this.from;","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"     * @return task_sign + mark/unmark sign + message","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"    public String getRepresentation(){","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"        return TASK_SIGN + this.getStatusIcon() + \" \" + this.getMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":53}},{"path":"src/main/java/ava/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"public class Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"    protected String message;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"    protected boolean marked \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"    public static final String TASK_SIGN \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"     * Constructor for the Task","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"     * @param m message string","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"    public Task(String m) {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"        this.message \u003d m;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"     * Getter for the message inside task","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"     * @return this.message","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    public String getMessage(){","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"        return this.message;","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"     * Getter for the status icon of marked or unmarked","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"     * @return String of marked or unmarked icon","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"        return (this.isMarked()? \"[X]\": \"[ ]\");","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"     * @return Return the Storage Representation of the Task","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"    public String getStorageFormat() {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"        return TASK_SIGN + \",\" + this.isMarked()+\",\"+this.getMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"     * @return mark/unmark sign + message","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"    public String getRepresentation(){","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"        return this.getStatusIcon() + \" \" + this.getMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"     * Toggles the marked boolean to true","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"    public void mark() {","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"        this.marked \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"     * toggles the marked boolean to false","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"    public void unmark(){","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"        this.marked \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"     * Return the current value of marked feild","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"     * @return this.marked","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"anshumaantgi"},"content":"    public boolean isMarked(){","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"anshumaantgi"},"content":"        return this.marked;","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"anshumaantgi"},"content":"     * Check if the task message contains key","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"anshumaantgi"},"content":"     * @param key string to be checked","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"anshumaantgi"},"content":"     * @return boolean indicate if message is contained","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"anshumaantgi"},"content":"    public boolean taskContains(String key){","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"anshumaantgi"},"content":"        return this.message.contains(key);","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":85}},{"path":"src/main/java/ava/tasks/TimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.DateTimeNotParsed;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":" * Parses Date and Time String","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"public class TimeParser {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    private static final DateTimeFormatter DATE_TIME_PATTERN \u003d DateTimeFormatter.ofPattern(\"E,dd\u0027%s\u0027 MMMM,yyyy ha\", Locale.ENGLISH);","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    private static final DateTimeFormatter DATE_PARSE_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/y\", Locale.ENGLISH);","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"    private static final DateTimeFormatter TIME_PARSE_FORMAT \u003d DateTimeFormatter.ofPattern(\"HHMM\", Locale.ENGLISH);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"    private LocalDate ld;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    private LocalTime lt;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    private LocalDateTime ldt;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"     * TimeParser Constructor","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"     * @param input Date and Time String","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"     * @throws DateTimeNotParsed indicate Date and Time formatted incorrectly","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    public TimeParser(String input) throws DateTimeNotParsed {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"            String[] DateTime \u003d input.trim().split(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"            this.ld \u003d LocalDate.parse(DateTime[0], DATE_PARSE_FORMAT); // dd/mm/yyyy","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"            this.lt \u003d LocalTime.parse(DateTime[1], TIME_PARSE_FORMAT);// HHMM","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"anshumaantgi"},"content":"            this.ldt \u003d LocalDateTime.of(ld, lt);","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"anshumaantgi"},"content":"        } catch (DateTimeParseException | ArrayIndexOutOfBoundsException  e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"anshumaantgi"},"content":"            throw new DateTimeNotParsed(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"anshumaantgi"},"content":"     * @return Formatted Date Time String","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"anshumaantgi"},"content":"    public String toString(){","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"anshumaantgi"},"content":"        //This was adapted from https://stackoverflow.com/questions/4011075/how-do-you-format-the-day-of-the-month-to-say-11th-21st-or-23rd-ordinal","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"anshumaantgi"},"content":"        int day \u003d ldt.getDayOfMonth();","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"anshumaantgi"},"content":"        String daySuff \u003d this.getDaySuffix(day);","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"anshumaantgi"},"content":"        return String.format(DATE_TIME_PATTERN.format(ldt), daySuff);","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"anshumaantgi"},"content":"     * @param day","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"anshumaantgi"},"content":"     * @return suffix for days","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"anshumaantgi"},"content":"    public String getDaySuffix(int day) {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"anshumaantgi"},"content":"            if (day  \u003d\u003d 1 || day \u003d\u003d 21 || day \u003d\u003d 31) {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"anshumaantgi"},"content":"                return \"st\";","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"anshumaantgi"},"content":"            } else if(day \u003d\u003d 2 || day \u003d\u003d 22) {","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"anshumaantgi"},"content":"                return \"nd\";","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"anshumaantgi"},"content":"            } else if (day \u003d\u003d 3 || day \u003d\u003d23) {","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"anshumaantgi"},"content":"                return \"rd\";","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"anshumaantgi"},"content":"            } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"anshumaantgi"},"content":"                return \"th\";","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"anshumaantgi"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":68}},{"path":"src/main/java/ava/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package Ava.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":" * Todo class extends Task","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":" **/","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"    public static final String TASK_SIGN \u003d \"[T]\";","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"     * Todo Contructor","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"     * @param input string message","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"    public Todo(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"        super(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"     * @return task_sign + mark/unmark sign + message","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"    public String getRepresentation(){","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"        return TASK_SIGN + this.getStatusIcon() + \" \" + this.getMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"     * @return storage representation of Todo","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    public String getStorageFormat() {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"        return TASK_SIGN + \",\" +this.isMarked()+\",\"+this.message;","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":33}},{"path":"src/test/java/ava/commands/AddTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Ava;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.commands.AddTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"public class AddTaskTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    public void addTodoTest(){","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"            String[] parsedInput \u003d new String[]{\"read book\"};","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"            Ava.TASK_TYPE tt \u003d Ava.TASK_TYPE.TODO;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"            Storage s \u003d new Storage();","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"            AddTask command \u003d new AddTask(parsedInput, tt);","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"            Todo newTodo \u003d new Todo(parsedInput[0]);","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"            boolean running \u003d command.run(tasks, s);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"            assertEquals(tasks.formatTasks(\"\"),\"1. \" + newTodo.getRepresentation()+\"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"        }catch (AvaException e){","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"            fail();","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":31}},{"path":"src/test/java/ava/commands/MarkTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"package ava.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Ava;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"import Ava.commands.AddTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"import Ava.exceptions.AvaException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anshumaantgi"},"content":"import Ava.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"anshumaantgi"},"content":"import Ava.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"anshumaantgi"},"content":"import Ava.tasks.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anshumaantgi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"anshumaantgi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"anshumaantgi"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anshumaantgi"},"content":"public class MarkTaskTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"anshumaantgi"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"anshumaantgi"},"content":"    public void markTodoTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"anshumaantgi"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"anshumaantgi"},"content":"            String[] parsedInput \u003d new String[]{\"read book\"};","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"anshumaantgi"},"content":"            Ava.TASK_TYPE tt \u003d Ava.TASK_TYPE.TODO;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"            Storage s \u003d new Storage();","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"anshumaantgi"},"content":"            AddTask command \u003d new AddTask(parsedInput, tt);","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"anshumaantgi"},"content":"            Todo newTodo \u003d new Todo(parsedInput[0]);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"anshumaantgi"},"content":"            boolean running \u003d command.run(tasks, s);","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"anshumaantgi"},"content":"            tasks.mark(1);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"anshumaantgi"},"content":"            newTodo.mark();","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"anshumaantgi"},"content":"            assertEquals(tasks.formatTasks(\"\"), \"1. \" + newTodo.getRepresentation() + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"anshumaantgi"},"content":"        } catch (AvaException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"anshumaantgi"},"content":"            fail();","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"anshumaantgi"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"anshumaantgi"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"anshumaantgi"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"anshumaantgi":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"anshumaantgi"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"anshumaantgi"},"content":"deadline book /by sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"anshumaantgi"},"content":"event meeting /from sunday /to monday","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"anshumaantgi"},"content":"bye","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"anshumaantgi"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"anshumaantgi":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"anshumaantgi"},"content":"# run the program, feed commands from input.txt file and redirect the output to the EXPECTED.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"anshumaantgi"},"content":"java -classpath ../bin Ava \u003c input.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"anshumaantgi":2,"-":36}}]
