[{"path":"data/jarvis.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"[T][ ] run","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"[T][ ] buy bread","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"[D][ ] eat bread  (Due: Jan 26 2023)","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"[E][ ] meeting (Start: Jan 27 2023 | End: Jan 28 2023)","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"anthonynmh":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"    private String time \u003d \"\";","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"    private LocalDate timeParsed;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"    public Deadline(int id, String task, String time) {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"        super(id, task);","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"    public Deadline(int id, String task, LocalDate timeParsed) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"        super(id, task);","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"        this.timeParsed \u003d timeParsed;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"        return this.isDone()","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"                ? \"[D][x] \" + this.getTask()","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"                        + \" (Due: \"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"                        + this.timeParsed.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"                : \"[D][ ] \" + this.getTask()","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"                        + \" (Due: \"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"                        + this.timeParsed.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"anthonynmh":29}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"    private String startTime \u003d \"\";","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"    private String endTime \u003d \"\";","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"    private LocalDate startTimeParsed;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"    private LocalDate endTimeParsed;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"    public Event(int id, String task, String startTime, String endTime) {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"        super(id, task);","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"    public Event(int id, String task, LocalDate startTime, LocalDate endTime) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"        super(id, task);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"        this.startTimeParsed \u003d startTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"        this.endTimeParsed \u003d endTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"        return this.isDone()","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"                ? \"[E][x] \" + this.getTask() + \" (Start: \"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"                        + this.startTimeParsed.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"                        + \" | End: \"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"                        + endTimeParsed.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"                : \"[E][ ] \" + this.getTask() + \" (Start: \"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"                        + this.startTimeParsed.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"                        + \" | End: \"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"                        + this.endTimeParsed.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"anthonynmh":35}},{"path":"src/main/java/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"public class FileHandler {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"    public static void saveTasks(ToDoList todolist, String filePath) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"        for (int i \u003d 0; i \u003c todolist.getCount(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"            fw.write(todolist.getTask(i) + System.lineSeparator());","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"        fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"    public static void loadTasks(ToDoList todolist, String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\tTasks from the previous session:\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"            String curr \u003d s.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"            String taskType \u003d curr.substring(1, 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"            System.out.println(\"\\t\" + curr);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"                todolist.add(curr.substring(7));","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"                int firstColon \u003d curr.indexOf(\":\");","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"                int firstBracket \u003d curr.indexOf(\"(\");","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"                String task \u003d curr.substring(7, firstBracket - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"                String time \u003d curr.substring(firstColon + 2, curr.length() - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"                LocalDate startTimeParsed \u003d LocalDate.parse(time, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"                todolist.add(task, startTimeParsed);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"            } else if (taskType.equals(\"E\")) { // event task","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"anthonynmh"},"content":"                int firstColon \u003d curr.indexOf(\":\");","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"                int secondColon \u003d curr.substring(firstColon + 1).indexOf(\":\") + firstColon + 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"                int firstBracket \u003d curr.indexOf(\"(\");","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"                String startTime \u003d curr.substring(firstColon + 2, secondColon - 6);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"                String endTime \u003d curr.substring(secondColon + 2, curr.length() - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"                String task \u003d curr.substring(7, firstBracket - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"                LocalDate startTimeParsed \u003d LocalDate.parse(startTime, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"                LocalDate endTimeParsed \u003d LocalDate.parse(endTime, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"                todolist.add(task, startTimeParsed, endTimeParsed);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"anthonynmh":55}},{"path":"src/main/java/Jarvis.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"public class Jarvis {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"        /*","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"         */","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"        String computer \u003d","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"                \"              ,------------------------------------,\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"                \"              |  /------------------------------\\\\  |\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"                \"              | |J.A.R.V.I.S(v1.0)      CS2103(T)| |\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"                \"              | |                                | |\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"                \"              | | *HOW CAN I HELP YOU MR STARK?* | |\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"                \"              | |                                | |\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"                \"              | | *command list                  | |\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"                \"              | |  - todo        -list           | |\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"                \"              | |  - deadline    -markdone       | |\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"                \"              | |  - event       -unmark         | |\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"                \"              |  \\\\______________________________/  |\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"                \"              |____________________________________|\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"                \"            ,------\\\\_____     []     _______/---,\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"                \"          /             /______________\\\\      / |\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"                \"        /___________________________________ /  | ___\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"                \"        |credits: www.asciiart.eu/computers |   |    )\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"                \"        |  _ _ _                 [-------]  |   |   (\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"                \"        |  o o o                 [-------]  |  /    _)_\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"anthonynmh"},"content":"                \"        |__________________________________ |/     /  /\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"                \"    /-------------------------------------/|      ( )/\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"                \"  /-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/ /\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"                \"/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/ /\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"                \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(computer);","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"        String dataPath \u003d \"./data/jarvis.txt\";","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"        ToDoList todolist \u003d new ToDoList(100);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"anthonynmh"},"content":"        // Print previous data","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"anthonynmh"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"anthonynmh"},"content":"            FileHandler.loadTasks(todolist, dataPath);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"anthonynmh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"anthonynmh"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"Please enter a command Mr Stark.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"anthonynmh"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"anthonynmh"},"content":"        while(true) {","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"anthonynmh"},"content":"            String line \u003d sc.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"anthonynmh"},"content":"            if (line.equals(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"anthonynmh"},"content":"                try {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"anthonynmh"},"content":"                    FileHandler.saveTasks(todolist, dataPath);","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"anthonynmh"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"anthonynmh"},"content":"                    System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"anthonynmh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"anthonynmh"},"content":"                System.out.println(\"\\tHave a nice day sir.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"anthonynmh"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"anthonynmh"},"content":"            } else if (line.equals(\"list\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"anthonynmh"},"content":"                // show items","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"anthonynmh"},"content":"                todolist.list();","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"anthonynmh"},"content":"            } else if (line.matches(\"mark(.*)\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"anthonynmh"},"content":"                // mark task as done","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"anthonynmh"},"content":"                try {","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"anthonynmh"},"content":"                    int taskNum \u003d Integer.parseInt(line.substring(line.length() - 1));","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"anthonynmh"},"content":"                    validate(todolist, taskNum);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"anthonynmh"},"content":"                    todolist.markDone(taskNum);","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"anthonynmh"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"anthonynmh"},"content":"                    System.out.println(\"Which task have you completed, sir?\");","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"anthonynmh"},"content":"                } catch (NoTaskFoundException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"anthonynmh"},"content":"                    System.out.println(\"Sir, that task does not exist.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"anthonynmh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":91,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"anthonynmh"},"content":"            } else if (line.matches(\"unmark(.*)\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"anthonynmh"},"content":"                // unmark tasks","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"anthonynmh"},"content":"                try {","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"anthonynmh"},"content":"                    int taskNum \u003d Integer.parseInt(line.substring(line.length() - 1));","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"anthonynmh"},"content":"                    validate(todolist, taskNum);","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"anthonynmh"},"content":"                    todolist.unmark(taskNum);","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"anthonynmh"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"anthonynmh"},"content":"                    System.out.println(\"Which task would you like to unmark sir?\");","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"anthonynmh"},"content":"                } catch (NoTaskFoundException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"anthonynmh"},"content":"                    System.out.println(\"Sir, that task does not exist.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":103,"author":{"gitId":"anthonynmh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":105,"author":{"gitId":"anthonynmh"},"content":"            } else if (line.matches(\"todo(.*)\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":106,"author":{"gitId":"anthonynmh"},"content":"                // add task to list","lastModifiedDate":"2023-01-17"},{"lineNumber":107,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":108,"author":{"gitId":"anthonynmh"},"content":"                try {","lastModifiedDate":"2023-01-17"},{"lineNumber":109,"author":{"gitId":"anthonynmh"},"content":"                    addToDo(todolist, line);","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"anthonynmh"},"content":"                } catch (JarvisException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":111,"author":{"gitId":"anthonynmh"},"content":"                    System.out.println(\"\\tPlease enter in format \u0027todo \u003ctask\u003e\u0027\");","lastModifiedDate":"2023-01-17"},{"lineNumber":112,"author":{"gitId":"anthonynmh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":113,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":114,"author":{"gitId":"anthonynmh"},"content":"            } else if (line.matches(\"deadline(.*)\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":115,"author":{"gitId":"anthonynmh"},"content":"                // add task to list, with deadline","lastModifiedDate":"2023-01-17"},{"lineNumber":116,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":117,"author":{"gitId":"anthonynmh"},"content":"                // check format","lastModifiedDate":"2023-01-17"},{"lineNumber":118,"author":{"gitId":"anthonynmh"},"content":"                if (!line.contains(\"/\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":119,"author":{"gitId":"anthonynmh"},"content":"                    System.out.println(\"\\tPlease enter in format \u0027deadline \u003ctask\u003e /\u003cdeadline\u003e\u0027\");","lastModifiedDate":"2023-01-17"},{"lineNumber":120,"author":{"gitId":"anthonynmh"},"content":"                } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":121,"author":{"gitId":"anthonynmh"},"content":"                    int firstSlash \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-01-17"},{"lineNumber":122,"author":{"gitId":"anthonynmh"},"content":"                    String task \u003d line.substring(9, firstSlash);","lastModifiedDate":"2023-01-17"},{"lineNumber":123,"author":{"gitId":"anthonynmh"},"content":"                    String time \u003d line.substring(firstSlash + 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":124,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"anthonynmh"},"content":"                    try {","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"anthonynmh"},"content":"                        LocalDate startTimeParsed \u003d LocalDate.parse(time);","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"anthonynmh"},"content":"                        todolist.add(task, startTimeParsed);","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"anthonynmh"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"anthonynmh"},"content":"                        System.out.println(\"Wrong date format\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"anthonynmh"},"content":"                        System.out.println(\"Input date format \u0027event \u003ctask\u003e /\u003cYYYY-MM-DD\u003e\u0027\");","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"anthonynmh"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"anthonynmh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":133,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":134,"author":{"gitId":"anthonynmh"},"content":"            } else if (line.matches(\"event(.*)\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":135,"author":{"gitId":"anthonynmh"},"content":"                // add task to list, with event timing","lastModifiedDate":"2023-01-17"},{"lineNumber":136,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":137,"author":{"gitId":"anthonynmh"},"content":"                int firstSlash \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-01-17"},{"lineNumber":138,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":139,"author":{"gitId":"anthonynmh"},"content":"                // check format","lastModifiedDate":"2023-01-17"},{"lineNumber":140,"author":{"gitId":"anthonynmh"},"content":"                if (firstSlash \u003d\u003d -1 || !line.substring(firstSlash + 1).contains(\"/\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":141,"author":{"gitId":"anthonynmh"},"content":"                    System.out.println(\"\\tPlease enter in format \u0027event \u003ctask\u003e /\u003cstart\u003e/\u003cend\u003e\u0027\");","lastModifiedDate":"2023-01-17"},{"lineNumber":142,"author":{"gitId":"anthonynmh"},"content":"                    continue;","lastModifiedDate":"2023-01-17"},{"lineNumber":143,"author":{"gitId":"anthonynmh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":144,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":145,"author":{"gitId":"anthonynmh"},"content":"                int secondSlash \u003d line.substring(firstSlash + 1).indexOf(\"/\") + firstSlash + 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":146,"author":{"gitId":"anthonynmh"},"content":"                String startTime \u003d line.substring(firstSlash + 1, secondSlash);","lastModifiedDate":"2023-01-17"},{"lineNumber":147,"author":{"gitId":"anthonynmh"},"content":"                String endTime \u003d line.substring(secondSlash + 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":148,"author":{"gitId":"anthonynmh"},"content":"                String task \u003d line.substring(6, firstSlash);","lastModifiedDate":"2023-01-17"},{"lineNumber":149,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":150,"author":{"gitId":"anthonynmh"},"content":"                try {","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"anthonynmh"},"content":"                    LocalDate startTimeParsed \u003d LocalDate.parse(startTime);","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"anthonynmh"},"content":"                    LocalDate endTimeParsed \u003d LocalDate.parse(endTime);","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"anthonynmh"},"content":"                    todolist.add(task, startTimeParsed, endTimeParsed);","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"anthonynmh"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"anthonynmh"},"content":"                    System.out.println(\"Wrong date format\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"anthonynmh"},"content":"                    System.out.println(\"Input date format \u0027event \u003ctask\u003e /\u003cYYYY-MM-DD\u003e/\u003cYYYY-MM-DD\u003e\u0027\");","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"anthonynmh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"anthonynmh"},"content":"            } else if (line.matches(\"delete(.*)\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":159,"author":{"gitId":"anthonynmh"},"content":"                // mark task as done","lastModifiedDate":"2023-01-17"},{"lineNumber":160,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":161,"author":{"gitId":"anthonynmh"},"content":"                try {","lastModifiedDate":"2023-01-17"},{"lineNumber":162,"author":{"gitId":"anthonynmh"},"content":"                    int taskNum \u003d Integer.parseInt(line.substring(line.length() - 1));","lastModifiedDate":"2023-01-17"},{"lineNumber":163,"author":{"gitId":"anthonynmh"},"content":"                    validate(todolist, taskNum);","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"anthonynmh"},"content":"                    todolist.delete(taskNum);","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"anthonynmh"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":166,"author":{"gitId":"anthonynmh"},"content":"                    System.out.println(\"Which task would you like to delete, sir?\");","lastModifiedDate":"2023-01-17"},{"lineNumber":167,"author":{"gitId":"anthonynmh"},"content":"                } catch (NoTaskFoundException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":168,"author":{"gitId":"anthonynmh"},"content":"                    System.out.println(\"Sir, you may not delete nonexistent tasks.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":169,"author":{"gitId":"anthonynmh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":170,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":171,"author":{"gitId":"anthonynmh"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":172,"author":{"gitId":"anthonynmh"},"content":"                System.out.println(\"I do not know that command, sir.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":173,"author":{"gitId":"anthonynmh"},"content":"                System.out.println(\"Perhaps you can add that functionality for J.A.R.V.I.S(v2.0).\");","lastModifiedDate":"2023-01-17"},{"lineNumber":174,"author":{"gitId":"anthonynmh"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":175,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":176,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":177,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":178,"author":{"gitId":"anthonynmh"},"content":"    public static void addToDo(ToDoList toDo, String line) throws JarvisException {","lastModifiedDate":"2023-01-17"},{"lineNumber":179,"author":{"gitId":"anthonynmh"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":180,"author":{"gitId":"anthonynmh"},"content":"            String task \u003d line.substring(5);","lastModifiedDate":"2023-01-17"},{"lineNumber":181,"author":{"gitId":"anthonynmh"},"content":"            toDo.add(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":182,"author":{"gitId":"anthonynmh"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":183,"author":{"gitId":"anthonynmh"},"content":"            throw new JarvisException(\"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":184,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":185,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":186,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":187,"author":{"gitId":"anthonynmh"},"content":"    public static void validate(ToDoList toDo, int num) throws NoTaskFoundException {","lastModifiedDate":"2023-01-17"},{"lineNumber":188,"author":{"gitId":"anthonynmh"},"content":"        if (num \u003e toDo.getCount()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":189,"author":{"gitId":"anthonynmh"},"content":"            throw new NoTaskFoundException(\"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":190,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":191,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":192,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"anthonynmh":192}},{"path":"src/main/java/JarvisException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"public class JarvisException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"    public JarvisException (String errormsg) {","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"        super(errormsg);","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"anthonynmh":5}},{"path":"src/main/java/NoTaskFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"public class NoTaskFoundException extends JarvisException {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"    public NoTaskFoundException(String msg) {","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"        super(msg);","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"anthonynmh":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"public class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"    private int id;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"    private String task;","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"    private boolean done;","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"    public Task(int id, String task) {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"        return done ? \"[x] \" + task: \"[ ] \" + task;","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"    public void markDone(int index) {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\tCongratulations, Mr Stark. You have completed task \" + index);","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\tPepper Potts will be pleased with your progress today.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t\" + printTask());","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"    public void unmark(int index) {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\tTask \" + index + \" has been unmarked.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t\" + printTask());","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"    public int getId() {","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"        return this.id;","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"        return this.done;","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"    public String getTask() {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"        return this.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"anthonynmh":41}},{"path":"src/main/java/ToDoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"import java.util.List;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"public class ToDoList {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"    //private static Task[] todolist \u003d new Task[100];","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"    private List\u003cTask\u003e todolist;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"    private int count \u003d 0;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"    public ToDoList(int size) {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"        todolist \u003d new ArrayList\u003c\u003e(size);","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"    public void list() {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\tTasks for Tony Stark:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"            System.out.println(\"\\t\" + (i + 1) + \".\" +","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"                    todolist.get(i).printTask());","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"    public String getTask(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"        return todolist.get(index).printTask();","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"    // to do","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"    public void add(String task) {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"        Task t \u003d new Todo(count, task);","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"        //todolist[count] \u003d t;","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"        todolist.add(count, t);","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"        count++;","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\tI have added task: \" + t.getTask());","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"    // deadline","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"    public void add(String task, String time) {","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"anthonynmh"},"content":"        Task t \u003d new Deadline(count, task, time);","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"        //todolist[count] \u003d t;","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"        todolist.add(count, t);","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"        count++;","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\tI have added task: \" + t.getTask());","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\tDue: \" + time);","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"    // deadline parsed timing","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"anthonynmh"},"content":"    public void add(String task, LocalDate time) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"anthonynmh"},"content":"        Task t \u003d new Deadline(count, task, time);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"anthonynmh"},"content":"        //todolist[count] \u003d t;","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"anthonynmh"},"content":"        todolist.add(count, t);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"anthonynmh"},"content":"        count++;","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\tI have added task: \" + t.getTask());","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\tDue: \" + time);","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"anthonynmh"},"content":"    // event","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"anthonynmh"},"content":"    public void add(String task, String startTime, String endTime) {","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"anthonynmh"},"content":"        Task t \u003d new Event(count, task, startTime, endTime);","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"anthonynmh"},"content":"        //todolist[count] \u003d t;","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"anthonynmh"},"content":"        todolist.add(count, t);","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"anthonynmh"},"content":"        count++;","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\tI have added task: \" + t.getTask());","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\tStarts: \" + startTime);","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\tEnds: \" + endTime);","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"anthonynmh"},"content":"    // event parsed timing","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"anthonynmh"},"content":"    public void add(String task, LocalDate startTime, LocalDate endTime) {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"anthonynmh"},"content":"        Task t \u003d new Event(count, task, startTime, endTime);","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"anthonynmh"},"content":"        //todolist[count] \u003d t;","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"anthonynmh"},"content":"        todolist.add(count, t);","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"anthonynmh"},"content":"        count++;","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\tI have added task: \" + t.getTask());","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\tStarts: \" + startTime);","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\tEnds: \" + endTime);","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":88,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":89,"author":{"gitId":"anthonynmh"},"content":"    // delete","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"anthonynmh"},"content":"    public void delete(int index) {","lastModifiedDate":"2023-01-17"},{"lineNumber":91,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\tDeleted: \" + todolist.get(index - 1).printTask());","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"anthonynmh"},"content":"        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"anthonynmh"},"content":"        todolist.remove(index - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"anthonynmh"},"content":"        count--;","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"anthonynmh"},"content":"    public void markDone (int index) {","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"anthonynmh"},"content":"        //todolist[index - 1].markDone(index);","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"anthonynmh"},"content":"        todolist.get(index - 1).markDone(index);","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":102,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":103,"author":{"gitId":"anthonynmh"},"content":"    public void unmark(int index) {","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"anthonynmh"},"content":"        //todolist[index - 1].unmark(index);","lastModifiedDate":"2023-01-17"},{"lineNumber":105,"author":{"gitId":"anthonynmh"},"content":"        todolist.get(index - 1).unmark(index);","lastModifiedDate":"2023-01-17"},{"lineNumber":106,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":107,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":108,"author":{"gitId":"anthonynmh"},"content":"    public int getCount() {","lastModifiedDate":"2023-01-17"},{"lineNumber":109,"author":{"gitId":"anthonynmh"},"content":"        return count;","lastModifiedDate":"2023-01-17"},{"lineNumber":110,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":111,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"anthonynmh":111}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"    public Todo(int id, String task) {","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"        super(id, task);","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"        return this.isDone() ? \"[T][x] \" + this.getTask(): \"[T][ ] \" + this.getTask();","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"anthonynmh":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"todo","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"todo buy bread","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"eat","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"mark","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"unmark","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"unmark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"hye","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"anthonynmh":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"java -classpath ../bin Jarvis \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"anthonynmh":2,"-":32}}]
