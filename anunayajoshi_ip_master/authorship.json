[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"checkstyle {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"anunayajoshi":5,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"T | 1 | read book","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"D | 1 | return book | 28-05-2023","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"E | 1 | project meeting | Aug 6th 2pm | Aug 6th 4pm","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"T | 0 | join sports club","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anunayajoshi":4}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":" * Deadline task that stores the description of the task","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":" * as well as a date deadline that gets reformatted.","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"     * Creates a Deadline Task","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"     * @param description in String format.","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"     * @param by          Which is a LocalDate.","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"     * Formats the LocalDate deadline into 23/05/2019 format.","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"     * @return String output for listing the tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"        String formattedDate \u003d this.by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"anunayajoshi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"anunayajoshi"},"content":"     * Formats the LocalDate deadline into 23-05-2019 format.","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"anunayajoshi"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"anunayajoshi"},"content":"     * @return String output for storing in the  hard disk text file.","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"anunayajoshi"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"anunayajoshi"},"content":"    public String toFileString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"anunayajoshi"},"content":"        String formattedDate \u003d this.by.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"anunayajoshi"},"content":"        return \"D | \" + super.toFileString() + \" | \" + formattedDate + \"\\n\";","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"anunayajoshi":47}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":" * Represents a command-line to-do list interface,","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":" * capable of adding in todos, events and deadlines.","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"    private TaskList tasklist;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"     * Constructor","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"    public Duke() {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"        storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"            storage.checkFileExists();","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"            tasklist \u003d storage.loadFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"            ui.showError(e);","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"     * Parses the user\u0027s inputs into the command line and runs operations based on input","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"    public void run() {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"        Parser parser \u003d new Parser(tasklist, ui, storage);","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"anunayajoshi"},"content":"        while (ui.hasUserInput()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"anunayajoshi"},"content":"            parser.parse(ui.userInput());","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"anunayajoshi"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"anunayajoshi"},"content":"     * This is the main method that starts the Duke ToDoList command line interface.","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"anunayajoshi"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"anunayajoshi"},"content":"     * @param args Unused.","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"anunayajoshi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"anunayajoshi"},"content":"        Duke dukeList \u003d new Duke();","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"anunayajoshi"},"content":"        dukeList.run();","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"anunayajoshi":44,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":" * Exception Class for Duke and customised error messages.","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"anunayajoshi":11}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":" * Event Task which contains description, when the event begins and ends.","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"    protected String from;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"    protected String to;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"    public String toFileString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"        return \"E | \" + super.toFileString() + \" | \" + this.from + \" | \" + this.to + \"\\n\";","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"     }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"anunayajoshi":27}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":" * Parses user\u0027s inputs into command line and uses the TaskList, Ui and Storage classes","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":" * to run operations.","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"public class Parser {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"    private final TaskList tasklist;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"    public Parser(TaskList tasklist, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"        this.tasklist \u003d tasklist;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"     * Takes in user\u0027s input and obtains the first word","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"     * and uses it to run different operations,","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"     * and then uses the rest of the words as arguments for the operation.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"    public void parse(String input) {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"            String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"            boolean details \u003d arr.length !\u003d 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"            switch (arr[0]) {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"                ui.exit();","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"anunayajoshi"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"anunayajoshi"},"content":"            case \"list\":","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"anunayajoshi"},"content":"                tasklist.list();","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"anunayajoshi"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"anunayajoshi"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"anunayajoshi"},"content":"                if (!details) {","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please include the task index to mark\");","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"anunayajoshi"},"content":"                } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"anunayajoshi"},"content":"                    tasklist.setTaskStatus(Integer.parseInt(arr[1]), true);","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"anunayajoshi"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"anunayajoshi"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"anunayajoshi"},"content":"                if (!details) {","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please include the task index to unmark.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"anunayajoshi"},"content":"                tasklist.setTaskStatus(Integer.parseInt(arr[1]), false);","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"anunayajoshi"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"anunayajoshi"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"anunayajoshi"},"content":"                if (!details) {","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please include the task index to delete.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"anunayajoshi"},"content":"                tasklist.delete(Integer.parseInt(arr[1]));","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"anunayajoshi"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"anunayajoshi"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"anunayajoshi"},"content":"                if (!details) {","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please include the todo details.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"anunayajoshi"},"content":"                tasklist.addToDo(arr[1]);","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"anunayajoshi"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"anunayajoshi"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"anunayajoshi"},"content":"                if (!details) {","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please include the deadline details.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"anunayajoshi"},"content":"                String[] descriptionBy \u003d arr[1].split(\"/by\", 2);","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"anunayajoshi"},"content":"                if (descriptionBy.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please insert deadline date after /by\");","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"anunayajoshi"},"content":"                tasklist.addDeadline(descriptionBy[0], descriptionBy[1]);","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"anunayajoshi"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"anunayajoshi"},"content":"            case \"event\":","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"anunayajoshi"},"content":"                if (!details) {","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please include the event details.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"anunayajoshi"},"content":"                String[] descriptionOthers \u003d arr[1].split(\"/from\", 2);","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"anunayajoshi"},"content":"                if (descriptionOthers.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please insert the date the event takes place from, after /from \");","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"anunayajoshi"},"content":"                String[] fromTo \u003d descriptionOthers[1].split(\"/to\", 2);","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"anunayajoshi"},"content":"                if (fromTo.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please insert the date the event takes place until, after /to \");","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"anunayajoshi"},"content":"                tasklist.addEvent(descriptionOthers[0], fromTo[0], fromTo[1]);","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"anunayajoshi"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"anunayajoshi"},"content":"            case \"find\":","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"anunayajoshi"},"content":"                if (!details) {","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please include the task you would like to find.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"anunayajoshi"},"content":"                tasklist.find(arr[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"anunayajoshi"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"anunayajoshi"},"content":"            default:","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"anunayajoshi"},"content":"                throw new DukeException(\"Sorry, I don\u0027t know what that means.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"anunayajoshi"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"anunayajoshi"},"content":"            // handle changes to arraylist","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"anunayajoshi"},"content":"            storage.writeFile(tasklist);","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"anunayajoshi"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"anunayajoshi"},"content":"            ui.showError(e);","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"anunayajoshi"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anunayajoshi":104}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":" * Loads and stores the TaskList into a hard drive file.","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"public class Storage {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"    private File file;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"     * Creates a new File in the filePath given previously if the file does not already exist.","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"     * @throws DukeException if file could not be created","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"    public void checkFileExists() throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"        this.file \u003d f;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"        f.getParentFile().mkdirs();","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"            f.createNewFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"anunayajoshi"},"content":"            throw new DukeException(\"Unable to open and create file.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"anunayajoshi"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"anunayajoshi"},"content":"     * Loads the file with a lists of tasks, from the given filePath","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"anunayajoshi"},"content":"     * and creates a TaskList for each task within the file.","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"anunayajoshi"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"anunayajoshi"},"content":"     * @return TaskList which contains tasks from the loaded file.","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"anunayajoshi"},"content":"     * @throws DukeException if file could not be found.","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"anunayajoshi"},"content":"    public TaskList loadFile() throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"anunayajoshi"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"anunayajoshi"},"content":"            TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"anunayajoshi"},"content":"            Scanner s \u003d new Scanner(this.file);","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"anunayajoshi"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"anunayajoshi"},"content":"                String[] task \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"anunayajoshi"},"content":"                switch (task[0]) {","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"anunayajoshi"},"content":"                case \"T\":","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"anunayajoshi"},"content":"                    tasklist.addToDo(task[2]);","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"anunayajoshi"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"anunayajoshi"},"content":"                case \"D\":","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"anunayajoshi"},"content":"                    tasklist.addDeadline(task[2], task[3]);","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"anunayajoshi"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"anunayajoshi"},"content":"                case \"E\":","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"anunayajoshi"},"content":"                    tasklist.addEvent(task[2], task[3], task[4]);","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"anunayajoshi"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"anunayajoshi"},"content":"                if (task[1].equals(\"1\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"anunayajoshi"},"content":"                    tasklist.setTaskStatus(tasklist.listSize(), true);","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"anunayajoshi"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"anunayajoshi"},"content":"            s.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"anunayajoshi"},"content":"            return tasklist;","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"anunayajoshi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"anunayajoshi"},"content":"            throw new DukeException(\"Could not find file.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"anunayajoshi"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"anunayajoshi"},"content":"     * Writes back to the hard disk file path after operations are made on the TaskList.","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"anunayajoshi"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"anunayajoshi"},"content":"     * @param tasklist TaskList to update the hard disk tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"anunayajoshi"},"content":"     * @throws DukeException if file cannot be written to.","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"anunayajoshi"},"content":"    public void writeFile(TaskList tasklist) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"anunayajoshi"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"anunayajoshi"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"anunayajoshi"},"content":"            StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"anunayajoshi"},"content":"            for (Task task : tasklist.getTasks()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"anunayajoshi"},"content":"                str.append(task.toFileString());","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"anunayajoshi"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"anunayajoshi"},"content":"            fw.write(String.valueOf(str));","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"anunayajoshi"},"content":"            fw.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"anunayajoshi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"anunayajoshi"},"content":"            throw new DukeException(\"Could not write to file path\");","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"anunayajoshi"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anunayajoshi":91}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":" * Task which has 3 variations: ToDo, Deadline and Event.","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":" * Can be Marked to be completed or not completed.","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"    private final String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"    private Boolean done;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"        return (done ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"        return this.description;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"    public void setDone(Boolean done) {","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"anunayajoshi"},"content":"    public String toFileString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"anunayajoshi"},"content":"        return (done ? \"1 | \" : \"0 | \") + this.getDescription();","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"anunayajoshi":36}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":" * Stores list of tasks in an ArrayList,","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":" * on which operations can be done to create, update, read and delete.","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"public class TaskList {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"    public void list() {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"        Ui.separator();","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"            int currentNumber \u003d i + 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"            System.out.println(\"\\t\" + currentNumber + \".\" + task);","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"        Ui.separator();","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"anunayajoshi"},"content":"    public void delete(int index) {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"anunayajoshi"},"content":"        Ui.separator();","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"anunayajoshi"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"anunayajoshi"},"content":"        this.tasks.remove(index - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"anunayajoshi"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\" + \"\\n\\t\" + task);","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"anunayajoshi"},"content":"        System.out.println(\"Now you have \" + this.tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"anunayajoshi"},"content":"        Ui.separator();","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"anunayajoshi"},"content":"    public void addToDo(String taskDetails) {","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"anunayajoshi"},"content":"        ToDo task \u003d new ToDo(taskDetails);","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"anunayajoshi"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"anunayajoshi"},"content":"        System.out.println(\"\\t\" + task);","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"anunayajoshi"},"content":"        System.out.println(\"Now you have \" + this.tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"anunayajoshi"},"content":"        Ui.separator();","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"anunayajoshi"},"content":"    public void addDeadline(String description, String by) {","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"anunayajoshi"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"anunayajoshi"},"content":"        LocalDate date \u003d LocalDate.parse(by, format);","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"anunayajoshi"},"content":"        Deadline task \u003d new Deadline(description, date);","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"anunayajoshi"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"anunayajoshi"},"content":"        System.out.println(\"\\t\" + task);","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"anunayajoshi"},"content":"        System.out.println(\"Now you have \" + this.tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"anunayajoshi"},"content":"        Ui.separator();","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"anunayajoshi"},"content":"    public void addEvent(String description, String from, String to) {","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"anunayajoshi"},"content":"        Event task \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"anunayajoshi"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"anunayajoshi"},"content":"        System.out.println(\"\\t\" + task);","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"anunayajoshi"},"content":"        System.out.println(\"Now you have \" + this.tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"anunayajoshi"},"content":"        Ui.separator();","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"anunayajoshi"},"content":"     *  Filters the tasklist based on input and returns if task contains words from the input.","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"anunayajoshi"},"content":"     * @param input String.","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"anunayajoshi"},"content":"    public void find(String input) {","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"anunayajoshi"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"anunayajoshi"},"content":"        Ui.separator();","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"anunayajoshi"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"anunayajoshi"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"anunayajoshi"},"content":"            if (task.getDescription().contains(input)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"anunayajoshi"},"content":"                System.out.println(\"\\t\" + counter + \".\" + task);","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"anunayajoshi"},"content":"                counter++;","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"anunayajoshi"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"anunayajoshi"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"anunayajoshi"},"content":"        Ui.separator();","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"anunayajoshi"},"content":"    public void setTaskStatus(int index, boolean isDone) {","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"anunayajoshi"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"anunayajoshi"},"content":"        task.setDone(isDone);","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"anunayajoshi"},"content":"        Ui.separator();","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"anunayajoshi"},"content":"        System.out.println(\"\\tOk, I have marked this task as \" + (isDone ? \"done\" : \"not done yet\") + \":\\n\\t\\t\"","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"anunayajoshi"},"content":"                + task);","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"anunayajoshi"},"content":"        Ui.separator();","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"anunayajoshi"},"content":"    public int listSize() {","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"anunayajoshi"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anunayajoshi":101}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":" * A Task which contains description of the todo.","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"    public String toFileString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"        return \"T | \" + super.toFileString() + \"\\n\";","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"anunayajoshi":21}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":" * Stores the scanner and handles what information to display to the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"public class Ui {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"    private final Scanner sc;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"    public Ui() {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"        greet();","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"    public boolean hasUserInput() {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"        return sc.hasNextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"    public String userInput() {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"    public void greet() {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"        System.out.println(logo + \"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"anunayajoshi"},"content":"        separator();","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"anunayajoshi"},"content":"    public void exit() {","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"anunayajoshi"},"content":"        separator();","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"anunayajoshi"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"anunayajoshi"},"content":"        separator();","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"anunayajoshi"},"content":"        System.exit(0);","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"anunayajoshi"},"content":"    public void showError(DukeException err) {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"anunayajoshi"},"content":"        separator();","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"anunayajoshi"},"content":"        System.out.println(\"\\t\" + err);","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"anunayajoshi"},"content":"        separator();","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"anunayajoshi"},"content":"    public static void separator() {","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"anunayajoshi"},"content":"        System.out.println(\"---------------------------------------------------------------\");","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anunayajoshi":52}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"public class EventTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"    public void dummyTest(){","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"     * Tests if the event toString method prints correctly.","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"    public void eventToStringTest(){","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"        Event eve \u003d new Event(\"Party\", \"10/2\", \"11/2\");","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"        assertEquals(\"[E][ ] Party (from: 10/2 to: 11/2)\", eve.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anunayajoshi":24}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"    public void toDoToStringTest(){","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"        ToDo eve \u003d new ToDo(\"Learning gravity\");","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"        assertEquals(\"[T][ ] Learning gravity\", eve.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anunayajoshi":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"todo reading","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"deadline assignment /by 30 jan","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"event wedding /from 28 jan /to 2nd feb","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"mark 1","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"mark 2","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"deadline","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"unmark 2","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"anunayajoshi":8}}]
