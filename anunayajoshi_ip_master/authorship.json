[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"checkstyle {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"anunayajoshi"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"anunayajoshi":20,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"T | 1 | read book","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"D | 1 | return book | 28-05-2023","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"E | 0 | project meeting | Aug 6th 2pm | Aug 6th 4pm","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"T | 0 | join sports club","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"T | 1 | jogging ","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"E | 1 |  |  23 jan  |  29 jan","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"anunayajoshi":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"Welcome to Krusty Krab. Here are a list of features and commands that will make your life easier. ","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"| Command                 | Description                                       |","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"|-------------------------|---------------------------------------------------|","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"| `bye` `exit`            | Exit the app                                      |","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"| `todo`\u003cbr/\u003e `t`         | Create a new task                                 |","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"| `deadline` \u003cbr/\u003e `d`    | Create a new task to be completed by a given date |","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"| `event`\u003cbr/\u003e`e`         | Create a new event with a start and end date      |","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"| `list`\u003cbr/\u003e`ls`\u003cbr/\u003e`l` | List all tasks                                    |","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"| `delete`\u003cbr/\u003e`rm`       | Delete a task                                     |","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"| `mark`\u003cbr/\u003e`m`          | Mark task as completed                            |","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"| `unmark` \u003cbr/\u003e`um`      | Unmark completed task                             |","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"| `find`\u003cbr/\u003e`f`          | Search for a task                                 |","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"### Feature - Quit Program","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"Close and quit the application automatically using the command `exit` or `bye`.","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"### Feature - Add ToDo","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"A ToDo task can be added using `todo {description}`.","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"Usage: `todo Jogging`","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"Entry in Duke: `[T][ ] Jogging`","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"### Feature - Add Deadline","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"anunayajoshi"},"content":"A Deadline task with a deadline date can be added using `deadline {description} \\by {date}`.","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"anunayajoshi"},"content":"The date must be in DD-MM-YYYY format.","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"anunayajoshi"},"content":"Usage: `deadline read book /by 28-05-2023`","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"anunayajoshi"},"content":"Entry in Duke: `[D][ ] read book by: 28/05/2023`","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"anunayajoshi"},"content":"### Feature - Add Event","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"anunayajoshi"},"content":"An Event task with 2 dates (from and to) can be added using `event {description} \\from {date} /to {date}`.","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"anunayajoshi"},"content":"The date can be in any format.","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"anunayajoshi"},"content":"Usage: `event John\u0027s birthday party /from 4pm /to 6pm`","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"anunayajoshi"},"content":"Entry in Duke: `[E][ ] John\u0027s birthday party from: 4pm to: 6pm`","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"anunayajoshi"},"content":"## List all tasks","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"anunayajoshi"},"content":"All tasks currently saved can be listed using the `list` command.","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"anunayajoshi"},"content":"Usage: `list`","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"anunayajoshi"},"content":"Entry in Duke: `1. [T][] Jogging`","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"anunayajoshi"},"content":"## Delete a task","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"anunayajoshi"},"content":"Any task can be deleted by index using `delete {index}`.","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"anunayajoshi"},"content":"Usage: `delete 1`","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"anunayajoshi"},"content":"Sample output:","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"anunayajoshi"},"content":"`Ok I have removed 1. [T][ ] Jogging`","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"anunayajoshi"},"content":"## Marking task as completed","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"anunayajoshi"},"content":"A task can be marked as completed by its index, using `mark {index}`.","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"anunayajoshi"},"content":"Usage: `mark 1`","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"anunayajoshi"},"content":"Sample output, where the `X` denotes being marked:","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"anunayajoshi"},"content":"`1. [T][X] Jogging`","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":73,"author":{"gitId":"anunayajoshi"},"content":"## Unmarking completed tasks","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":75,"author":{"gitId":"anunayajoshi"},"content":"A completed task can be reverted to an incomplete state by its index, using `unmark {index}`.","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":77,"author":{"gitId":"anunayajoshi"},"content":"Sample sage: `unmark 1`","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"anunayajoshi"},"content":"Sample output:","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"anunayajoshi"},"content":"`1. [T][ ] Jogging`","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"anunayajoshi"},"content":"## Searching for tasks","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"anunayajoshi"},"content":"A search bar functionality can be obtained with the `find` command. ","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"anunayajoshi"},"content":"If the search query is a part of the task description, the task will be returned as the search result.","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"anunayajoshi"},"content":"Syntax: `find {string}`","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"anunayajoshi"},"content":"Example usage: `find jogging`","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":93,"author":{"gitId":"anunayajoshi"},"content":"Sample output:","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":95,"author":{"gitId":"anunayajoshi"},"content":"1. [T][ ] Jogging","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"anunayajoshi"},"content":"5. [D][ ] Jogging with Jacob /by 29-05-2023","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"anunayajoshi":69,"-":28}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":" * Deadline task that stores the description of the task","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":" * as well as a date deadline that gets reformatted.","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"     * Creates a Deadline Task","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"     * @param description in String format.","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"     * @param by Which is a LocalDate.","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"     * Formats the LocalDate deadline into 23/05/2019 format.","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"     * @return String output for listing the tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"        String formattedDate \u003d this.by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"anunayajoshi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"anunayajoshi"},"content":"     * Formats the LocalDate deadline into 23-05-2019 format.","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"anunayajoshi"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"anunayajoshi"},"content":"     * @return String output for storing in the  hard disk text file.","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"anunayajoshi"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"anunayajoshi"},"content":"    public String toFileString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"anunayajoshi"},"content":"        String formattedDate \u003d this.by.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"anunayajoshi"},"content":"        return \"D | \" + super.toFileString() + \" | \" + formattedDate + \"\\n\";","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"anunayajoshi":47}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anunayajoshi"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anunayajoshi"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"anunayajoshi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"anunayajoshi"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"anunayajoshi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"anunayajoshi"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"anunayajoshi"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"anunayajoshi"},"content":"        Circle clip \u003d new Circle(45, 45, 45);","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"anunayajoshi"},"content":"        this.displayPicture.setClip(clip);","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"anunayajoshi"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"anunayajoshi"},"content":"    private void flip() {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"anunayajoshi"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"anunayajoshi"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"anunayajoshi"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"anunayajoshi"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"anunayajoshi"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"anunayajoshi"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"anunayajoshi"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"anunayajoshi"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"anunayajoshi"},"content":"        db.flip();","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"anunayajoshi"},"content":"        return db;","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anunayajoshi":64}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"import javafx.scene.Parent;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":" * Represents a command-line to-do list interface,","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":" * capable of adding in todos, events and deadlines.","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"    private TaskList tasklist;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"     * Constructor","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"    public Duke() {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"        storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"            storage.checkFileExists();","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"            tasklist \u003d storage.loadFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"anunayajoshi"},"content":"            ui.showError(e);","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"anunayajoshi"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"anunayajoshi"},"content":"        parser \u003d new Parser(tasklist, ui, storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"anunayajoshi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"anunayajoshi"},"content":"    public void start(Stage stage) throws Exception {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"anunayajoshi"},"content":"        Parent root \u003d FXMLLoader.load(getClass().getResource(\"/sample.fxml\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"anunayajoshi"},"content":"        Scene scene \u003d new Scene(root);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"anunayajoshi"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"anunayajoshi"},"content":"        stage.show();","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"anunayajoshi"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"anunayajoshi"},"content":"        assert input.length() !\u003d 0 : \"input should not be empty\";","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"anunayajoshi"},"content":"        String output \u003d parser.parse(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"anunayajoshi"},"content":"        return \"Welcome to Krusty Krab HEHE\\n\" + output;","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"anunayajoshi"},"content":"     * This is the main method that starts the Duke ToDoList command line interface.","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"anunayajoshi"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"anunayajoshi"},"content":"     * @param args Unused.","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"anunayajoshi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"anunayajoshi"},"content":"        Duke dukeList \u003d new Duke();","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"anunayajoshi":63}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":" * Exception Class for Duke and customised error messages.","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"anunayajoshi":11}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":" * Event Task which contains description, when the event begins and ends.","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"    protected String from;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"    protected String to;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"    public String toFileString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"        return \"E | \" + super.toFileString() + \" | \" + this.from + \" | \" + this.to + \"\\n\";","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"     }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"anunayajoshi":27}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"public class Launcher {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anunayajoshi":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"            stage.setTitle(\"Krusty Krab\");","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"            stage.show();","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anunayajoshi":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"    private Duke duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anunayajoshi"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anunayajoshi"},"content":"        duke \u003d d;","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"anunayajoshi"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"anunayajoshi"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"anunayajoshi"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"anunayajoshi"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"anunayajoshi"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"anunayajoshi"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"anunayajoshi"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"anunayajoshi"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"anunayajoshi"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"anunayajoshi"},"content":"        );","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"anunayajoshi"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anunayajoshi":51}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":" * Parses user\u0027s inputs into command line and uses the TaskList, Ui and Storage classes","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":" * to run operations.","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"public class Parser {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"    private final TaskList tasklist;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"    public Parser(TaskList tasklist, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"        this.tasklist \u003d tasklist;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"     * Takes in user\u0027s input and obtains the first word to execute different command.","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"    public String parse(String input) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"        String str;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"            String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"            boolean hasDetails \u003d arr.length !\u003d 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"            switch (arr[0]) {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"            case \"exit\":","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"                str \u003d ui.exit();","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anunayajoshi"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"anunayajoshi"},"content":"            case \"list\":","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"anunayajoshi"},"content":"            case \"ls\":","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"anunayajoshi"},"content":"            case \"l\":","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"anunayajoshi"},"content":"                str \u003d tasklist.list();","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"anunayajoshi"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"anunayajoshi"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"anunayajoshi"},"content":"            case \"m\":","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"anunayajoshi"},"content":"                if (!hasDetails) {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please include the task index to mark\");","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"anunayajoshi"},"content":"                } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"anunayajoshi"},"content":"                    str \u003d tasklist.setTaskStatus(Integer.parseInt(arr[1]), true);","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"anunayajoshi"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"anunayajoshi"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"anunayajoshi"},"content":"            case \"um\":","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"anunayajoshi"},"content":"                if (!hasDetails) {","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please include the task index to unmark.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"anunayajoshi"},"content":"                str \u003d tasklist.setTaskStatus(Integer.parseInt(arr[1]), false);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"anunayajoshi"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"anunayajoshi"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"anunayajoshi"},"content":"            case \"rm\":","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"anunayajoshi"},"content":"                if (!hasDetails) {","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please include the task index to delete.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"anunayajoshi"},"content":"                str \u003d tasklist.delete(Integer.parseInt(arr[1]));","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"anunayajoshi"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"anunayajoshi"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"anunayajoshi"},"content":"            case \"t\":","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"anunayajoshi"},"content":"                if (!hasDetails) {","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please include the todo details.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"anunayajoshi"},"content":"                str \u003d tasklist.addToDo(arr[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"anunayajoshi"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"anunayajoshi"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"anunayajoshi"},"content":"            case \"d\":","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"anunayajoshi"},"content":"                if (!hasDetails) {","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please include the deadline details.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"anunayajoshi"},"content":"                String[] descriptionBy \u003d arr[1].split(\"/by\", 2);","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"anunayajoshi"},"content":"                if (descriptionBy.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please insert deadline date after /by\");","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"anunayajoshi"},"content":"                str \u003d tasklist.addDeadline(descriptionBy[0].trim(), descriptionBy[1].trim());","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"anunayajoshi"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"anunayajoshi"},"content":"            case \"event\":","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"anunayajoshi"},"content":"            case \"e\":","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"anunayajoshi"},"content":"                if (!hasDetails) {","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please include the event details.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"anunayajoshi"},"content":"                String[] descriptionOthers \u003d arr[1].split(\"/from\", 2);","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"anunayajoshi"},"content":"                if (descriptionOthers.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please insert the date the event takes place from, after /from \");","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"anunayajoshi"},"content":"                String[] fromTo \u003d descriptionOthers[1].split(\"/to\", 2);","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"anunayajoshi"},"content":"                if (fromTo.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please insert the date the event takes place until, after /to \");","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"anunayajoshi"},"content":"                str \u003d tasklist.addEvent(descriptionOthers[0], fromTo[0], fromTo[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"anunayajoshi"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"anunayajoshi"},"content":"            case \"find\":","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"anunayajoshi"},"content":"            case \"f\":","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"anunayajoshi"},"content":"                if (!hasDetails) {","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"anunayajoshi"},"content":"                    throw new DukeException(\"Please include the task you would like to find.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"anunayajoshi"},"content":"                str \u003d tasklist.find(arr[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"anunayajoshi"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"anunayajoshi"},"content":"            default:","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"anunayajoshi"},"content":"                throw new DukeException(\"Sorry, I don\u0027t know what that means.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"anunayajoshi"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"anunayajoshi"},"content":"            // handle changes to arraylist","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"anunayajoshi"},"content":"            storage.writeFile(tasklist);","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"anunayajoshi"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"anunayajoshi"},"content":"            str \u003d ui.showError(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"anunayajoshi"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"anunayajoshi"},"content":"        return str;","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anunayajoshi":112}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":" * Loads and stores the TaskList into a hard drive file.","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"public class Storage {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"    private File file;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"     * Creates a new File in the filePath given previously if the file does not already exist.","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"     * @throws DukeException if file could not be created","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"    public void checkFileExists() throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"        this.file \u003d f;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"        f.getParentFile().mkdirs();","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"            f.createNewFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"anunayajoshi"},"content":"            throw new DukeException(\"Unable to open and create file.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"anunayajoshi"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"anunayajoshi"},"content":"     * Loads the file with a lists of tasks, from the given filePath","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"anunayajoshi"},"content":"     * and creates a TaskList for each task within the file.","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"anunayajoshi"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"anunayajoshi"},"content":"     * @return TaskList which contains tasks from the loaded file.","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"anunayajoshi"},"content":"     * @throws DukeException if file could not be found.","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"anunayajoshi"},"content":"    public TaskList loadFile() throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"anunayajoshi"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"anunayajoshi"},"content":"            TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"anunayajoshi"},"content":"            Scanner s \u003d new Scanner(this.file);","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"anunayajoshi"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"anunayajoshi"},"content":"                String[] task \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"anunayajoshi"},"content":"                switch (task[0]) {","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"anunayajoshi"},"content":"                case \"T\":","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"anunayajoshi"},"content":"                    tasklist.addToDo(task[2]);","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"anunayajoshi"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"anunayajoshi"},"content":"                case \"D\":","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"anunayajoshi"},"content":"                    tasklist.addDeadline(task[2], task[3]);","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"anunayajoshi"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"anunayajoshi"},"content":"                case \"E\":","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"anunayajoshi"},"content":"                    tasklist.addEvent(task[2], task[3], task[4]);","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"anunayajoshi"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"anunayajoshi"},"content":"                if (task[1].equals(\"1\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"anunayajoshi"},"content":"                    tasklist.setTaskStatus(tasklist.listSize(), true);","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"anunayajoshi"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"anunayajoshi"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"anunayajoshi"},"content":"            s.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"anunayajoshi"},"content":"            return tasklist;","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"anunayajoshi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"anunayajoshi"},"content":"            throw new DukeException(\"Could not find file.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"anunayajoshi"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"anunayajoshi"},"content":"     * Writes back to the hard disk file path after operations are made on the TaskList.","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"anunayajoshi"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"anunayajoshi"},"content":"     * @param tasklist TaskList to update the hard disk tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"anunayajoshi"},"content":"     * @throws DukeException if file cannot be written to.","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"anunayajoshi"},"content":"    public void writeFile(TaskList tasklist) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"anunayajoshi"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"anunayajoshi"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"anunayajoshi"},"content":"            StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"anunayajoshi"},"content":"            for (Task task : tasklist.getTasks()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"anunayajoshi"},"content":"                str.append(task.toFileString());","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"anunayajoshi"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"anunayajoshi"},"content":"            fw.write(String.valueOf(str));","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"anunayajoshi"},"content":"            fw.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"anunayajoshi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"anunayajoshi"},"content":"            throw new DukeException(\"Could not write to file path\");","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"anunayajoshi"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anunayajoshi":91}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":" * Task which has 3 variations: ToDo, Deadline and Event.","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":" * Can be Marked to be completed or not completed.","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"    private final String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"    private Boolean isDone;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"        return this.description;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"    public void setDone(Boolean isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"anunayajoshi"},"content":"    public String toFileString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"anunayajoshi"},"content":"        return (isDone ? \"1 | \" : \"0 | \") + this.getDescription();","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"anunayajoshi":36}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":" * Stores list of tasks in an ArrayList,","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":" * on which operations can be done to create, update, read and delete.","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"public class TaskList {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"    public String list() {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"        String list \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"            int currentNumber \u003d i + 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"            list \u003d list + \"\\t\" + currentNumber + \".\" + task + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"        return list;","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"anunayajoshi"},"content":"    public String delete(int index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"anunayajoshi"},"content":"        String output;","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"anunayajoshi"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"anunayajoshi"},"content":"        this.tasks.remove(index - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"anunayajoshi"},"content":"        output \u003d \"Noted. I\u0027ve removed this task:\" + \"\\n\\t\" + task;","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"anunayajoshi"},"content":"        output \u003d output + \"\\nNow you have \" + this.tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"anunayajoshi"},"content":"        return output;","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"anunayajoshi"},"content":"    public String addToDo(String taskDetails) {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"anunayajoshi"},"content":"        String output;","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"anunayajoshi"},"content":"        ToDo task \u003d new ToDo(taskDetails);","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"anunayajoshi"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"anunayajoshi"},"content":"        output \u003d \"\\t\" + task;","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"anunayajoshi"},"content":"        output \u003d output + \"\\nNow you have \" + this.tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"anunayajoshi"},"content":"        return output;","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"anunayajoshi"},"content":"    public String addDeadline(String description, String by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"anunayajoshi"},"content":"        String output;","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"anunayajoshi"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"anunayajoshi"},"content":"        LocalDate date \u003d LocalDate.parse(by, format);","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"anunayajoshi"},"content":"        Deadline task \u003d new Deadline(description, date);","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"anunayajoshi"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"anunayajoshi"},"content":"        output \u003d \"\\t\" + task;","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"anunayajoshi"},"content":"        output \u003d output + \"\\nNow you have \" + this.tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"anunayajoshi"},"content":"        return output;","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"anunayajoshi"},"content":"    public String addEvent(String description, String from, String to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"anunayajoshi"},"content":"        String output;","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"anunayajoshi"},"content":"        Event task \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"anunayajoshi"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"anunayajoshi"},"content":"        output \u003d \"\\t\" + task;","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"anunayajoshi"},"content":"        output \u003d output + \"\\nNow you have \" + this.tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"anunayajoshi"},"content":"        return output;","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"anunayajoshi"},"content":"     *  Filters the tasklist based on input and returns if task contains words from the input.","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"anunayajoshi"},"content":"     * @param input String.","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"anunayajoshi"},"content":"    public String find(String input) {","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"anunayajoshi"},"content":"        String output;","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"anunayajoshi"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"anunayajoshi"},"content":"        output \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"anunayajoshi"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"anunayajoshi"},"content":"            if (task.getDescription().contains(input)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"anunayajoshi"},"content":"                output \u003d output + \"\\n\\t\" + counter + \".\" + task;","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"anunayajoshi"},"content":"                counter++;","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"anunayajoshi"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"anunayajoshi"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"anunayajoshi"},"content":"        return output;","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"anunayajoshi"},"content":"    public String setTaskStatus(int index, boolean isDone) {","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"anunayajoshi"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"anunayajoshi"},"content":"        task.setDone(isDone);","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"anunayajoshi"},"content":"        return \"\\tOk, I have marked this task as \" + (isDone ? \"done\" : \"not done yet\") + \":\\n\\t\\t\"","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"anunayajoshi"},"content":"                + task;","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"anunayajoshi"},"content":"    public int listSize() {","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"anunayajoshi"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anunayajoshi":100}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":" * A Task which contains description of the todo.","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"    public String toFileString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"        return \"T | \" + super.toFileString() + \"\\n\";","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"anunayajoshi":21}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":" * Stores the scanner and handles what information to display to the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"public class Ui {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"    private final Scanner sc;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"     * Constructor for starting the Ui and launching Stage for JavaFX","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"    public Ui() {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"        greet();","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"    public String greet() {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"anunayajoshi"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"anunayajoshi"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"anunayajoshi"},"content":"        return logo + \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"anunayajoshi"},"content":"    public String exit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anunayajoshi"},"content":"        System.exit(0);","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"anunayajoshi"},"content":"        return \"\\tBye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"anunayajoshi"},"content":"    public String showError(DukeException err) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"anunayajoshi"},"content":"        return \"\\t\" + err.getMessage();","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anunayajoshi":39}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"         \u003c/Label\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anunayajoshi":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"anunayajoshi":19}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"public class EventTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"     * Tests if the event toString method prints correctly.","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"anunayajoshi"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"anunayajoshi"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"anunayajoshi"},"content":"    public void eventToStringTest_toStringOutput_success() {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"anunayajoshi"},"content":"        Event eve \u003d new Event(\"Party\", \"10/2\", \"11/2\");","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anunayajoshi"},"content":"        assertEquals(\"[E][ ] Party (from: 10/2 to: 11/2)\", eve.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anunayajoshi":25}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"anunayajoshi"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"anunayajoshi"},"content":"    public void toDoToStringTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anunayajoshi"},"content":"        ToDo eve \u003d new ToDo(\"Learning gravity\");","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anunayajoshi"},"content":"        assertEquals(\"[T][ ] Learning gravity\", eve.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anunayajoshi"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"anunayajoshi"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"anunayajoshi"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anunayajoshi":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"anunayajoshi"},"content":"todo reading","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"anunayajoshi"},"content":"deadline assignment /by 30 jan","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"anunayajoshi"},"content":"event wedding /from 28 jan /to 2nd feb","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"anunayajoshi"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"anunayajoshi"},"content":"mark 1","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"anunayajoshi"},"content":"mark 2","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"anunayajoshi"},"content":"deadline","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"anunayajoshi"},"content":"unmark 2","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"anunayajoshi":8}}]
