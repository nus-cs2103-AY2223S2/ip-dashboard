[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"checkstyle {","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"arkarsg":22,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"## Contents","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"* toc","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"{:toc}","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"---","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"# 👋  Hello from Duke!","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"\u003e What\u0027s on your mind today?","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"A simple chatbot that manages things you need to do. With all the productivity apps out there, sometimes _all you need_ is an application that is:","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"- Fuss free","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"- Easy to use","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"- Quick","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"### **Without** all the clutter, focus and get things done 💯.","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"---","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"# 🙋‍♂️ Getting Started","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"****[IMPORTANT]****: Ensure you have Java installed on your device.","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"1. Download `Duke.jar` [here](https://github.com/arkarsg/ip/releases/download/A-Release/Duke.jar)","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"#### For Mac users","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"1. Launch your Terminal and navigate to `Duke.jar` file using the `cd` command.","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"2. Start Duke with `java -jar Duke.jar`","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"#### For Windows users","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"1. Launch your Powershell and navigate to `Duke.jar` file.","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"2. Start Duke with `java -jar Duke.jar`","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"---","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"# 🧐 Features","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"To help you manage your everyday tasks, here\u0027s what the Duke can do for you.","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"- [x] Note down a simple task to do.","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"- [x] Note down a task that has a deadline.","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"- [x] Note down an event.","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"- [x] Find a task with keywords.","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"- [x] Sort tasks by name or date","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"---","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"# 📖 Documentation","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"### Adding a To-Do: `todo {task description}`","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"- Adds a simple to-do task with the given description.","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"- Accepts Integers and String.","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"### Adding a Deadline: `deadline {task description} /by {date time}`","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"- Adds a deadline task with the given `{date time}` as the deadline","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"- `{date time}` follows ***dd/mm/yyyy hhmm*** (i.e 23/01/2023 1600)","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"### Adding an Event: `event {task description} /from {date time} /to {date time}`","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"- Adds an event task with the given `{date time}` as the deadline","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"- `{date time}` follows ***dd/mm/yyyy hhmm*** (i.e 23/01/2023 1600)","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"### View all tasks: `list`","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"- Shows an indexed list of all tasks the Duke remembers.","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"### Delete a task: `delete {task index}`","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"- Deletes the task associated with the task index from task list.","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"### Mark or unmark a task: `mark {task index}` and `unmark {task index}`","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"- Mark an unfinished task as completed.","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"- Unmark removes the completed status from a task.","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"arkarsg"},"content":"### Finding a task: `find {search keywords}`","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"arkarsg"},"content":"- Returns a list of tasks containing the keywords.","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"arkarsg"},"content":"### Sorting tasks (by name): `sort name`","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"arkarsg"},"content":"- Sorts the current list of tasks alphabetically in an ascending order.","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"arkarsg"},"content":"### Sorting tasks (by date): `sort date`","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"arkarsg"},"content":"- Sorts the current list of tasks by date. If the tasks do not have date associated with it, it will be sorted lexicographically.","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"arkarsg"},"content":"- Therefore, `todo` will be grouped differently from `deadline` and `events` which are sorted chronologically.","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"arkarsg"},"content":"### Quitting Duke: `bye`","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"arkarsg"},"content":"- Exits the application.","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"arkarsg"},"content":"- Task list from the current session is saved and loaded the next time Duke is opened.","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"arkarsg"},"content":"## Other behaviours","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"arkarsg"},"content":"Upon start, `Duke` loads save data from previous session if it exists. If tasks are loaded successfully, users will see the following message:","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"arkarsg"},"content":"\u003e Loaded successfully from previous session.","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"arkarsg"},"content":"Otherwise, task list from previous session was not restored.","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"arkarsg"},"content":"Task list is only saved after `bye` is typed. Else, forced termination will cause user to lose changes. Saving changes causes save file to be completely overwritten.","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"arkarsg"},"content":"---","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"arkarsg"},"content":"# 🛠 Under the Hood","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"arkarsg"},"content":"Pseudocode snippet below shows the main mechanism of how Duke works.","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"arkarsg"},"content":"``` java","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"arkarsg"},"content":"// main loop to accept user inputs","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"arkarsg"},"content":"while (isNotBye) {","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"arkarsg"},"content":"    handle(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"arkarsg"},"content":"// Command handler","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"arkarsg"},"content":"String[] args \u003d paser.parse(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"arkarsg"},"content":"String command \u003d args[0];","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"arkarsg"},"content":"commandList.get(command).apply(args);","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"arkarsg"},"content":"---","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"arkarsg"},"content":"# 👷‍♂️ Adding Commands","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"arkarsg"},"content":"\u003e _Beware! Duke is not responsible for any errors or data lost due to modification._","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"arkarsg"},"content":"### Command Formats","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"arkarsg"},"content":"Commands should generally follow `{cmd} {...args}`.  ","lastModifiedDate":"2023-02-14"},{"lineNumber":116,"author":{"gitId":"arkarsg"},"content":"- `{cmd}` : STRING Command keyword","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"arkarsg"},"content":"- `{...args}` : STRING Arguments for the command. Can be one or multiple. ","lastModifiedDate":"2023-02-14"},{"lineNumber":118,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"arkarsg"},"content":"### Adding Commands","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"arkarsg"},"content":"- Download the `source file`.","lastModifiedDate":"2023-02-14"},{"lineNumber":121,"author":{"gitId":"arkarsg"},"content":"- Source file is organised as follows:","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"arkarsg"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":123,"author":{"gitId":"arkarsg"},"content":"Duke","lastModifiedDate":"2023-02-14"},{"lineNumber":124,"author":{"gitId":"arkarsg"},"content":"  \\src","lastModifiedDate":"2023-02-14"},{"lineNumber":125,"author":{"gitId":"arkarsg"},"content":"    \\main","lastModifiedDate":"2023-02-14"},{"lineNumber":126,"author":{"gitId":"arkarsg"},"content":"      \\java","lastModifiedDate":"2023-02-14"},{"lineNumber":127,"author":{"gitId":"arkarsg"},"content":"        \\duke","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"arkarsg"},"content":"          \\commands","lastModifiedDate":"2023-02-14"},{"lineNumber":129,"author":{"gitId":"arkarsg"},"content":"            \\utils\\parser.java","lastModifiedDate":"2023-02-14"},{"lineNumber":130,"author":{"gitId":"arkarsg"},"content":"            \\commands","lastModifiedDate":"2023-02-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":132,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":133,"author":{"gitId":"arkarsg"},"content":"1. Create the logic for the new command by creating a new `java` file under `/commnands`.","lastModifiedDate":"2023-02-14"},{"lineNumber":134,"author":{"gitId":"arkarsg"},"content":"    - The file should inherit `Command` and override the following method signature:","lastModifiedDate":"2023-02-14"},{"lineNumber":135,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":136,"author":{"gitId":"arkarsg"},"content":"``` java","lastModifiedDate":"2023-02-14"},{"lineNumber":137,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":138,"author":{"gitId":"arkarsg"},"content":"     * Execute the command from given tokens produced by Parser.","lastModifiedDate":"2023-02-14"},{"lineNumber":139,"author":{"gitId":"arkarsg"},"content":"     * The command is operated on the given TaskList.","lastModifiedDate":"2023-02-14"},{"lineNumber":140,"author":{"gitId":"arkarsg"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":141,"author":{"gitId":"arkarsg"},"content":"     * @param dukeIo UI class used to return the results.","lastModifiedDate":"2023-02-14"},{"lineNumber":142,"author":{"gitId":"arkarsg"},"content":"     * @param tasks TaskList instance to be operated on.","lastModifiedDate":"2023-02-14"},{"lineNumber":143,"author":{"gitId":"arkarsg"},"content":"     * @return Response output to GUI.","lastModifiedDate":"2023-02-14"},{"lineNumber":144,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":145,"author":{"gitId":"arkarsg"},"content":"    public abstract String exec(DukeIo dukeIo, TaskList tasks);","lastModifiedDate":"2023-02-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":147,"author":{"gitId":"arkarsg"},"content":"2. Open `parser.java`","lastModifiedDate":"2023-02-14"},{"lineNumber":148,"author":{"gitId":"arkarsg"},"content":"3. Under `populateCommnads()`, add your `command` and pass `tokens` to your custom parsing method that creates your custom command.","lastModifiedDate":"2023-02-14"},{"lineNumber":149,"author":{"gitId":"arkarsg"},"content":"4. Build and run via `Launcher.java`","lastModifiedDate":"2023-02-14"},{"lineNumber":150,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":151,"author":{"gitId":"arkarsg"},"content":"---","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"arkarsg":132,"-":19}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import duke.utils.DukeIo;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"import duke.utils.Parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":" * The class to run the Duke To-do application.","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"    /** Initialises Storage class to fetch tasks or save tasks */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"    private static Storage storage \u003d new Storage();","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"    /** Initialises an EMPTY TaskList to maintain a List of Tasks */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"    private static TaskList taskList \u003d TaskList.ofNull();","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"    /** Initialises Parse class to tokenise user inputs */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"    private static DukeIo dukeIo \u003d new DukeIo();","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"    private static boolean isBye;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"     * The Main method that starts Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"     * Upon boot, TaskList is loaded form save file.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"    public Duke() {","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"        taskList.loadFrom(storage.load());","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"        Duke.isBye \u003d false;","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"     * Shows hello message upon start up.","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly interpretation of welcome message.","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"    public String showHello() {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"        return storage.isLoadSuccess()","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"                ? dukeIo.printHello() + dukeIo.notifyLoad() : dukeIo.printHello();","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"     * Returns true if \"bye\" command is entered.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"     * @param tokens tokens entered into the Command Line Interface","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"     * @param taskList List of tasks which commands are operated on.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"     * @return String reply from the Duke","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"    private static String handle(String tokens, TaskList taskList) {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"        parser.tokenise(tokens);","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"        Command command \u003d parser.getCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"        Duke.isBye \u003d command.isExitCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"        return command.exec(dukeIo, taskList);","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"     * Tokenises the input from user with parser. Then, handles the command","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"     * @param input Input entered by user","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"     * @return The UI response from Duke","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"        return handle(input, taskList);","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"     * Checks if user has entered a command to quit.","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"     * @return True if user has entered a command to quit. False otherwise.","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"    public boolean isBye() {","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"        return Duke.isBye;","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"arkarsg":67,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":" * Main class to launch Duke","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"public class Launcher {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"arkarsg":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"            stage.setResizable(false);","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"            stage.show();","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"arkarsg":32}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import duke.utils.DukeIo;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":" * Abstract class that represents a Command object.","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"     * Execute the command from given tokens produced by Parser.","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"     * The command is operated on the given TaskList.","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"     * @param dukeIo UI class used to return the results.","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"     * @param tasks TaskList instance to be operated on.","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"     * @return Response output to GUI.","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"    public abstract String exec(DukeIo dukeIo, TaskList tasks);","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"     * Checks whether command is an exit command. Initialised to False.","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"     * @return True if the Command is an exit command. False otherwise.","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"        return false;","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"arkarsg":27}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import duke.utils.DukeIo;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":" * DeadlineCommand adds a Deadline object to TaksList.","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"    private final String[] tokens;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"     * Public constructor for Deadline command.","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"     * @param tokens Tokenised user inputs from user.","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"    public DeadlineCommand(String[] tokens) {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"     * Method to add Deadline task into TaskList","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"     * @param dukeIo UI class used to return results.","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"     * @param tasks TaskList containing all tasks to be shown","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"    public String exec(DukeIo dukeIo, TaskList tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"        Deadline d \u003d createDeadline();","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"        tasks.addTask(d);","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"        return dukeIo.notifySuccessAdd(d) + dukeIo.showCount();","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"    private Deadline createDeadline() {","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"        assert tokens.length \u003d\u003d 2;","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"        String desc \u003d tokens[0].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"        String byDeadline \u003d tokens[1].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"        return new Deadline(desc, byDeadline);","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"arkarsg":40}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import duke.utils.DukeIo;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":" * DeleteCommand class that allows user to delete tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"    private final int index;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"     * Public constructor for delete command.","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"     * @param index Index (0-based) of task to be deleted from the TaskList.","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"     * Method to delete task from TaskList","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"     * @param dukeIo UI class used to return results.","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"     * @param tasks TaskList containing all tasks to be shown","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"     * @return Success toast upon deleing task and number of remaining tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"    public String exec(DukeIo dukeIo, TaskList tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"        String showDeleted \u003d dukeIo.showDeleted(index);","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"        return showDeleted + dukeIo.showCount();","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"arkarsg":32}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import duke.utils.DukeIo;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":" * EventCommand adds Event object into TaskList.","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"    private final String[] tokens;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"    public EventCommand(String[] tokens) {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"     * Method to add Deadline task into TaskList","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"     * @param dukeIo UI class used to return results.","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"     * @param tasks TaskList containing all tasks to be shown","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"    public String exec(DukeIo dukeIo, TaskList tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"        Event e \u003d createEvent();","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"        tasks.addTask(e);","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"        return dukeIo.notifySuccessAdd(e) + dukeIo.showCount();","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"    private Event createEvent() {","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"        assert tokens.length \u003d\u003d 3;","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"        String desc \u003d tokens[0].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"        String from \u003d tokens[1].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"        String to \u003d tokens[2].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"        return new Event(desc, from, to);","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"arkarsg":37}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import duke.utils.DukeIo;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":" * Find Command that lets user filter for tasks based on key.","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"    private final String searchKey;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"     * Public constructor for FindCommand","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"     * @param searchKey User-input search term","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"    public FindCommand(String searchKey) {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"        this.searchKey \u003d searchKey;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"     * Method to filter tasks TaskList","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"     * @param dukeIo UI class used to return results.","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"     * @param tasks TaskList containing all tasks to be shown","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"     * @return Indexed list of filtered tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"    public String exec(DukeIo dukeIo, TaskList tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"        return tasks.showFilteredTasks(searchKey);","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"arkarsg":31}},{"path":"src/main/java/duke/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import duke.utils.DukeIo;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":" * A wrapper command class when there are Invalid Commands.","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"    private final InvalidCommandException err;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"     * Public constructor for InvalidCommand","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"     * @param err InvalidCommandException caught","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"    public InvalidCommand(InvalidCommandException err) {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"        this.err \u003d err;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    public String exec(DukeIo dukeIo, TaskList tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"        return dukeIo.showError(err);","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"arkarsg":24}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import duke.utils.DukeIo;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":" * List Command lists all the tasks in the given task list.","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"     * Method to return all tasks in the task List","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"     * @param dukeIo UI class used to return results.","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"     * @param tasks TaskList containing all tasks to be shown.","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"    public String exec(DukeIo dukeIo, TaskList tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"        return dukeIo.showAll();","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"arkarsg":20}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import duke.utils.DukeIo;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":" * MarkCommand class which handles both mark and unmark commands","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"    private final int index;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"     * Public constructor for Mark/unmark command.","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"     * @param index User-input task index to mark/ unmark.","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"     * Method to mark/ unmark task in the TaskList.","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"     * @param dukeIo UI class used to return results","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"     * @param tasks TaskList containing all tasks to be marked/ unmarked.","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"     * @return UI feedback after successful mark and change in task status.","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"    public String exec(DukeIo dukeIo, TaskList tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"        if (!task.isDone()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"            task.toggleDoneOrNot();","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"            return dukeIo.notifySuccessComplete(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"            return dukeIo.notifyMarkFail(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"arkarsg":38}},{"path":"src/main/java/duke/commands/QuitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"import duke.utils.DukeIo;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":" * QuitCommand class which handles operations on quit.","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"public class QuitCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"     * Public constructor for quit command.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"     * @param storage storage operator to execute clean up operations..","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"    public QuitCommand(Storage storage) {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"     * Method to perform quit operations.","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"     * @param dukeIo UI class used to return results","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"     * @param tasks TaskList containing all tasks to be marked/ unmarked.","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"     * @return UI feedback after successful save.","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"    public String exec(DukeIo dukeIo, TaskList tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"        if (TaskList.getTaskCount() \u003e 0) {","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"            try {","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"                storage.saveFrom(TaskList.getAllTasks());","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"                return dukeIo.notifySaveFailure();","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"        return dukeIo.printQuit();","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"     * Checks that the command is an exit command.","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"     * @return true","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"        return true;","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"arkarsg":50}},{"path":"src/main/java/duke/commands/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.commands;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.taskcomparator.DateComparator;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.taskcomparator.DescriptionComparator;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"import duke.utils.DukeIo;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":" * SortCommand sorts the task list by a given key.","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"    private final String key;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"     * Public constructor for Deadline command.","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"     * @param sortKey Tokenised user inputs from user.","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    public SortCommand(String sortKey) {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"        this.key \u003d sortKey;","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"     * Method to sort a task by key.","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"     * @param dukeIo UI class used to return results.","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"     * @param tasks TaskList containing all tasks to be shown","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"    public String exec(DukeIo dukeIo, TaskList tasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"        Comparator\u003cTask\u003e c \u003d getComparator(this.key);","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"        return tasks.sort(c);","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"    private Comparator\u003cTask\u003e getComparator(String key) {","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"        if (key.equals(\"name\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"            return new DescriptionComparator();","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"        } else if (key.equals(\"date\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"            return new DateComparator();","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"            // should not reach here","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"            assert false;","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"            return new DescriptionComparator();","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"arkarsg":48}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import duke.utils.DukeIo;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":" * TodoCommand adds a To-Do task to TaskList.","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"    private final String tokens;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"     * Public constructor for Todo Command.","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"     * @param desc Tokenised user inputs from user.","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"    public TodoCommand(String desc) {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"        this.tokens \u003d desc;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"     * Method to add To-Do task into TaskList","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"     * @param dukeIo UI class used to return results.","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"     * @param tasks TaskList containing all tasks to be shown","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"     * @return Success toast upon adding tasks to the TaskList on GUI.","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"    public String exec(DukeIo dukeIo, TaskList tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"        ToDo todo \u003d createToDo();","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"        return dukeIo.notifySuccessAdd(todo) + dukeIo.showCount();","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"    private ToDo createToDo() {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"        return new ToDo(tokens);","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"arkarsg":38}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import duke.utils.DukeIo;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":" * MarkCommand class which handles both mark and unmark commands","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"    private final int index;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"     * Public constructor for Mark/unmark command.","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"     * @param index User-input task index to mark/ unmark.","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"     * Method to mark/ unmark task in the TaskList.","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"     * @param dukeIo UI class used to return results","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"     * @param tasks TaskList containing all tasks to be marked/ unmarked.","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"     * @return UI feedback after successful mark and change in task status.","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"    public String exec(DukeIo dukeIo, TaskList tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"        if (task.isDone()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"            task.toggleDoneOrNot();","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"            return dukeIo.notifyUnmark(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"            return dukeIo.notifyUnmarkFail(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"arkarsg":38}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.exception;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":" * Exception class that handles errors specific to Duke.","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"    public static final String HELP \u003d \" View all tasks with `list`\";","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"    public static final String TASK_NOT_FOUND_EXCEPTION \u003d \"[ERROR] : No such task.\" + HELP;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"    public static final String MARK_FORMAT_EXCEPTION \u003d \"[ERROR] : Mark/unmark tasks with task number.\"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"                                                    + HELP;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"    public static final String NAME_FORMAT_EXCEPTION \u003d \"[ERROR] : Missing task name. \";","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"    public static final String ARG_FORMAT_EXCEPTION \u003d \"[ERROR] : Please specify date and time. \";","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"    public static final String NULL_DELETE_EXCEPTION \u003d \"[ERROR] : Missing task name to delete. Please specify a task.\"","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"                                                    + HELP;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"    public static final String DELETE_FORMAT_EXCEPTION \u003d \"[ERROR] : Delete task with task number.\"","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"                                                    + HELP;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"    public static final String FIND_FORMAT_EXCEPTION \u003d \"[ERROR] : No search term(s) specified.\";","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"    public static final String SORT_FORMAT_EXCEPTION \u003d \"[ERROR] : Please specify a sort key.\";","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"    private String errorMessage;","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"     * Public constructor for InvalidCommandException","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"     * @param err Error message","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"    public InvalidCommandException(String err) {","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"        super(err);","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"        this.errorMessage \u003d err;","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"     * Getter method for String representation of Exception thrown.","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"     * @return String representation of Exception.","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"        return this.errorMessage;","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"arkarsg":37}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.gui;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":" * GUI for dialog box that shows on every user input and response.","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"    private Text dialog;","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"        Rectangle clippingMask \u003d new Rectangle(","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"            displayPicture.getFitWidth(), displayPicture.getFitHeight());","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"        clippingMask.setArcWidth(100.0);","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"        clippingMask.setArcHeight(100.0);","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"        displayPicture.setClip(clippingMask);","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"    private void flip() {","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"     * Creates a dialog box for the user which is shown on the GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"     * @param l Literal string of message passed to be shown on the GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"     * @param img Image associated with the user shown on GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"     * @return Dialog box containing the message and the image.","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"    public static DialogBox getUserDialog(String l, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"        return new DialogBox(l, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"     * Creates a dialog box for the Duke which is shown on the GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"     * @param l Literal string of message passed to be shown on the GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"     * @param img Image associated with the Duke shown on GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"     * @return Dialog box containing the message and the image.","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"    public static DialogBox getDukeDialog(String l, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"        var db \u003d new DialogBox(l, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"arkarsg"},"content":"        db.flip();","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"arkarsg"},"content":"        return db;","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"arkarsg":73}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.gui;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"        dialogContainer.getChildren().add(WelcomeDialog.getWelcomeDialog());","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"            DialogBox.getDukeDialog(d.showHello(), dukeImage));","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"     * Creates two dialog boxes.","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"     * One echoing user input and the other containing Duke\u0027s reply.","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"     * Then, appends the dialog container.","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"    private void handleUserInput() throws InvalidCommandException {","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"        // adding new dialogs","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"        );","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"        if (duke.isBye()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"            pause.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"            pause.play();","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"arkarsg":69}},{"path":"src/main/java/duke/gui/WelcomeDialog.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.gui;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":" * GUI for additional welcome message that shows at the top of the window.","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"public class WelcomeDialog extends VBox {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"    private VBox welcomeDialog;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"    private WelcomeDialog() {","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/WelcomeDialog.fxml\"));","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"            welcomeDialog \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"    private VBox getVBox() {","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"        return welcomeDialog;","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"     * Creates a container with welcome message upon boot.","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"     * @return Container of Vbox containing static text.","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"    public static VBox getWelcomeDialog() {","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"        var w \u003d new WelcomeDialog();","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"        return w.getVBox();","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"arkarsg":39}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":" * The class representing a Deadline task.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"    /** Format of DateTime accepted to create a Deadline task object */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"    private static final DateTimeFormatter IN_FORMAT \u003d DateTimeFormatter","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"                                                        .ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"    /** User friendly format of DateTime which is displayed to the user */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"    private static final DateTimeFormatter OUT_FORMAT \u003d DateTimeFormatter","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"                                                        .ofPattern(\"dd LLL, h:mma\");","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"    private static final String FORMAT \u003d \"deadline {task name} /by {dd/mm/yyyy HHmm}\";","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"    private final boolean hasDate \u003d true;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"     * The constructor that initalises a Deadline task with the given description and date.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"     * @param desc Description of the deadline task.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"     * @param deadline Deadline of the deadline task.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"    public Deadline(String desc, String deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"        super(desc);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"        setDeadline(deadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"    private void setDeadline(String deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(deadline, IN_FORMAT);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"        this.deadline \u003d dateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"    private String deadline() {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"        return \"\\n(by: \" + this.deadline.format(OUT_FORMAT) + \")\";","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"     * User friendly guide to help users in case of InvalidCommandException.","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"     * @return String representing the format of Deadline task.","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"    public static String showFormat() {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"        return \"Create a `deadline` with:\\n\" + FORMAT;","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"        return deadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"    public static DateTimeFormatter getTimeFormat() {","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"        return IN_FORMAT;","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"     * User friendly interpretation of Deadline task object.","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"     * Displays Task type, description and deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"     * @return String representation of Deadline task.","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"        return \"[D]\" + super.toString() + this.deadline();","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"arkarsg":66}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":" * The class representing an Event task.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"    /** Format of DateTime accepted to create an Event object.  */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"    private static final DateTimeFormatter IN_FORMAT \u003d DateTimeFormatter","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"                                                        .ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"    /** User friendly format of DateTime which is displayed to the user.  */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"    private static final DateTimeFormatter OUT_FORMAT \u003d DateTimeFormatter","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"                                                        .ofPattern(\"dd LLL, h:mma\");","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"    private static final String FORMAT \u003d \"event {task name}\"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"                                        + \"/from {dd/mm/yyyy HHmm}\"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"                                        + \"/to {dd/mm/yyyy HHmm}\";","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    private final boolean hasDate \u003d true;","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"     * The constructor that initialises an Event task.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"     * Event task is created with a given description, start time and end time.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"     * @param desc Description of the Event task.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"     * @param from Start DateTime of the Event task.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"     * @param to End DateTime of the Event task.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"    public Event(String desc, String from, String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"        super(desc);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"        setFrom(from);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"        setTo(to);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"    private void setFrom(String from) {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(from, IN_FORMAT);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"        this.from \u003d dateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"    private void setTo(String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(to, IN_FORMAT);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"        this.to \u003d dateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"    private String duration() {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"        return \"\\n(from: \" + this.from.format(OUT_FORMAT) + \", to: \"","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"                + this.to.format(OUT_FORMAT) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"     * User friendly guide to help users in case of InvalidCommandException.","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"     * @return String representing the format of Event Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"    public static String showFomat() {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"        return \"Create an `Event` with:\\n\" + FORMAT;","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"        return from;","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"     * User friendly interpretation of Event task object.","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"     * Displays Task type, description, and duration.","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"        return \"[E]\" + super.toString() + this.duration();","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"arkarsg":71}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":" * Parent Task class which implements Serializable.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"    protected String desc;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"    protected boolean hasDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"     * Public constructor that takes in String to create a Task object.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"     * Boolen isDone is initialised as false.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"     * @param desc description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"        setDone(false);","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"     * Getter method to access Task description only.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"     * @return desc description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"        return this.desc;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"     * Indicate whether task is done or not.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"     * True if done, false otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"     * @param done Boolean indicator if task is done or not.","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"     * Check if task is done or not.","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"     * True if done, false otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"     * @return boolean","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"     * Indicate done if task is not done and vice-versa.","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"    public void toggleDoneOrNot() {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"        if (this.isDone()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"            setDone(false);","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"            setDone(true);","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"    public boolean hasDate() {","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"        return hasDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"        return null;","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"arkarsg"},"content":"     * Human friendly interpretation of Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"arkarsg"},"content":"     * @return Task interpretation showing isDone status and description.","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"arkarsg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"arkarsg"},"content":"        String icon \u003d isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"arkarsg"},"content":"        return icon + \" \" + this.getDescription();","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"arkarsg":78}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import java.util.List;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"import duke.utils.DukeIo;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":" * Iterator class that maintains a List of all tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"    private static List\u003cTask\u003e allTasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"    private static DukeIo dukeIo \u003d new DukeIo();","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"     * Restricted constructor that initalises the TaskList object.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"    private TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"        allTasks \u003d tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"        taskCount \u003d tasks.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"     * Factory method to create a TaskList object with emty List of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"     * @return An empty TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"    public static TaskList ofNull() {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"        return new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"     * Initialises static variables from pre-existing list of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"     * @param tasks List of tasks to be loaded from.","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"    public void loadFrom(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"        allTasks \u003d tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"        taskCount \u003d tasks.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"     * Indicates the number of existing tasks in the TaskList","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"     * @return taskCount int number of tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"        return taskCount;","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"     * Retreives the task from the TaskList given the index of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"     * @param taskIndex 0-based index of task to retrieve from task list.","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"     * @return Task object","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"        return allTasks.get(taskIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"     * Retrieves all tasks in the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"     * @return ArrayList of tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"    public static ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"        return new ArrayList\u003c\u003e(allTasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"arkarsg"},"content":"     * Adds a task to TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"arkarsg"},"content":"     * Increments the number of task count by 1.","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"arkarsg"},"content":"     * @param task Task object added to the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"arkarsg"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"arkarsg"},"content":"        allTasks.add(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"arkarsg"},"content":"        taskCount++;","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"arkarsg"},"content":"     * Removes a task from the TaskList given the index of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"arkarsg"},"content":"     * Decrements the number of task count by 1.","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"arkarsg"},"content":"     * @param taskIndex int index of taks to be deleted.","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"arkarsg"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"arkarsg"},"content":"        allTasks.remove(taskIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"arkarsg"},"content":"        taskCount--;","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"arkarsg"},"content":"     * Filters all tasks to display a list of tasks containing user input keywords.","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"arkarsg"},"content":"     * @param searchString Keyword to search","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"arkarsg"},"content":"     * @return List of filtered tasks","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"arkarsg"},"content":"    public String showFilteredTasks(String searchString) {","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"arkarsg"},"content":"        // early return if there are no tasks initially","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"arkarsg"},"content":"        if (allTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"arkarsg"},"content":"            return dukeIo.notifyZeroHits();","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"arkarsg"},"content":"        List\u003cTask\u003e searchResults \u003d allTasks.stream()","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"arkarsg"},"content":"                                            .filter(t -\u003e t.toString().contains(searchString))","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"arkarsg"},"content":"                                            .collect(Collectors.toList());","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"arkarsg"},"content":"        if (searchResults.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"arkarsg"},"content":"            return dukeIo.notifyZeroHits();","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"arkarsg"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"arkarsg"},"content":"            return dukeIo.showFiltered(searchResults);","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"arkarsg"},"content":"     * Sorts the tasklist based on the given comparator input.","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"arkarsg"},"content":"     * Sort mutates the tasklist, thereby, affecting the behaviour of the next commands.","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"arkarsg"},"content":"     * @param c Comparator to compare Tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"arkarsg"},"content":"     * @return List of sorted tasks based on key","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"arkarsg"},"content":"    public String sort(Comparator\u003cTask\u003e c) {","lastModifiedDate":"2023-02-13"},{"lineNumber":116,"author":{"gitId":"arkarsg"},"content":"        allTasks \u003d allTasks.stream()","lastModifiedDate":"2023-02-13"},{"lineNumber":117,"author":{"gitId":"arkarsg"},"content":"                            .sorted(c)","lastModifiedDate":"2023-02-13"},{"lineNumber":118,"author":{"gitId":"arkarsg"},"content":"                            .collect(Collectors.toList());","lastModifiedDate":"2023-02-13"},{"lineNumber":119,"author":{"gitId":"arkarsg"},"content":"        return dukeIo.showAll();","lastModifiedDate":"2023-02-13"},{"lineNumber":120,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":121,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"arkarsg":121}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":" * The class representing a ToDo task","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"    private static final String FORMAT \u003d \"todo {task name}\";","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"    private final boolean hasDate \u003d false;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"     * The constructor to initialise a ToDo task object with the given description.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"     * @param desc Description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"    public ToDo(String desc) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"        super(desc);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"     * User friendly guide to help users in case of InvalidCommandException","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"     * @return String format of a valid ToDo command.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"    public static String showFormat() {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"        return \"Create a `todo` with: \" + FORMAT;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"     * User friendly interpretation of ToDo task object.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"     * Displays Task type, isDone status and description.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"     * @return String representation of ToDo task.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"arkarsg":35}},{"path":"src/main/java/duke/tasks/taskcomparator/DateComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.tasks.taskcomparator;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":" * DateComparator compares the START DATE of tasks if the task has Date associated to it.","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":" * Else, task string is used to compare. This lets sorted tasks to be grouped by task type.","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":" * This gives tasks in an ascending order by date.","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"public class DateComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"    public int compare(Task t1, Task t2) {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"        if (t1.hasDate() \u0026\u0026 t2.hasDate()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"            return t1.getDate().compareTo(t2.getDate());","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"            return t1.toString().compareTo(t2.toString());","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"arkarsg":21}},{"path":"src/main/java/duke/tasks/taskcomparator/DescriptionComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.tasks.taskcomparator;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":" * DescriptionComparator compares tasks lexicographically based on their description.","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":" * This gives tasks in an ascending order.","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"public class DescriptionComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"    public int compare(Task t1, Task t2) {","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"        return t1.getDescription().compareTo(t2.getDescription());","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"arkarsg":16}},{"path":"src/main/java/duke/utils/DukeIo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.utils;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import java.util.List;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":" * Formatter class to format outputs to users\u0027 terminal.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"public class DukeIo {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"    private static final String CMD_LIST \u003d \"\\n[list] : Show a list of all tasks currently\\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"                                         + \"[todo] : Add a to-do task\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"                                         + \"[deadline] : Add a task to be completed by a date\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"                                         + \"[event] : Add an event from start time to end time\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"                                         + \"[mark] : Mark a task as completed\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"                                         + \"[unmark] : Unmark a completed task\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"                                         + \"[delete] : Delete a task from the list\\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"                                         + \"[find] : Find a task containing the keyword\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"                                         + \"[sort] : Sort tasks alphabetically or by date\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"    private static final String HELLO \u003d \"Hello! I am Duke.\\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"                                        + \"What\u0027s on your mind today?\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"    private static final String SAVE_SUCCESS \u003d \"Successfully saved all tasks\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"    private static final String SAVE_FAILURE \u003d \"FAILED TO SAVE ALL TASKS\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"    private static final String QUIT \u003d \"Quitting Duke...\\n\" + \"See you soon!\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"     * Displays message on screen, writes each String as a newline to standard output.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"     * @param message custom message to echo","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly interpretation of message echoed to GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"    public String echoMessage(String message) {","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"        return message;","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"     * Displays greeting message for Duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly interpretation of welcome message on GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"    public String printHello() {","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"        return HELLO;","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"     * Displays exit message upon quit.","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly quit message rendered on GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"    public String printQuit() {","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"        return QUIT;","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"     * Displays a success toast message upon addition of a Task to TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"     * @param t Task object and its inherited classes.","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly success toast and task description rendered on GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"    public String notifySuccessAdd(Task t) {","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"        String out \u003d \"Successfully added:\\n\" + \"    \" + t.toString() + \"\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"        return out;","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"     * Displays a success toast message upon updating the state of the task to \"Completed\".","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"     * @param t Task obejct and its inherited classes.","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly success toast and completed task rendered on GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"    public String notifySuccessComplete(Task t) {","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"arkarsg"},"content":"        String out \u003d \"Successfully completed:\\n\" + \"    \" + t.toString() + \"\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"arkarsg"},"content":"        return out;","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"arkarsg"},"content":"     * Displays a success toast upon updating the state from \"Completed\" to \"Incomplete\".","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"arkarsg"},"content":"     * @param t Task object and its inherited classes.","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly success toast of unmarked task rendered on GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"arkarsg"},"content":"    public String notifyUnmark(Task t) {","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"arkarsg"},"content":"        String out \u003d \"Unmarked task:\\n\" + \"    \" + t.toString() + \"\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"arkarsg"},"content":"        return out;","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"arkarsg"},"content":"     * Displays an error toast when user tries to mark an already marked Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"arkarsg"},"content":"     * @param t Task object and its inherited classes.","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly failure toast rendered on GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"arkarsg"},"content":"    public String notifyMarkFail(Task t) {","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"arkarsg"},"content":"        String out \u003d \"Cannot mark completed task:\\n\" + \"    \" + t.toString() + \"\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"arkarsg"},"content":"        return out;","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"arkarsg"},"content":"     * Displays error toast when user tries to unmark an already unmarked Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"arkarsg"},"content":"     * @param t Task object and its inherited classes.","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly failure toast rendered on GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"arkarsg"},"content":"    public String notifyUnmarkFail(Task t) {","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"arkarsg"},"content":"        String out \u003d \"Cannot unmark incomplete task:\\n\" + \"    \" + t.toString() + \"\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"arkarsg"},"content":"        return out;","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"arkarsg"},"content":"     * Displays the number of existing tasks in the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly display about number of tasks in task list rendered on GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"arkarsg"},"content":"    public String showCount() {","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"arkarsg"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"arkarsg"},"content":"        String isare;","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"arkarsg"},"content":"        String s;","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"arkarsg"},"content":"        int taskCount \u003d TaskList.getTaskCount();","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"arkarsg"},"content":"        if (taskCount \u003e 1) {","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"arkarsg"},"content":"            isare \u003d \" are: \";","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"arkarsg"},"content":"            s \u003d \" tasks\";","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"arkarsg"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"arkarsg"},"content":"            isare \u003d \" is: \";","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"arkarsg"},"content":"            s \u003d \" task\";","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"arkarsg"},"content":"        str.append(\"There\" + isare + Integer.toString(taskCount)","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"arkarsg"},"content":"                             + s + \" in the list.\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"arkarsg"},"content":"        return str.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"arkarsg"},"content":"    //CHECKSTYLE.OFF: SingleSpaceSeparator","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"arkarsg"},"content":"     * Displays an indexed list of all existing tasks in the TaskList","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly interpretation of indexed list of all tasks rendered on GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"arkarsg"},"content":"    public String showAll() {","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"arkarsg"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"arkarsg"},"content":"        int taskCount \u003d TaskList.getTaskCount();","lastModifiedDate":"2023-02-02"},{"lineNumber":133,"author":{"gitId":"arkarsg"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e(TaskList.getAllTasks());","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"arkarsg"},"content":"        str.append(\"All Tasks:\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":135,"author":{"gitId":"arkarsg"},"content":"        for (Integer i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-02-02"},{"lineNumber":136,"author":{"gitId":"arkarsg"},"content":"            String showString \u003d \"   \"  + Integer.toString(i + 1) + \": \"","lastModifiedDate":"2023-02-02"},{"lineNumber":137,"author":{"gitId":"arkarsg"},"content":"                                 + allTasks.get(i).toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":138,"author":{"gitId":"arkarsg"},"content":"            str.append(showString + \"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":139,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"arkarsg"},"content":"        return str.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":141,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"arkarsg"},"content":"    //CHECKSTYLE.ON: SingleSpaceSeparator","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":144,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"arkarsg"},"content":"     * Displays an indexed list of filtered tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":146,"author":{"gitId":"arkarsg"},"content":"     * @param filteredTasks List of Tasks containing filtered tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly list of filtered tasks rendered on GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":149,"author":{"gitId":"arkarsg"},"content":"    public String showFiltered(List\u003cTask\u003e filteredTasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":150,"author":{"gitId":"arkarsg"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-02-11"},{"lineNumber":151,"author":{"gitId":"arkarsg"},"content":"        int taskCount \u003d filteredTasks.size();","lastModifiedDate":"2023-02-02"},{"lineNumber":152,"author":{"gitId":"arkarsg"},"content":"        str.append(\"Find results:\\n\");","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"arkarsg"},"content":"        for (Integer i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-02-02"},{"lineNumber":154,"author":{"gitId":"arkarsg"},"content":"            String showString \u003d \"   \" + Integer.toString(i + 1) + \": \"","lastModifiedDate":"2023-02-02"},{"lineNumber":155,"author":{"gitId":"arkarsg"},"content":"                                 + filteredTasks.get(i).toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":156,"author":{"gitId":"arkarsg"},"content":"            str.append(showString + \"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":157,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":158,"author":{"gitId":"arkarsg"},"content":"        return str.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":159,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":160,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":161,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":162,"author":{"gitId":"arkarsg"},"content":"     * Displays error toast when user inputs an Invalid Command.","lastModifiedDate":"2023-02-02"},{"lineNumber":163,"author":{"gitId":"arkarsg"},"content":"     * A section of valid commands guide is displayed in a new line.","lastModifiedDate":"2023-02-02"},{"lineNumber":164,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly help message rendered on GUI upon InvalidCommand.","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":166,"author":{"gitId":"arkarsg"},"content":"    public static String showInvalidCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":167,"author":{"gitId":"arkarsg"},"content":"        return \"Invalid Command!\\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":168,"author":{"gitId":"arkarsg"},"content":"            + CMD_LIST;","lastModifiedDate":"2023-02-11"},{"lineNumber":169,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":170,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":171,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":172,"author":{"gitId":"arkarsg"},"content":"     * Displays error toast upon Exception.","lastModifiedDate":"2023-02-02"},{"lineNumber":173,"author":{"gitId":"arkarsg"},"content":"     * @param e Exception thrown","lastModifiedDate":"2023-02-02"},{"lineNumber":174,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly feedback of recoverable exception rendered on GUI.","lastModifiedDate":"2023-02-12"},{"lineNumber":175,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":176,"author":{"gitId":"arkarsg"},"content":"    public String showError(Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":177,"author":{"gitId":"arkarsg"},"content":"        return e.getMessage() + \"\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":178,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":179,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":180,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":181,"author":{"gitId":"arkarsg"},"content":"     * Displays success toast after loading TaskList from saved .txt file.","lastModifiedDate":"2023-02-02"},{"lineNumber":182,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly update upon successful load.","lastModifiedDate":"2023-02-12"},{"lineNumber":183,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":184,"author":{"gitId":"arkarsg"},"content":"    public String notifyLoad() {","lastModifiedDate":"2023-02-11"},{"lineNumber":185,"author":{"gitId":"arkarsg"},"content":"        return \"Loaded successfully from previous session.\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":186,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":187,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":188,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":189,"author":{"gitId":"arkarsg"},"content":"     * Displays success toast after saving TaskList upon quit.","lastModifiedDate":"2023-02-02"},{"lineNumber":190,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly success toast after save upon quit.","lastModifiedDate":"2023-02-12"},{"lineNumber":191,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":192,"author":{"gitId":"arkarsg"},"content":"    public String notifySave() {","lastModifiedDate":"2023-02-11"},{"lineNumber":193,"author":{"gitId":"arkarsg"},"content":"        return SAVE_SUCCESS;","lastModifiedDate":"2023-02-11"},{"lineNumber":194,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":195,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":196,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":197,"author":{"gitId":"arkarsg"},"content":"     * Displays failure toast upon save failure","lastModifiedDate":"2023-02-02"},{"lineNumber":198,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly failure toast after quit.","lastModifiedDate":"2023-02-12"},{"lineNumber":199,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":200,"author":{"gitId":"arkarsg"},"content":"    public String notifySaveFailure() {","lastModifiedDate":"2023-02-11"},{"lineNumber":201,"author":{"gitId":"arkarsg"},"content":"        return SAVE_FAILURE;","lastModifiedDate":"2023-02-11"},{"lineNumber":202,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":203,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":204,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":205,"author":{"gitId":"arkarsg"},"content":"     * Displays failure toast upon no find results","lastModifiedDate":"2023-02-02"},{"lineNumber":206,"author":{"gitId":"arkarsg"},"content":"     * @return User-friendly feedback when there are no tasks matching search keyword.","lastModifiedDate":"2023-02-12"},{"lineNumber":207,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":208,"author":{"gitId":"arkarsg"},"content":"    public String notifyZeroHits() {","lastModifiedDate":"2023-02-11"},{"lineNumber":209,"author":{"gitId":"arkarsg"},"content":"        return \"No tasks found.\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":210,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":211,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":212,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":213,"author":{"gitId":"arkarsg"},"content":"     * Displays user-friendly interpretation of task deleted.","lastModifiedDate":"2023-02-11"},{"lineNumber":214,"author":{"gitId":"arkarsg"},"content":"     * @param taskIndex Index of task to be deleted from TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":215,"author":{"gitId":"arkarsg"},"content":"     * @return Feedback after task has been deleted successfully.","lastModifiedDate":"2023-02-11"},{"lineNumber":216,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":217,"author":{"gitId":"arkarsg"},"content":"    public String showDeleted(int taskIndex) {","lastModifiedDate":"2023-02-11"},{"lineNumber":218,"author":{"gitId":"arkarsg"},"content":"        return TaskList.getAllTasks().get(taskIndex).toString() + \" deleted.\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":219,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":220,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":221,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":222,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"arkarsg":222}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.utils;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import java.util.List;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"import duke.commands.InvalidCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"import duke.commands.QuitCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"import duke.commands.SortCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":" * Interpreter class to format user input into tokens","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"    private static Map\u003cString, Function\u003cString[], Command\u003e\u003e cmdMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"    private String originalCmd;","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"    private String[] tokens;","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"    public Parser() {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"        populateCommands();","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"     * Formats user input from standard input to String array","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"     * @param input Literal string received from user.","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"    public void tokenise(String input) {","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"        this.originalCmd \u003d input;","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"        this.tokens \u003d input.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"    public Command getCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"            return cmdMap.get(tokens[0]).apply(tokens);","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(new InvalidCommandException(DukeIo.showInvalidCommand()));","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"    private void populateCommands() {","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"list\", (String[] tokens) -\u003e parseList());","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"todo\", (String[] tokens) -\u003e parseToDo(tokens));","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"deadline\", (String[] tokens) -\u003e parseDeadline(tokens));","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"event\", (String[] tokens) -\u003e parseEvent(tokens));","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"delete\", (String[] tokens) -\u003e parseDelete(tokens));","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"find\", (String[] tokens) -\u003e parseFind(tokens));","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"mark\", (String[] tokens) -\u003e parseMark(tokens));","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"unmark\", (String[] tokens) -\u003e parseUnmark(tokens));","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"sort\", (String[] tokens) -\u003e parseSort(tokens));","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"bye\", (String[] tokens) -\u003e parseBye());","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"    private Command parseList() {","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"arkarsg"},"content":"        return new ListCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"arkarsg"},"content":"    private Command parseToDo(String[] tokens) {","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"arkarsg"},"content":"        if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"arkarsg"},"content":"                            InvalidCommandException.NAME_FORMAT_EXCEPTION));","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"arkarsg"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"arkarsg"},"content":"        for (String token : tokens) {","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"arkarsg"},"content":"            if (!token.equals(\"todo\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"arkarsg"},"content":"                s.append(token);","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"arkarsg"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"arkarsg"},"content":"        return new TodoCommand(s.toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"arkarsg"},"content":"    private Command parseDeadline(String[] tokens) {","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"arkarsg"},"content":"        List\u003cString\u003e t \u003d Arrays.asList(tokens);","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"arkarsg"},"content":"        int byIndex \u003d t.indexOf(\"/by\");","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"arkarsg"},"content":"        if (!hasKey(byIndex) || !hasDate(byIndex, t.size())) {","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"arkarsg"},"content":"                            InvalidCommandException.ARG_FORMAT_EXCEPTION));","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"arkarsg"},"content":"        if (!hasDesc(byIndex)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"arkarsg"},"content":"                            InvalidCommandException.NAME_FORMAT_EXCEPTION));","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"arkarsg"},"content":"        String desc \u003d String.join(\" \", t.subList(1, byIndex));","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"arkarsg"},"content":"        String deadline \u003d String.join(\" \", t.subList(byIndex + 1, t.size()));","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"arkarsg"},"content":"        String[] args \u003d {desc, deadline};","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"arkarsg"},"content":"        // There should only be 2 arguments if parsed correctly.","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"arkarsg"},"content":"        assert args.length \u003d\u003d 2;","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"arkarsg"},"content":"            LocalDateTime.parse(deadline, Deadline.getTimeFormat());","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"arkarsg"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"arkarsg"},"content":"                        InvalidCommandException.ARG_FORMAT_EXCEPTION));","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"arkarsg"},"content":"        return new DeadlineCommand(args);","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":117,"author":{"gitId":"arkarsg"},"content":"    private Command parseEvent(String[] tokens) {","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"arkarsg"},"content":"        List\u003cString\u003e e \u003d Arrays.asList(tokens);","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"arkarsg"},"content":"        int fromIndex \u003d e.indexOf(\"/from\");","lastModifiedDate":"2023-02-11"},{"lineNumber":120,"author":{"gitId":"arkarsg"},"content":"        int toIndex \u003d e.indexOf(\"/to\");","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"arkarsg"},"content":"        if (!hasKey(fromIndex) || !hasKey(toIndex)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"arkarsg"},"content":"                            InvalidCommandException.ARG_FORMAT_EXCEPTION));","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"arkarsg"},"content":"        if (!hasBothDates(fromIndex, toIndex, e.size())) {","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"arkarsg"},"content":"                            InvalidCommandException.ARG_FORMAT_EXCEPTION));","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"arkarsg"},"content":"        String desc \u003d String.join(\" \", e.subList(1, fromIndex));","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"arkarsg"},"content":"        String from \u003d String.join(\" \", e.subList(fromIndex + 1, toIndex));","lastModifiedDate":"2023-02-11"},{"lineNumber":133,"author":{"gitId":"arkarsg"},"content":"        String to \u003d String.join(\" \", e.subList(toIndex + 1, e.size()));","lastModifiedDate":"2023-02-11"},{"lineNumber":134,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":135,"author":{"gitId":"arkarsg"},"content":"            LocalDateTime.parse(from, Deadline.getTimeFormat());","lastModifiedDate":"2023-02-14"},{"lineNumber":136,"author":{"gitId":"arkarsg"},"content":"            LocalDateTime.parse(to, Deadline.getTimeFormat());","lastModifiedDate":"2023-02-14"},{"lineNumber":137,"author":{"gitId":"arkarsg"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-02-14"},{"lineNumber":138,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-14"},{"lineNumber":139,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(","lastModifiedDate":"2023-02-14"},{"lineNumber":140,"author":{"gitId":"arkarsg"},"content":"                        InvalidCommandException.ARG_FORMAT_EXCEPTION));","lastModifiedDate":"2023-02-14"},{"lineNumber":141,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":142,"author":{"gitId":"arkarsg"},"content":"        String[] args \u003d {desc, from, to};","lastModifiedDate":"2023-02-11"},{"lineNumber":143,"author":{"gitId":"arkarsg"},"content":"        return new EventCommand(args);","lastModifiedDate":"2023-02-11"},{"lineNumber":144,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":145,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":146,"author":{"gitId":"arkarsg"},"content":"    private Command parseDelete(String[] tokens) {","lastModifiedDate":"2023-02-11"},{"lineNumber":147,"author":{"gitId":"arkarsg"},"content":"        int taskIndex \u003d 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":148,"author":{"gitId":"arkarsg"},"content":"        if (tokens.length \u003d\u003d 1 || tokens.length \u003e 2) {","lastModifiedDate":"2023-02-11"},{"lineNumber":149,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-11"},{"lineNumber":150,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(","lastModifiedDate":"2023-02-11"},{"lineNumber":151,"author":{"gitId":"arkarsg"},"content":"                            InvalidCommandException.NULL_DELETE_EXCEPTION));","lastModifiedDate":"2023-02-11"},{"lineNumber":152,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":153,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":154,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":155,"author":{"gitId":"arkarsg"},"content":"            taskIndex \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2023-02-11"},{"lineNumber":156,"author":{"gitId":"arkarsg"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":157,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-11"},{"lineNumber":158,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(","lastModifiedDate":"2023-02-11"},{"lineNumber":159,"author":{"gitId":"arkarsg"},"content":"                            InvalidCommandException.DELETE_FORMAT_EXCEPTION));","lastModifiedDate":"2023-02-11"},{"lineNumber":160,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":161,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":162,"author":{"gitId":"arkarsg"},"content":"        if (taskIndex \u003c\u003d 0 || taskIndex \u003e TaskList.getTaskCount()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":163,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-11"},{"lineNumber":164,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(","lastModifiedDate":"2023-02-11"},{"lineNumber":165,"author":{"gitId":"arkarsg"},"content":"                            InvalidCommandException.TASK_NOT_FOUND_EXCEPTION));","lastModifiedDate":"2023-02-11"},{"lineNumber":166,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":167,"author":{"gitId":"arkarsg"},"content":"        // Task index to delete should not exceed task count present","lastModifiedDate":"2023-02-12"},{"lineNumber":168,"author":{"gitId":"arkarsg"},"content":"        assert taskIndex - 1 \u003c TaskList.getTaskCount();","lastModifiedDate":"2023-02-12"},{"lineNumber":169,"author":{"gitId":"arkarsg"},"content":"        return new DeleteCommand(taskIndex - 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":170,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":171,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":172,"author":{"gitId":"arkarsg"},"content":"    private Command parseFind(String[] tokens) {","lastModifiedDate":"2023-02-11"},{"lineNumber":173,"author":{"gitId":"arkarsg"},"content":"        if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-12"},{"lineNumber":174,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-12"},{"lineNumber":175,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(","lastModifiedDate":"2023-02-12"},{"lineNumber":176,"author":{"gitId":"arkarsg"},"content":"                            InvalidCommandException.FIND_FORMAT_EXCEPTION));","lastModifiedDate":"2023-02-12"},{"lineNumber":177,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":178,"author":{"gitId":"arkarsg"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2023-02-11"},{"lineNumber":179,"author":{"gitId":"arkarsg"},"content":"        for (String search : tokens) {","lastModifiedDate":"2023-02-11"},{"lineNumber":180,"author":{"gitId":"arkarsg"},"content":"            if (!search.equals(\"find\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":181,"author":{"gitId":"arkarsg"},"content":"                s.append(search);","lastModifiedDate":"2023-02-12"},{"lineNumber":182,"author":{"gitId":"arkarsg"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":183,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":184,"author":{"gitId":"arkarsg"},"content":"        return new FindCommand(s.toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":185,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":186,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":187,"author":{"gitId":"arkarsg"},"content":"    private Command parseMark(String[] tokens) {","lastModifiedDate":"2023-02-11"},{"lineNumber":188,"author":{"gitId":"arkarsg"},"content":"        int taskIndex \u003d 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":189,"author":{"gitId":"arkarsg"},"content":"        if (tokens.length \u003d\u003d 1 || tokens.length \u003e 2) {","lastModifiedDate":"2023-02-11"},{"lineNumber":190,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-11"},{"lineNumber":191,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(InvalidCommandException.MARK_FORMAT_EXCEPTION));","lastModifiedDate":"2023-02-11"},{"lineNumber":192,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":193,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":194,"author":{"gitId":"arkarsg"},"content":"            taskIndex \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2023-02-11"},{"lineNumber":195,"author":{"gitId":"arkarsg"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":196,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-11"},{"lineNumber":197,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(InvalidCommandException.MARK_FORMAT_EXCEPTION));","lastModifiedDate":"2023-02-11"},{"lineNumber":198,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":199,"author":{"gitId":"arkarsg"},"content":"        if (taskIndex \u003c\u003d 0 || taskIndex \u003e TaskList.getTaskCount()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":200,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-11"},{"lineNumber":201,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(InvalidCommandException.TASK_NOT_FOUND_EXCEPTION));","lastModifiedDate":"2023-02-11"},{"lineNumber":202,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":203,"author":{"gitId":"arkarsg"},"content":"        return new MarkCommand(taskIndex - 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":204,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":205,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":206,"author":{"gitId":"arkarsg"},"content":"    private Command parseUnmark(String[] tokens) {","lastModifiedDate":"2023-02-11"},{"lineNumber":207,"author":{"gitId":"arkarsg"},"content":"        int taskIndex \u003d 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":208,"author":{"gitId":"arkarsg"},"content":"        if (tokens.length \u003d\u003d 1 || tokens.length \u003e 2) {","lastModifiedDate":"2023-02-11"},{"lineNumber":209,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-11"},{"lineNumber":210,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(InvalidCommandException.MARK_FORMAT_EXCEPTION));","lastModifiedDate":"2023-02-11"},{"lineNumber":211,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":212,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":213,"author":{"gitId":"arkarsg"},"content":"            taskIndex \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2023-02-11"},{"lineNumber":214,"author":{"gitId":"arkarsg"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":215,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-11"},{"lineNumber":216,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(InvalidCommandException.MARK_FORMAT_EXCEPTION));","lastModifiedDate":"2023-02-11"},{"lineNumber":217,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":218,"author":{"gitId":"arkarsg"},"content":"        if (taskIndex \u003c\u003d 0 || taskIndex \u003e TaskList.getTaskCount()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":219,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-11"},{"lineNumber":220,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(InvalidCommandException.TASK_NOT_FOUND_EXCEPTION));","lastModifiedDate":"2023-02-11"},{"lineNumber":221,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":222,"author":{"gitId":"arkarsg"},"content":"        return new UnmarkCommand(taskIndex - 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":223,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":224,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":225,"author":{"gitId":"arkarsg"},"content":"    private Command parseSort(String[] tokens) {","lastModifiedDate":"2023-02-13"},{"lineNumber":226,"author":{"gitId":"arkarsg"},"content":"        if (tokens.length !\u003d 2) {","lastModifiedDate":"2023-02-13"},{"lineNumber":227,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-13"},{"lineNumber":228,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(InvalidCommandException.SORT_FORMAT_EXCEPTION));","lastModifiedDate":"2023-02-13"},{"lineNumber":229,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":230,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":231,"author":{"gitId":"arkarsg"},"content":"        if (isInvalidSortKey(tokens[1])) {","lastModifiedDate":"2023-02-14"},{"lineNumber":232,"author":{"gitId":"arkarsg"},"content":"            return new InvalidCommand(","lastModifiedDate":"2023-02-13"},{"lineNumber":233,"author":{"gitId":"arkarsg"},"content":"                    new InvalidCommandException(InvalidCommandException.SORT_FORMAT_EXCEPTION));","lastModifiedDate":"2023-02-13"},{"lineNumber":234,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":235,"author":{"gitId":"arkarsg"},"content":"        return new SortCommand(tokens[1]);","lastModifiedDate":"2023-02-13"},{"lineNumber":236,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":237,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":238,"author":{"gitId":"arkarsg"},"content":"    private boolean isInvalidSortKey(String token) {","lastModifiedDate":"2023-02-14"},{"lineNumber":239,"author":{"gitId":"arkarsg"},"content":"        return !(token.equals(\"name\") || token.equals(\"date\"));","lastModifiedDate":"2023-02-14"},{"lineNumber":240,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":241,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":242,"author":{"gitId":"arkarsg"},"content":"    private Command parseBye() {","lastModifiedDate":"2023-02-11"},{"lineNumber":243,"author":{"gitId":"arkarsg"},"content":"        Storage s \u003d new Storage();","lastModifiedDate":"2023-02-11"},{"lineNumber":244,"author":{"gitId":"arkarsg"},"content":"        return new QuitCommand(s);","lastModifiedDate":"2023-02-11"},{"lineNumber":245,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":246,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":247,"author":{"gitId":"arkarsg"},"content":"    private boolean hasKey(int keyIndex) {","lastModifiedDate":"2023-02-11"},{"lineNumber":248,"author":{"gitId":"arkarsg"},"content":"        return keyIndex !\u003d -1;","lastModifiedDate":"2023-02-11"},{"lineNumber":249,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":250,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":251,"author":{"gitId":"arkarsg"},"content":"    private boolean hasDate(int keyIndex, int nextIndex) {","lastModifiedDate":"2023-02-11"},{"lineNumber":252,"author":{"gitId":"arkarsg"},"content":"        return keyIndex !\u003d nextIndex;","lastModifiedDate":"2023-02-11"},{"lineNumber":253,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":254,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":255,"author":{"gitId":"arkarsg"},"content":"    private boolean hasBothDates(int fromIndex, int toIndex, int nextIndex) {","lastModifiedDate":"2023-02-11"},{"lineNumber":256,"author":{"gitId":"arkarsg"},"content":"        return (hasDate(fromIndex, toIndex)) \u0026\u0026 (hasDate(toIndex + 1, nextIndex));","lastModifiedDate":"2023-02-11"},{"lineNumber":257,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":258,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":259,"author":{"gitId":"arkarsg"},"content":"    private boolean hasDesc(int keyIndex) {","lastModifiedDate":"2023-02-11"},{"lineNumber":260,"author":{"gitId":"arkarsg"},"content":"        return keyIndex \u003e 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":261,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":262,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"arkarsg":262}},{"path":"src/main/java/duke/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.utils;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.io.File;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":" * A utility class that loads from an existing storage or creates a new .txt","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":" * file to store user\u0027s session.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"    private static DukeIo dukeIo \u003d new DukeIo();","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    private ArrayList\u003cTask\u003e storedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"    private FileInputStream fis;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"    private ObjectInputStream ois;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"    private FileOutputStream fos;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"    private ObjectOutputStream o;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"    private boolean loadSuccess \u003d false;","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"     * Reads byte stream from pre-existing .txt file.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"     * @return storedTasks ArrayList that is loaded from existing storage.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"        File file \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"            return storedTasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"            fis \u003d new FileInputStream(\"./data/duke.txt\");","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"            ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"            this.storedTasks \u003d (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"            fis.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"            ois.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"            this.loadSuccess \u003d true;","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"        return storedTasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"     * Writes ArrayList of tasks as a Serialized byte stream into a .txt file.","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"     * If .txt file exists, changes are overwritten.","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"     * If the directory or .txt file does not exist, the directory and a new .txt file is created.","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"     * @param tasks List of tasks to be saved.","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"     * @throws IOException Occurs when there are errors writing stream to output.","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"    public void saveFrom(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"        // Only save if there are tasks in the ArrayList task","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"            /*","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"             * Creates \u0027data\u0027 directory by creating all parent directories first","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"             * if it does not exist.","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"             */","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"            Files.createDirectories(Paths.get(\"./data/\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"            /*","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"             * Creates a file output stream with the specified name if it exists or","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"arkarsg"},"content":"             * creates a regular file if it does not exist.","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"arkarsg"},"content":"             * Data is written from 0 offset, thereby overwritting previous saves.","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"arkarsg"},"content":"             */","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"arkarsg"},"content":"            fos \u003d new FileOutputStream(\"./data/duke.txt\");","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"arkarsg"},"content":"            o \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"arkarsg"},"content":"            o.writeObject(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"arkarsg"},"content":"            o.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"arkarsg"},"content":"            fos.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"arkarsg"},"content":"            dukeIo.notifySave();","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"arkarsg"},"content":"     * Checks if save file is loaded.","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"arkarsg"},"content":"     * @return True if save file is loaded successfully","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"arkarsg"},"content":"    public boolean isLoadSuccess() {","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"arkarsg"},"content":"        return this.loadSuccess;","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"arkarsg":89}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxWidth\u003d\"400.0\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"123.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"      \u003cText fx:id\u003d\"dialog\" boundsType\u003d\"VISUAL\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" wrappingWidth\u003d\"270.0\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"            \u003cFont name\u003d\"Menlo Regular\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"      \u003c/Text\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"      \u003cStackPane prefHeight\u003d\"83.0\" prefWidth\u003d\"90.0\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"          \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"65.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"      \u003c/StackPane\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"    \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"arkarsg":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"400.0\" minHeight\u003d\"-Infinity\" minWidth\u003d\"400.0\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"310.0\" promptText\u003d\"The Duke is listening...\" style\u003d\"-fx-background-radius: 10; -fx-background-insets: 5; -fx-min-height: 40; -fx-padding: 10;\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"            \u003cFont name\u003d\"Menlo Regular\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"      \u003c/TextField\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"    \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" layoutX\u003d\"310.0\" layoutY\u003d\"562.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"33.0\" prefWidth\u003d\"86.0\" style\u003d\"-fx-background-radius: 15; -fx-background-color: #3D5A80;\" text\u003d\"Send\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"            \u003cFont name\u003d\"Menlo Regular\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"      \u003c/Button\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"560.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"         \u003c/VBox\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"arkarsg":29}},{"path":"src/main/resources/view/WelcomeDialog.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"\u003cVBox fx:id\u003d\"welcomeDialog\" alignment\u003d\"CENTER\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"400.0\" minHeight\u003d\"-Infinity\" minWidth\u003d\"400.0\" prefHeight\u003d\"133.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-alignment: CENTER;\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"      \u003cFlowPane fx:id\u003d\"flowPane\" alignment\u003d\"CENTER\" columnHalignment\u003d\"CENTER\" orientation\u003d\"VERTICAL\" prefHeight\u003d\"56.0\" prefWidth\u003d\"320.0\" style\u003d\"-fx-border-radius: 20; -fx-background-radius: 20; -fx-background-color: #E3E3E3;\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"            \u003cText fill\u003d\"#808080\" lineSpacing\u003d\"30.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Welcome to Duke\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"                  \u003cFont name\u003d\"Verdana Bold Italic\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"            \u003c/Text\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"            \u003cText fill\u003d\"GREY\" lineSpacing\u003d\"29.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"A fast and easy to use task manager.\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"                  \u003cFont name\u003d\"Verdana\" size\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"            \u003c/Text\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"      \u003cInsets bottom\u003d\"20.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"arkarsg":30}},{"path":"src/test/java/duke/DummyTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"public class DummyTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"arkarsg":13}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":" * Tests all public methods in TaskList","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"     * Tests the creation of an empty task list with constructor.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"    public void nullTaskLsitTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"        TaskList emptyTaskList \u003d TaskList.ofNull();","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"        ArrayList\u003cTask\u003e actualTaskList \u003d TaskList.getAllTasks();","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"        ArrayList\u003cTask\u003e expectedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"        assertEquals(expectedTaskList, actualTaskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"     * Tests the creation of a task list given an array","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"    public void taskListTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"        TaskList testedTaskList \u003d TaskList.ofNull();","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"        ToDo t1 \u003d new ToDo(\"valid to-do\");","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"        Deadline d1 \u003d new Deadline(\"valid deadline\", \"23/07/2023 1200\");","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"        Event e1 \u003d new Event(\"valid Event\", \"02/03/2023 1100\", \"02/03/1300\");","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"        testedTaskList.loadFrom(Arrays.asList(t1, d1, e1));","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"        assertEquals(3, TaskList.getTaskCount());","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"        assertEquals(t1, testedTaskList.getTask(0));","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"        assertEquals(d1, testedTaskList.getTask(1));","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"        assertEquals(e1 , testedTaskList.getTask(2));","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"     * Tests if a task can be successfully added to TaskList","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"    public void addTaskTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"        TaskList testedTaskList \u003d TaskList.ofNull();","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"        ToDo t1 \u003d new ToDo(\"valid to-do\");","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"        Deadline d1 \u003d new Deadline(\"valid deadline\", \"23/07/2023 1200\");","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"        Event e1 \u003d new Event(\"valid Event\", \"02/03/2023 1100\", \"02/03/1300\");","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"        assertEquals(0, TaskList.getTaskCount());","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"        testedTaskList.addTask(t1);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"        assertEquals(t1, testedTaskList.getTask(0));","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"        testedTaskList.addTask(d1);","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"        assertEquals(d1, testedTaskList.getTask(1));","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"        testedTaskList.addTask(e1);","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"        assertEquals(e1, testedTaskList.getTask(2));","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"arkarsg"},"content":"     * Tests if a task can be deleted from TaskList","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"arkarsg"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"arkarsg"},"content":"    public void deleteTaskTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"arkarsg"},"content":"        TaskList testedTaskList \u003d TaskList.ofNull();","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"arkarsg"},"content":"        ToDo t1 \u003d new ToDo(\"valid to-do\");","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"arkarsg"},"content":"        Deadline d1 \u003d new Deadline(\"valid deadline\", \"23/07/2023 1200\");","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"arkarsg"},"content":"        Event e1 \u003d new Event(\"valid Event\", \"02/03/2023 1100\", \"02/03/1300\");","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"arkarsg"},"content":"        testedTaskList.addTask(t1);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"arkarsg"},"content":"        testedTaskList.addTask(d1);","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"arkarsg"},"content":"        testedTaskList.addTask(e1);","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"arkarsg"},"content":"        testedTaskList.deleteTask(0);","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"arkarsg"},"content":"        assertEquals(false, TaskList.getAllTasks().contains(t1));","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"arkarsg":85}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":" * Tests all public methods to create a ToDo task object","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"    //CHECKSTYLE.OFF: SingleSpaceSeparator","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"     * Tests a valid ToDo object creation with public constructor","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"    public void validToDoTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"        ToDo todoTest \u003d new ToDo(\"val\");","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"        String actualUi \u003d todoTest.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"        String expectedUi \u003d  \"[T][ ] val\";","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"        assertEquals(expectedUi, actualUi);","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"    //CHECKSTYLE.ON: SingleSpaceSeparator","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"arkarsg":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"deadline retun /by June","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"event project /from aug 6th /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"todo join sports","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"delete 3","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"mark 0","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"mark 10","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"add","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"blah","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"arkarsg":18}}]
