[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"arkarsg":2,"-":39}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import duke.DukeException.InvalidCommandException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import duke.utils.DukeIo;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"import duke.utils.MyDuke;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import duke.utils.Parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"import java.io.EOFException;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"/** ","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":" * The main class to run the Duke To-do application.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":" * ","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    /** Initialises the runner MyDuke */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"    private static MyDuke duke \u003d new MyDuke();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"    /** Initialises DukeIO to handle user inputs and outputs */","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"    private static DukeIo dukeIo \u003d new DukeIo();","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"    /** Initialises Storage class to fetch tasks or save tasks */","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"    private static Storage storage \u003d new Storage();","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"    /** Initialises an EMPTY TaskList to maintain a List of Tasks */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"    private static TaskList taskList \u003d TaskList.ofNull();","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"    /** Initialises Parse class to tokenise user inputs */","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"     * The Main method that starts Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"     * Upon boot, TaskList is loaded form save file.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"     * Outputs \"Nothing to Load\" if save file does not exist.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"     * @param args The command line arguments. Currently, no arguments accepted.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"     * @throws ClassNotFoundException","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"    public static void main(String[] args) ","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"            throws InvalidCommandException, IOException, ClassNotFoundException {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"        ","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"        duke.init();","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"            taskList.loadFrom(storage.load());","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"        } catch (FileNotFoundException p) {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"            // save file has not been created.","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"            dukeIo.echoMessage(\"Nothing to load\");","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"        } catch (EOFException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"            // save file is corrupted or does not work","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"            dukeIo.echoMessage(\"Unable to load from save file.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"        runCommands();        ","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"     * Restricted method that accepts user inputs until the application is quit.","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"     * Saves TaskList to a .txt file upon quit.","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"    private static void runCommands() ","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"            throws InvalidCommandException, IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"arkarsg"},"content":"        dukeIo.showPrompt();","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"arkarsg"},"content":"        while (!isBye) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"arkarsg"},"content":"            String[] tokens \u003d parser.tokenise();","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"arkarsg"},"content":"            isBye \u003d handle(tokens, taskList);","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"arkarsg"},"content":"            if (!isBye) {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"arkarsg"},"content":"                dukeIo.showPrompt();","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"arkarsg"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"arkarsg"},"content":"     * Returns true if \"bye\" command is entered.","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"arkarsg"},"content":"     * @param tokens","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"arkarsg"},"content":"     * @param taskList","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"arkarsg"},"content":"     * @return true if user inputs \"bye\"","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"arkarsg"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"arkarsg"},"content":"    private static boolean handle(String[] tokens, TaskList taskList) ","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"arkarsg"},"content":"        throws InvalidCommandException, IOException {","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"arkarsg"},"content":"        String cmd \u003d tokens[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"arkarsg"},"content":"        // Allows user to press \"Enter\" continuously","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"arkarsg"},"content":"        if (cmd.length() \u003d\u003d 0) {  ","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"arkarsg"},"content":"            return false;    ","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"arkarsg"},"content":"        } else if (cmd.equals(\"bye\")) {  ","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"arkarsg"},"content":"            duke.quit(); ","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"arkarsg"},"content":"            return true; ","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"arkarsg"},"content":"        } else {   ","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"arkarsg"},"content":"            duke.exec(tokens, taskList); ","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"arkarsg"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"arkarsg":100,"-":2}},{"path":"src/main/java/duke/DukeException/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":" * Exception class that handles errors specific to Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"    private static final String HELP \u003d \" View all tasks with `list`\";","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"    public static final String TASK_NOT_FOUND_EXCEPTION \u003d \"[ERROR] : No such task.\" + HELP;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"    public static final String MARK_FORMAT_EXCEPTION \u003d \"[ERROR] : Mark/unmark tasks with task number.\" ","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"                                                        + HELP;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"    public static final String NAME_FORMAT_EXCEPTION \u003d \"[ERROR] : Missing task name. \";","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"    public static final String ARG_FORMAT_EXCEPTION \u003d \"[ERROR] Please specify date and time. \";","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"    public static final String NULL_DELETE_EXCEPTION \u003d \"[ERROR] Missing task name to delete. Please specify a task.\"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"                                                        + HELP;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"    public static final String DELETE_FORMAT_EXCEPTION \u003d \"[ERROR] Delete task with task number.\"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"                                                        + HELP;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"    public String errorMessage;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"    ","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"     * Public constructor for InvalidCommandException","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"     * @param err Error message","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"    public InvalidCommandException(String err) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"        super(err);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"        this.errorMessage \u003d err;","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"arkarsg":29}},{"path":"src/main/java/duke/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.Tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":" * The class representing a Deadline task.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"    private static final String FORMAT \u003d \"deadline {task name} /by {dd/mm/yyyy HHmm}\";","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"    /** Format of DateTime accepted to create a Deadline task object */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"    private static final DateTimeFormatter IN_FORMAT \u003d DateTimeFormatter.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"                                                        ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"    /** User friendly format of DateTime which is displayed to the user */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"    private static final DateTimeFormatter OUT_FORMAT \u003d DateTimeFormatter.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"                                                        ofPattern(\"dd LLL, h:mma\");","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"     * The constructor that initalises a Deadline task with the given description and date.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"     * @param desc Description of the deadline task.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"     * @param deadline Deadline of the deadline task.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"    public Deadline(String desc, String deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"        super(desc);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"        setDeadline(deadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"    private void setDeadline(String deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(deadline, IN_FORMAT);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"            this.deadline \u003d dateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"            System.out.println(\"Invalid date/time format for Deadline.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"    ","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"    private String deadline() {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"        return \" (by: \" + this.deadline.format(OUT_FORMAT) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"     * User friendly guide to help users in case of InvalidCommandExcpetion.","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"     * @retur String representing the format of Deadline task.n","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"    public static String showFormat() {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"        return \"Create a `deadline` with: \" + FORMAT;","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"     * User friendly interpretation of Deadline task object.","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"     * Displays Task type, description and deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"        return \"[D]\" + super.toString() + this.deadline();","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"arkarsg":60}},{"path":"src/main/java/duke/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.Tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":" * The class representing an Event task.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"    private static final String FORMAT \u003d \"event {task name}\"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"                                        + \"/from {dd/mm/yyyy HHmm}\"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"                                        + \"/to {dd/mm/yyyy HHmm}\";","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"    /** Format of DateTime accepted to create an Event object.  */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"    private static final DateTimeFormatter IN_FORMAT \u003d DateTimeFormatter.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"                                                        ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"    /** User friendly format of DateTime which is displayed to the user.  */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    private static final DateTimeFormatter OUT_FORMAT \u003d DateTimeFormatter.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"                                                        ofPattern(\"dd LLL, h:mma\");","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"     * The constructor that initialises an Event task.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"     * Event task is created with a given description, start time and end time.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"     * @param desc Description of the Event task.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"     * @param from Start DateTime of the Event task.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"     * @param to End DateTime of the Event task.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"    public Event(String desc, String from, String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"        super(desc);","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"        setFrom(from);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"        setTo(to);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"    private void setFrom(String from) {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(from, IN_FORMAT);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"            this.from \u003d dateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"            System.out.println(\"Invalid date/time format for Deadline.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"    private void setTo(String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(to, IN_FORMAT);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"            this.to \u003d dateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"            System.out.println(\"Invalid date/time format for Deadline.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"    private String duration() {","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"        return \" (from: \" + this.from.format(OUT_FORMAT) + \", to: \"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"                + this.to.format(OUT_FORMAT) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"     * User friendly guide to help users in case of InvalidCommandException.","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"     * @return String representing the format of Event Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"    public static String showFomat() {","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"        return \"Create an `Event` with: \" + FORMAT;","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"arkarsg"},"content":"     * User friendly interpretation of Event task object.","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"arkarsg"},"content":"     * Displays Task type, description, and duration.","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"arkarsg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"arkarsg"},"content":"        return \"[E]\" + super.toString() + this.duration();","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"arkarsg"},"content":"    ","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"arkarsg":80}},{"path":"src/main/java/duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.Tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":" * Parent Task class which implements Serializable. ","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"    protected String desc;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"     * Public constructor that takes in String to create a Task object.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"     * Boolen isDone is initialised as false.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"     * @param desc description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"        setDone(false);","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"     * Getter method to access Task description only.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"     * @return desc description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"        return this.desc;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"     * Indicate whether task is done or not.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"     * True if done, false otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"     * @param done","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"     * Check if task is done or not.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"     * True if done, false otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"     * @return boolean","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"    public boolean isDone() {   ","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"        return this.isDone;   ","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"     * Indicate done if task is not done and vice-versa.","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"    public void toggleDoneOrNot() {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"        if (this.isDone()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"            setDone(false);","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"            setDone(true);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"     * Human friendly interpretation of Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"     * @return Task interpretation showing isDone status and description.","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"arkarsg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"arkarsg"},"content":"        String icon \u003d isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"arkarsg"},"content":"        return icon + \" \" + this.getDescription();","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"arkarsg":74}},{"path":"src/main/java/duke/Tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.Tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import java.util.List;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import duke.utils.DukeIo;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":" * Iterator class that maintains a List of all tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"    public static List\u003cTask\u003e allTasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"    public static int taskCount \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"    private static DukeIo dukeIo \u003d new DukeIo();","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"     * Restricted constructor that initalises the TaskList object.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"     * @param tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    private TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"        allTasks \u003d tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"        taskCount \u003d tasks.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"     * Factory method to create a TaskList object with emty List of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"    public static TaskList ofNull() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"        return new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"     * Initialises static variables from pre-existing list of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"     * @param tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"    public void loadFrom(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"        allTasks \u003d tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"        taskCount \u003d tasks.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"     * Indicates the number of existing tasks in the TaskList","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"     * @return taskCount int number of tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"        return taskCount;","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"     * Retreives the task from the TaskList given the index of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"     * @param taskIndex","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"     * @return Task object","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"        return allTasks.get(taskIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"    } ","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"     * Retrieves all tasks in the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"     * @return ArrayList of tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"        return new ArrayList\u003c\u003e(allTasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"arkarsg"},"content":"     * Adds a task to TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"arkarsg"},"content":"     * Increments the number of task count by 1.","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"arkarsg"},"content":"     * @param task Task object added to the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"arkarsg"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"arkarsg"},"content":"        allTasks.add(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"arkarsg"},"content":"        taskCount++;","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"arkarsg"},"content":"    }    ","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"arkarsg"},"content":"     * Removes a task from the TaskList given the index of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"arkarsg"},"content":"     * Decrements the number of task count by 1.","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"arkarsg"},"content":"     * @param taskIndex int index of taks to be deleted.","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"arkarsg"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"arkarsg"},"content":"        allTasks.remove(taskIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"arkarsg"},"content":"        taskCount--;","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"arkarsg"},"content":"     * Filters all tasks to display a list of tasks containing user input keywords.","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"arkarsg"},"content":"     * @param searchString Keyword to search","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"arkarsg"},"content":"     * @return String Displays the filtered tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"arkarsg"},"content":"    public void showFilteredTasks(String searchString) {","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"arkarsg"},"content":"        // early return if there are no tasks initially","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"arkarsg"},"content":"        if (allTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"arkarsg"},"content":"            dukeIo.notifyZeroHits();","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"arkarsg"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"arkarsg"},"content":"        List\u003cTask\u003e searchResults \u003d allTasks.stream()","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"arkarsg"},"content":"                                            .filter(t -\u003e t.toString().contains(searchString))","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"arkarsg"},"content":"                                            .collect(Collectors.toList());  ","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"arkarsg"},"content":"        if (searchResults.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"arkarsg"},"content":"            dukeIo.notifyZeroHits();","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"arkarsg"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"arkarsg"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"arkarsg"},"content":"            dukeIo.showFiltered(searchResults);","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"arkarsg"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"arkarsg":118}},{"path":"src/main/java/duke/Tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.Tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":" * The class representing a ToDo task","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"    private static final String FORMAT \u003d \"todo {task name}\";","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"     * The constructor to initialise a ToDo task object with the given description.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"     * @param desc Description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"    public ToDo(String desc) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"        super(desc);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"    ","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"     * User friendly guide to help users in case of InvalidCommandException","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"     * @return String format of a valid ToDo command.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"    public static String showFormat() {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"        return \"Create a `todo` with: \" + FORMAT;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"     * User friendly interpretation of ToDo task object.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"     * Displays Task type, isDone status and description.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"arkarsg":35}},{"path":"src/main/java/duke/utils/DukeIo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.utils;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import java.util.List;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":" * Formatter class to format outputs to users\u0027 terminal.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"public class DukeIo {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"    private static final String INPUT_PROMPT \u003d \"MyDuke \u003e    \"; ","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"    private static final String LOGO \u003d  \" ____        _        \\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"                                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"                                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"                                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"                                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    ","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"    private static final String SEPERATOR \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"    private static final String CMD_LIST \u003d SEPERATOR","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"                                         + \"[list] : Show a list of all tasks currently\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"                                         + \"[todo] : Add a to-do task\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"                                         + \"[deadline] : Add a task to be completed by a date\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"                                         + \"[event] : Add an event from start time to end time\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"                                         + \"[mark] : Mark a task as completed\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"                                         + \"[unmark] : Unmark a completed task\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"                                         + \"[delete] : Delete a task from the list\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"                                         + SEPERATOR;","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"    private static final String REPLY \u003d \"|    \";","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"    ","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"    ","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"    private static final String HELLO \u003d REPLY + \"Hello from\\n\" ","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"                                        + SEPERATOR","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"                                        + LOGO","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"                                        + SEPERATOR","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"                                        + REPLY + \"What\u0027s on your mind today?\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"                                        + SEPERATOR;","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"    private static final String SAVE_SUCCESS \u003d \"Successfully saved all tasks\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"    private static final String SAVE_FAILURE \u003d \"FAILED TO SAVE ALL TASKS\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"    ","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"    private static final String QUIT \u003d SEPERATOR ","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"                                    + REPLY + \"Quitting Duke...\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"                                    + REPLY + \"See you soon!\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"                                    + SEPERATOR;","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"    ","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"     * Displays message on screen, writes each String as a newline to standard output.","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"     * @param String custom message to echo","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"    public void echoMessage(String message) {","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"        System.out.println(message);","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"     * Displays greeting message for Duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"    public void printHello() {","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"        System.out.print(HELLO);","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"     * Displays exit message upon quit.","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"arkarsg"},"content":"    public void printQuit() {","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"arkarsg"},"content":"        System.out.print(QUIT);","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"arkarsg"},"content":"     * Displays an indicator to promptuser inputs.","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"arkarsg"},"content":"    public void showPrompt() {","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"arkarsg"},"content":"        System.out.print(INPUT_PROMPT);","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"arkarsg"},"content":"     * Displays a success toast message upon addition of a Task to TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"arkarsg"},"content":"     * @param t Task object and its inherited classes.","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"arkarsg"},"content":"    public void notifySuccessAdd(Task t) {","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"arkarsg"},"content":"        System.out.println(SEPERATOR","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"arkarsg"},"content":"                + REPLY + \"Successfully added: \" + t.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"arkarsg"},"content":"     * Displays a success toast message upon updating the state of the task to \"Completed\".","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"arkarsg"},"content":"     * @param t Task obejct and its inherited classes.","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"arkarsg"},"content":"    public void notifySuccessComplete(Task t) {","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"arkarsg"},"content":"        System.out.println(SEPERATOR","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"arkarsg"},"content":"                + REPLY + \"Successfully completed: \" + t.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"arkarsg"},"content":"     * Displays a success toast upon updating the state from \"Completed\" to \"Incomplete\".","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"arkarsg"},"content":"     *  ","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"arkarsg"},"content":"     * @param t Task object and its inherited classes.","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"arkarsg"},"content":"    public void notifyUnmark(Task t) {","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"arkarsg"},"content":"        System.out.println(SEPERATOR","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"arkarsg"},"content":"                + REPLY + \"Unmarked task: \" + t.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"arkarsg"},"content":"     * Displays an error toast when user tries to mark an already marked Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"arkarsg"},"content":"     * @param t Task object and its inherited classes.","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"arkarsg"},"content":"    public void nofifyMarkFail(Task t) {","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"arkarsg"},"content":"        System.out.println(SEPERATOR","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"arkarsg"},"content":"            + REPLY + \"Cannot mark completed task: \" + t.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"arkarsg"},"content":"     * Displays error toast when user tries to unmark an already unmarked Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"arkarsg"},"content":"     * @param t Task object and its inherited classes.","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"arkarsg"},"content":"    public void notifyUnmarkFail(Task t) {","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"arkarsg"},"content":"        System.out.println(SEPERATOR ","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"arkarsg"},"content":"            + REPLY + \"Cannot unmark incomplete task: \" + t.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":133,"author":{"gitId":"arkarsg"},"content":"     * Displays the number of existing tasks in the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":135,"author":{"gitId":"arkarsg"},"content":"    public void showCount() {","lastModifiedDate":"2023-02-02"},{"lineNumber":136,"author":{"gitId":"arkarsg"},"content":"        String isare;","lastModifiedDate":"2023-02-02"},{"lineNumber":137,"author":{"gitId":"arkarsg"},"content":"        String s;","lastModifiedDate":"2023-02-02"},{"lineNumber":138,"author":{"gitId":"arkarsg"},"content":"        int taskCount \u003d TaskList.taskCount;","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"arkarsg"},"content":"        if (taskCount \u003e 1) {","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"arkarsg"},"content":"            isare \u003d \" are: \";","lastModifiedDate":"2023-02-02"},{"lineNumber":141,"author":{"gitId":"arkarsg"},"content":"            s \u003d \" tasks\";","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"arkarsg"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"arkarsg"},"content":"            isare \u003d \" is: \";","lastModifiedDate":"2023-02-02"},{"lineNumber":144,"author":{"gitId":"arkarsg"},"content":"            s \u003d \" task\";","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":146,"author":{"gitId":"arkarsg"},"content":"        System.out.println(REPLY + \"There\" + isare + Integer.toString(taskCount) ","lastModifiedDate":"2023-02-02"},{"lineNumber":147,"author":{"gitId":"arkarsg"},"content":"                            + s + \" in the list.\\n\" + SEPERATOR);","lastModifiedDate":"2023-02-02"},{"lineNumber":148,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":149,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":150,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":151,"author":{"gitId":"arkarsg"},"content":"     * Displays an indexed list of all existing tasks in the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":152,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":153,"author":{"gitId":"arkarsg"},"content":"    public void showAll() {","lastModifiedDate":"2023-02-02"},{"lineNumber":154,"author":{"gitId":"arkarsg"},"content":"        int taskCount \u003d TaskList.taskCount;","lastModifiedDate":"2023-02-02"},{"lineNumber":155,"author":{"gitId":"arkarsg"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e(TaskList.allTasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":156,"author":{"gitId":"arkarsg"},"content":"        System.out.println(SEPERATOR + \"All Tasks:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":157,"author":{"gitId":"arkarsg"},"content":"        for (Integer i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-02-02"},{"lineNumber":158,"author":{"gitId":"arkarsg"},"content":"            String showString \u003d \"   \"  + Integer.toString(i+1)+ \": \"","lastModifiedDate":"2023-02-02"},{"lineNumber":159,"author":{"gitId":"arkarsg"},"content":"                                + allTasks.get(i).toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":160,"author":{"gitId":"arkarsg"},"content":"            System.out.println(showString);     ","lastModifiedDate":"2023-02-02"},{"lineNumber":161,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":162,"author":{"gitId":"arkarsg"},"content":"        System.out.println(SEPERATOR);","lastModifiedDate":"2023-02-02"},{"lineNumber":163,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":164,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":165,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":166,"author":{"gitId":"arkarsg"},"content":"     * Displays an indexe list of filtered tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":167,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":168,"author":{"gitId":"arkarsg"},"content":"     * @param filteredTasks","lastModifiedDate":"2023-02-02"},{"lineNumber":169,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":170,"author":{"gitId":"arkarsg"},"content":"    public void showFiltered(List\u003cTask\u003e filteredTasks) {","lastModifiedDate":"2023-02-02"},{"lineNumber":171,"author":{"gitId":"arkarsg"},"content":"        int taskCount \u003d filteredTasks.size();","lastModifiedDate":"2023-02-02"},{"lineNumber":172,"author":{"gitId":"arkarsg"},"content":"        System.out.println(SEPERATOR + \"Find results:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":173,"author":{"gitId":"arkarsg"},"content":"        for (Integer i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-02-02"},{"lineNumber":174,"author":{"gitId":"arkarsg"},"content":"            String showString \u003d \"   \" + Integer.toString(i+1)+ \": \"","lastModifiedDate":"2023-02-02"},{"lineNumber":175,"author":{"gitId":"arkarsg"},"content":"                                + filteredTasks.get(i).toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":176,"author":{"gitId":"arkarsg"},"content":"            System.out.println(showString);","lastModifiedDate":"2023-02-02"},{"lineNumber":177,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":178,"author":{"gitId":"arkarsg"},"content":"        System.out.println(SEPERATOR);","lastModifiedDate":"2023-02-02"},{"lineNumber":179,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":180,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":181,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":182,"author":{"gitId":"arkarsg"},"content":"     * Displays error toast when user inputs an Invalid Command.","lastModifiedDate":"2023-02-02"},{"lineNumber":183,"author":{"gitId":"arkarsg"},"content":"     * A section of valid commands guide is displayed in a new line.  ","lastModifiedDate":"2023-02-02"},{"lineNumber":184,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":185,"author":{"gitId":"arkarsg"},"content":"    public void showInvalidCommand() {","lastModifiedDate":"2023-02-02"},{"lineNumber":186,"author":{"gitId":"arkarsg"},"content":"        System.out.println(SEPERATOR","lastModifiedDate":"2023-02-02"},{"lineNumber":187,"author":{"gitId":"arkarsg"},"content":"                        + REPLY + \"Invalid Command!\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":188,"author":{"gitId":"arkarsg"},"content":"                        + CMD_LIST);","lastModifiedDate":"2023-02-02"},{"lineNumber":189,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":190,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":191,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":192,"author":{"gitId":"arkarsg"},"content":"     * Displays error toast upon Exception.","lastModifiedDate":"2023-02-02"},{"lineNumber":193,"author":{"gitId":"arkarsg"},"content":"     * @param e","lastModifiedDate":"2023-02-02"},{"lineNumber":194,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":195,"author":{"gitId":"arkarsg"},"content":"    public void showError(Exception e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":196,"author":{"gitId":"arkarsg"},"content":"        System.out.println(SEPERATOR + e.getMessage() + \"\\n\" + SEPERATOR);","lastModifiedDate":"2023-02-02"},{"lineNumber":197,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":198,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":199,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":200,"author":{"gitId":"arkarsg"},"content":"     * Displays success toast after loading TaskList from saved .txt file.","lastModifiedDate":"2023-02-02"},{"lineNumber":201,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":202,"author":{"gitId":"arkarsg"},"content":"    public void notifyLoad() {","lastModifiedDate":"2023-02-02"},{"lineNumber":203,"author":{"gitId":"arkarsg"},"content":"        System.out.println(\"Loaded successfully from previous session.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":204,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":205,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":206,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":207,"author":{"gitId":"arkarsg"},"content":"     * Displays success toast after saving TaskList upon quit.","lastModifiedDate":"2023-02-02"},{"lineNumber":208,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":209,"author":{"gitId":"arkarsg"},"content":"    public void notifySave() {","lastModifiedDate":"2023-02-02"},{"lineNumber":210,"author":{"gitId":"arkarsg"},"content":"        System.out.println(SAVE_SUCCESS);","lastModifiedDate":"2023-02-02"},{"lineNumber":211,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":212,"author":{"gitId":"arkarsg"},"content":"    ","lastModifiedDate":"2023-02-02"},{"lineNumber":213,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":214,"author":{"gitId":"arkarsg"},"content":"     * Displays failure toast upon save failure","lastModifiedDate":"2023-02-02"},{"lineNumber":215,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":216,"author":{"gitId":"arkarsg"},"content":"    public void notifySaveFailure() {","lastModifiedDate":"2023-02-02"},{"lineNumber":217,"author":{"gitId":"arkarsg"},"content":"        System.out.println(SAVE_FAILURE);","lastModifiedDate":"2023-02-02"},{"lineNumber":218,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":219,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":220,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":221,"author":{"gitId":"arkarsg"},"content":"     * Displays failure toast upon no find results","lastModifiedDate":"2023-02-02"},{"lineNumber":222,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":223,"author":{"gitId":"arkarsg"},"content":"    public void notifyZeroHits() {","lastModifiedDate":"2023-02-02"},{"lineNumber":224,"author":{"gitId":"arkarsg"},"content":"        System.out.println(SEPERATOR + \"No tasks found.\" + SEPERATOR);","lastModifiedDate":"2023-02-02"},{"lineNumber":225,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":226,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":227,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":228,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"arkarsg":228}},{"path":"src/main/java/duke/utils/MyDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.utils;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.util.List;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"import duke.DukeException.InvalidCommandException;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"import duke.Tasks.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"import duke.Tasks.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"import duke.Tasks.ToDo;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":" * Base handler class that accepts the chain of responsibility from Duke client requests.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":" * MyDuke processes the input commands or passes on the responsibility to","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":" * other classes in duke.utils or duke.DukeException.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"public class MyDuke {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"    private static DukeIo dukeIo \u003d new DukeIo();","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"    private static Storage storage \u003d new Storage();","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"    private static TaskList allTasks \u003d TaskList.ofNull();","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"    private static Map\u003cString, Consumer\u003cString[]\u003e\u003e cmdMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"     * Passes the chain of responsibility to DukeIo to display welcome message and","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"     * populates the commands.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"    public void init() {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"        dukeIo.printHello();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"        populateCommands();","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"     * Passes the chain of responsibility to DukeIo to display message upon quit.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"     * Storage accepts the chain of responsibility to save on quit.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"    public void quit() throws IOException {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"        if (allTasks.getTaskCount() \u003e 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"                storage.saveFrom(allTasks.getAllTasks());","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"            } catch (IOException i) {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"                dukeIo.notifySaveFailure();","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"        dukeIo.printQuit();","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"     * Accepts the chain of responsibility and run the commands.","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"     * @param tokens Array of String from user inputs","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"     * @param taskList TaskList object where all tasks are operated upon.","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"    public void exec(String[] tokens, TaskList taskList) throws InvalidCommandException {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"        allTasks \u003d taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"            cmdMap.get(tokens[0]).accept(tokens);","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"        } catch (NullPointerException n) {","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"            // Displays failure toast when unrecognised for invalid commands","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"            dukeIo.showInvalidCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"arkarsg"},"content":"     * Maps command String to the method that handles the command.","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"arkarsg"},"content":"    private void populateCommands() {","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"list\", (tokens) -\u003e dukeIo.showAll());","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"todo\", (tokens) -\u003e addTodo(tokens));","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"deadline\", (tokens) -\u003e addDeadline(tokens));","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"event\", (tokens) -\u003e addEvent(tokens));","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"mark\", (tokens) -\u003e toggle(tokens));","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"unmark\", (tokens) -\u003e toggle(tokens));","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"delete\", (tokens) -\u003e delete(tokens));","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"arkarsg"},"content":"        cmdMap.put(\"find\", (tokens) -\u003e find(tokens));","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"arkarsg"},"content":"    private void toggle(String[] tokens) {","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"arkarsg"},"content":"        int taskIndex \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"arkarsg"},"content":"            // Can we handle batch mark/unmark?","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"arkarsg"},"content":"            if (tokens.length \u003d\u003d 1 || tokens.length \u003e 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"arkarsg"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"arkarsg"},"content":"                    InvalidCommandException.MARK_FORMAT_EXCEPTION);","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"arkarsg"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"arkarsg"},"content":"            taskIndex \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"arkarsg"},"content":"            if (taskIndex \u003c\u003d 0 || taskIndex \u003e allTasks.getTaskCount()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"arkarsg"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"arkarsg"},"content":"                    InvalidCommandException.TASK_NOT_FOUND_EXCEPTION);","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"arkarsg"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"arkarsg"},"content":"        // NaN input from user to mark/unmark task","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"arkarsg"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"arkarsg"},"content":"            dukeIo.showError(new InvalidCommandException(","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"arkarsg"},"content":"                InvalidCommandException.MARK_FORMAT_EXCEPTION));","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"arkarsg"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"arkarsg"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"arkarsg"},"content":"            dukeIo.showError(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"arkarsg"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"arkarsg"},"content":"        Task task \u003d allTasks.getTask(taskIndex-1);","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"arkarsg"},"content":"        if (!task.isDone() \u0026\u0026 tokens[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"arkarsg"},"content":"            task.toggleDoneOrNot();","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"arkarsg"},"content":"            dukeIo.notifySuccessComplete(task); ","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"arkarsg"},"content":"        } else if (task.isDone() \u0026\u0026 tokens[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"arkarsg"},"content":"            task.toggleDoneOrNot();","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"arkarsg"},"content":"            dukeIo.notifyUnmark(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"arkarsg"},"content":"        } else if (!task.isDone() \u0026\u0026 tokens[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"arkarsg"},"content":"            dukeIo.notifyUnmarkFail(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"arkarsg"},"content":"        } else if (task.isDone() \u0026\u0026 tokens[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"arkarsg"},"content":"            dukeIo.nofifyMarkFail(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"arkarsg"},"content":"    private void addTodo(String[] tokens) {","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"arkarsg"},"content":"        // if input is only \"todo\"","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"arkarsg"},"content":"            if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"arkarsg"},"content":"                // raise invalid command","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"arkarsg"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"arkarsg"},"content":"                    InvalidCommandException.NAME_FORMAT_EXCEPTION ","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"arkarsg"},"content":"                    + \"\\n\" + ToDo.showFormat());","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"arkarsg"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"arkarsg"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"arkarsg"},"content":"            dukeIo.showError(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"arkarsg"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"arkarsg"},"content":"        String t \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"arkarsg"},"content":"        for (String s : tokens) {","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"arkarsg"},"content":"            if (!s.equals(\"todo\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"arkarsg"},"content":"                t +\u003d \" \" + s;","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"arkarsg"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"arkarsg"},"content":"        ToDo todo \u003d new ToDo(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"arkarsg"},"content":"        allTasks.addTask(todo);","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"arkarsg"},"content":"        dukeIo.notifySuccessAdd(todo);","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"arkarsg"},"content":"        dukeIo.showCount();","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"arkarsg"},"content":"    private void addDeadline(String[] tokens) {","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"arkarsg"},"content":"        List\u003cString\u003e t \u003d Arrays.asList(tokens);","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"arkarsg"},"content":"        int byIndex \u003d t.indexOf(\"/by\");","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"arkarsg"},"content":"            if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"arkarsg"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"arkarsg"},"content":"                    InvalidCommandException.ARG_FORMAT_EXCEPTION","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"arkarsg"},"content":"                    + \"\\n\" + Deadline.showFormat());","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"arkarsg"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"arkarsg"},"content":"            if (byIndex + 1 \u003d\u003d t.size()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"arkarsg"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"arkarsg"},"content":"                    InvalidCommandException.ARG_FORMAT_EXCEPTION","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"arkarsg"},"content":"                    + \"\\n\" + Deadline.showFormat());","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"arkarsg"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"arkarsg"},"content":"            if (byIndex \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"arkarsg"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"arkarsg"},"content":"                    InvalidCommandException.NAME_FORMAT_EXCEPTION","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"arkarsg"},"content":"                    + \"\\n\" + Deadline.showFormat());","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"arkarsg"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"arkarsg"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"arkarsg"},"content":"            dukeIo.showError(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"arkarsg"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":174,"author":{"gitId":"arkarsg"},"content":"        String desc \u003d String.join(\" \",t.subList(1, byIndex));","lastModifiedDate":"2023-01-29"},{"lineNumber":175,"author":{"gitId":"arkarsg"},"content":"        String byString \u003d String.join(\" \", t.subList(byIndex+1, t.size()));","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"arkarsg"},"content":"        Deadline d \u003d new Deadline(desc, byString);","lastModifiedDate":"2023-01-29"},{"lineNumber":177,"author":{"gitId":"arkarsg"},"content":"        allTasks.addTask(d);","lastModifiedDate":"2023-01-29"},{"lineNumber":178,"author":{"gitId":"arkarsg"},"content":"        dukeIo.notifySuccessAdd(d);","lastModifiedDate":"2023-01-29"},{"lineNumber":179,"author":{"gitId":"arkarsg"},"content":"        dukeIo.showCount();          ","lastModifiedDate":"2023-01-29"},{"lineNumber":180,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":181,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":182,"author":{"gitId":"arkarsg"},"content":"    private void addEvent(String[] tokens) {","lastModifiedDate":"2023-01-29"},{"lineNumber":183,"author":{"gitId":"arkarsg"},"content":"        List\u003cString\u003e t \u003d Arrays.asList(tokens);","lastModifiedDate":"2023-01-29"},{"lineNumber":184,"author":{"gitId":"arkarsg"},"content":"        int fromIndex \u003d t.indexOf(\"/from\"); int toIndex \u003d t.indexOf(\"/to\");","lastModifiedDate":"2023-01-29"},{"lineNumber":185,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":186,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":187,"author":{"gitId":"arkarsg"},"content":"            if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":188,"author":{"gitId":"arkarsg"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2023-01-29"},{"lineNumber":189,"author":{"gitId":"arkarsg"},"content":"                    InvalidCommandException.ARG_FORMAT_EXCEPTION","lastModifiedDate":"2023-01-29"},{"lineNumber":190,"author":{"gitId":"arkarsg"},"content":"                    + \"\\n\" + Event.showFomat());","lastModifiedDate":"2023-01-29"},{"lineNumber":191,"author":{"gitId":"arkarsg"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":192,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":193,"author":{"gitId":"arkarsg"},"content":"            if (fromIndex + 1 \u003d\u003d toIndex || toIndex + 1 \u003d\u003d t.size()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":194,"author":{"gitId":"arkarsg"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2023-01-29"},{"lineNumber":195,"author":{"gitId":"arkarsg"},"content":"                    InvalidCommandException.ARG_FORMAT_EXCEPTION","lastModifiedDate":"2023-01-29"},{"lineNumber":196,"author":{"gitId":"arkarsg"},"content":"                    + \"\\n\" + Event.showFomat());","lastModifiedDate":"2023-01-29"},{"lineNumber":197,"author":{"gitId":"arkarsg"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":198,"author":{"gitId":"arkarsg"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":199,"author":{"gitId":"arkarsg"},"content":"            dukeIo.showError(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":200,"author":{"gitId":"arkarsg"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":201,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":202,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":203,"author":{"gitId":"arkarsg"},"content":"        String desc \u003d String.join(\" \",t.subList(1, fromIndex));","lastModifiedDate":"2023-01-29"},{"lineNumber":204,"author":{"gitId":"arkarsg"},"content":"        String from \u003d String.join(\" \", t.subList(fromIndex+1, toIndex));","lastModifiedDate":"2023-01-29"},{"lineNumber":205,"author":{"gitId":"arkarsg"},"content":"        String to \u003d String.join(\" \", t.subList(toIndex+1, t.size()));","lastModifiedDate":"2023-01-29"},{"lineNumber":206,"author":{"gitId":"arkarsg"},"content":"        Event e \u003d new Event(desc, from, to);","lastModifiedDate":"2023-01-29"},{"lineNumber":207,"author":{"gitId":"arkarsg"},"content":"        allTasks.addTask(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":208,"author":{"gitId":"arkarsg"},"content":"        dukeIo.notifySuccessAdd(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":209,"author":{"gitId":"arkarsg"},"content":"        dukeIo.showCount();","lastModifiedDate":"2023-01-29"},{"lineNumber":210,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":211,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":212,"author":{"gitId":"arkarsg"},"content":"    private void delete(String[] tokens) {","lastModifiedDate":"2023-01-29"},{"lineNumber":213,"author":{"gitId":"arkarsg"},"content":"        int taskIndex \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":214,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":215,"author":{"gitId":"arkarsg"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":216,"author":{"gitId":"arkarsg"},"content":"            if (tokens.length \u003d\u003d 1 || tokens.length \u003e 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":217,"author":{"gitId":"arkarsg"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2023-01-29"},{"lineNumber":218,"author":{"gitId":"arkarsg"},"content":"                    InvalidCommandException.NULL_DELETE_EXCEPTION);","lastModifiedDate":"2023-01-29"},{"lineNumber":219,"author":{"gitId":"arkarsg"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":220,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":221,"author":{"gitId":"arkarsg"},"content":"            taskIndex \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":222,"author":{"gitId":"arkarsg"},"content":"            if (taskIndex \u003c\u003d 0 || taskIndex \u003e allTasks.getTaskCount()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":223,"author":{"gitId":"arkarsg"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2023-01-29"},{"lineNumber":224,"author":{"gitId":"arkarsg"},"content":"                    InvalidCommandException.TASK_NOT_FOUND_EXCEPTION);","lastModifiedDate":"2023-01-29"},{"lineNumber":225,"author":{"gitId":"arkarsg"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":226,"author":{"gitId":"arkarsg"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":227,"author":{"gitId":"arkarsg"},"content":"            dukeIo.showError(new InvalidCommandException(","lastModifiedDate":"2023-01-29"},{"lineNumber":228,"author":{"gitId":"arkarsg"},"content":"                InvalidCommandException.DELETE_FORMAT_EXCEPTION));","lastModifiedDate":"2023-01-29"},{"lineNumber":229,"author":{"gitId":"arkarsg"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":230,"author":{"gitId":"arkarsg"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":231,"author":{"gitId":"arkarsg"},"content":"            dukeIo.showError(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":232,"author":{"gitId":"arkarsg"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":233,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":234,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":235,"author":{"gitId":"arkarsg"},"content":"        System.out.println(allTasks.getTask(taskIndex-1).toString() + \" deleted.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":236,"author":{"gitId":"arkarsg"},"content":"        allTasks.deleteTask(taskIndex-1);","lastModifiedDate":"2023-01-29"},{"lineNumber":237,"author":{"gitId":"arkarsg"},"content":"        dukeIo.showCount();","lastModifiedDate":"2023-01-29"},{"lineNumber":238,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":239,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":240,"author":{"gitId":"arkarsg"},"content":"    private void find(String[] tokens) {","lastModifiedDate":"2023-02-01"},{"lineNumber":241,"author":{"gitId":"arkarsg"},"content":"        String searchString \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":242,"author":{"gitId":"arkarsg"},"content":"        for (String string : tokens) {","lastModifiedDate":"2023-02-01"},{"lineNumber":243,"author":{"gitId":"arkarsg"},"content":"            if (string.equals(\"find\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":244,"author":{"gitId":"arkarsg"},"content":"                continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":245,"author":{"gitId":"arkarsg"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":246,"author":{"gitId":"arkarsg"},"content":"            searchString +\u003d string;","lastModifiedDate":"2023-02-01"},{"lineNumber":247,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":248,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":249,"author":{"gitId":"arkarsg"},"content":"        allTasks.showFilteredTasks(searchString);","lastModifiedDate":"2023-02-01"},{"lineNumber":250,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":251,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"arkarsg":251}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.utils;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":" * Interpreter class to format user input into tokens","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"    private String[] tokens;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"     * Formats user input from standard input to String array","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"     * @return String array of tokens","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"    public String[] tokenise() {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"        this.tokens \u003d Parser.sc.nextLine().split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"        return this.tokens;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"    ","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"arkarsg":21}},{"path":"src/main/java/duke/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke.utils;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":" * A utility class that loads from an existing storage or creates a new .txt","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":" * file to store user\u0027s session.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"    private static DukeIo dukeIo \u003d new DukeIo();","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"    private ArrayList\u003cTask\u003e storedTasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    private FileInputStream fis;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"    private ObjectInputStream ois;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"    private FileOutputStream fos;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"    private ObjectOutputStream o;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"     * Reads byte stream from pre-existing .txt file.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"     * @return storedTasks ArrayList that is loaded from existing storage","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"     * @throws ClassNotFoundException","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, ClassNotFoundException {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"        fis \u003d new FileInputStream(\"./data/duke.txt\");","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"        ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"        this.storedTasks \u003d (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"        fis.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"        ois.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"        dukeIo.notifyLoad();","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"        return storedTasks; ","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"    }    ","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"     * Writes ArrayList of tasks as a Serialized byte stream into a .txt file.","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"     * If .txt file exists, changes are overwritten.","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"     * If the directory or .txt file does not exist, the directory and a new .txt file is created.","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"     * @param tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"    public void saveFrom(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"        // Only save if there are tasks in the ArrayList task","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"            /*","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"             * Creates \u0027data\u0027 directory by creating all parent directories first","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"             * if it does not exist.","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"             */","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"            Files.createDirectories(Paths.get(\"./data/\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"            /*","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"             * Creates a file output stream with the specified name if it exists or","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"             * creates a regular file if it does not exist.","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"             * Data is written from 0 offset, thereby overwritting previous saves. ","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"             */","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"            fos \u003d new FileOutputStream(\"./data/duke.txt\");","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"            o \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"            o.writeObject(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"            o.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"            fos.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"arkarsg"},"content":"            dukeIo.notifySave();","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"arkarsg"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"arkarsg":74}},{"path":"src/test/java/duke/DummyTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"public class DummyTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"    ","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"arkarsg":13}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import duke.Tasks.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"import duke.Tasks.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"import duke.Tasks.ToDo;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":" * Tests all public methods in TaskList","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"     * Tests the creation of an empty task list with constructor.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"arkarsg"},"content":"    public void nullTaskLsitTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"arkarsg"},"content":"        TaskList emptyTaskList \u003d TaskList.ofNull();","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"arkarsg"},"content":"        ArrayList\u003cTask\u003e actualTaskList \u003d emptyTaskList.getAllTasks();","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"arkarsg"},"content":"        ArrayList\u003cTask\u003e expectedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"arkarsg"},"content":"        assertEquals(expectedTaskList, actualTaskList);        ","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"arkarsg"},"content":"     * Tests the creation of a task list given an array","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"arkarsg"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"arkarsg"},"content":"    public void taskListTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"arkarsg"},"content":"        TaskList testedTaskList \u003d TaskList.ofNull();","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"arkarsg"},"content":"        ToDo t1 \u003d new ToDo(\"valid to-do\");","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"arkarsg"},"content":"        Deadline d1 \u003d new Deadline(\"valid deadline\", \"23/07/2023 1200\");","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"arkarsg"},"content":"        Event e1 \u003d new Event(\"valid Event\", \"02/03/2023 1100\", \"02/03/1300\");","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"arkarsg"},"content":"        testedTaskList.loadFrom(Arrays.asList(t1, d1, e1));","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"arkarsg"},"content":"        assertEquals(3, testedTaskList.getTaskCount());","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"arkarsg"},"content":"        assertEquals(t1, testedTaskList.getTask(0));","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"arkarsg"},"content":"        assertEquals(d1, testedTaskList.getTask(1));","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"arkarsg"},"content":"        assertEquals(e1 , testedTaskList.getTask(2));","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"arkarsg"},"content":"     * Tests if a task can be successfully added to TaskList","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"arkarsg"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"arkarsg"},"content":"    public void addTaskTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"arkarsg"},"content":"        TaskList testedTaskList \u003d TaskList.ofNull();","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"arkarsg"},"content":"        ToDo t1 \u003d new ToDo(\"valid to-do\");","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"arkarsg"},"content":"        Deadline d1 \u003d new Deadline(\"valid deadline\", \"23/07/2023 1200\");","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"arkarsg"},"content":"        Event e1 \u003d new Event(\"valid Event\", \"02/03/2023 1100\", \"02/03/1300\");","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"arkarsg"},"content":"        assertEquals(0, testedTaskList.getTaskCount());","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"arkarsg"},"content":"        testedTaskList.addTask(t1);","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"arkarsg"},"content":"        assertEquals(t1, testedTaskList.getTask(0));","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"arkarsg"},"content":"        testedTaskList.addTask(d1);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"arkarsg"},"content":"        assertEquals(d1, testedTaskList.getTask(1));","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"arkarsg"},"content":"        testedTaskList.addTask(e1);","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"arkarsg"},"content":"        assertEquals(e1, testedTaskList.getTask(2));","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"arkarsg"},"content":"     * Tests if a task can be deleted from TaskList","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"arkarsg"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"arkarsg"},"content":"    public void deleteTaskTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"arkarsg"},"content":"        TaskList testedTaskList \u003d TaskList.ofNull();","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"arkarsg"},"content":"        ToDo t1 \u003d new ToDo(\"valid to-do\");","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"arkarsg"},"content":"        Deadline d1 \u003d new Deadline(\"valid deadline\", \"23/07/2023 1200\");","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"arkarsg"},"content":"        Event e1 \u003d new Event(\"valid Event\", \"02/03/2023 1100\", \"02/03/1300\");","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"arkarsg"},"content":"        testedTaskList.addTask(t1);","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"arkarsg"},"content":"        testedTaskList.addTask(d1);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"arkarsg"},"content":"        testedTaskList.addTask(e1);","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"arkarsg"},"content":"        testedTaskList.deleteTask(0);","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"arkarsg"},"content":"        assertEquals(false, TaskList.allTasks.contains(t1));","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"arkarsg"},"content":"    }    ","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"arkarsg":85}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"import duke.Tasks.ToDo;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":" * Tests all public methods to create a ToDo task object","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"     * Tests a valid ToDo object creation with public constructor","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"    public void validToDoTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"arkarsg"},"content":"        ToDo todoTest \u003d new ToDo(\"val\");","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"arkarsg"},"content":"        String actualUi \u003d todoTest.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"arkarsg"},"content":"        String expectedUi \u003d  \"[T][ ] val\";","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"arkarsg"},"content":"        assertEquals(expectedUi, actualUi);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"arkarsg"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"arkarsg"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"arkarsg":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"arkarsg"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"arkarsg"},"content":"deadline retun /by June","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"arkarsg"},"content":"event project /from aug 6th /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"arkarsg"},"content":"todo join sports","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"arkarsg"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"arkarsg"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"arkarsg"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"arkarsg"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"arkarsg"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"arkarsg"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"arkarsg"},"content":"delete 3","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"arkarsg"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"arkarsg"},"content":"mark 0","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"arkarsg"},"content":"mark 10","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"arkarsg"},"content":"add","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"arkarsg"},"content":"blah","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"arkarsg"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"arkarsg"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"arkarsg":18}}]
