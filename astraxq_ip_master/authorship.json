[{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"T | 1 | read book","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"T | 1 | join sports club","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"astraxq":4}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":"import java.util.Set;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":"import Exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":"import Task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"import Task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"import Task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"import Task.ToDo;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":"import TextFileParser.TextFileParser;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":"/** ","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":" * \u003ch1\u003eDuke Chatbot\u003c/h1\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":" * The Duke chatbot is a bot that is capable to keep","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":" * track of tasks from the users. ","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"     * Commands that do not require any parameter.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"    private static Set\u003cString\u003e commandMapWithoutParam \u003d new HashSet\u003c\u003e(){{","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"        add(\"list\");","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"astraxq"},"content":"        add(\"bye\");","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"    }};","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"astraxq"},"content":"     * The entire command list that Duke is capable of responding to.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"astraxq"},"content":"    private static Set\u003cString\u003e commandMap \u003d new HashSet\u003c\u003e(){{","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"astraxq"},"content":"        add(\"list\");","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"astraxq"},"content":"        add(\"mark\");","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"astraxq"},"content":"        add(\"unmark\");","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"astraxq"},"content":"        add(\"todo\");","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"astraxq"},"content":"        add(\"deadline\");","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"astraxq"},"content":"        add(\"event\");","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"astraxq"},"content":"        add(\"delete\");","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"astraxq"},"content":"        add(\"bye\");","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"astraxq"},"content":"    }};","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"astraxq"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"astraxq"},"content":"    /** ","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"astraxq"},"content":"     * Returns a boolean value after checking if the string contains only numerical value.","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"astraxq"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"astraxq"},"content":"     * This method always return a boolean value, if it contains only numerical characters it will return","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"astraxq"},"content":"     * true else false.","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"astraxq"},"content":"     * @param str a string to be checked if its numerical","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"astraxq"},"content":"     * @return a boolean whether the string contains only numerical characters","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"astraxq"},"content":"    private static boolean isNumeric(String str) {","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"astraxq"},"content":"        try {  ","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"astraxq"},"content":"            Double.parseDouble(str);  ","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"astraxq"},"content":"            return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"astraxq"},"content":"        } catch(NumberFormatException e){  ","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"astraxq"},"content":"            return false;  ","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"astraxq"},"content":"        }  ","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"astraxq"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"astraxq"},"content":"    /** ","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"astraxq"},"content":"     * @param input an array of string elements that the user input via the Scanner object.","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"astraxq"},"content":"     * @return an array of string elements that the user input via the Scanner object.","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"astraxq"},"content":"     * @throws DukeException if it contains any illegal commands.","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"astraxq"},"content":"    public static String[] checkInput(String[] input) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"astraxq"},"content":"        //Empty commands","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"astraxq"},"content":"        if(input \u003d\u003d null) {","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"astraxq"},"content":"            throw new DukeException(0);","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"astraxq"},"content":"        //Invalid command","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"astraxq"},"content":"        if(!commandMap.contains(input[0]) || input.length \u003e 2 \u0026\u0026 (input[0].equals(\"mark\") || input[0].equals(\"unmark\") || input[0].equals(\"delete\"))) {","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"astraxq"},"content":"            throw new DukeException(1);","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"astraxq"},"content":"        //Empty parameters","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"astraxq"},"content":"        if(input.length \u003d\u003d 1 \u0026\u0026 !commandMapWithoutParam.contains(input[0])) {","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"astraxq"},"content":"            throw new DukeException(2);","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"astraxq"},"content":"        //Non-numerical parameters","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"astraxq"},"content":"        if(input[0].equals(\"mark\") || input[0].equals(\"unmark\") || input[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"astraxq"},"content":"            if(!isNumeric(input[1])) throw new DukeException(3); ","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"astraxq"},"content":"        //Missing by, from or to","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"astraxq"},"content":"        if(input[0].equals(\"deadline\") || input[0].equals(\"event\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"astraxq"},"content":"            boolean hasBy \u003d false, hasFrom \u003d false, hasTo \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"astraxq"},"content":"            for (String s : input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"astraxq"},"content":"                if(s.equals(\"/by\")) hasBy \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"astraxq"},"content":"                if(s.equals(\"/from\")) hasFrom \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"astraxq"},"content":"                if(s.equals(\"/to\")) hasTo \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"astraxq"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"astraxq"},"content":"            if((input[0].equals(\"deadline\") \u0026\u0026 !hasBy) || (input[0].equals(\"event\") \u0026\u0026 (!hasFrom || !hasTo))) {","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"astraxq"},"content":"                throw new DukeException(4);","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"astraxq"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"astraxq"},"content":"        return input;","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"astraxq"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"astraxq"},"content":"        Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"astraxq"},"content":"        ArrayList\u003cTask\u003e lists \u003d TextFileParser.readData();","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"astraxq"},"content":"        boolean loop \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"astraxq"},"content":"        String bracket \u003d \"\\t_______________________________________________________\";","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":124,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"astraxq"},"content":"        String welcomeMsg \u003d (\"Hello from\\n\" + logo + \"\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"astraxq"},"content":"        System.out.println(welcomeMsg);","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"astraxq"},"content":"        TextFileParser.readData();","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"astraxq"},"content":"        while (loop) {","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"astraxq"},"content":"            String[] input \u003d checkInput(inputScanner.nextLine().split(\" \", 10));","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"astraxq"},"content":"            System.out.println(bracket);","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"astraxq"},"content":"            switch(input[0]) {","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"astraxq"},"content":"            case \"list\":","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"astraxq"},"content":"                System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"astraxq"},"content":"                for(int i \u003d 0; i \u003c lists.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"astraxq"},"content":"                    int index \u003d i+1;","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"astraxq"},"content":"                    System.out.println(\"\\t \" + index + \". \" + lists.get(i).toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"astraxq"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"astraxq"},"content":"            case \"mark\": ","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"astraxq"},"content":"                Task markedTask \u003d lists.get(Integer.parseInt(input[1]) - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"astraxq"},"content":"                markedTask.setStatus(true);","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"astraxq"},"content":"                System.out.println(\"Nice! One Task Down!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"astraxq"},"content":"                System.out.println(\"\\t \" + markedTask.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"astraxq"},"content":"            case \"unmark\": ","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"astraxq"},"content":"                Task unmarkedTask \u003d lists.get(Integer.parseInt(input[1]) - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"astraxq"},"content":"                unmarkedTask.setStatus(false);","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"astraxq"},"content":"                System.out.println(\"I have unmarked the task as not done yet.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"astraxq"},"content":"                System.out.println(\"\\t \" + unmarkedTask.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"astraxq"},"content":"                break;    ","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"astraxq"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"astraxq"},"content":"                String tName \u003d String.join(\" \", Arrays.copyOfRange(input, 1, input.length));","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"astraxq"},"content":"                ToDo toDoObj \u003d new ToDo(tName);","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"astraxq"},"content":"                lists.add(toDoObj);","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"astraxq"},"content":"                System.out.println(\"\\tGot it. I\u0027ve added this task: \");","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"astraxq"},"content":"                System.out.println(\"\\t\\t \"+ toDoObj.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"astraxq"},"content":"                System.out.println(String.format(\"Now you have %d tasks in the list\", lists.size()));","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"astraxq"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"astraxq"},"content":"                int deadlineIndex \u003d 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":165,"author":{"gitId":"astraxq"},"content":"                for(int i \u003d 0; i \u003c input.length; i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"astraxq"},"content":"                    if(input[i].equals(\"/by\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":167,"author":{"gitId":"astraxq"},"content":"                        deadlineIndex \u003d i;","lastModifiedDate":"2023-01-19"},{"lineNumber":168,"author":{"gitId":"astraxq"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":169,"author":{"gitId":"astraxq"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":170,"author":{"gitId":"astraxq"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":171,"author":{"gitId":"astraxq"},"content":"                String dName \u003d String.join(\" \", Arrays.copyOfRange(input, 1, deadlineIndex));","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"astraxq"},"content":"                String dDate \u003d String.join(\" \", Arrays.copyOfRange(input, deadlineIndex + 1, input.length));","lastModifiedDate":"2023-01-19"},{"lineNumber":173,"author":{"gitId":"astraxq"},"content":"                Deadline deadlineObj \u003d new Deadline(dName, dDate);","lastModifiedDate":"2023-01-19"},{"lineNumber":174,"author":{"gitId":"astraxq"},"content":"                lists.add(deadlineObj);","lastModifiedDate":"2023-01-19"},{"lineNumber":175,"author":{"gitId":"astraxq"},"content":"                System.out.println(\"\\tGot it. I\u0027ve added this task: \");","lastModifiedDate":"2023-01-19"},{"lineNumber":176,"author":{"gitId":"astraxq"},"content":"                System.out.println(\"\\t\\t \"+ deadlineObj.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":177,"author":{"gitId":"astraxq"},"content":"                System.out.println(String.format(\"Now you have %d tasks in the list\", lists.size()));","lastModifiedDate":"2023-01-19"},{"lineNumber":178,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":179,"author":{"gitId":"astraxq"},"content":"            case \"event\":","lastModifiedDate":"2023-01-19"},{"lineNumber":180,"author":{"gitId":"astraxq"},"content":"                int fromIndex \u003d -1;","lastModifiedDate":"2023-01-19"},{"lineNumber":181,"author":{"gitId":"astraxq"},"content":"                int toIndex \u003d -1;","lastModifiedDate":"2023-01-19"},{"lineNumber":182,"author":{"gitId":"astraxq"},"content":"                for(int i \u003d 0; i \u003c input.length; i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":183,"author":{"gitId":"astraxq"},"content":"                    if(input[i].equals(\"/from\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":184,"author":{"gitId":"astraxq"},"content":"                        fromIndex \u003d i;","lastModifiedDate":"2023-01-19"},{"lineNumber":185,"author":{"gitId":"astraxq"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":186,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"astraxq"},"content":"                    if(input[i].equals(\"/to\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":188,"author":{"gitId":"astraxq"},"content":"                        toIndex \u003d i;","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"astraxq"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":190,"author":{"gitId":"astraxq"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":191,"author":{"gitId":"astraxq"},"content":"                String eName \u003d String.join(\" \", Arrays.copyOfRange(input, 1, fromIndex));","lastModifiedDate":"2023-01-19"},{"lineNumber":192,"author":{"gitId":"astraxq"},"content":"                String eFrom \u003d String.join(\" \", Arrays.copyOfRange(input, fromIndex + 1, toIndex));","lastModifiedDate":"2023-01-19"},{"lineNumber":193,"author":{"gitId":"astraxq"},"content":"                String eTo \u003d String.join(\" \", Arrays.copyOfRange(input, toIndex + 1, input.length));","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"astraxq"},"content":"                Event eventObj \u003d new Event(eName, eFrom, eTo);","lastModifiedDate":"2023-01-19"},{"lineNumber":195,"author":{"gitId":"astraxq"},"content":"                lists.add(eventObj);","lastModifiedDate":"2023-01-19"},{"lineNumber":196,"author":{"gitId":"astraxq"},"content":"                System.out.println(\"\\tGot it. I\u0027ve added this task: \");","lastModifiedDate":"2023-01-19"},{"lineNumber":197,"author":{"gitId":"astraxq"},"content":"                System.out.println(\"\\t\\t \"+ eventObj.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":198,"author":{"gitId":"astraxq"},"content":"                System.out.println(String.format(\"Now you have %d tasks in the list\", lists.size()));","lastModifiedDate":"2023-01-19"},{"lineNumber":199,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":200,"author":{"gitId":"astraxq"},"content":"            case \"delete\": ","lastModifiedDate":"2023-01-20"},{"lineNumber":201,"author":{"gitId":"astraxq"},"content":"                int deleteIndex \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":202,"author":{"gitId":"astraxq"},"content":"                Task deletedTask \u003d lists.get(deleteIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":203,"author":{"gitId":"astraxq"},"content":"                lists.remove(deleteIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":204,"author":{"gitId":"astraxq"},"content":"                System.out.println(\"Following Task has been deleted:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":205,"author":{"gitId":"astraxq"},"content":"                System.out.println(\"\\t \" + deletedTask.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":206,"author":{"gitId":"astraxq"},"content":"                System.out.println(String.format(\"Now you have %d tasks in the list\", lists.size()));","lastModifiedDate":"2023-01-20"},{"lineNumber":207,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":208,"author":{"gitId":"astraxq"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-19"},{"lineNumber":209,"author":{"gitId":"astraxq"},"content":"                System.out.println(\"\\tBye! See you soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":210,"author":{"gitId":"astraxq"},"content":"                loop \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":211,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":212,"author":{"gitId":"astraxq"},"content":"            default:","lastModifiedDate":"2023-01-19"},{"lineNumber":213,"author":{"gitId":"astraxq"},"content":"                String combString \u003d String.join(\" \", input);","lastModifiedDate":"2023-01-19"},{"lineNumber":214,"author":{"gitId":"astraxq"},"content":"                ToDo tdObj \u003d new ToDo(combString);","lastModifiedDate":"2023-01-19"},{"lineNumber":215,"author":{"gitId":"astraxq"},"content":"                lists.add(tdObj);","lastModifiedDate":"2023-01-19"},{"lineNumber":216,"author":{"gitId":"astraxq"},"content":"                System.out.println(\"\\tGot it. I\u0027ve added this task: \");","lastModifiedDate":"2023-01-19"},{"lineNumber":217,"author":{"gitId":"astraxq"},"content":"                System.out.println(\"\\t\\t \"+ tdObj.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":218,"author":{"gitId":"astraxq"},"content":"                System.out.println(String.format(\"Now you have %d tasks in the list\", lists.size()));","lastModifiedDate":"2023-01-19"},{"lineNumber":219,"author":{"gitId":"astraxq"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":220,"author":{"gitId":"astraxq"},"content":"            System.out.println(bracket);","lastModifiedDate":"2023-01-19"},{"lineNumber":221,"author":{"gitId":"astraxq"},"content":"        }catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":222,"author":{"gitId":"astraxq"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-19"},{"lineNumber":223,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":224,"author":{"gitId":"astraxq"},"content":"        ","lastModifiedDate":"2023-01-19"},{"lineNumber":225,"author":{"gitId":"astraxq"},"content":"        ","lastModifiedDate":"2023-01-19"},{"lineNumber":226,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":227,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":228,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":229,"author":{"gitId":"astraxq"},"content":"        inputScanner.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"astraxq":222,"-":9}},{"path":"src/main/java/Exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package Exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"/** ","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":" * An Exception class used to handle invalid commands where Duke is unable to respond to.","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"    private String message;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":"    /** ","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":"     * Constructor for the DukeException object.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":"    public DukeException(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":"        switch(index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"            /**","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"             * Handles cases where the command is not present.","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"             */    ","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"            case 0: ","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"                message \u003d \"Empty command, please key in a valid command.\";","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"            /**","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"             * Handles cases where the command is present but not valid.","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"             */    ","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"            case 1:","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"                message \u003d \"Invalid command structure, please key in a valid command.\";","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"            /**","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"astraxq"},"content":"             * Handles cases where the command is present but parameters are not present.","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"             */","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"astraxq"},"content":"            case 2:","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"astraxq"},"content":"                message \u003d \"Input parameters cannot be empty!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"astraxq"},"content":"            /**","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"astraxq"},"content":"             * Handles cases where the command and parameters are present but invalid parameter typing.","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"astraxq"},"content":"             */","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"astraxq"},"content":"            case 3: ","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"astraxq"},"content":"                message \u003d \"Input parameters must be numerical!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"astraxq"},"content":"            /**","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"astraxq"},"content":"             * Handles cases for deadline/event commands where the /by, /from or /to are missing.","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"astraxq"},"content":"             */","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"astraxq"},"content":"            case 4:","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"astraxq"},"content":"                message \u003d \"Missing /by, /from or /by parameters.\";","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"astraxq"},"content":"            default:","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"astraxq"},"content":"                message \u003d \"Unknown Error\";","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"astraxq"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"astraxq"},"content":"    /** ","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"astraxq"},"content":"     * @return a string explaining what kind of invalid input has been written.","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"astraxq"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"astraxq"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"astraxq"},"content":"        return \"System Error: \" + this.message;","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"astraxq":60}},{"path":"src/main/java/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"/** ","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":" * Represents a \u003ccode\u003etask\u003c/code\u003e object that contains a string holding the \u003ccode\u003edeadline\u003c/code\u003e.","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"    protected String deadline; ","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":"    /** ","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":"     * Constructor for the Deadline object.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":"    public Deadline(String name, String date) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":"        super(name);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"        this.deadline \u003d date;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"    /** ","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"     * @return a String containing the task type and deadline details. ","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"astraxq":29}},{"path":"src/main/java/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"/** ","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":" * Represents a \u003ccode\u003etask\u003c/code\u003e object that contains a string holding the \u003ccode\u003eevent\u003c/code\u003e time ","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":" * from a specific length stated by the user.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"    protected String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"    protected String to;    ","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":"    /** ","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"     * Constructor for the Event object.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":"    public Event(String name, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"    /** ","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"     * @return a String containing the task type and event details. ","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), from, to);","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"astraxq":29}},{"path":"src/main/java/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"/** ","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":" * Represents a \u003ccode\u003etask\u003c/code\u003e object that contains a string holding the \u003ccode\u003ename\u003c/code\u003e of the task","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":" * and the \u003ccode\u003estatus\u003c/code\u003e of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"    private String name;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":"    private boolean status;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"    /** ","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":"     * Constructor for the Task object.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"        this.status \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"    /** ","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"     * Sets the status field based on the input argument.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"     * @param status a boolean value that is used to change the status","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"astraxq"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"astraxq"},"content":"    /** ","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"astraxq"},"content":"     * @return a String containing the status of the task and the task name. ","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"astraxq"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"astraxq"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"astraxq"},"content":"        return String.format(\"[%s] %s\", this.status ? \"X\" : \" \", this.name);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"astraxq":40}},{"path":"src/main/java/Task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"/** ","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":" * Represents a \u003ccode\u003etask\u003c/code\u003e object with the todo tag into it.","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"    /** ","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"     * Constructor for the ToDo object.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"        super(name);","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"    /** ","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"     * @return a String containing the task type and todo details. ","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"astraxq":24}},{"path":"src/main/java/TextFileParser/TextFileParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package TextFileParser;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"import Task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"import Task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":"import Task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":"import Task.ToDo;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"import Utilities.FileCreate;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":"public class TextFileParser {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"    private static String folderPath \u003d \"data\";","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"    private static String filePath \u003d \"data/data.txt\";","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"    public static ArrayList\u003cTask\u003e readData() {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"            File f \u003d validateFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"        ","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"            while(s.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"                String unfilteredData \u003d s.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"                String[] data \u003d unfilteredData.split(\"\\\\|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"astraxq"},"content":"                Arrays.parallelSetAll(data, i -\u003e data[i].trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"astraxq"},"content":"                if (data[0].equals(\"T\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"astraxq"},"content":"                    ToDo toDoTask \u003d new ToDo(data[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"astraxq"},"content":"                    if (data[1].equals(\"1\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"astraxq"},"content":"                        toDoTask.setStatus(true);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"astraxq"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"astraxq"},"content":"                    list.add(toDoTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"astraxq"},"content":"                } else if (data[0].equals(\"D\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"astraxq"},"content":"                    Deadline deadlineTask \u003d new Deadline(data[2], data[3]);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"astraxq"},"content":"                    if (data[1].equals(\"1\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"astraxq"},"content":"                        deadlineTask.setStatus(true);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"astraxq"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"astraxq"},"content":"                    list.add(deadlineTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"astraxq"},"content":"                } else if (data[0].equals(\"E\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"astraxq"},"content":"                    Event eventTask \u003d new Event(data[2], data[3], \"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"astraxq"},"content":"                    if (data[1].equals(\"1\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"astraxq"},"content":"                        eventTask.setStatus(true);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"astraxq"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"astraxq"},"content":"                    list.add(eventTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"astraxq"},"content":"                } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"astraxq"},"content":"                    System.out.println(\"Invalid input in data.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"astraxq"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"astraxq"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"astraxq"},"content":"            s.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"astraxq"},"content":"        } catch(FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"astraxq"},"content":"            System.out.println(\"File not found.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"astraxq"},"content":"        } ","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"astraxq"},"content":"        return list;","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"astraxq"},"content":"    private static File validateFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"astraxq"},"content":"        File dataFolder \u003d new File(folderPath);","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"astraxq"},"content":"        File data \u003d new File(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"astraxq"},"content":"        if(!dataFolder.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"astraxq"},"content":"            FileCreate.createFolder(Paths.get(folderPath));","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"astraxq"},"content":"        if(!data.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"astraxq"},"content":"            return FileCreate.createFile(Paths.get(filePath));","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"astraxq"},"content":"        return data;","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"astraxq":79}},{"path":"src/main/java/Utilities/FileCreate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package Utilities;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":"public class FileCreate {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"    public static File createFile(Path path) {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"            Files.createFile(path);","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":"            File f \u003d new File(path.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":"            return f;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"        }catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":"            System.out.println(\"Do not have permission to create folder.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"        return null;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"    public static void createFolder(Path path) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"            Files.createDirectories(path);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"        }catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"            System.out.println(\"Do not have permission to create folder.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"astraxq":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"to do task 1","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"to do task 2","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"deadline task 3.23 /by 24 June 2022 8:00pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"event task 4.20 /from 22 June 2022 8:30am /to 29 June 2022 10:00pm","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"unmark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"astraxq":10}}]
