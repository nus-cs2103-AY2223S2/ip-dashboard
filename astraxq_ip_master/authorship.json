[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"astraxq":1,"-":40}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"import duke.duke_exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":"import duke.utility.parser.CommandMap;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":"import duke.utility.parser.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":"import duke.utility.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":"import duke.utility.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"import duke.utility.ui.UiMessage;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":" * \u003ch1\u003eDuke Chatbot\u003c/h1\u003e The Duke chatbot is a bot that is capable to keep track of tasks from the","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":" * users.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"     * Main function that creates and run the Duke Bot object.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"     * @param args","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"        Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"        Ui.welcomeMessage();","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"        TaskList list \u003d Storage.readData();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"astraxq"},"content":"        UiMessage response \u003d new UiMessage();","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"astraxq"},"content":"        while (response.TYPE !\u003d CommandMap.bye) {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"astraxq"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"astraxq"},"content":"                response \u003d Parser.readCommand(inputScanner.nextLine(), list);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"astraxq"},"content":"                ui.load(response, list);","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"astraxq"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"astraxq"},"content":"                System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"astraxq"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"astraxq"},"content":"            Storage.writeData(list);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"astraxq"},"content":"        inputScanner.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"astraxq":41,"-":4}},{"path":"src/main/java/duke/duke_exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package duke.duke_exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":" * An Exception class used to handle invalid commands where Duke is unable to respond to.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"    private String message;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":"     * Constructor for the DukeException object.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":"    public DukeException(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":"        switch (index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"            /**","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"             * Handles cases where the command is not present.","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"             */","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"            case 0:","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"                message \u003d \"Empty command, please key in a valid command.\";","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"            /**","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"             * Handles cases where the command is present but not valid.","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"             */","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"            case 1:","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"                message \u003d \"Invalid command structure, please key in a valid command.\";","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"            /**","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"astraxq"},"content":"             * Handles cases where the command is present but parameters are not present.","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"             */","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"astraxq"},"content":"            case 2:","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"astraxq"},"content":"                message \u003d \"Input parameters cannot be empty!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"astraxq"},"content":"            /**","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"astraxq"},"content":"             * Handles cases where the command and parameters are present but invalid parameter","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"astraxq"},"content":"             * typing.","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"astraxq"},"content":"             */","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"astraxq"},"content":"            case 3:","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"astraxq"},"content":"                message \u003d \"Input parameters must be numerical!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"astraxq"},"content":"            /**","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"astraxq"},"content":"             * Handles cases for deadline/event commands where the /by, /from or /to are missing.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"astraxq"},"content":"             */","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"astraxq"},"content":"            case 4:","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"astraxq"},"content":"                message \u003d \"Missing /by, /from or /by parameters.\";","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"astraxq"},"content":"            default:","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"astraxq"},"content":"                message \u003d \"Unknown Error\";","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"astraxq"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"astraxq"},"content":"        this.message \u003d msg;","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"astraxq"},"content":"     * @return a string explaining what kind of invalid input has been written.","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"astraxq"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"astraxq"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"astraxq"},"content":"        return \"System Error: \" + this.message;","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"astraxq":64}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package duke.tasklist;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":"import java.util.List;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":"import duke.duke_exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"import duke.tasklist.task_types.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":" * Represents a \u003ccode\u003eTaskList\u003c/code\u003e object that holds an ArrayList of Tasks together with CRUD","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":" * operations.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"    private static DukeException invalidIndex \u003d new DukeException(\"Invalid index keyed.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"    public TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e(list);","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"     * Adds a task into the ArrayList.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"astraxq"},"content":"     * @param task the added task","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"astraxq"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"astraxq"},"content":"        list.add(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"astraxq"},"content":"     * Returns a task from the ArrayList based on the given index.","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"astraxq"},"content":"     * @param index the index of the ArrayList.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"astraxq"},"content":"     * @return a Task object based on the current index of the ArrayList","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"astraxq"},"content":"     * @throws DukeException if the index is out of bounds.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"astraxq"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"astraxq"},"content":"            return list.get(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"astraxq"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"astraxq"},"content":"            throw invalidIndex;","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"astraxq"},"content":"     * Deletes a task from the ArrayList based on the given index.","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"astraxq"},"content":"     * @param index the index of the ArrayList.","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"astraxq"},"content":"     * @throws DukeException if the index is out of bounds.","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"astraxq"},"content":"    public void deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"astraxq"},"content":"            list.remove(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"astraxq"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"astraxq"},"content":"            throw invalidIndex;","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"astraxq"},"content":"     * Marks a task from the ArrayList based on the given index.","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"astraxq"},"content":"     * @param index the index of the ArrayList.","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"astraxq"},"content":"     * @throws DukeException if the index is out of bounds.","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"astraxq"},"content":"    public void markedTask(int index) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"astraxq"},"content":"            list.get(index).setStatus(true);","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"astraxq"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"astraxq"},"content":"            throw invalidIndex;","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"astraxq"},"content":"     * Unmarks a task from the ArrayList based on the given index.","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"astraxq"},"content":"     * @param index the index of the ArrayList.","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"astraxq"},"content":"     * @throws DukeException if the index is out of bounds.","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"astraxq"},"content":"    public void unmarkedTask(int index) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"astraxq"},"content":"            list.get(index).setStatus(false);","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"astraxq"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"astraxq"},"content":"            throw invalidIndex;","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"astraxq"},"content":"     * Returns a String message showing how many tasks you have left in your list.","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"astraxq"},"content":"     * @return a String message showing the number of tasks you have left in your list.","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"astraxq"},"content":"    public String getTotal() {","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"astraxq"},"content":"        return String.format(\"Now you have %d tasks in the list\\n\", list.size());","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"astraxq"},"content":"     * Returns list size.","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"astraxq"},"content":"     * @return a int containing the size number of the list.","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"astraxq"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"astraxq"},"content":"        return list.size();","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"astraxq"},"content":"    public TaskList filter(String name) {","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"astraxq"},"content":"        Stream\u003cTask\u003e taskStream \u003d this.list.stream();","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"astraxq"},"content":"        return new TaskList(taskStream.filter(task -\u003e task.getName().contains(name))","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"astraxq"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"astraxq"},"content":"     * Returns a string of every element in the list","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"astraxq"},"content":"     * @return a String containing every task in the list.","lastModifiedDate":"2023-02-02"},{"lineNumber":133,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"astraxq"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"astraxq"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"astraxq"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"astraxq"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"astraxq"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"astraxq"},"content":"            str +\u003d \"\\n\" + index + \". \" + list.get(i).toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"astraxq"},"content":"        return str + \"\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"astraxq":144}},{"path":"src/main/java/duke/tasklist/task_types/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package duke.tasklist.task_types;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":"import duke.duke_exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":"import duke.utility.date.Date;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":" * Represents a \u003ccode\u003etask\u003c/code\u003e object that contains a string holding the \u003ccode\u003edeadline\u003c/code\u003e.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"    private static DukeException invalidDate \u003d","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":"            new DukeException(\"Invalid date input/format. [Format: yyyy-mm-dd] \");","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":"    protected Date deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"     * Constructor for the Deadline object.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"    public Deadline(String name, String date) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"        super(name);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"            this.deadline \u003d new Date(date);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"            throw invalidDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"astraxq"},"content":"     * @return a String containing the task type and deadline details.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"astraxq"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"astraxq"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"astraxq"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.deadline.dateToString());","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"astraxq":40}},{"path":"src/main/java/duke/tasklist/task_types/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package duke.tasklist.task_types;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":" * Represents a \u003ccode\u003etask\u003c/code\u003e object that contains a string holding the \u003ccode\u003eevent\u003c/code\u003e time","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":" * from a specific length stated by the user.","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"    protected String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":"    protected String to;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":"     * Constructor for the Event object.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"    public Event(String name, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"     * @return a String containing the task type and event details.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), from, to);","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"astraxq":31}},{"path":"src/main/java/duke/tasklist/task_types/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package duke.tasklist.task_types;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":" * Represents a \u003ccode\u003etask\u003c/code\u003e object that contains a string holding the \u003ccode\u003ename\u003c/code\u003e of the","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":" * task and the \u003ccode\u003estatus\u003c/code\u003e of the task. Represents a \u003ccode\u003etask\u003c/code\u003e object that contains","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":" * a string holding the \u003ccode\u003ename\u003c/code\u003e of the task and the \u003ccode\u003estatus\u003c/code\u003e of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":"    protected String name;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":"    protected boolean status;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"     * Constructor for the Task object.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"        this.status \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"    public String getName() {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"        return this.name;","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"     * Sets the status field based on the input argument.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"astraxq"},"content":"     * @param status a boolean value that is used to change the status","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"astraxq"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"astraxq"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"astraxq"},"content":"     * @return a String containing the status of the task and the task name.","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"astraxq"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"astraxq"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"astraxq"},"content":"        return String.format(\"[%s] %s\", this.status ? \"X\" : \" \", this.name);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"astraxq":47}},{"path":"src/main/java/duke/tasklist/task_types/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package duke.tasklist.task_types;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":" * Represents a \u003ccode\u003etask\u003c/code\u003e object with the todo tag into it.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":"     * Constructor for the ToDo object.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":"        super(name);","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"     * @return a String containing the task type and todo details.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"astraxq":26}},{"path":"src/main/java/duke/utility/date/Date.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package duke.utility.date;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":" * Represents a \u003ccode\u003eDate\u003c/code\u003e object that holds a Local Date Object together with parsing","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":" * operations between a String and Date.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"public class Date implements Serializable {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":"    private static String format \u003d \"MMM dd yyyy\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":"    private LocalDate date;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"     * Constructor for the Date object.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"    public Date(String dateStr) throws DateTimeParseException {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"        this.date \u003d LocalDate.parse(dateStr);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"     * Returns a string of the Date object based on the \u003ccode\u003eformat\u003c/format\u003e field.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"     * @return a String from the date object.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"    public String dateToString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"astraxq"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"astraxq":34}},{"path":"src/main/java/duke/utility/parser/CommandMap.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package duke.utility.parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":" * Represents a \u003ccode\u003eCommandMap\u003c/code\u003e object that holds an enumeration of commands available for","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":" * the Duke bot.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"public enum CommandMap {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"    list, mark, unmark, delete, todo, deadline, event, find, bye","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"astraxq":12}},{"path":"src/main/java/duke/utility/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package duke.utility.parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"import duke.duke_exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":"import duke.tasklist.task_types.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":"import duke.tasklist.task_types.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":"import duke.tasklist.task_types.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":"import duke.tasklist.task_types.ToDo;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"import duke.utility.ui.UiMessage;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":" * Represents a \u003ccode\u003eParser\u003c/code\u003e object that perfroms the necessary operations based on the user","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":" * input.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"public class Parser {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"    private static DukeException wrongCommandFormat \u003d","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"            new DukeException(\"Wrong command format inserted.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"    private static DukeException noNumericParam \u003d","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"            new DukeException(\"Parameter is not a numerical value.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"    private static DukeException noSpecialParam \u003d","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"            new DukeException(\"Missing special param e.g /by, /from, /to\");","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"    private static DukeException emptyParam \u003d new DukeException(\"Empty parameter inserted.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"     * Prints the list of tasks stored in the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"     * @param command the command segments based on the user\u0027s input.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"astraxq"},"content":"     * @param list the TaskList to be displayed.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"astraxq"},"content":"     * @return UiMessage object containing what type of command to be printed out.","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"astraxq"},"content":"     * @throws DukeException if the command format is invalid.","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"astraxq"},"content":"    private static UiMessage printTasks(String[] command, TaskList list) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"astraxq"},"content":"        if (command.length \u003e 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"astraxq"},"content":"            throw wrongCommandFormat;","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"astraxq"},"content":"        return new UiMessage(CommandMap.list, null);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"astraxq"},"content":"     * Marks a task in the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"astraxq"},"content":"     * @param command the command segments based on the user\u0027s input.","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"astraxq"},"content":"     * @param list the list of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"astraxq"},"content":"     * @return UiMessage object containing what type of command to print out.","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"astraxq"},"content":"     * @throws DukeException if the command format is invalid or invalid index value.","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"astraxq"},"content":"    private static UiMessage markTask(String[] command, TaskList list) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"astraxq"},"content":"            if (command.length \u003e 2) {","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"astraxq"},"content":"                throw wrongCommandFormat;","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"astraxq"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"astraxq"},"content":"            int index \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"astraxq"},"content":"            list.markedTask(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"astraxq"},"content":"            return new UiMessage(CommandMap.mark, list.getTask(index));","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"astraxq"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"astraxq"},"content":"            throw noNumericParam;","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"astraxq"},"content":"     * Unmark a task from the list.","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"astraxq"},"content":"     * @param command the command segments based on the user\u0027s input.","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"astraxq"},"content":"     * @param list the list of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"astraxq"},"content":"     * @return UiMessage object containing what type of command to print out.","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"astraxq"},"content":"     * @throws DukeException if the command format is invalid or invalid index value.","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"astraxq"},"content":"    private static UiMessage unmarkTask(String[] command, TaskList list) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"astraxq"},"content":"            if (command.length \u003e 2) {","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"astraxq"},"content":"                throw wrongCommandFormat;","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"astraxq"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"astraxq"},"content":"            int index \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"astraxq"},"content":"            list.unmarkedTask(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"astraxq"},"content":"            return new UiMessage(CommandMap.unmark, list.getTask(index));","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"astraxq"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"astraxq"},"content":"            throw noNumericParam;","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"astraxq"},"content":"     * Deletes a task from the list based on the given index.","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"astraxq"},"content":"     * @param command the command segments based on the user\u0027s input.","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"astraxq"},"content":"     * @param list the list of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"astraxq"},"content":"     * @return UiMessage object containing what type of command to print out.","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"astraxq"},"content":"     * @throws DukeException if the command format is invalid or invalid index value.","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"astraxq"},"content":"    private static UiMessage deleteTask(String[] command, TaskList list) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"astraxq"},"content":"            if (command.length \u003e 2) {","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"astraxq"},"content":"                throw wrongCommandFormat;","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"astraxq"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"astraxq"},"content":"            int index \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"astraxq"},"content":"            Task deletedTask \u003d list.getTask(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"astraxq"},"content":"            list.deleteTask(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"astraxq"},"content":"            return new UiMessage(CommandMap.delete, deletedTask);","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"astraxq"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"astraxq"},"content":"            throw noNumericParam;","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"astraxq"},"content":"     * Terminates the bot program.","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"astraxq"},"content":"     * @return UiMessage object containing what type of command to print out.","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"astraxq"},"content":"    private static UiMessage closeProgram(String[] command) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"astraxq"},"content":"        if (command.length \u003e 1) {","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"astraxq"},"content":"            throw wrongCommandFormat;","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"astraxq"},"content":"        return new UiMessage(CommandMap.bye, null);","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"astraxq"},"content":"     * Creates a toDo object and adds it into the list.","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"astraxq"},"content":"     * @param command the command segments based on the user\u0027s input.","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"astraxq"},"content":"     * @param list the list of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"astraxq"},"content":"     * @return UiMessage object containing what type of command to print out.","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"astraxq"},"content":"     * @throws DukeException if the command format is invalid or does not have any parameter.","lastModifiedDate":"2023-02-02"},{"lineNumber":133,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"astraxq"},"content":"    private static UiMessage createToDo(String[] command, TaskList list) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"astraxq"},"content":"        if (command.length \u003e 2) {","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"astraxq"},"content":"            throw wrongCommandFormat;","lastModifiedDate":"2023-02-02"},{"lineNumber":137,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"astraxq"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"astraxq"},"content":"            throw emptyParam;","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"astraxq"},"content":"        Task toDoObj \u003d new ToDo(command[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"astraxq"},"content":"        list.addTask(toDoObj);","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"astraxq"},"content":"        return new UiMessage(CommandMap.todo, toDoObj);","lastModifiedDate":"2023-01-27"},{"lineNumber":147,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":148,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":149,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":150,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":151,"author":{"gitId":"astraxq"},"content":"     * Creates a Deadline object and adds it into the list.","lastModifiedDate":"2023-02-02"},{"lineNumber":152,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":153,"author":{"gitId":"astraxq"},"content":"     * @param command the command segments based on the user\u0027s input","lastModifiedDate":"2023-02-02"},{"lineNumber":154,"author":{"gitId":"astraxq"},"content":"     * @param list the list of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":155,"author":{"gitId":"astraxq"},"content":"     * @return UiMessage object containing what type of command to print out.","lastModifiedDate":"2023-02-02"},{"lineNumber":156,"author":{"gitId":"astraxq"},"content":"     * @throws DukeException if the command format is invalid or missing any special parameter (/by","lastModifiedDate":"2023-02-02"},{"lineNumber":157,"author":{"gitId":"astraxq"},"content":"     *         e.g)","lastModifiedDate":"2023-02-02"},{"lineNumber":158,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":159,"author":{"gitId":"astraxq"},"content":"    private static UiMessage createDeadline(String[] command, TaskList list) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":160,"author":{"gitId":"astraxq"},"content":"        if (command.length !\u003d 4) {","lastModifiedDate":"2023-01-27"},{"lineNumber":161,"author":{"gitId":"astraxq"},"content":"            throw wrongCommandFormat;","lastModifiedDate":"2023-02-02"},{"lineNumber":162,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":163,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":164,"author":{"gitId":"astraxq"},"content":"        if (!command[2].equals(\"/by\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":165,"author":{"gitId":"astraxq"},"content":"            throw noSpecialParam;","lastModifiedDate":"2023-01-27"},{"lineNumber":166,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":167,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":168,"author":{"gitId":"astraxq"},"content":"        Task deadlineObj \u003d new Deadline(command[1], command[3]);","lastModifiedDate":"2023-01-27"},{"lineNumber":169,"author":{"gitId":"astraxq"},"content":"        list.addTask(deadlineObj);","lastModifiedDate":"2023-01-27"},{"lineNumber":170,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":171,"author":{"gitId":"astraxq"},"content":"        return new UiMessage(CommandMap.deadline, deadlineObj);","lastModifiedDate":"2023-01-27"},{"lineNumber":172,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":173,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":174,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":175,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":176,"author":{"gitId":"astraxq"},"content":"     * Creates an Event object and adds it into the list.","lastModifiedDate":"2023-02-02"},{"lineNumber":177,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":178,"author":{"gitId":"astraxq"},"content":"     * @param command the command segments based on the user\u0027s input","lastModifiedDate":"2023-02-02"},{"lineNumber":179,"author":{"gitId":"astraxq"},"content":"     * @param list the list of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":180,"author":{"gitId":"astraxq"},"content":"     * @return UiMessage object containing what type of command to print out.","lastModifiedDate":"2023-02-02"},{"lineNumber":181,"author":{"gitId":"astraxq"},"content":"     * @throws DukeException if the command format is invalid or missing any special parameter (/by","lastModifiedDate":"2023-02-02"},{"lineNumber":182,"author":{"gitId":"astraxq"},"content":"     *         e.g)","lastModifiedDate":"2023-02-02"},{"lineNumber":183,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":184,"author":{"gitId":"astraxq"},"content":"    private static UiMessage createEvent(String[] command, TaskList list) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":185,"author":{"gitId":"astraxq"},"content":"        if (command.length !\u003d 6) {","lastModifiedDate":"2023-01-27"},{"lineNumber":186,"author":{"gitId":"astraxq"},"content":"            throw wrongCommandFormat;","lastModifiedDate":"2023-02-02"},{"lineNumber":187,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":188,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":189,"author":{"gitId":"astraxq"},"content":"        if (!command[2].equals(\"/from\") || !command[4].equals(\"/to\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":190,"author":{"gitId":"astraxq"},"content":"            throw noSpecialParam;","lastModifiedDate":"2023-01-27"},{"lineNumber":191,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":192,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":193,"author":{"gitId":"astraxq"},"content":"        Task eventObj \u003d new Event(command[1], command[3], command[5]);","lastModifiedDate":"2023-01-27"},{"lineNumber":194,"author":{"gitId":"astraxq"},"content":"        list.addTask(eventObj);","lastModifiedDate":"2023-01-27"},{"lineNumber":195,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":196,"author":{"gitId":"astraxq"},"content":"        return new UiMessage(CommandMap.event, eventObj);","lastModifiedDate":"2023-01-27"},{"lineNumber":197,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":198,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":199,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":200,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":201,"author":{"gitId":"astraxq"},"content":"    private static UiMessage findTasks(String[] command, TaskList list) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":202,"author":{"gitId":"astraxq"},"content":"        if (command.length \u003e 2) {","lastModifiedDate":"2023-02-02"},{"lineNumber":203,"author":{"gitId":"astraxq"},"content":"            throw wrongCommandFormat;","lastModifiedDate":"2023-02-02"},{"lineNumber":204,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":205,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":206,"author":{"gitId":"astraxq"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-02"},{"lineNumber":207,"author":{"gitId":"astraxq"},"content":"            throw emptyParam;","lastModifiedDate":"2023-02-02"},{"lineNumber":208,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":209,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":210,"author":{"gitId":"astraxq"},"content":"        String keyword \u003d command[1];","lastModifiedDate":"2023-02-02"},{"lineNumber":211,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":212,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":213,"author":{"gitId":"astraxq"},"content":"        return new UiMessage(CommandMap.find, new Task(keyword));","lastModifiedDate":"2023-02-02"},{"lineNumber":214,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":215,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":216,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":217,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":218,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":219,"author":{"gitId":"astraxq"},"content":"     * Reads the input of the user and parse the input accordingly.","lastModifiedDate":"2023-02-02"},{"lineNumber":220,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":221,"author":{"gitId":"astraxq"},"content":"     * @param input user input","lastModifiedDate":"2023-02-02"},{"lineNumber":222,"author":{"gitId":"astraxq"},"content":"     * @param list list of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":223,"author":{"gitId":"astraxq"},"content":"     * @return UiMessage object containing what type of command to print out.","lastModifiedDate":"2023-02-02"},{"lineNumber":224,"author":{"gitId":"astraxq"},"content":"     * @throws DukeException if invalid command keyword is typed.","lastModifiedDate":"2023-02-02"},{"lineNumber":225,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":226,"author":{"gitId":"astraxq"},"content":"    public static UiMessage readCommand(String input, TaskList list) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":227,"author":{"gitId":"astraxq"},"content":"        String[] command \u003d input.trim().split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":228,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":229,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":230,"author":{"gitId":"astraxq"},"content":"            switch (CommandMap.valueOf(command[0])) {","lastModifiedDate":"2023-01-27"},{"lineNumber":231,"author":{"gitId":"astraxq"},"content":"                case list:","lastModifiedDate":"2023-01-27"},{"lineNumber":232,"author":{"gitId":"astraxq"},"content":"                    return printTasks(command, list);","lastModifiedDate":"2023-01-27"},{"lineNumber":233,"author":{"gitId":"astraxq"},"content":"                case mark:","lastModifiedDate":"2023-01-27"},{"lineNumber":234,"author":{"gitId":"astraxq"},"content":"                    return markTask(command, list);","lastModifiedDate":"2023-01-27"},{"lineNumber":235,"author":{"gitId":"astraxq"},"content":"                case unmark:","lastModifiedDate":"2023-01-27"},{"lineNumber":236,"author":{"gitId":"astraxq"},"content":"                    return unmarkTask(command, list);","lastModifiedDate":"2023-01-27"},{"lineNumber":237,"author":{"gitId":"astraxq"},"content":"                case delete:","lastModifiedDate":"2023-01-27"},{"lineNumber":238,"author":{"gitId":"astraxq"},"content":"                    return deleteTask(command, list);","lastModifiedDate":"2023-01-27"},{"lineNumber":239,"author":{"gitId":"astraxq"},"content":"                case bye:","lastModifiedDate":"2023-01-27"},{"lineNumber":240,"author":{"gitId":"astraxq"},"content":"                    return closeProgram(command);","lastModifiedDate":"2023-02-02"},{"lineNumber":241,"author":{"gitId":"astraxq"},"content":"                case deadline:","lastModifiedDate":"2023-01-27"},{"lineNumber":242,"author":{"gitId":"astraxq"},"content":"                    return createDeadline(command, list);","lastModifiedDate":"2023-01-27"},{"lineNumber":243,"author":{"gitId":"astraxq"},"content":"                case event:","lastModifiedDate":"2023-01-27"},{"lineNumber":244,"author":{"gitId":"astraxq"},"content":"                    return createEvent(command, list);","lastModifiedDate":"2023-01-27"},{"lineNumber":245,"author":{"gitId":"astraxq"},"content":"                case find:","lastModifiedDate":"2023-02-02"},{"lineNumber":246,"author":{"gitId":"astraxq"},"content":"                    return findTasks(command, list);","lastModifiedDate":"2023-02-02"},{"lineNumber":247,"author":{"gitId":"astraxq"},"content":"                default:","lastModifiedDate":"2023-01-27"},{"lineNumber":248,"author":{"gitId":"astraxq"},"content":"                    return createToDo(command, list);","lastModifiedDate":"2023-01-27"},{"lineNumber":249,"author":{"gitId":"astraxq"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":250,"author":{"gitId":"astraxq"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":251,"author":{"gitId":"astraxq"},"content":"            throw new DukeException(\"Invalid command.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":252,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":253,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":254,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":255,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":256,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"astraxq":256}},{"path":"src/main/java/duke/utility/storage/FileCreate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package duke.utility.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":" * Represents a \u003ccode\u003eFilecReate\u003c/code\u003e object that contains methods to create files and folders","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":" * with the path specified.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":"public class FileCreate {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"     * Creates a file based on the given file path.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"     * @param path the file path.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"    public static void createFile(Path path) {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"            Files.createFile(path);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"            new File(path.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"            System.out.println(\"Do not have permission to create folder.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"astraxq"},"content":"     * Creates a folder based on the given path in the paraemter.","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"astraxq"},"content":"     * @param path the folder path","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"astraxq"},"content":"    public static void createFolder(Path path) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"astraxq"},"content":"            Files.createDirectories(path);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"astraxq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"astraxq"},"content":"            System.out.println(\"Do not have permission to create folder.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"astraxq":45}},{"path":"src/main/java/duke/utility/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package duke.utility.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":" * Represents a \u003ccode\u003eStorage\u003c/code\u003e object that contain method to write and read data from a file.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"public class Storage {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"    private static final String FOLDER_PATH \u003d \"src/main/java/duke/utility/storage/\";","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"    private static final String FILE_PATH \u003d \"src/main/java/duke/utility/storage/storage.txt\";","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"     * Reads data from the .txt file and wraps into a TaskList object.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"     * @return the list of tasks from the given .txt file.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"astraxq"},"content":"    public static TaskList readData() {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"astraxq"},"content":"            validateFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"astraxq"},"content":"            FileInputStream fileInput \u003d new FileInputStream(FILE_PATH);","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"astraxq"},"content":"            ObjectInputStream objInput \u003d new ObjectInputStream(fileInput);","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"astraxq"},"content":"            list \u003d (TaskList) objInput.readObject();","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"astraxq"},"content":"            objInput.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"astraxq"},"content":"            fileInput.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"astraxq"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"astraxq"},"content":"            System.out.println(\"File not found.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"astraxq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"astraxq"},"content":"            System.out.println(e + \"IO EXCEPTION\");","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"astraxq"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"astraxq"},"content":"            System.out.println(e + \"CLASS NOT FOUND\");","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"astraxq"},"content":"        return list \u003d\u003d null ? new TaskList() : list;","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"astraxq"},"content":"     * Writes data to the .txt file specified by FILE_PATH, saving the TaskList object as a whole.","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"astraxq"},"content":"     * @param list the list of tasks to be written into the .txt file.","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"astraxq"},"content":"    public static void writeData(TaskList list) {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"astraxq"},"content":"            FileOutputStream fileOutput \u003d new FileOutputStream(FILE_PATH);","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"astraxq"},"content":"            ObjectOutputStream objOutput \u003d new ObjectOutputStream(fileOutput);","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"astraxq"},"content":"            objOutput.writeObject(list);","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"astraxq"},"content":"            objOutput.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"astraxq"},"content":"            fileOutput.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"astraxq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"astraxq"},"content":"            System.out.println(\"Something went wrong: \" + e);","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"astraxq"},"content":"     * Checks if the relvant file/folder is created, creates it if it does not exist.","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"astraxq"},"content":"    private static void validateFile() {","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"astraxq"},"content":"        File data \u003d new File(FILE_PATH);","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"astraxq"},"content":"        if (data.exists()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"astraxq"},"content":"            return;","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"astraxq"},"content":"        FileCreate.createFolder(Paths.get(FOLDER_PATH));","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"astraxq"},"content":"        FileCreate.createFile(Paths.get(FILE_PATH));","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"astraxq"},"content":"        Storage.writeData(new TaskList());","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"astraxq":84}},{"path":"src/main/java/duke/utility/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package duke.utility.ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"import duke.utility.parser.CommandMap;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":" * Represents a \u003ccode\u003eUi\u003c/code\u003e object that prints out the the relevant Ui required.","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"public class Ui {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":"    private static final String BRACKETS \u003d","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":"            \"_______________________________________________________\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":"    private static String logo \u003d","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":"            \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\" + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"    private static String openingMessage \u003d \"Welcome to the Duke Bot.\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"     * Prints out the welcome message of the chat bot.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"    public static void welcomeMessage() {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"        System.out.println(openingMessage + logo);","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"     * Loads the relevant print lines based on the type of message set and the task in the","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"astraxq"},"content":"     * parameter.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"astraxq"},"content":"     * @param msg the UiMessage object that contains the message type and if applicable the task","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"astraxq"},"content":"     *        involved.","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"astraxq"},"content":"     * @param list the task list which handles every relevant task in hand.","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"astraxq"},"content":"    public void load(UiMessage msg, TaskList list) {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"astraxq"},"content":"        String ui \u003d BRACKETS;","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"astraxq"},"content":"        CommandMap type \u003d msg.TYPE;","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"astraxq"},"content":"        switch (type) {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"astraxq"},"content":"            case list:","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"astraxq"},"content":"                ui +\u003d \"\\n\" + list.getTotal() + \"\\n\" + list.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"astraxq"},"content":"            case mark:","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"astraxq"},"content":"                ui +\u003d \"Nice! One Task Down!\\n\" + msg.task.toString() + \"\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"astraxq"},"content":"            case unmark:","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"astraxq"},"content":"                ui +\u003d \"One more task added ):\\n\" + msg.task.toString() + \"\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"astraxq"},"content":"            case delete:","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"astraxq"},"content":"                ui +\u003d \"Deleted one task \\n\" + msg.task.toString() + \"\\n\" + list.getTotal();","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"astraxq"},"content":"            case bye:","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"astraxq"},"content":"                ui +\u003d \"Bye! See you soon!\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"astraxq"},"content":"            case find:","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"astraxq"},"content":"                TaskList filteredTasks \u003d list.filter(msg.task.getName());","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"astraxq"},"content":"                ui +\u003d \"\\nHere are the matching tasks in your list:\" + \"\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"astraxq"},"content":"                        + filteredTasks.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"astraxq"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"astraxq"},"content":"            default:","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"astraxq"},"content":"                ui +\u003d \"Added one task!\\n\" + msg.task.toString() + \"\\n\" + list.getTotal();","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"astraxq"},"content":"        ui +\u003d BRACKETS;","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"astraxq"},"content":"        System.out.println(ui);","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"astraxq":69}},{"path":"src/main/java/duke/utility/ui/UiMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package duke.utility.ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"import duke.tasklist.task_types.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"import duke.utility.parser.CommandMap;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":" * Represents a \u003ccode\u003eUiMessage\u003c/code\u003e object that contains a command type and the task involved in","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":" * the command operation.","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":" * ","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":" * @author Brian Quek","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":"public class UiMessage extends Ui {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"    public final CommandMap TYPE;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":"    protected Task task;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"     * Constructor for UiMessage object, default type is toDo","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"    public UiMessage() {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"        TYPE \u003d CommandMap.todo;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"     * Constructor for UiMessage object by taking in 2 parameters for command type and task","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"     * involved.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"     * ","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"     * @param type command type of the UiMessage","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"     * @param task task involved in the command","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"astraxq"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"    public UiMessage(CommandMap type, Task task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"astraxq"},"content":"        this.TYPE \u003d type;","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"astraxq"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"astraxq":35}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":"import duke.duke_exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":"import duke.tasklist.task_types.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":"import duke.tasklist.task_types.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"import duke.tasklist.task_types.ToDo;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"import duke.utility.parser.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"astraxq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"astraxq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"astraxq"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"astraxq"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"astraxq"},"content":"    public void taskTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"astraxq"},"content":"            TaskList list \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"astraxq"},"content":"            Parser.readCommand(\"todo test\", list);","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"astraxq"},"content":"            Task todo \u003d new ToDo(\"test\");","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"astraxq"},"content":"            assertEquals(list.getTask(0).toString(), todo.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"astraxq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"astraxq"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"astraxq"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"astraxq"},"content":"    public void markedTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"astraxq"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"astraxq"},"content":"            TaskList list \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"astraxq"},"content":"            Parser.readCommand(\"deadline test /by 2020-04-12\", list);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"astraxq"},"content":"            Parser.readCommand(\"mark 1\", list);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"astraxq"},"content":"            Task deadline \u003d new Deadline(\"test\", \"2020-04-12\");","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"astraxq"},"content":"            deadline.setStatus(true);","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"astraxq"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"astraxq"},"content":"            assertEquals(list.getTask(0).toString(), deadline.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"astraxq"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"astraxq"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"astraxq"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"astraxq"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"astraxq"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"astraxq":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"astraxq"},"content":"to do task 1","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"astraxq"},"content":"to do task 2","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"astraxq"},"content":"deadline task 3.23 /by 24 June 2022 8:00pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"astraxq"},"content":"event task 4.20 /from 22 June 2022 8:30am /to 29 June 2022 10:00pm","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"astraxq"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"astraxq"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"astraxq"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"astraxq"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"astraxq"},"content":"unmark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"astraxq"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"astraxq":10}},{"path":"src/main/java/duke/utility/storage/storage.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"astraxq":0}}]
