[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"# cbot.guitest.Duke project template","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"3. After that, locate the `src/main/java/cbot.guitest.Duke.java` file, right-click it, and choose `Run cbot.guitest.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"axmszr":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"    mainClassName \u003d \"cbot.Launcher\"","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"checkstyle {","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"    archiveBaseName \u003d \"cbot\"","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"axmszr":22,"-":39}},{"path":"data/cbot_save.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"T ;;   ;; wake up","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"D ;;   ;; sleep ;; 0001-01-01T00:00","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"E ;;   ;; sleep ;; 0001-01-01T00:00 ;; 0002-02-02T00:00","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"axmszr":3}},{"path":"src/main/java/cbot/Cbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import cbot.io.BadInputException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"import cbot.io.FileStuff;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import cbot.io.Parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"import cbot.io.PoorInputException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"import cbot.io.UI;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"import cbot.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":" * Your very own Personal Assistant Chatbot. Use Cbot to keep track of your tasks,","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":" * from deadlines to events, and even mark them as you complete them!","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"public class Cbot {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    private static final String PATH \u003d \"data/cbot_save.txt\";","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    private TaskList tl;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"    private final FileStuff fs;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"    private boolean isBye;","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"    private boolean prevWasBad;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"     * Constructs a fresh Cbot instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"    public Cbot() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"        this.fs \u003d new FileStuff(PATH);","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"        this.isBye \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"            this.tl \u003d fs.loadFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"            fs.makeFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"            this.tl \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"     * Returns true if the BYE Command has been called.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"     * @return true if BYE has been called.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"    public boolean isBye() {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"        return this.isBye;","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"     * Returns true if the previous Command threw an exception.","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"     * @return true if an exception was just thrown.","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"    public boolean isBad() {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"        return this.prevWasBad;","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"     * Returns Cbot\u0027s greeting.","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"     * @return Cbot\u0027s greeting.","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"     * @see UI#sayHi()","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"    public static String sayHi() {","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"        return UI.sayHi();","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"     * Processes the input against the current list of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"     * @param input The full user-given command.","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"axmszr"},"content":"     * @return Cbot\u0027s response to the input.","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"     * @see Parser","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"axmszr"},"content":"        String output;","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"axmszr"},"content":"        Parser p;","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"axmszr"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"axmszr"},"content":"            p \u003d new Parser(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"axmszr"},"content":"            if (p.isBye()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"axmszr"},"content":"                this.isBye \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"axmszr"},"content":"            output \u003d p.respond(tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"axmszr"},"content":"            this.prevWasBad \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"axmszr"},"content":"            if (p.needSave()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"axmszr"},"content":"                this.fs.saveFile(tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"axmszr"},"content":"        } catch (BadInputException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"axmszr"},"content":"            this.prevWasBad \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"axmszr"},"content":"            return UI.warnBad(e);","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"axmszr"},"content":"        } catch (PoorInputException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"axmszr"},"content":"            this.prevWasBad \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"axmszr"},"content":"            return UI.warn(e);","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"axmszr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"axmszr"},"content":"            this.prevWasBad \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"axmszr"},"content":"            return UI.warnTime();","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"axmszr"},"content":"        return output;","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"axmszr":104,"-":1}},{"path":"src/main/java/cbot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import cbot.gui.Main;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"public class Launcher {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"     * Launches the Cbot application.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"     * @param args Command-Line Arguments.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"     * @see cbot.gui.Main#start(Stage)","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"axmszr":20}},{"path":"src/main/java/cbot/gui/CbotBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.gui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"public class CbotBox extends HBox {","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    private Text dialog;","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"    private CbotBox(String text, Image img, String viewPath) {","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(viewPath));","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"        // Using a Text/TextFlow Node following @hingen\u0027s solution. Thank you!","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"        displayPicture.setClip(new Circle(50.0, 50.0, 50.0));","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"    private void flip() {","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"     * Constructs a CbotBox representing Cbot\u0027s response.","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"     * @param text Cbot\u0027s output.","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"     * @param img Cbot\u0027s image.","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"     * @return A new CbotBox, for Cbot.","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"    public static CbotBox getCbotDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"        var db \u003d new CbotBox(text, img, \"/view/CbotBox.fxml\");","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"        db.flip();","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"        return db;","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"axmszr":68}},{"path":"src/main/java/cbot/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.gui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import cbot.Cbot;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":" * A GUI for Cbot (!!) using FXML.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    private final Cbot cbot \u003d new Cbot();","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"     * Starts the Cbot application.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"     *         the application scene can be set. Applications may create other stages, if needed,","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"     *         but they will not be primary stages.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setCbot(cbot);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greetUser();","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"            stage.show();","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"axmszr":40}},{"path":"src/main/java/cbot/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.gui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import cbot.Cbot;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import cbot.io.UI;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    private static final Image USER_IMG \u003d new Image(MainWindow.class.getResourceAsStream(\"/images/MyUser.png\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    private static final Image CBOT_IMG \u003d new Image(MainWindow.class.getResourceAsStream(\"/images/MyCbot.png\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    private static final Image CBOT_BAD_IMG \u003d new Image(MainWindow.class.getResourceAsStream(\"/images/MyCbotBad.png\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"    private Cbot cbot;","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"     * Initializes the main window of the Cbot application.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"     * Sets the active Cbot.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"     * @param c The Cbot instance to be assigned to this application.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"    public void setCbot(Cbot c) {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"        cbot \u003d c;","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"     * Displays Cbot\u0027s friendly greeting.","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"     * @see Cbot#sayHi()","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"     * @see UI#sayHi()","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"    public void greetUser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"        dialogContainer.getChildren().add(CbotBox.getCbotDialog(Cbot.sayHi(), CBOT_IMG));","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"        String response \u003d cbot.getResponse(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"                UserBox.getUserDialog(input, USER_IMG),","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"                CbotBox.getCbotDialog(response, cbot.isBad() ? CBOT_BAD_IMG : CBOT_IMG)","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"        );","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"        if (cbot.isBye()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"axmszr":77}},{"path":"src/main/java/cbot/gui/UserBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.gui;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"public class UserBox extends HBox {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    private UserBox(String text, Image img, String viewPath) {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(viewPath));","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"        dialog.setPadding(new Insets(10.0));","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"        displayPicture.setClip(new Circle(50.0, 50.0, 50.0));","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"     * Constructs a UserBox representing the user\u0027s input.","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"     * @param text The user\u0027s input.","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"     * @param img The user\u0027s Image.","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"     * @return A new UserBox, for the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"    public static UserBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"        return new UserBox(text, img, \"/view/UserBox.fxml\");","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"axmszr":52}},{"path":"src/main/java/cbot/io/BadInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.io;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":" * Signals that the user input was improper, and likely erroneous.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"public class BadInputException extends PoorInputException {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"     * Constructs a BadInputException with the specified detail message.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"     * @param message The detail message.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"    public BadInputException(String message) {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"        super(message);","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"axmszr":16}},{"path":"src/main/java/cbot/io/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.io;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":" * A command type accepted by Cbot.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"public enum Command {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"    //CHECKSTYLE.OFF: MethodParamPad","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"    //CHECKSTYLE.OFF: SingleSpaceSeparator","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"    //NAME      (str,           hasText,    save),","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"    /** Ends the Cbot session. */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"    BYE         (\"bye\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"    /** Displays the current list of tasks. */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    LIST        (\"list\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    /** Marks the stipulated task as done. */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    MARK        (\"mark \",       true,       true),","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    /** Catches MARK calls with no input. */","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"    MARK_BAD    (\"mark\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"    /** Marks the stipulated task as not done. */","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"    UNMARK      (\"unmark \",     true,       true),","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"    /** Catches UNMARK calls with no input. */","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    UNMARK_BAD  (\"unmark\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"    /** Deletes the stipulated task from the list. */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"    DELETE      (\"delete \",     true,       true),","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"    /** Catches DELETE calls with no input. */","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"    DELETE_BAD  (\"delete\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"    /** Adds a To-Do task to the list. */","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"    TODO        (\"todo \",       true,       true),","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"    /** Catches TODO calls with no input. */","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"    TODO_BAD    (\"todo\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"    /** Adds a Deadline task to the list. */","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"    DEADLINE    (\"deadline \",   true,       true),","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"    /** Catches DEADLINE calls with no input. */","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"    DEADLINE_BAD(\"deadline\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"    /** Adds an Event task to the list. */","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"    EVENT       (\"event \",      true,       true),","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"    /** Catches EVENT calls with no input. */","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"    EVENT_BAD   (\"event\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"    /** Sorts the list by date and description. */","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"    SORT        (\"sort\",        false,      true),","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"    /** Displays the tasks that fall before the given date. */","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"    BEFORE      (\"before \",     true),","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"    /** Catches BEFORE calls with no input. */","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"    BEFORE_BAD  (\"before\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"    /** Displays the tasks that fall after the given date. */","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"    AFTER       (\"after \",      true),","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"    /** Catches AFTER calls with no input. */","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"    AFTER_BAD   (\"after\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"    /** Displays the tasks that match the given filter. */","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"    FILTER      (\"filter \",     true),","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"    /** Catches FILTER calls with no input. */","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"axmszr"},"content":"    FILTER_BAD  (\"filter\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"    /** Displays the tasks that contain the input. */","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"    FIND        (\"find \",       true),","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"axmszr"},"content":"    /** Catches FIND calls with no input. */","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"axmszr"},"content":"    FIND_BAD    (\"find\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"axmszr"},"content":"    /** Catches all other inputs. */","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"axmszr"},"content":"    NONE        (\"\");","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"axmszr"},"content":"    //CHECKSTYLE.ON: MethodParamPad","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"axmszr"},"content":"    //CHECKSTYLE.ON: SingleSpaceSeparator","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"axmszr"},"content":"    private final String str;","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"axmszr"},"content":"    private final boolean hasText;","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"axmszr"},"content":"    private final boolean needSave;","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"axmszr"},"content":"     * Constructs a Command type with the given keyword. The next two booleans are optional,","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"axmszr"},"content":"     * and default to false. Respectively, they specify whether the Command expects additional input","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"axmszr"},"content":"     * after the keyword, and whether the file needs to be saved after the Command is run.","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"axmszr"},"content":"     * @param str The command keyword.","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"axmszr"},"content":"     * @param bools (Optional) Whether more text after the keyword is expected, and","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"axmszr"},"content":"     *        whetrher the file needs to be saved after the command is run.","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"axmszr"},"content":"    Command(String str, boolean ... bools) {","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"axmszr"},"content":"        this.str \u003d str;","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"axmszr"},"content":"        this.hasText \u003d bools.length \u003e\u003d 1 \u0026\u0026 bools[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"axmszr"},"content":"        this.needSave \u003d bools.length \u003e\u003d 2 \u0026\u0026 bools[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"axmszr"},"content":"     * Returns true if the Command updates the list of tasks, thus calling for it to be saved.","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"axmszr"},"content":"     * @return Whether the Command warrants a file save.","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"axmszr"},"content":"    boolean needSave() {","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"axmszr"},"content":"        return this.needSave;","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"axmszr"},"content":"     * Returns the length of the keyword, including any whitespace after.","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"axmszr"},"content":"     * @return The length of the Command keyword.","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"axmszr"},"content":"    int getLen() {","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"axmszr"},"content":"        return this.str.length();","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"axmszr"},"content":"     * Returns true if the start of the given String matches the Command keyword.","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"axmszr"},"content":"     * e.g. \"mark 1\" matches the keyword \"mark \" in MARK.","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"axmszr"},"content":"     * @param input The text to check.","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"axmszr"},"content":"     * @return Whether the text means to call this Command.","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"axmszr"},"content":"     * @see Parser","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"axmszr"},"content":"    boolean matches(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":132,"author":{"gitId":"axmszr"},"content":"        if (this.hasText \u0026\u0026 input.length() \u003e getLen()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"axmszr"},"content":"            return input.substring(0, getLen()).toLowerCase().equals(this.str);","lastModifiedDate":"2023-01-27"},{"lineNumber":134,"author":{"gitId":"axmszr"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"axmszr"},"content":"            return input.toLowerCase().equals(this.str);","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"axmszr"},"content":"     * Extracts the body of the input. That is, the text that comes after the Command keyword.","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"axmszr"},"content":"     * @param input The full input.","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"axmszr"},"content":"     * @return The \u0027body\u0027 of the input.","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"axmszr"},"content":"    String getText(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"axmszr"},"content":"        if (this.hasText) {","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"axmszr"},"content":"            return input.substring(getLen()).trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":148,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"axmszr"},"content":"        return \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":154,"author":{"gitId":"axmszr"},"content":"     * Returns true if the Command expects body text but receives none.","lastModifiedDate":"2023-01-27"},{"lineNumber":155,"author":{"gitId":"axmszr"},"content":"     * e.g. \"mark  \" with no task number specified.","lastModifiedDate":"2023-01-27"},{"lineNumber":156,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":157,"author":{"gitId":"axmszr"},"content":"     * @param text The body text to check.","lastModifiedDate":"2023-01-27"},{"lineNumber":158,"author":{"gitId":"axmszr"},"content":"     * @return Whether there is missing body text, given the Command type.","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":160,"author":{"gitId":"axmszr"},"content":"    boolean isMissingText(String text) {","lastModifiedDate":"2023-02-03"},{"lineNumber":161,"author":{"gitId":"axmszr"},"content":"        return (this.hasText \u0026\u0026 text.length() \u003d\u003d 0);","lastModifiedDate":"2023-01-25"},{"lineNumber":162,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"axmszr":163}},{"path":"src/main/java/cbot/io/FileStuff.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.io;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"import cbot.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"import cbot.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"import cbot.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"import cbot.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":" * Manages save-file reading and writing.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"public class FileStuff {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    private final File file;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"     * Constructs a new instance to manage the save file at the given path.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"     * @param path Directory location (relative) of the save file.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    public FileStuff(String path) {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"        this.file \u003d new File(path);","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"     * Returns true if the file already exists.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"     * @return Whether the file already exists.","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"    boolean fileExists() {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"        return this.file.exists();","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"     * Creates the parent file and the save file itself, if either or both do not yet exist.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"    public void makeFile() {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"            this.file.getParentFile().mkdir();","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"            this.file.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"     * Writes the current state of the TaskList to the save file.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"     * @param tl The TaskList to save.","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"     * @see TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"    public void saveFile(TaskList tl) {","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"        if (!fileExists()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"            makeFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"            FileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"            fw.write(tl.makeFileFriendly());","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"            fw.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"     * Reads and loads the save file as a list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"     * @return The loaded list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"axmszr"},"content":"     * @throws FileNotFoundException If the save file does not exist in the expected location.","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"axmszr"},"content":"     * @see TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"axmszr"},"content":"    public TaskList loadFile() throws FileNotFoundException {","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"axmszr"},"content":"        Scanner s \u003d new Scanner(this.file);","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"axmszr"},"content":"        ArrayList\u003cTask\u003e tdl \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"axmszr"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"axmszr"},"content":"            String[] taskStr \u003d s.nextLine().split(Task.SEP);","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"axmszr"},"content":"            // type SEP done SEP desc SEP due/from SEP to","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"axmszr"},"content":"            boolean isDone \u003d taskStr[1].equals(Task.DONE_TRUE);","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"axmszr"},"content":"            String desc \u003d taskStr[2];","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"axmszr"},"content":"            switch (taskStr[0]) {","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"axmszr"},"content":"            case Task.TODO_SYMBOL:","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"axmszr"},"content":"                tdl.add(new Task(desc, isDone));","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"axmszr"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"axmszr"},"content":"            case Deadline.DEADLINE_SYMBOL:","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"axmszr"},"content":"                tdl.add(new Deadline(desc, LocalDateTime.parse(taskStr[3]), isDone));","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"axmszr"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"axmszr"},"content":"            case Event.EVENT_SYMBOL:","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"axmszr"},"content":"                tdl.add(new Event(desc, LocalDateTime.parse(taskStr[3]), LocalDateTime.parse(taskStr[4]), isDone));","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"axmszr"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"axmszr"},"content":"            default:","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"axmszr"},"content":"        return new TaskList(tdl);","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"axmszr":111}},{"path":"src/main/java/cbot/io/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.io;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"import cbot.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import cbot.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"import cbot.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"import cbot.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"import cbot.time.TimeStuff;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":" * Handles much of the parsing of user inputs.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"public class Parser {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    private Command c;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    private String text;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"     * Constructs a new instance to process the user\u0027s current input. Attempts to recognize the Command,","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"     * and the rest of the input body.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"     * @throws PoorInputException If the input command is not recognized.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"     * @see Command","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"    public Parser(String input) throws PoorInputException {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"        this.c \u003d null;","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"        this.text \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"        boolean matchFound \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"        if (input.contains(Task.SEP)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"            throw new BadInputException(\"Please avoid using: \\\"\" + Task.SEP + \"\\\"\");","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"        for (Command c : Command.values()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"            if (c.matches(input)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"                this.c \u003d c;","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"                this.text \u003d c.getText(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"                matchFound \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"        if (!matchFound) {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"            throw new PoorInputException(\"Sorry, I don\u0027t recognize that command :\u003c\");","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"     * Returns true if the stored Command is the BYE Command.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"     * @return true if the stored Command is BYE.","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"    public boolean isBye() {","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"        return (this.c \u003d\u003d Command.BYE);","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"     * Returns true if the stored Command requires the task list to be saved.","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"     * @return Whether the task list needs to be saved after the Command.","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"    public boolean needSave() {","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"        return this.c.needSave();","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"     * Processes the Command and the rest of the input. If needed, the TaskList is modified and the UI is given","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"axmszr"},"content":"     * outputs to print. The main bulk of Cbot\u0027s parsing is done here.","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"     * @param tl The current list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"     * @return The String response to the command.","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"axmszr"},"content":"     * @throws PoorInputException If the input text is improper or erroneous.","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"axmszr"},"content":"     * @throws DateTimeParseException If some provided datetime is not in a recognized format.","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"axmszr"},"content":"    public String respond(TaskList tl) throws PoorInputException, DateTimeParseException {","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"axmszr"},"content":"        String output;","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"axmszr"},"content":"        if (this.c.isMissingText(this.text)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"axmszr"},"content":"            throw new PoorInputException(\"That command needs an input\");","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"axmszr"},"content":"        switch (this.c) {","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"axmszr"},"content":"        case BYE:","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"axmszr"},"content":"            output \u003d UI.sayBye();","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"axmszr"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"axmszr"},"content":"        case LIST:","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"axmszr"},"content":"            if (tl.getCount() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"axmszr"},"content":"                output \u003d UI.say(\"Freedom! You have no tasks :D\");","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"axmszr"},"content":"            } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"axmszr"},"content":"                output \u003d UI.say(\"Here\u0027s what you have:\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"axmszr"},"content":"                        + UI.printMany(tl.listTasks());","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"axmszr"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"axmszr"},"content":"        case MARK:","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"axmszr"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"axmszr"},"content":"                int num \u003d Integer.parseInt(this.text);","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"axmszr"},"content":"                if (tl.notInRange(num)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"axmszr"},"content":"                    throw new PoorInputException(tl.rangeError(num));","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"axmszr"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"axmszr"},"content":"                output \u003d UI.say(tl.mark(num));","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"axmszr"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"axmszr"},"content":"                throw new BadInputException(\"Invalid index!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"axmszr"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"axmszr"},"content":"        case UNMARK:","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"axmszr"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"axmszr"},"content":"                int num \u003d Integer.parseInt(this.text);","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"axmszr"},"content":"                if (tl.notInRange(num)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"axmszr"},"content":"                    throw new PoorInputException(tl.rangeError(num));","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"axmszr"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"axmszr"},"content":"                output \u003d UI.say(tl.unmark(num));","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"axmszr"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"axmszr"},"content":"                throw new BadInputException(\"Invalid index!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"axmszr"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"axmszr"},"content":"        case DELETE:","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"axmszr"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"axmszr"},"content":"                int num \u003d Integer.parseInt(this.text);","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"axmszr"},"content":"                if (tl.notInRange(num)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"axmszr"},"content":"                    throw new PoorInputException(tl.rangeError(num));","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"axmszr"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"axmszr"},"content":"                output \u003d UI.say(tl.delTask(num));","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"axmszr"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"axmszr"},"content":"                throw new BadInputException(\"Invalid index!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"axmszr"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"axmszr"},"content":"        case TODO:","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"axmszr"},"content":"            output \u003d UI.say(tl.addTask(new Task(this.text)));","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"axmszr"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"axmszr"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-25"},{"lineNumber":150,"author":{"gitId":"axmszr"},"content":"            String byKeyword \u003d \"/by \";","lastModifiedDate":"2023-01-27"},{"lineNumber":151,"author":{"gitId":"axmszr"},"content":"            int byLength \u003d byKeyword.length();","lastModifiedDate":"2023-01-27"},{"lineNumber":152,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":153,"author":{"gitId":"axmszr"},"content":"            if (!this.text.contains(byKeyword)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":154,"author":{"gitId":"axmszr"},"content":"                // no /by","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"axmszr"},"content":"                throw new PoorInputException(\"Missing \\\"/by\\\" keyword\");","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"axmszr"},"content":"            int byIndex \u003d this.text.indexOf(byKeyword);","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"axmszr"},"content":"            if (byIndex \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"axmszr"},"content":"                // no desc","lastModifiedDate":"2023-01-25"},{"lineNumber":162,"author":{"gitId":"axmszr"},"content":"                throw new BadInputException(\"Missing deadline description\");","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"axmszr"},"content":"            } else if (byIndex + byLength \u003d\u003d this.text.length()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":164,"author":{"gitId":"axmszr"},"content":"                // no due date","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"axmszr"},"content":"                throw new BadInputException(\"Missing due date\");","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":167,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"axmszr"},"content":"            String dlDesc \u003d this.text.substring(0, byIndex);","lastModifiedDate":"2023-01-25"},{"lineNumber":169,"author":{"gitId":"axmszr"},"content":"            String dlDueStr \u003d this.text.substring(byIndex + byLength);","lastModifiedDate":"2023-01-27"},{"lineNumber":170,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":171,"author":{"gitId":"axmszr"},"content":"            LocalDateTime dlDue \u003d TimeStuff.parseDT(dlDueStr);","lastModifiedDate":"2023-01-25"},{"lineNumber":172,"author":{"gitId":"axmszr"},"content":"            output \u003d UI.say(tl.addTask(new Deadline(dlDesc, dlDue)));","lastModifiedDate":"2023-02-01"},{"lineNumber":173,"author":{"gitId":"axmszr"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":174,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":175,"author":{"gitId":"axmszr"},"content":"        case EVENT:","lastModifiedDate":"2023-01-25"},{"lineNumber":176,"author":{"gitId":"axmszr"},"content":"            String fromKeyword \u003d \"/from \";","lastModifiedDate":"2023-01-27"},{"lineNumber":177,"author":{"gitId":"axmszr"},"content":"            String toKeyword \u003d \"/to \";","lastModifiedDate":"2023-01-27"},{"lineNumber":178,"author":{"gitId":"axmszr"},"content":"            int fromLength \u003d fromKeyword.length();","lastModifiedDate":"2023-01-27"},{"lineNumber":179,"author":{"gitId":"axmszr"},"content":"            int toLength \u003d toKeyword.length();","lastModifiedDate":"2023-01-27"},{"lineNumber":180,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":181,"author":{"gitId":"axmszr"},"content":"            if (!this.text.contains(fromKeyword)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":182,"author":{"gitId":"axmszr"},"content":"                // no /from","lastModifiedDate":"2023-01-25"},{"lineNumber":183,"author":{"gitId":"axmszr"},"content":"                throw new PoorInputException(\"Missing \\\"/from\\\" keyword\");","lastModifiedDate":"2023-01-25"},{"lineNumber":184,"author":{"gitId":"axmszr"},"content":"            } else if (!this.text.contains(toKeyword)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":185,"author":{"gitId":"axmszr"},"content":"                // no /to","lastModifiedDate":"2023-01-25"},{"lineNumber":186,"author":{"gitId":"axmszr"},"content":"                throw new PoorInputException(\"Missing \\\"/to\\\" keyword\");","lastModifiedDate":"2023-01-25"},{"lineNumber":187,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":188,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":189,"author":{"gitId":"axmszr"},"content":"            int fromIndex \u003d this.text.indexOf(fromKeyword);","lastModifiedDate":"2023-01-27"},{"lineNumber":190,"author":{"gitId":"axmszr"},"content":"            int toIndex \u003d this.text.indexOf(toKeyword);","lastModifiedDate":"2023-01-27"},{"lineNumber":191,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":192,"author":{"gitId":"axmszr"},"content":"            if (toIndex \u003c fromIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":193,"author":{"gitId":"axmszr"},"content":"                // /to before /from","lastModifiedDate":"2023-01-25"},{"lineNumber":194,"author":{"gitId":"axmszr"},"content":"                throw new PoorInputException(\"\\\"/from\\\" before \\\"/to\\\", please!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":195,"author":{"gitId":"axmszr"},"content":"            } else if (fromIndex \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":196,"author":{"gitId":"axmszr"},"content":"                // no desc","lastModifiedDate":"2023-01-25"},{"lineNumber":197,"author":{"gitId":"axmszr"},"content":"                throw new BadInputException(\"Missing event description\");","lastModifiedDate":"2023-01-25"},{"lineNumber":198,"author":{"gitId":"axmszr"},"content":"            } else if (fromIndex + fromLength \u003e\u003d toIndex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":199,"author":{"gitId":"axmszr"},"content":"                // no start","lastModifiedDate":"2023-01-25"},{"lineNumber":200,"author":{"gitId":"axmszr"},"content":"                throw new BadInputException(\"Missing start date\");","lastModifiedDate":"2023-01-25"},{"lineNumber":201,"author":{"gitId":"axmszr"},"content":"            } else if (toIndex + toLength \u003d\u003d this.text.length()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":202,"author":{"gitId":"axmszr"},"content":"                // no end","lastModifiedDate":"2023-01-25"},{"lineNumber":203,"author":{"gitId":"axmszr"},"content":"                throw new BadInputException(\"Missing end date\");","lastModifiedDate":"2023-01-25"},{"lineNumber":204,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":205,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":206,"author":{"gitId":"axmszr"},"content":"            String eDesc \u003d this.text.substring(0, fromIndex);","lastModifiedDate":"2023-01-25"},{"lineNumber":207,"author":{"gitId":"axmszr"},"content":"            String eStartStr \u003d this.text.substring(fromIndex + fromLength, toIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":208,"author":{"gitId":"axmszr"},"content":"            String eEndStr \u003d this.text.substring(toIndex + toLength);","lastModifiedDate":"2023-01-27"},{"lineNumber":209,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":210,"author":{"gitId":"axmszr"},"content":"            LocalDateTime eStart \u003d TimeStuff.parseDT(eStartStr);","lastModifiedDate":"2023-01-25"},{"lineNumber":211,"author":{"gitId":"axmszr"},"content":"            LocalDateTime eEnd \u003d TimeStuff.parseDT(eEndStr);","lastModifiedDate":"2023-01-25"},{"lineNumber":212,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":213,"author":{"gitId":"axmszr"},"content":"            if (eStart.isAfter(eEnd)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":214,"author":{"gitId":"axmszr"},"content":"                throw new BadInputException(\"Hey! You have to start *before* you end...\");","lastModifiedDate":"2023-01-26"},{"lineNumber":215,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":216,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":217,"author":{"gitId":"axmszr"},"content":"            output \u003d UI.say(tl.addTask(new Event(eDesc, eStart, eEnd)));","lastModifiedDate":"2023-02-01"},{"lineNumber":218,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":219,"author":{"gitId":"axmszr"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":220,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":221,"author":{"gitId":"axmszr"},"content":"        case SORT:","lastModifiedDate":"2023-01-25"},{"lineNumber":222,"author":{"gitId":"axmszr"},"content":"            if (tl.getCount() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":223,"author":{"gitId":"axmszr"},"content":"                throw new PoorInputException(\"You have no tasks to sort :P\");","lastModifiedDate":"2023-01-25"},{"lineNumber":224,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":225,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":226,"author":{"gitId":"axmszr"},"content":"            tl.sort();","lastModifiedDate":"2023-01-25"},{"lineNumber":227,"author":{"gitId":"axmszr"},"content":"            output \u003d UI.say(\"Okay! I\u0027ve sorted your tasks by date:\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":228,"author":{"gitId":"axmszr"},"content":"                    + UI.printMany(tl.listTasks());","lastModifiedDate":"2023-02-01"},{"lineNumber":229,"author":{"gitId":"axmszr"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":230,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":231,"author":{"gitId":"axmszr"},"content":"        case BEFORE:","lastModifiedDate":"2023-01-25"},{"lineNumber":232,"author":{"gitId":"axmszr"},"content":"            if (tl.getCount() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":233,"author":{"gitId":"axmszr"},"content":"                throw new PoorInputException(\"Eh? You have no tasks to filter\");","lastModifiedDate":"2023-01-25"},{"lineNumber":234,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":235,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":236,"author":{"gitId":"axmszr"},"content":"            LocalDateTime bef \u003d TimeStuff.parseDT(this.text);","lastModifiedDate":"2023-01-25"},{"lineNumber":237,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":238,"author":{"gitId":"axmszr"},"content":"            ArrayList\u003cString\u003e arrBef \u003d tl.listFilter(t -\u003e","lastModifiedDate":"2023-01-25"},{"lineNumber":239,"author":{"gitId":"axmszr"},"content":"                    t.hasTime() \u0026\u0026 t.compareTo(new Deadline(\"\", bef)) \u003c 0);","lastModifiedDate":"2023-01-27"},{"lineNumber":240,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":241,"author":{"gitId":"axmszr"},"content":"            if (arrBef.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":242,"author":{"gitId":"axmszr"},"content":"                output \u003d UI.say(\"You don\u0027t have any tasks before \" + this.text);","lastModifiedDate":"2023-02-01"},{"lineNumber":243,"author":{"gitId":"axmszr"},"content":"            } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":244,"author":{"gitId":"axmszr"},"content":"                output \u003d UI.say(\"Here are your tasks before \" + this.text + \":\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":245,"author":{"gitId":"axmszr"},"content":"                        + UI.printMany(arrBef);","lastModifiedDate":"2023-02-01"},{"lineNumber":246,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":247,"author":{"gitId":"axmszr"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":248,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":249,"author":{"gitId":"axmszr"},"content":"        case AFTER:","lastModifiedDate":"2023-01-25"},{"lineNumber":250,"author":{"gitId":"axmszr"},"content":"            if (tl.getCount() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":251,"author":{"gitId":"axmszr"},"content":"                throw new PoorInputException(\"Eh? You have no tasks to filter\");","lastModifiedDate":"2023-01-25"},{"lineNumber":252,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":253,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":254,"author":{"gitId":"axmszr"},"content":"            LocalDateTime aft \u003d TimeStuff.parseDT(this.text);","lastModifiedDate":"2023-01-25"},{"lineNumber":255,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":256,"author":{"gitId":"axmszr"},"content":"            ArrayList\u003cString\u003e arrAft \u003d tl.listFilter(t -\u003e","lastModifiedDate":"2023-01-25"},{"lineNumber":257,"author":{"gitId":"axmszr"},"content":"                    t.hasTime() \u0026\u0026 t.compareTo(new Deadline(\"\", aft)) \u003e 0);","lastModifiedDate":"2023-01-27"},{"lineNumber":258,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":259,"author":{"gitId":"axmszr"},"content":"            if (arrAft.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":260,"author":{"gitId":"axmszr"},"content":"                output \u003d UI.say(\"You don\u0027t have any tasks after \" + this.text);","lastModifiedDate":"2023-02-01"},{"lineNumber":261,"author":{"gitId":"axmszr"},"content":"            } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":262,"author":{"gitId":"axmszr"},"content":"                output \u003d UI.say(\"Here are your tasks after \" + this.text + \":\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":263,"author":{"gitId":"axmszr"},"content":"                        + UI.printMany(arrAft);","lastModifiedDate":"2023-02-01"},{"lineNumber":264,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":265,"author":{"gitId":"axmszr"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":266,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":267,"author":{"gitId":"axmszr"},"content":"        case FILTER:","lastModifiedDate":"2023-01-25"},{"lineNumber":268,"author":{"gitId":"axmszr"},"content":"            if (tl.getCount() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":269,"author":{"gitId":"axmszr"},"content":"                throw new PoorInputException(\"Eh? You have no tasks to filter\");","lastModifiedDate":"2023-01-25"},{"lineNumber":270,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":271,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":272,"author":{"gitId":"axmszr"},"content":"            String msg;","lastModifiedDate":"2023-01-26"},{"lineNumber":273,"author":{"gitId":"axmszr"},"content":"            ArrayList\u003cString\u003e arrFilter;","lastModifiedDate":"2023-01-26"},{"lineNumber":274,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":275,"author":{"gitId":"axmszr"},"content":"            switch (this.text.toLowerCase()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":276,"author":{"gitId":"axmszr"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-25"},{"lineNumber":277,"author":{"gitId":"axmszr"},"content":"                // Fallthrough","lastModifiedDate":"2023-02-03"},{"lineNumber":278,"author":{"gitId":"axmszr"},"content":"            case \"td\":","lastModifiedDate":"2023-01-25"},{"lineNumber":279,"author":{"gitId":"axmszr"},"content":"                // Fallthrough","lastModifiedDate":"2023-02-03"},{"lineNumber":280,"author":{"gitId":"axmszr"},"content":"            case \"t\":","lastModifiedDate":"2023-01-25"},{"lineNumber":281,"author":{"gitId":"axmszr"},"content":"                msg \u003d \"Ok! These are on your ToDo list:\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":282,"author":{"gitId":"axmszr"},"content":"                arrFilter \u003d tl.listFilter(t -\u003e t.getSymbol().equals(Task.TODO_SYMBOL));","lastModifiedDate":"2023-01-26"},{"lineNumber":283,"author":{"gitId":"axmszr"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":284,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":285,"author":{"gitId":"axmszr"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-25"},{"lineNumber":286,"author":{"gitId":"axmszr"},"content":"                // Fallthrough","lastModifiedDate":"2023-02-03"},{"lineNumber":287,"author":{"gitId":"axmszr"},"content":"            case \"dl\":","lastModifiedDate":"2023-01-25"},{"lineNumber":288,"author":{"gitId":"axmszr"},"content":"                // Fallthrough","lastModifiedDate":"2023-02-03"},{"lineNumber":289,"author":{"gitId":"axmszr"},"content":"            case \"d\":","lastModifiedDate":"2023-01-25"},{"lineNumber":290,"author":{"gitId":"axmszr"},"content":"                msg \u003d \"Ok! Here are your Deadlines:\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":291,"author":{"gitId":"axmszr"},"content":"                arrFilter \u003d tl.listFilter(t -\u003e t.getSymbol().equals(Deadline.DEADLINE_SYMBOL));","lastModifiedDate":"2023-01-26"},{"lineNumber":292,"author":{"gitId":"axmszr"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":293,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":294,"author":{"gitId":"axmszr"},"content":"            case \"event\":","lastModifiedDate":"2023-01-25"},{"lineNumber":295,"author":{"gitId":"axmszr"},"content":"                // Fallthrough","lastModifiedDate":"2023-02-03"},{"lineNumber":296,"author":{"gitId":"axmszr"},"content":"            case \"ev\":","lastModifiedDate":"2023-01-25"},{"lineNumber":297,"author":{"gitId":"axmszr"},"content":"                // Fallthrough","lastModifiedDate":"2023-02-03"},{"lineNumber":298,"author":{"gitId":"axmszr"},"content":"            case \"e\":","lastModifiedDate":"2023-01-25"},{"lineNumber":299,"author":{"gitId":"axmszr"},"content":"                msg \u003d \"Ok! Here are your Events:\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":300,"author":{"gitId":"axmszr"},"content":"                arrFilter \u003d tl.listFilter(t -\u003e t.getSymbol().equals(Event.EVENT_SYMBOL));","lastModifiedDate":"2023-01-26"},{"lineNumber":301,"author":{"gitId":"axmszr"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":302,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":303,"author":{"gitId":"axmszr"},"content":"            case \"complete\":","lastModifiedDate":"2023-01-25"},{"lineNumber":304,"author":{"gitId":"axmszr"},"content":"                // Fallthrough","lastModifiedDate":"2023-02-03"},{"lineNumber":305,"author":{"gitId":"axmszr"},"content":"            case \"done\":","lastModifiedDate":"2023-01-25"},{"lineNumber":306,"author":{"gitId":"axmszr"},"content":"                // Fallthrough","lastModifiedDate":"2023-02-03"},{"lineNumber":307,"author":{"gitId":"axmszr"},"content":"            case \"completed\":","lastModifiedDate":"2023-01-25"},{"lineNumber":308,"author":{"gitId":"axmszr"},"content":"                // Fallthrough","lastModifiedDate":"2023-02-03"},{"lineNumber":309,"author":{"gitId":"axmszr"},"content":"            case \"x\":","lastModifiedDate":"2023-01-26"},{"lineNumber":310,"author":{"gitId":"axmszr"},"content":"                msg \u003d \"Ok! Here are the Tasks you\u0027ve completed:\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":311,"author":{"gitId":"axmszr"},"content":"                arrFilter \u003d tl.listFilter(t -\u003e t.getStatus().equals(Task.DONE_TRUE));","lastModifiedDate":"2023-01-25"},{"lineNumber":312,"author":{"gitId":"axmszr"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":313,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":314,"author":{"gitId":"axmszr"},"content":"            case \"incomplete\":","lastModifiedDate":"2023-01-25"},{"lineNumber":315,"author":{"gitId":"axmszr"},"content":"                // Fallthrough","lastModifiedDate":"2023-02-03"},{"lineNumber":316,"author":{"gitId":"axmszr"},"content":"            case \"not done\":","lastModifiedDate":"2023-01-25"},{"lineNumber":317,"author":{"gitId":"axmszr"},"content":"                // Fallthrough","lastModifiedDate":"2023-02-03"},{"lineNumber":318,"author":{"gitId":"axmszr"},"content":"            case \"!done\":","lastModifiedDate":"2023-01-25"},{"lineNumber":319,"author":{"gitId":"axmszr"},"content":"                // Fallthrough","lastModifiedDate":"2023-02-03"},{"lineNumber":320,"author":{"gitId":"axmszr"},"content":"            case \"undone\":","lastModifiedDate":"2023-01-25"},{"lineNumber":321,"author":{"gitId":"axmszr"},"content":"                msg \u003d \"Ok! Here are the Tasks you haven\u0027t completed yet:\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":322,"author":{"gitId":"axmszr"},"content":"                arrFilter \u003d tl.listFilter(t -\u003e !t.getStatus().equals(Task.DONE_TRUE));","lastModifiedDate":"2023-01-25"},{"lineNumber":323,"author":{"gitId":"axmszr"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":324,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":325,"author":{"gitId":"axmszr"},"content":"            default:","lastModifiedDate":"2023-01-25"},{"lineNumber":326,"author":{"gitId":"axmszr"},"content":"                throw new PoorInputException(\"I\u0027m not sure what Task type that is :(\");","lastModifiedDate":"2023-01-25"},{"lineNumber":327,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":328,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":329,"author":{"gitId":"axmszr"},"content":"            if (arrFilter.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":330,"author":{"gitId":"axmszr"},"content":"                output \u003d UI.say(\"You don\u0027t have any of those :/\");","lastModifiedDate":"2023-02-01"},{"lineNumber":331,"author":{"gitId":"axmszr"},"content":"            } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":332,"author":{"gitId":"axmszr"},"content":"                output \u003d UI.say(msg)","lastModifiedDate":"2023-02-01"},{"lineNumber":333,"author":{"gitId":"axmszr"},"content":"                        + UI.printMany(arrFilter);","lastModifiedDate":"2023-02-01"},{"lineNumber":334,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":335,"author":{"gitId":"axmszr"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":336,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":337,"author":{"gitId":"axmszr"},"content":"        case FIND:","lastModifiedDate":"2023-01-27"},{"lineNumber":338,"author":{"gitId":"axmszr"},"content":"            if (tl.getCount() \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":339,"author":{"gitId":"axmszr"},"content":"                throw new PoorInputException(\"Eh? You have no tasks to filter\");","lastModifiedDate":"2023-01-27"},{"lineNumber":340,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":341,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":342,"author":{"gitId":"axmszr"},"content":"            String lowText \u003d this.text.toLowerCase();","lastModifiedDate":"2023-01-27"},{"lineNumber":343,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":344,"author":{"gitId":"axmszr"},"content":"            ArrayList\u003cString\u003e arrFind \u003d tl.listFilter(t -\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":345,"author":{"gitId":"axmszr"},"content":"                    t.getDesc().toLowerCase().contains(lowText));","lastModifiedDate":"2023-01-27"},{"lineNumber":346,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":347,"author":{"gitId":"axmszr"},"content":"            if (arrFind.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":348,"author":{"gitId":"axmszr"},"content":"                output \u003d UI.say(\"Nope, nothing matches your search!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":349,"author":{"gitId":"axmszr"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":350,"author":{"gitId":"axmszr"},"content":"                output \u003d UI.say(\"Here! I found these:\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":351,"author":{"gitId":"axmszr"},"content":"                        + UI.printMany(arrFind);","lastModifiedDate":"2023-02-01"},{"lineNumber":352,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":353,"author":{"gitId":"axmszr"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":354,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":355,"author":{"gitId":"axmszr"},"content":"        default:","lastModifiedDate":"2023-01-25"},{"lineNumber":356,"author":{"gitId":"axmszr"},"content":"            // catches all the BADs","lastModifiedDate":"2023-01-25"},{"lineNumber":357,"author":{"gitId":"axmszr"},"content":"            throw new PoorInputException(\"That command needs an input\");","lastModifiedDate":"2023-01-26"},{"lineNumber":358,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":359,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":360,"author":{"gitId":"axmszr"},"content":"        return output;","lastModifiedDate":"2023-02-01"},{"lineNumber":361,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":362,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"axmszr":362}},{"path":"src/main/java/cbot/io/PoorInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.io;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":" * Signals that the user input was improper.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"public class PoorInputException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"     * Constructs a PoorInputException with the specified detail message.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"     * @param message The detail message.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"    public PoorInputException(String message) {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"        super(message);","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"axmszr":16}},{"path":"src/main/java/cbot/io/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.io;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":" * Manages printing to and receiving from the user, mainly via the Command Line Interface.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"public class UI {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"    //CHECKSTYLE.OFF: SingleSpaceSeparator","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"    // Frequently Used Strings","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"    private static final String BLANK     \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"    private static final String INDENT    \u003d \" ~ \";","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    private static final String WARNING   \u003d \"!! \";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    private static final String ERROR     \u003d WARNING + \"\u003cError\u003e \";","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    //CHECKSTYLE.ONL SingleSpaceSeparator","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"     * Returns Cbot\u0027s friendly greeting :D","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"     * @return Cbot\u0027s greeting.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    public static String sayHi() {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"        String cbotLogo \u003d \"  _____  _            _\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"                + \" /  ___]| |   ^-^   _| |_\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"                + \"|  / :D | |___  ___[_ + _]\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"                + \"|  \\\\___ | / . \\\\/ . \\\\ | |\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"                + \" \\\\_____]|_,_*_/\\\\_*_/ |_/\\n\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"        return cbotLogo + \"How can I help you today?\";","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"     * Returns Cbot\u0027s closing words.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"     * @return Cbot\u0027s farewell.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    public static String sayBye() {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"        return INDENT + \"See you again!\";","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"     * Returns a soft warning of the given exception.","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"     * @param e The input exception.","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"     * @return A soft exception warning.","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"     * @see PoorInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"    public static String warn(Exception e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"        return WARNING + e.getMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"     * Returns a warning of the given exception.","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"     * @param e The input exception.","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"     * @return A hard exception warning.","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"     * @see BadInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"    public static String warnBad(Exception e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"        return ERROR + e.getMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"     * Returns a suggestion for formatting datetime. This is usually raised","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"     * when the user provides an unrecognized datetime format.","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"     * @return The datetime formatting suggestion.","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"axmszr"},"content":"    public static String warnTime() {","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"        return ERROR + \"Sorry, I don\u0027t know how to interpret that datetime\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"                + WARNING + \"Try something in the form: yyyy-MM-dd HH:mm\";","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"axmszr"},"content":"     * Returns the given String with the standard indentation.","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"axmszr"},"content":"     * @param str The String to print.","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"axmszr"},"content":"     * @return The indented input.","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"axmszr"},"content":"    static String say(String str) {","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"axmszr"},"content":"        return INDENT + str;","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"axmszr"},"content":"     * Returns a String of a list of strings, such that each is indented properly.","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"axmszr"},"content":"     * @param arr The list of strings to print.","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"axmszr"},"content":"     * @return An indented String list.","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"axmszr"},"content":"    static String printMany(ArrayList\u003cString\u003e arr) {","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"axmszr"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"axmszr"},"content":"        for (String s : arr) {","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"axmszr"},"content":"            sb.append(BLANK).append(s).append(\"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"axmszr"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"axmszr":102}},{"path":"src/main/java/cbot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import cbot.time.TimeStuff;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":" * Task with a due date. Stores the description of the task, whether it has been completed or not,","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":" * and the eponymous deadline.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":" * @see Task","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":" * @see Event","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    public static final String DEADLINE_SYMBOL \u003d \"D\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    private final LocalDateTime due;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"     * Constructs a task with the given description, deadline, and completion status.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"     * The last variable is optional, and defaults to false (not done).","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"     * @param desc The task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"     * @param due The deadline of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"     * @param isDone (Optional) Whether the task is done.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    public Deadline(String desc, LocalDateTime due, boolean ... isDone) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"        super(desc, isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"        this.due \u003d due;","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"    public String getSymbol() {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"        return DEADLINE_SYMBOL;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"    public boolean hasTime() {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"        return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"        return this.due;","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"        return String.format(\"%s (\u003c %s)\",","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"                super.toString(), TimeStuff.text(this.due));","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"    public String makeFileFriendly() {","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"        return String.format(\"%s%s%s\",","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"                super.makeFileFriendly(), SEP, this.due);","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"axmszr":58}},{"path":"src/main/java/cbot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import cbot.time.TimeStuff;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":" * Task with a start and end time. Stores the description of the task, whether it has been completed or not,","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":" * and the start and end.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":" * @see Task","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":" * @see Deadline","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    public static final String EVENT_SYMBOL \u003d \"E\";","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    private final LocalDateTime fromTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    private final LocalDateTime toTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"     * Constructs a task with the given description, start datetime, end datetime, and completion status.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"     * The last variable is optional, and defaults to false (not done).","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"     * @param desc The task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"     * @param fromTime The start datetime.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"     * @param toTime The end datetime.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"    public Event(String desc, LocalDateTime fromTime, LocalDateTime toTime, boolean ... isDone) {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"        super(desc, isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"    public String getSymbol() {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"        return EVENT_SYMBOL;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    public boolean hasTime() {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"        return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"        return this.fromTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"        return String.format(\"%s (%s - %s)\",","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"                super.toString(), TimeStuff.text(this.fromTime), TimeStuff.text(this.toTime));","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"    public String makeFileFriendly() {","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"        return String.format(\"%s%s%s%s%s\",","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"                super.makeFileFriendly(), SEP, this.fromTime, SEP, this.toTime);","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"axmszr":60}},{"path":"src/main/java/cbot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":" * Default (To-Do) task. Stores the description of the task, and whether it has been completed or not.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":" * @see Deadline","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":" * @see Event","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"public class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"    public static final String DONE_TRUE \u003d \"X\";","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"    public static final String DONE_FALSE \u003d \" \";","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"    public static final String SEP \u003d \" ;; \";","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    public static final String TODO_SYMBOL \u003d \"T\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    private final String desc;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"     * Constructs a \u0027to-do\u0027 task with the given description and completion status.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"     * The last variable is optional, and defaults to false (not done)","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"     * @param desc The task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    public Task(String desc, boolean ... isDone) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"        this.isDone \u003d isDone.length !\u003d 0 \u0026\u0026 isDone[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"     * @return The task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"    public String getDesc() {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"        return this.desc;","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"     * Returns the symbol corresponding to the task type.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"     * \"T\" for To-Do, \"D\" for Deadline, and \"E\" for Event.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"     * @return The task type\u0027s symbol.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"    public String getSymbol() {","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"        return TODO_SYMBOL;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"     * Returns the symbol corresponding to the task\u0027s completion status.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"     * \"X\" for done/marked, and whitespace (\" \") for not-yet-done/unmarked.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"     * @return The completion status symbol.","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"    public String getStatus() {","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"        return this.isDone ? DONE_TRUE : DONE_FALSE;","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"     * Returns true if the task has a time attached to it (Deadline, Event), and false otherwise (To-Do).","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"     * @return Whether the task is time-based.","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"    public boolean hasTime() {","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"axmszr"},"content":"     * Returns the \u0027main\u0027 datetime of the task. i.e. the due date of a Deadline, and the start of an Event.","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"     * Returns the earliest supported datetime (LocalDateTime.MIN) for non-time-based (To-Do) tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"     * @return The datetime of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"axmszr"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"axmszr"},"content":"        return LocalDateTime.MIN;","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"axmszr"},"content":"     * Returns the string representation of the task, to be displayed for a user.","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"axmszr"},"content":"     * This provides its type, status, description, and time (if applicable).","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"axmszr"},"content":"     * @return The string representation of the task, for reading.","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"axmszr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"axmszr"},"content":"        return String.format(\"[%s][%s] %s\",","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"axmszr"},"content":"                getSymbol(), getStatus(), getDesc());","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"axmszr"},"content":"     * Returns the string representation of the task, to be saved in a file.","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"axmszr"},"content":"     * This provides its type, status, description, and time (if applicable).","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"axmszr"},"content":"     * @return The string representation of the task, for saving.","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"axmszr"},"content":"     * @see cbot.io.FileStuff","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"axmszr"},"content":"    public String makeFileFriendly() {","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"axmszr"},"content":"        return String.format(\"%s%s%s%s%s\",","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"axmszr"},"content":"                getSymbol(), SEP, getStatus(), SEP, getDesc());","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"axmszr"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"axmszr"},"content":"     * @return Whether the status changed from not done to done.","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"axmszr"},"content":"    public boolean yesDo() {","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"axmszr"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"axmszr"},"content":"            return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"axmszr"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"axmszr"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"axmszr"},"content":"            return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"axmszr"},"content":"     * Marks the task as not-yet-done.","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"axmszr"},"content":"     * @return Whether the status changed from done to not done.","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"axmszr"},"content":"    public boolean noDo() {","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"axmszr"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"axmszr"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"axmszr"},"content":"            return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"axmszr"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"axmszr"},"content":"            return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":134,"author":{"gitId":"axmszr"},"content":"     * Compares this task with the other task.","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"axmszr"},"content":"     * Tasks are first compared by time (i.e. {@link #getTime()}, then lexicographically.","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"axmszr"},"content":"     * @param other The task to be compared to.","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"axmszr"},"content":"     * @return A negative integer, zero, or a positive integer if this is","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"axmszr"},"content":"     *         less than, equal to, or greater than the other.","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":142,"author":{"gitId":"axmszr"},"content":"    public int compareTo(Task other) {","lastModifiedDate":"2023-01-24"},{"lineNumber":143,"author":{"gitId":"axmszr"},"content":"        if (this.getTime().isEqual(other.getTime())) {","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"axmszr"},"content":"            return getDesc().toLowerCase().compareTo(other.getDesc().toLowerCase());","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":146,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":147,"author":{"gitId":"axmszr"},"content":"        return getTime().compareTo(other.getTime());","lastModifiedDate":"2023-01-24"},{"lineNumber":148,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":149,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"axmszr":149}},{"path":"src/main/java/cbot/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":" * Stores and manages a list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":" * @see Task","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"public class TaskList {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"    //private static final int GAPS \u003d 3;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"    private static final String GAP \u003d \"   \";","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"     * Constructs an empty list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"     * Constructs a (special) list of the given tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"     * @param tasks A (not-so-special) list of tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"     * @return The number of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"    public int getCount() {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"     * @return A confirmation message.","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"        return String.format(\"\\\"%s\\\" added!\",","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"                task.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"     * Returns an enumerated list of the tasks stored.","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"     * @return A numbered list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"    public ArrayList\u003cString\u003e listTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"        return listFilter(t -\u003e true);","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"     * Returns a list of the tasks stored filtered by the given clause.","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"     * Tasks are numbered relative to their position entire list, not the filtered list.","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"     * @param pred The clause a task must satisfy to be included.","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"     * @return The filtered list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"    public ArrayList\u003cString\u003e listFilter(Predicate\u003cTask\u003e pred) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"axmszr"},"content":"        ArrayList\u003cString\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"        for (int i \u003d 0; i \u003c getCount(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"            if (pred.test(this.tasks.get(i))) {","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"axmszr"},"content":"                arr.add(String.format(\"%3d. %s\",","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"axmszr"},"content":"                        i + 1, this.tasks.get(i)));","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"axmszr"},"content":"        return arr;","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"axmszr"},"content":"     * Returns true if the input number is larger than the number of tasks, or less than one.","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"axmszr"},"content":"     * @param num The input number to test.","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"axmszr"},"content":"     * @return Whether the number is more than the number of tasks, or less than one.","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"axmszr"},"content":"    public boolean notInRange(int num) {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"axmszr"},"content":"        return (num \u003c\u003d 0 || num \u003e getCount());","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"axmszr"},"content":"     * Returns a different message depending on whether the input number is","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"axmszr"},"content":"     * less than one, more than the number of tasks or else within the acceptable range.","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"axmszr"},"content":"     * @param num The input number to test.","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"axmszr"},"content":"     * @return The corresponding message.","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"axmszr"},"content":"     * @see #notInRange(int)","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"axmszr"},"content":"    public String rangeError(int num) {","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"axmszr"},"content":"        if (num \u003c\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"axmszr"},"content":"            return \"wadahek pls\";","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"axmszr"},"content":"        } else if (num \u003e getCount()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"axmszr"},"content":"            return \"Hm, you don\u0027t have that many tasks!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"axmszr"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"axmszr"},"content":"            return \"All\u0027s good! That index is in range :D\";","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"axmszr"},"content":"     * Marks the task at the given position as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"axmszr"},"content":"     * @param num The 1-based index of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"axmszr"},"content":"     * @return An encouraging confirmation message.","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"axmszr"},"content":"     * @see cbot.task.Task#yesDo()","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"axmszr"},"content":"    public String mark(int num) {","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"axmszr"},"content":"        int index \u003d num - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"axmszr"},"content":"        if (tasks.get(index).yesDo()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":123,"author":{"gitId":"axmszr"},"content":"            return \"Woohoo! You\u0027ve completed:\\n\" + GAP","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"axmszr"},"content":"                    + tasks.get(index).toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"axmszr"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"axmszr"},"content":"            return \"You\u0027ve already done:\\n\" + GAP","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"axmszr"},"content":"                    + tasks.get(index).toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":128,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"axmszr"},"content":"     * Marks the task at the given position as not done.","lastModifiedDate":"2023-01-27"},{"lineNumber":133,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":134,"author":{"gitId":"axmszr"},"content":"     * @param num The 1-based index of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"axmszr"},"content":"     * @return A consoling confirmation message.","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"axmszr"},"content":"     * @see cbot.task.Task#noDo()","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"axmszr"},"content":"    public String unmark(int num) {","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"axmszr"},"content":"        int index \u003d num - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"axmszr"},"content":"        if (tasks.get(index).noDo()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":142,"author":{"gitId":"axmszr"},"content":"            return \"Aw, okay :( I\u0027ve unmarked:\\n\" + GAP","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"axmszr"},"content":"                    + tasks.get(index).toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":144,"author":{"gitId":"axmszr"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"axmszr"},"content":"            return \"Hm, you haven\u0027t yet done:\\n\" + GAP","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"axmszr"},"content":"                    + tasks.get(index).toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":147,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":151,"author":{"gitId":"axmszr"},"content":"     * Removes the task at the given position from the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":152,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":153,"author":{"gitId":"axmszr"},"content":"     * @param num The 1-based index of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":154,"author":{"gitId":"axmszr"},"content":"     * @return A confirmation message.","lastModifiedDate":"2023-01-27"},{"lineNumber":155,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":156,"author":{"gitId":"axmszr"},"content":"    public String delTask(int num) {","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"axmszr"},"content":"        return \"Got it! Deleted:\\n\" + GAP","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"axmszr"},"content":"                + tasks.remove(num - 1).toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":159,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":161,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":162,"author":{"gitId":"axmszr"},"content":"     * Sorts the list of tasks. From earliest to latest, then lexicographically.","lastModifiedDate":"2023-01-27"},{"lineNumber":163,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":164,"author":{"gitId":"axmszr"},"content":"     * @see cbot.task.Task#compareTo(Task)","lastModifiedDate":"2023-01-27"},{"lineNumber":165,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":166,"author":{"gitId":"axmszr"},"content":"    public void sort() {","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"axmszr"},"content":"        Collections.sort(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":168,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":169,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":170,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":171,"author":{"gitId":"axmszr"},"content":"     * Returns a string representation of the entire TaskList, for the convenience of file-saving.","lastModifiedDate":"2023-01-27"},{"lineNumber":172,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":173,"author":{"gitId":"axmszr"},"content":"     * @return A string representation of the TaskList, for saving.","lastModifiedDate":"2023-01-27"},{"lineNumber":174,"author":{"gitId":"axmszr"},"content":"     * @see cbot.task.Task#makeFileFriendly()","lastModifiedDate":"2023-01-27"},{"lineNumber":175,"author":{"gitId":"axmszr"},"content":"     * @see cbot.io.FileStuff#saveFile(TaskList)","lastModifiedDate":"2023-01-27"},{"lineNumber":176,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":177,"author":{"gitId":"axmszr"},"content":"    public String makeFileFriendly() {","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"axmszr"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-24"},{"lineNumber":179,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":180,"author":{"gitId":"axmszr"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2023-02-03"},{"lineNumber":181,"author":{"gitId":"axmszr"},"content":"            sb.append(t.makeFileFriendly());","lastModifiedDate":"2023-01-24"},{"lineNumber":182,"author":{"gitId":"axmszr"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2023-01-24"},{"lineNumber":183,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":184,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":185,"author":{"gitId":"axmszr"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":186,"author":{"gitId":"axmszr"},"content":"            sb.deleteCharAt(sb.length() - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":187,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":188,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":189,"author":{"gitId":"axmszr"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":190,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":191,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"axmszr":191}},{"path":"src/main/java/cbot/time/TimeStuff.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.time;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":" * Manages text-datetime translation. Reads text (into datetime), and writes datetime (into text).","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":" * @see LocalDateTime","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"public class TimeStuff {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"    // checkstyle doesn\u0027t like the 8-space indentation here","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    private static final String[] D_FORMS \u003d {\"y-M-d\", \"d/M/y\", \"d MMM y\", \"MMM d y\"};","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    private static final String[] T_FORMS \u003d {\" Hmm\", \" H:m\", \" ha\", \" h a\", \" h.ma\", \" h.m a\", \" h:ma\", \" h:m a\"};","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    private static final DateTimeFormatter UI_FORM \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy, HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"     * Parses a given text into datetime. Has a set pool of accepted formats, including (but","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"     * not limited to) \"yyyy-MM-DD HHmm\", \"d/M/y H:m\", and \"MMM d y\".","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"     * @param dtStr The text to be parsed.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"     * @return The corresponding datetime.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"     * @throws DateTimeParseException If dtStr is not in a recognized format.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"    public static LocalDateTime parseDT(String dtStr) throws DateTimeParseException {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"        String str \u003d dtStr.trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"        for (String df : D_FORMS) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"                return LocalDate.parse(str, DateTimeFormatter.ofPattern(df)).atStartOfDay();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"                for (String tf : T_FORMS) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"                    try {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"                        return LocalDateTime.parse(str, DateTimeFormatter.ofPattern(df + tf));","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"                    } catch (DateTimeParseException ignore) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"                        // no handling, continue","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"        return LocalDateTime.parse(str);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"     * Writes datetime in the \"dd/MM/yy, HHmm\" format.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"     * @param dt The datetime to be re-written.","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"     * @return A read-friendly form of datetime.","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"    public static String text(LocalDateTime dt) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"        return dt.format(UI_FORM);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"axmszr":57}},{"path":"src/main/java/data/cbot_save.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"T ;;   ;; SwE W3 tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"E ;;   ;; sleep ;; 0023-01-27T01:00 ;; 0023-01-27T09:00","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"D ;;   ;; wake up ;; 0023-01-27T10:00","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"axmszr":3}},{"path":"src/main/resources/view/CbotBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c!-- @@author axmszr-reused --\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- Drawn heavily from @hingen\u0027s project. Thank you! --\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: ivory;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cTextFlow\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                  \u003cFont name\u003d\"Consolas\" size\u003d\"13\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003c/Text\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"25.0\" bottom\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/TextFlow\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"axmszr":9,"-":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"cbot.gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"axmszr":19}},{"path":"src/main/resources/view/UserBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" style\u003d\"-fx-background-color: bisque;\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-font-family: Courier New; -fx-font-size: 14; -fx-font-weight: bold;\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"axmszr":16}},{"path":"src/test/java/cbot/io/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.io;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"    public void testIsByeTrue() throws PoorInputException {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"        Parser p \u003d new Parser(\"bye\");","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"        assertTrue(p.isBye());","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    public void testIsByeFalse() throws PoorInputException {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"        Parser p \u003d new Parser(\"list\");","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"        assertFalse(p.isBye());","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"    public void testNeedSaveTrue() throws PoorInputException {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"        Parser p \u003d new Parser(\"sort\");","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"        assertTrue(p.needSave());","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"    public void testNeedSaveFalse() throws PoorInputException {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"        Parser p \u003d new Parser(\"list\");","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"        assertFalse(p.needSave());","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"axmszr":32}},{"path":"src/test/java/cbot/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"    Deadline dl1 \u003d new Deadline(\"test 1\", LocalDateTime.MIN);","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"    Deadline dl2 \u003d new Deadline(\"test 2\", LocalDateTime.parse(\"0023-01-27T10:00\"), true);","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    public void testGetSymbol() {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"        assertEquals(dl1.getSymbol(), \"D\");","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    public void testHasTime() {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"        assertTrue(dl1.hasTime());","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    public void testGetTime1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"        assertEquals(dl1.getTime(), LocalDateTime.MIN);","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"    public void testGetTime2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"        assertEquals(dl2.getTime(), LocalDateTime.parse(\"0023-01-27T10:00\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"    public void testToString1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"        assertEquals(dl1.toString(),","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"                \"[D][ ] test 1 (\u003c 01/01/00, 0000)\");","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"    public void testToString2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"        assertEquals(dl2.toString(),","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"                \"[D][X] test 2 (\u003c 27/01/23, 1000)\");","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"    public void testMakeFileFriendly1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"        assertEquals(dl1.makeFileFriendly(),","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"                \"D ;;   ;; test 1 ;; -999999999-01-01T00:00\");","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"    public void testMakeFileFriendly2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"        assertEquals(dl2.makeFileFriendly(),","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"                \"D ;; X ;; test 2 ;; 0023-01-27T10:00\");","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"    public void testCompareTo() {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"        assertTrue(dl1.compareTo(dl2) \u003c 0);","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"axmszr":62}},{"path":"src/test/java/cbot/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"public class EventTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"    Event e1 \u003d new Event(\"test 1\", LocalDateTime.MIN, LocalDateTime.MAX);","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"    Event e2 \u003d new Event(\"test 2\", LocalDateTime.parse(\"0023-01-27T01:00\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"            LocalDateTime.parse(\"0023-01-27T09:00\"), true);","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    public void testGetSymbol() {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"        assertEquals(e1.getSymbol(), \"E\");","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"    public void testHasTime() {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"        assertTrue(e1.hasTime());","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"    public void testGetTime1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"        assertEquals(e1.getTime(), LocalDateTime.MIN);","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"    public void testGetTime2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"        assertEquals(e2.getTime(), LocalDateTime.parse(\"0023-01-27T01:00\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"    public void testToString1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"        assertEquals(e1.toString(),","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"                \"[E][ ] test 1 (01/01/00, 0000 - 31/12/99, 2359)\");","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"    public void testToString2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"        assertEquals(e2.toString(),","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"                \"[E][X] test 2 (27/01/23, 0100 - 27/01/23, 0900)\");","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"    public void testMakeFileFriendly1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"        assertEquals(e1.makeFileFriendly(),","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"                \"E ;;   ;; test 1 ;; -999999999-01-01T00:00 ;; +999999999-12-31T23:59:59.999999999\");","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"    public void testMakeFileFriendly2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"        assertEquals(e2.makeFileFriendly(),","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"                \"E ;; X ;; test 2 ;; 0023-01-27T01:00 ;; 0023-01-27T09:00\");","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"    public void testCompareTo() {","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"        assertTrue(e1.compareTo(e2) \u003c 0);","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"axmszr":63}},{"path":"src/test/java/cbot/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"    Task t \u003d new Task(\"task\");","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"    ArrayList\u003cTask\u003e tFive \u003d new ArrayList\u003c\u003e(Arrays.asList(t, t, t, t, t));","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    TaskList tlZero \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    TaskList tlFive \u003d new TaskList(tFive);","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    public void testGetCountZero() {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"        assertEquals(tlZero.getCount(), 0);","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"    public void testGetCountFive() {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"        assertEquals(tlFive.getCount(), 5);","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"    public void testAddTask1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"        assertEquals(tl.addTask(t),","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"                \"\\\"[T][ ] task\\\" added!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"    public void testAddTask2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"        tl.addTask(t);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"        assertEquals(tl.getCount(), 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"    public void testListTasksZero() {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"        assertEquals(tlZero.listTasks(), new ArrayList\u003cString\u003e());","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"    public void testListTasksFive() {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"        assertEquals(tlFive.listTasks(),","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"                new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"                        \"  1. [T][ ] task\",","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"                        \"  2. [T][ ] task\",","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"                        \"  3. [T][ ] task\",","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"                        \"  4. [T][ ] task\",","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"                        \"  5. [T][ ] task\")));","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"    public void testListFilterEmpty() {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"        assertEquals(tlFive.listFilter(t -\u003e false), new ArrayList\u003cString\u003e());","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"    public void testNotInRangeTrue1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"        assertTrue(tlFive.notInRange(0));","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"    public void testNotInRangeTrue2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"        assertTrue(tlFive.notInRange(6));","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"    public void testNotInRangeFalse() {","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"        assertFalse(tlFive.notInRange(3));","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"axmszr"},"content":"    public void testRangeError1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"axmszr"},"content":"        assertEquals(tlFive.rangeError(0), \"wadahek pls\");","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"axmszr"},"content":"    public void testRangeError2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"axmszr"},"content":"        assertEquals(tlFive.rangeError(6), \"Hm, you don\u0027t have that many tasks!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"axmszr"},"content":"    public void testRangeError3() {","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"axmszr"},"content":"        assertEquals(tlFive.rangeError(3), \"All\u0027s good! That index is in range :D\");","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"axmszr"},"content":"    public void testMark1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"axmszr"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"axmszr"},"content":"        tl.addTask(new Task(\"task\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"axmszr"},"content":"        assertEquals(tl.mark(1),","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"axmszr"},"content":"                \"Woohoo! You\u0027ve completed:\\n   [T][X] task\");","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"axmszr"},"content":"    public void testMark2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"axmszr"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"axmszr"},"content":"        tl.addTask(new Task(\"done\", true));","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"axmszr"},"content":"        assertEquals(tl.mark(1),","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"axmszr"},"content":"                \"You\u0027ve already done:\\n   [T][X] done\");","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"axmszr"},"content":"    public void testUnmark1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"axmszr"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"axmszr"},"content":"        tl.addTask(new Task(\"done\", true));","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"axmszr"},"content":"        assertEquals(tl.unmark(1),","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"axmszr"},"content":"                \"Aw, okay :( I\u0027ve unmarked:\\n   [T][ ] done\");","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"axmszr"},"content":"    public void testUnmark2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"axmszr"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"axmszr"},"content":"        tl.addTask(new Task(\"task\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"axmszr"},"content":"        assertEquals(tl.unmark(1),","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"axmszr"},"content":"                \"Hm, you haven\u0027t yet done:\\n   [T][ ] task\");","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"axmszr"},"content":"    public void testDelTask() {","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"axmszr"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"axmszr"},"content":"        tl.addTask(t);","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"axmszr"},"content":"        assertEquals(tl.delTask(1),","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"axmszr"},"content":"                \"Got it! Deleted:\\n   [T][ ] task\");","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":133,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":134,"author":{"gitId":"axmszr"},"content":"    public void testSort() {","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"axmszr"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"axmszr"},"content":"        tl.addTask(new Task(\"b\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"axmszr"},"content":"        tl.addTask(new Task(\"c\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"axmszr"},"content":"        tl.addTask(new Task(\"a\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"axmszr"},"content":"        tl.sort();","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"axmszr"},"content":"        assertEquals(tl.listTasks(),","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"axmszr"},"content":"                new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"axmszr"},"content":"                        \"  1. [T][ ] a\",","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"axmszr"},"content":"                        \"  2. [T][ ] b\",","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"axmszr"},"content":"                        \"  3. [T][ ] c\")));","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":147,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":148,"author":{"gitId":"axmszr"},"content":"    public void testMakeFileFriendly() {","lastModifiedDate":"2023-01-27"},{"lineNumber":149,"author":{"gitId":"axmszr"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":150,"author":{"gitId":"axmszr"},"content":"        tl.addTask(t);","lastModifiedDate":"2023-01-27"},{"lineNumber":151,"author":{"gitId":"axmszr"},"content":"        tl.addTask(new Task(\"done\", true));","lastModifiedDate":"2023-01-27"},{"lineNumber":152,"author":{"gitId":"axmszr"},"content":"        assertEquals(tl.makeFileFriendly(),","lastModifiedDate":"2023-01-27"},{"lineNumber":153,"author":{"gitId":"axmszr"},"content":"                \"T ;;   ;; task\\nT ;; X ;; done\");","lastModifiedDate":"2023-01-27"},{"lineNumber":154,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":155,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"axmszr":155}},{"path":"src/test/java/cbot/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"    Task t1 \u003d new Task(\"test 1\");","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"    Task t2 \u003d new Task(\"test 2\", true);","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    public void testGetDesc() {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"        assertEquals(t1.getDesc(), \"test 1\");","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"    public void testGetSymbol() {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"        assertEquals(t1.getSymbol(), \"T\");","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"    public void testHasTime() {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"        assertFalse(t1.hasTime());","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"    public void testGetStatus1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"        assertEquals(t1.getStatus(), \" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"    public void testGetStatus2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"        assertEquals(t2.getStatus(), \"X\");","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"    public void testGetTime() {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"        assertEquals(t1.getTime(), LocalDateTime.MIN);","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"    public void testToString1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"        assertEquals(t1.toString(),","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"                \"[T][ ] test 1\");","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"    public void testToString2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"        assertEquals(t2.toString(),","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"                \"[T][X] test 2\");","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"    public void testMakeFileFriendly1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"        assertEquals(t1.makeFileFriendly(),","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"                \"T ;;   ;; test 1\");","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"    public void testMakeFileFriendly2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"        assertEquals(t2.makeFileFriendly(),","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"                \"T ;; X ;; test 2\");","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"    public void testYesDoTrue1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"        Task t \u003d new Task(\"test\", false);","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"axmszr"},"content":"        assertTrue(t.yesDo());","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"axmszr"},"content":"    public void testYesDoTrue2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"axmszr"},"content":"        Task t \u003d new Task(\"test\", true);","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"axmszr"},"content":"        t.noDo();","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"axmszr"},"content":"        assertTrue(t.yesDo());","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"axmszr"},"content":"    public void testYesDoFalse1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"axmszr"},"content":"        Task t \u003d new Task(\"test\", true);","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"axmszr"},"content":"        assertFalse(t.yesDo());","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"axmszr"},"content":"    public void testYesDoFalse2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"axmszr"},"content":"        Task t \u003d new Task(\"test\", false);","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"axmszr"},"content":"        t.yesDo();","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"axmszr"},"content":"        assertFalse(t.yesDo());","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"axmszr"},"content":"    public void testNoDoTrue1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"axmszr"},"content":"        Task t \u003d new Task(\"test\", true);","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"axmszr"},"content":"        assertTrue(t.noDo());","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"axmszr"},"content":"    public void testNoDoTrue2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"axmszr"},"content":"        Task t \u003d new Task(\"test\", false);","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"axmszr"},"content":"        t.yesDo();","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"axmszr"},"content":"        assertTrue(t.noDo());","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"axmszr"},"content":"    public void testNoDoFalse1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"axmszr"},"content":"        Task t \u003d new Task(\"test\", false);","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"axmszr"},"content":"        assertFalse(t.noDo());","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"axmszr"},"content":"    public void testNoDoFalse2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"axmszr"},"content":"        Task t \u003d new Task(\"test\", true);","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"axmszr"},"content":"        t.noDo();","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"axmszr"},"content":"        assertFalse(t.noDo());","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"axmszr"},"content":"    public void testCompareTo() {","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"axmszr"},"content":"        assertTrue(t1.compareTo(t2) \u003c 0);","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"axmszr":125}},{"path":"src/test/java/cbot/time/TimeStuffTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package cbot.time;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"public class TimeStuffTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"    LocalDateTime one \u003d LocalDateTime.parse(\"2001-01-01T00:00\");","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"    public void testParseDT0_() {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"        assertEquals(TimeStuff.parseDT(\"2001-01-01\"), one);","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    public void testParseDT00() {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"        assertEquals(TimeStuff.parseDT(\"2001-01-01 0000\"), one);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"    public void testParseDT01() {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"        assertEquals(TimeStuff.parseDT(\"2001-01-01 00:00\"), one);","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"    public void testParseDT02() {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"        assertEquals(TimeStuff.parseDT(\"2001-01-01 12am\"), one);","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"    public void testParseDT03() {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"        assertEquals(TimeStuff.parseDT(\"2001-01-01 12 am\"), one);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"    public void testParseDT04() {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"        assertEquals(TimeStuff.parseDT(\"2001-01-01 12.00am\"), one);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"    public void testParseDT05() {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"        assertEquals(TimeStuff.parseDT(\"2001-01-01 12.00 am\"), one);","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"    public void testParseDT06() {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"        assertEquals(TimeStuff.parseDT(\"2001-01-01 12:00am\"), one);","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"    public void testParseDT07() {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"        assertEquals(TimeStuff.parseDT(\"2001-01-01 12:00 am\"), one);","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"    //","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"    public void testParseDT1_() {","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"        // interesting, can\u0027t do 1/1/1","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"        assertEquals(TimeStuff.parseDT(\"1/1/2001\"), one);","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"    public void testParseDT2_() {","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"        assertEquals(TimeStuff.parseDT(\"1 Jan 2001\"), one);","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"    public void testParseDT3_() {","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"axmszr"},"content":"        assertEquals(TimeStuff.parseDT(\"Jan 1 2001\"), one);","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"axmszr"},"content":"    public void testText() {","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"axmszr"},"content":"        assertEquals(TimeStuff.text(one), \"01/01/01, 0000\");","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"axmszr":79}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"axmszr":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"java -classpath ..\\bin Cbot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"axmszr":1,"-":20}}]
