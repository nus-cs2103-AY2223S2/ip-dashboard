[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import java.util.regex.PatternSyntaxException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"    public Deadline(String cmd) throws PatternSyntaxException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"        this(cmd,false);","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"    public Deadline(String cmd, boolean isDone) throws PatternSyntaxException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"        this(cmd.split(\" /by \")[0],","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"                cmd.split(\" /by \")[1],","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"                isDone);","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"    public Deadline(String task, String deadlineString, boolean isDone)","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"            throws PatternSyntaxException, ArrayIndexOutOfBoundsException, DateTimeParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"        super(task, isDone);","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"        this.deadline \u003d LocalDateTime.parse(deadlineString);","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"     * Return the String for Deadline","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"        return String.format(\"[D]%s (by:%s)\", super.toString(), deadline);","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"    public String saveString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"        int done \u003d isDone() ? 1 : 0;","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"        return String.format(\"D | %d | %s | %s\", done, getTask(), deadline);","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"benedict733":32}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"import java.util.List;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"import java.util.regex.PatternSyntaxException;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"     * Minimum length of a string command is given by","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"     * The length of the command +2 (for whitespace and","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"     * at least 1 letter for the command)","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"    static final String HOMEDIRECTORY \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"    static final Path DUKELISTDIRECTORY \u003d Paths.get(HOMEDIRECTORY, \"SavedList.txt\");","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"    static final HashMap\u003cString, Integer\u003e MINVALIDLENGTH \u003d new HashMap\u003c\u003e(Map.of(","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"            \"todo\", 6,","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"            \"deadline\", 10,","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"            \"event\", 7,","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"            \"mark\", 6,","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"            \"unmark\", 8,","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"            \"delete\", 8","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"    ));","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"     * Correct formatting of commands given that the name of the command is correct","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"benedict733"},"content":"    static final HashMap\u003cString, String\u003e CORRECTFORMAT \u003d new HashMap\u003c\u003e(Map.of(","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"benedict733"},"content":"            \"todo\", \"todo THE TASK\",","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"benedict733"},"content":"            \"deadline\", \"deadline THE TASK /by yyyy-mm-ddThh:mm:ss\",","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"benedict733"},"content":"            \"event\", \"event THE TASK /from TIME /to TIME\",","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"benedict733"},"content":"            \"mark\", \"mark NUMBER\",","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"benedict733"},"content":"            \"unmark\", \"unmark NUMBER\",","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"benedict733"},"content":"            \"delete\", \"delete NUMBER\"","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"benedict733"},"content":"    ));","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"benedict733"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"benedict733"},"content":"        System.out.println(greet());","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"benedict733"},"content":"        // arr \u003d\u003e needs to be updated w old list","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"benedict733"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"benedict733"},"content":"            arr \u003d readSavedFile();","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"benedict733"},"content":"        } catch (IOException unknown) {","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"benedict733"},"content":"            print(unknown + \"\\nUnsure of error\");","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"benedict733"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"benedict733"},"content":"            String cmd \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"benedict733"},"content":"            if (cmd.equals(\"bye\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"benedict733"},"content":"                exit();","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"benedict733"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"benedict733"},"content":"            execute(cmd, arr);","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"benedict733"},"content":"//            echo(sc.nextLine());","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"benedict733"},"content":"        sc.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"benedict733"},"content":"    public static ArrayList\u003cTask\u003e readSavedFile() throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"benedict733"},"content":"            Files.createFile(DUKELISTDIRECTORY);","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"benedict733"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"benedict733"},"content":"        } catch (FileAlreadyExistsException e) {","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"benedict733"},"content":"            ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"benedict733"},"content":"            List\u003cString\u003e savedList \u003d Files.readAllLines(DUKELISTDIRECTORY);","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"benedict733"},"content":"            for (String task : savedList) {","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"benedict733"},"content":"                try {","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"benedict733"},"content":"                    arr.add(readLineToTask(task));","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"benedict733"},"content":"                } catch (WrongTaskFormatException | ArrayIndexOutOfBoundsException wrongFormat) {","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"benedict733"},"content":"                    print(\"File format of tasks is wrong.\\n\" +","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"benedict733"},"content":"                            \"List now contains information up to line before wrongly formatted line.\");","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"benedict733"},"content":"                    printList(arr);","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"benedict733"},"content":"                    return arr;","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"benedict733"},"content":"                }","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"benedict733"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"benedict733"},"content":"            return arr;","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"benedict733"},"content":"    public static Task readLineToTask(String taskDescription) throws WrongTaskFormatException {","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"benedict733"},"content":"        String[] items \u003d taskDescription.split(\" \\\\| \");","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"benedict733"},"content":"        boolean isDone \u003d getIsDone(items[1]);","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"benedict733"},"content":"        Task task \u003d new Task(taskDescription, isDone);","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"benedict733"},"content":"        switch(items[0]) {","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"benedict733"},"content":"            case \"T\":","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"benedict733"},"content":"                task \u003d new ToDo(items[2], isDone);","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"benedict733"},"content":"//                return task;","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"benedict733"},"content":"            case \"D\":","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"benedict733"},"content":"                task \u003d new Deadline(items[2], items[3], isDone);","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"benedict733"},"content":"//                return task;","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"benedict733"},"content":"            case \"E\":","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"benedict733"},"content":"                String[] timeOfEvent \u003d items[3].split(\"-\");","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"benedict733"},"content":"                task \u003d new Event(items[2], timeOfEvent[0], timeOfEvent[1], isDone);","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"benedict733"},"content":"//                return task;","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"benedict733"},"content":"            default:","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"benedict733"},"content":"                throw new WrongTaskFormatException(\"Invalid Task String Format\");","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"benedict733"},"content":"        return task;","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"benedict733"},"content":"     * @param doneString a simple string containing 0/1","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"benedict733"},"content":"     * @returns the int value","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"benedict733"},"content":"    public static boolean getIsDone(String doneString) {","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"benedict733"},"content":"        return doneString.equals(\"1\");","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"benedict733"},"content":"    static void execute(String cmd, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"benedict733"},"content":"        String[] words \u003d cmd.split(\" \");","lastModifiedDate":"2023-02-04"},{"lineNumber":118,"author":{"gitId":"benedict733"},"content":"        switch (words[0]) {","lastModifiedDate":"2023-02-04"},{"lineNumber":119,"author":{"gitId":"benedict733"},"content":"            case \"list\":","lastModifiedDate":"2023-02-04"},{"lineNumber":120,"author":{"gitId":"benedict733"},"content":"                printList(arr);","lastModifiedDate":"2023-02-04"},{"lineNumber":121,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":122,"author":{"gitId":"benedict733"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-04"},{"lineNumber":123,"author":{"gitId":"benedict733"},"content":"                print(mark(words[1], arr));","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":125,"author":{"gitId":"benedict733"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-04"},{"lineNumber":126,"author":{"gitId":"benedict733"},"content":"                print(unmark(words[1], arr));","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":128,"author":{"gitId":"benedict733"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"benedict733"},"content":"                print(delete(words[1], arr));","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"benedict733"},"content":"            default:    // for tasks","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"benedict733"},"content":"                print(add(cmd, arr));","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":134,"author":{"gitId":"benedict733"},"content":"        saveList(arr);","lastModifiedDate":"2023-02-23"},{"lineNumber":135,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":136,"author":{"gitId":"benedict733"},"content":"    static void saveList(ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-02-23"},{"lineNumber":137,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"benedict733"},"content":"            // no need to deleteIfExists as BufferedWritter automatically clears all prev input","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"benedict733"},"content":"            BufferedWriter fileWriter \u003d Files.newBufferedWriter(DUKELISTDIRECTORY);","lastModifiedDate":"2023-02-23"},{"lineNumber":140,"author":{"gitId":"benedict733"},"content":"            for (Task task : arr) {","lastModifiedDate":"2023-02-23"},{"lineNumber":141,"author":{"gitId":"benedict733"},"content":"                fileWriter.write(task.saveString());","lastModifiedDate":"2023-02-23"},{"lineNumber":142,"author":{"gitId":"benedict733"},"content":"                fileWriter.newLine();","lastModifiedDate":"2023-02-23"},{"lineNumber":143,"author":{"gitId":"benedict733"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":144,"author":{"gitId":"benedict733"},"content":"            fileWriter.close();","lastModifiedDate":"2023-02-23"},{"lineNumber":145,"author":{"gitId":"benedict733"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-23"},{"lineNumber":146,"author":{"gitId":"benedict733"},"content":"            // unsure of what cases would throw IOException under deleteIfExists","lastModifiedDate":"2023-02-23"},{"lineNumber":147,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":148,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":149,"author":{"gitId":"benedict733"},"content":"    static String add(String cmd, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-02-11"},{"lineNumber":150,"author":{"gitId":"benedict733"},"content":"        String[] words \u003d cmd.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":151,"author":{"gitId":"benedict733"},"content":"        String typeOfTask \u003d words[0];","lastModifiedDate":"2023-02-11"},{"lineNumber":152,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":153,"author":{"gitId":"benedict733"},"content":"        if (!MINVALIDLENGTH.containsKey(typeOfTask)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":154,"author":{"gitId":"benedict733"},"content":"            return errorMsg(\"I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2023-02-11"},{"lineNumber":155,"author":{"gitId":"benedict733"},"content":"        } else if (cmd.length() \u003c MINVALIDLENGTH.get(typeOfTask)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":156,"author":{"gitId":"benedict733"},"content":"            return errorMsg(String.format(","lastModifiedDate":"2023-02-11"},{"lineNumber":157,"author":{"gitId":"benedict733"},"content":"                    \"The description of a %s cannot be empty.\", typeOfTask));","lastModifiedDate":"2023-02-11"},{"lineNumber":158,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":159,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":160,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":161,"author":{"gitId":"benedict733"},"content":"            Task task \u003d makeTask(typeOfTask, cmd);","lastModifiedDate":"2023-02-11"},{"lineNumber":162,"author":{"gitId":"benedict733"},"content":"            //.replace(typeOfTask + \" \", \"\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":163,"author":{"gitId":"benedict733"},"content":"            arr.add(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":164,"author":{"gitId":"benedict733"},"content":"            return String.format(\"Got it. I\u0027ve added this task:\\n\\t%s\\nNow you have %d tasks in the list.\", task, arr.size());","lastModifiedDate":"2023-02-11"},{"lineNumber":165,"author":{"gitId":"benedict733"},"content":"        } catch (PatternSyntaxException | ArrayIndexOutOfBoundsException | DateTimeParseException wrongFormat) {","lastModifiedDate":"2023-02-24"},{"lineNumber":166,"author":{"gitId":"benedict733"},"content":"            return errorMsg(\"Please enter the command in the correct format.\") + \"\\n\" + CORRECTFORMAT.get(typeOfTask);","lastModifiedDate":"2023-02-11"},{"lineNumber":167,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":168,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":169,"author":{"gitId":"benedict733"},"content":"    static Task makeTask(String name, String cmd) throws PatternSyntaxException {","lastModifiedDate":"2023-02-11"},{"lineNumber":170,"author":{"gitId":"benedict733"},"content":"        Task task \u003d new Task(cmd);","lastModifiedDate":"2023-02-11"},{"lineNumber":171,"author":{"gitId":"benedict733"},"content":"        cmd \u003d cmd.replace(name + \" \", \"\");","lastModifiedDate":"2023-02-11"},{"lineNumber":172,"author":{"gitId":"benedict733"},"content":"        switch (name) {","lastModifiedDate":"2023-02-11"},{"lineNumber":173,"author":{"gitId":"benedict733"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-11"},{"lineNumber":174,"author":{"gitId":"benedict733"},"content":"                task \u003d new ToDo(cmd);","lastModifiedDate":"2023-02-11"},{"lineNumber":175,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":176,"author":{"gitId":"benedict733"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-11"},{"lineNumber":177,"author":{"gitId":"benedict733"},"content":"                task \u003d new Deadline(cmd);","lastModifiedDate":"2023-02-11"},{"lineNumber":178,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":179,"author":{"gitId":"benedict733"},"content":"            case \"event\":","lastModifiedDate":"2023-02-11"},{"lineNumber":180,"author":{"gitId":"benedict733"},"content":"                task \u003d new Event(cmd);","lastModifiedDate":"2023-02-11"},{"lineNumber":181,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":182,"author":{"gitId":"benedict733"},"content":"        };","lastModifiedDate":"2023-02-11"},{"lineNumber":183,"author":{"gitId":"benedict733"},"content":"        return task;","lastModifiedDate":"2023-02-11"},{"lineNumber":184,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":185,"author":{"gitId":"benedict733"},"content":"    static String mark(String num, ArrayList\u003cTask\u003e arr) {     //try catch, possibility of error if user enter wrong cmd","lastModifiedDate":"2023-02-11"},{"lineNumber":186,"author":{"gitId":"benedict733"},"content":"        if (arr.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-11"},{"lineNumber":187,"author":{"gitId":"benedict733"},"content":"            return errorMsg(\"You do not have any items in your list!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":188,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":189,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":190,"author":{"gitId":"benedict733"},"content":"            int index \u003d Integer.parseInt(num) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":191,"author":{"gitId":"benedict733"},"content":"            arr.get(index).markAsDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":192,"author":{"gitId":"benedict733"},"content":"            return String.format(\"Nice! I\u0027ve marked this task as done: \\n\\t%s\", arr.get(index));","lastModifiedDate":"2023-02-11"},{"lineNumber":193,"author":{"gitId":"benedict733"},"content":"        } catch (NumberFormatException notANumber) {","lastModifiedDate":"2023-02-11"},{"lineNumber":194,"author":{"gitId":"benedict733"},"content":"            return errorMsg(\"Please enter a valid number\");","lastModifiedDate":"2023-02-11"},{"lineNumber":195,"author":{"gitId":"benedict733"},"content":"        } catch (IndexOutOfBoundsException badNumber) {","lastModifiedDate":"2023-02-11"},{"lineNumber":196,"author":{"gitId":"benedict733"},"content":"            return errorMsg(String.format(","lastModifiedDate":"2023-02-11"},{"lineNumber":197,"author":{"gitId":"benedict733"},"content":"                    \"Please enter a number from 1 to %d\",","lastModifiedDate":"2023-02-11"},{"lineNumber":198,"author":{"gitId":"benedict733"},"content":"                    arr.size()));","lastModifiedDate":"2023-02-11"},{"lineNumber":199,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":200,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":201,"author":{"gitId":"benedict733"},"content":"    static String unmark(String num, ArrayList\u003cTask\u003e arr) {   //try catch, possibility of error if user enter wrong cmd","lastModifiedDate":"2023-02-11"},{"lineNumber":202,"author":{"gitId":"benedict733"},"content":"        if (arr.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-11"},{"lineNumber":203,"author":{"gitId":"benedict733"},"content":"            return errorMsg(\"You do not have any items in your list!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":204,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":205,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":206,"author":{"gitId":"benedict733"},"content":"            int index \u003d Integer.parseInt(num) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":207,"author":{"gitId":"benedict733"},"content":"            arr.get(index).unmarkAsDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":208,"author":{"gitId":"benedict733"},"content":"            return String.format(\"Ok, I\u0027ve marked this task as not done yet: \\n\\t%s\", arr.get(index));","lastModifiedDate":"2023-02-11"},{"lineNumber":209,"author":{"gitId":"benedict733"},"content":"        } catch (NumberFormatException notANumber) {","lastModifiedDate":"2023-02-11"},{"lineNumber":210,"author":{"gitId":"benedict733"},"content":"            return errorMsg(\"Please enter a valid number\");","lastModifiedDate":"2023-02-11"},{"lineNumber":211,"author":{"gitId":"benedict733"},"content":"        } catch (IndexOutOfBoundsException badNumber) {","lastModifiedDate":"2023-02-11"},{"lineNumber":212,"author":{"gitId":"benedict733"},"content":"            return errorMsg(String.format(","lastModifiedDate":"2023-02-11"},{"lineNumber":213,"author":{"gitId":"benedict733"},"content":"                    \"Please enter a number from 1 to %d\",","lastModifiedDate":"2023-02-11"},{"lineNumber":214,"author":{"gitId":"benedict733"},"content":"                    arr.size()));","lastModifiedDate":"2023-02-11"},{"lineNumber":215,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":216,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":217,"author":{"gitId":"benedict733"},"content":"    static String delete(String num, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-02-11"},{"lineNumber":218,"author":{"gitId":"benedict733"},"content":"        if (arr.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-11"},{"lineNumber":219,"author":{"gitId":"benedict733"},"content":"            return errorMsg(\"You do not have any items in your list!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":220,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":221,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":222,"author":{"gitId":"benedict733"},"content":"            int index \u003d Integer.parseInt(num) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":223,"author":{"gitId":"benedict733"},"content":"            String taskDescription \u003d arr.get(index).toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":224,"author":{"gitId":"benedict733"},"content":"            arr.remove(index);","lastModifiedDate":"2023-02-11"},{"lineNumber":225,"author":{"gitId":"benedict733"},"content":"            return String.format(\"Noted, I\u0027ve removed this task: \\n\\t%s\\nNow you have %d tasks in this list.\",","lastModifiedDate":"2023-02-11"},{"lineNumber":226,"author":{"gitId":"benedict733"},"content":"                    taskDescription, arr.size());","lastModifiedDate":"2023-02-11"},{"lineNumber":227,"author":{"gitId":"benedict733"},"content":"        } catch (NumberFormatException notANumber) {","lastModifiedDate":"2023-02-11"},{"lineNumber":228,"author":{"gitId":"benedict733"},"content":"            return errorMsg(\"Please enter a valid number\");","lastModifiedDate":"2023-02-11"},{"lineNumber":229,"author":{"gitId":"benedict733"},"content":"        } catch (IndexOutOfBoundsException badNumber) {","lastModifiedDate":"2023-02-11"},{"lineNumber":230,"author":{"gitId":"benedict733"},"content":"            return errorMsg(String.format(","lastModifiedDate":"2023-02-11"},{"lineNumber":231,"author":{"gitId":"benedict733"},"content":"                    \"Please enter a number from 1 to %d\",","lastModifiedDate":"2023-02-11"},{"lineNumber":232,"author":{"gitId":"benedict733"},"content":"                    arr.size()));","lastModifiedDate":"2023-02-11"},{"lineNumber":233,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":234,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":235,"author":{"gitId":"benedict733"},"content":"    static String ownName() {","lastModifiedDate":"2023-02-04"},{"lineNumber":236,"author":{"gitId":"benedict733"},"content":"        String name \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":241,"author":{"gitId":"benedict733"},"content":"        return name;","lastModifiedDate":"2023-01-19"},{"lineNumber":242,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":243,"author":{"gitId":"benedict733"},"content":"    static String greet() {","lastModifiedDate":"2023-02-04"},{"lineNumber":244,"author":{"gitId":"benedict733"},"content":"        return String.format(\"Hello I am:\\n%sWhat can I do for you?\", ownName());","lastModifiedDate":"2023-01-19"},{"lineNumber":245,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":246,"author":{"gitId":"benedict733"},"content":"    static void printList(ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-02-04"},{"lineNumber":247,"author":{"gitId":"benedict733"},"content":"        String str \u003d \"List:\";","lastModifiedDate":"2023-02-11"},{"lineNumber":248,"author":{"gitId":"benedict733"},"content":"        for (int i \u003d 0; i \u003c arr.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":249,"author":{"gitId":"benedict733"},"content":"            str +\u003d String.format(\"\\n\\t%d. %s\", i+1, arr.get(i));","lastModifiedDate":"2023-02-11"},{"lineNumber":250,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":251,"author":{"gitId":"benedict733"},"content":"        print(str);","lastModifiedDate":"2023-01-19"},{"lineNumber":252,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":253,"author":{"gitId":"benedict733"},"content":"    static void exit() {","lastModifiedDate":"2023-02-04"},{"lineNumber":254,"author":{"gitId":"benedict733"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":255,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":256,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":257,"author":{"gitId":"benedict733"},"content":"     * Used to print out any reply with the correct formatting","lastModifiedDate":"2023-02-04"},{"lineNumber":258,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":259,"author":{"gitId":"benedict733"},"content":"    static void print(String reply) {","lastModifiedDate":"2023-02-04"},{"lineNumber":260,"author":{"gitId":"benedict733"},"content":"        String topBottom \u003d \"~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2023-02-11"},{"lineNumber":261,"author":{"gitId":"benedict733"},"content":"        System.out.println(String.format(\"%s\\n%s\\n%s\", topBottom, reply, topBottom));","lastModifiedDate":"2023-02-11"},{"lineNumber":262,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":263,"author":{"gitId":"benedict733"},"content":"    static String errorMsg(String error) {","lastModifiedDate":"2023-02-11"},{"lineNumber":264,"author":{"gitId":"benedict733"},"content":"        return String.format(\"☹ OOPS!!! %s :-(\", error);","lastModifiedDate":"2023-02-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":266,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":267,"author":{"gitId":"benedict733"},"content":"     * Used in Level-1 to echo","lastModifiedDate":"2023-02-04"},{"lineNumber":268,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":269,"author":{"gitId":"benedict733"},"content":"    static void echo(String cmd) {","lastModifiedDate":"2023-02-06"},{"lineNumber":270,"author":{"gitId":"benedict733"},"content":"        System.out.println(cmd);","lastModifiedDate":"2023-02-06"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":9,"benedict733":263}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"import java.util.regex.PatternSyntaxException;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"    private String from;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"    private String to;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"    public Event(String cmd) throws PatternSyntaxException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"        this(cmd, false);","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    public Event(String cmd, boolean isDone) throws PatternSyntaxException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"        this(cmd.split(\" /\")[0],","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"                cmd.split(\" /\")[1].replace(\"from \", \"\"),","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"                cmd.split(\" /\")[2].replace(\"to \", \"\"),","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"                isDone);","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"    public Event(String task, String from, String to, boolean isDone) {","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"        super(task, isDone);","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"     * Return the String for Event","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), from, to);","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"    public String saveString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"        int done \u003d isDone() ? 1 : 0;","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"        return String.format(\"E | %d | %s | %s-%s\", done, getTask(), from, to);","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"benedict733":32}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"import java.util.regex.PatternSyntaxException;","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":" * Task used to hold the string representation of tasks to be done","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"public class Task {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"    private String task;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"    Task(String task) throws PatternSyntaxException {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"        this(task, false);","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"    Task(String task, boolean isDone) {","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"        return this.isDone;","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"     * Sets task as done","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"     * Sets task as not done","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"    protected String getTask() {","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"benedict733"},"content":"        return this.task;","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"benedict733"},"content":"     * Returns the string of the task","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"benedict733"},"content":"    public String toString() {","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"benedict733"},"content":"        String markedAsDone \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"benedict733"},"content":"        return String.format(\"[%s] %s\", markedAsDone, task);","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"benedict733"},"content":"    public String saveString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"benedict733"},"content":"        int done \u003d isDone() ? 1 : 0;","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"benedict733"},"content":"        return String.format(\"Task | %d | %s\", done, task);","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"benedict733":47}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"import java.util.regex.PatternSyntaxException;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"    public ToDo(String cmd) throws PatternSyntaxException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"        super(cmd);","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"    public ToDo(String cmd, boolean isDone) throws PatternSyntaxException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"        super(cmd, isDone);","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"     * Return the String for ToDo","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"    public String saveString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"        int done \u003d isDone() ? 1 : 0;","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"        return String.format(\"T | %d | %s\", done, getTask());","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"benedict733":22}},{"path":"src/main/java/WrongTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"public class WrongTaskFormatException extends Exception {","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"    public WrongTaskFormatException(String errorMessage) {","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"benedict733":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"todo borrow book","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"mark 1","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"list","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"bye","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"benedict733":6}}]
