[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"benedict733":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"     * Minimum length of a string command is given by","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"     * The length of the command +2 (for whitespace and","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"     * at least 1 letter for the command)","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"    static final String HOMEDIRECTORY \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"    static final Path DUKELISTDIRECTORY \u003d Paths.get(HOMEDIRECTORY, \"SavedList.txt\");","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"    static final HashMap\u003cString, Integer\u003e MINVALIDLENGTH \u003d new HashMap\u003c\u003e(Map.of(","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"            \"todo\", 6,","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"            \"deadline\", 10,","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"            \"event\", 7,","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"            \"mark\", 6,","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"            \"unmark\", 8,","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"            \"delete\", 8","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"    ));","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"     * Correct formatting of commands given that the name of the command is correct","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"    static final HashMap\u003cString, String\u003e CORRECTFORMAT \u003d new HashMap\u003c\u003e(Map.of(","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"benedict733"},"content":"            \"todo\", \"todo THE TASK\",","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"            \"deadline\", \"deadline THE TASK /by yyyy-mm-ddThh:mm:ss\",","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"benedict733"},"content":"            \"event\", \"event THE TASK /from TIME /to TIME\",","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"benedict733"},"content":"            \"mark\", \"mark NUMBER\",","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"benedict733"},"content":"            \"unmark\", \"unmark NUMBER\",","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"benedict733"},"content":"            \"delete\", \"delete NUMBER\",","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"benedict733"},"content":"            \"find\", \"find WORDS\"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"benedict733"},"content":"    ));","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"benedict733"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"benedict733"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"benedict733"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"benedict733"},"content":"    public Duke(Path filePath) {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"benedict733"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"benedict733"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"benedict733"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"benedict733"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"benedict733"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"benedict733"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"benedict733"},"content":"    public void run() {","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"benedict733"},"content":"        ui.greet();","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"benedict733"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"benedict733"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"benedict733"},"content":"            try {","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"benedict733"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"benedict733"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"benedict733"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"benedict733"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"benedict733"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"benedict733"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"benedict733"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"benedict733"},"content":"            } finally {","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"benedict733"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"benedict733"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"benedict733"},"content":"        new Duke(DUKELISTDIRECTORY).run();","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"benedict733"},"content":"    /*private static void main(String[] args) {","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"benedict733"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"benedict733"},"content":"        System.out.println(greet());","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"benedict733"},"content":"        // arr \u003d\u003e needs to be updated w old list","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"benedict733"},"content":"        ArrayList\u003ctask.Task\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"benedict733"},"content":"            arr \u003d readSavedFile();","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"benedict733"},"content":"        } catch (IOException unknown) {","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"benedict733"},"content":"            print(unknown + \"\\nUnsure of error\");","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"benedict733"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"benedict733"},"content":"            String cmd \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"benedict733"},"content":"            if (cmd.equals(\"bye\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"benedict733"},"content":"                exit();","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"benedict733"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"benedict733"},"content":"            execute(cmd, arr);","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"benedict733"},"content":"//            echo(sc.nextLine());","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"benedict733"},"content":"        sc.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"benedict733"},"content":"    }*/","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"benedict733":94}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":" * Exception thrown from Duke\u0027s code.","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"benedict733":10}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"import duke.command.AddTaskCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"public class Parser {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"    static final String VALIDCOMMANDS \u003d \"bye, list, mark, unmark, delete, todo, deadline, event, find\";","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"    static final HashMap\u003cString, String\u003e CORRECTFORMAT \u003d new HashMap\u003c\u003e(Map.of(","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"            \"list\", \"list\",","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"            \"bye\", \"bye\",","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"            \"todo\", \"todo THE TASK\",","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"            \"deadline\", \"deadline THE TASK /by yyyy-mm-ddThh:mm:ss\",","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"            \"event\", \"event THE TASK /from TIME /to TIME\",","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"            \"mark\", \"mark NUMBER\",","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"            \"unmark\", \"unmark NUMBER\",","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"            \"delete\", \"delete NUMBER\",","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"            \"find\", \"find WORDS\"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"    ));","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"        String[] words \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"        if (!CORRECTFORMAT.containsKey(words[0])) {","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"benedict733"},"content":"            String noValid \u003d \"I\u0027m sorry, but I don\u0027t know what that means. My valid commands are:\\n\";","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"            noValid +\u003d VALIDCOMMANDS;","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"benedict733"},"content":"            throw new DukeException(noValid);","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"benedict733"},"content":"        Command cmd \u003d new Command();","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"benedict733"},"content":"            switch (words[0]) {","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"benedict733"},"content":"                case \"bye\":","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"benedict733"},"content":"                    cmd \u003d new ExitCommand();","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"benedict733"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"benedict733"},"content":"                case \"list\":","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"benedict733"},"content":"                    cmd \u003d new ListCommand();","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"benedict733"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"benedict733"},"content":"                case \"mark\":","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"benedict733"},"content":"                    cmd \u003d new MarkCommand(words[1]);","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"benedict733"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"benedict733"},"content":"                case \"unmark\":","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"benedict733"},"content":"                    cmd \u003d new UnmarkCommand(words[1]);","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"benedict733"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"benedict733"},"content":"                case \"delete\":","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"benedict733"},"content":"                    cmd \u003d new DeleteCommand(words[1]);","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"benedict733"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"benedict733"},"content":"                case \"find\":","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"benedict733"},"content":"                    cmd \u003d new FindCommand(words[1]);","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"benedict733"},"content":"                    break;","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"benedict733"},"content":"                default:    // for tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"benedict733"},"content":"                    cmd \u003d new AddTaskCommand(fullCommand);","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"benedict733"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"benedict733"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"benedict733"},"content":"            throw new DukeException(\"Please enter in the correct format:\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"benedict733"},"content":"                    CORRECTFORMAT.get(words[0]));","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"benedict733"},"content":"        return cmd;","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"benedict733":65}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"import java.util.List;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"public class Storage {","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"    static final String HOMEDIRECTORY \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"    static final Path DEFAULTDIRECTORY \u003d Paths.get(HOMEDIRECTORY, \"SavedList.txt\");","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"    private final Path filePath;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"    public Storage(Path filePath) {","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"            return this.readSavedFile(this.filePath);","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"            throw new DukeException(\"File is corrupted.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"    public ArrayList\u003cTask\u003e readSavedFile(Path path) throws IOException, DukeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"benedict733"},"content":"            Files.createFile(path);","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"benedict733"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"benedict733"},"content":"        } catch (FileAlreadyExistsException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"benedict733"},"content":"            ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"benedict733"},"content":"            List\u003cString\u003e savedList \u003d Files.readAllLines(path);","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"benedict733"},"content":"            for (String task : savedList) {","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"benedict733"},"content":"                try {","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"benedict733"},"content":"                    arr.add(readLineToTask(task));","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"benedict733"},"content":"                } catch (WrongTaskFormatException | ArrayIndexOutOfBoundsException wrongFormat) {","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"benedict733"},"content":"                    throw new DukeException(\"File format of tasks is wrong.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"benedict733"},"content":"                }","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"benedict733"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"benedict733"},"content":"            return arr;","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"benedict733"},"content":"    public Task readLineToTask(String taskDescription) throws WrongTaskFormatException {","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"benedict733"},"content":"        String[] items \u003d taskDescription.split(\" \\\\| \");","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"benedict733"},"content":"        boolean isDone \u003d getIsDone(items[1]);","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"benedict733"},"content":"        Task task \u003d new Task(taskDescription, isDone);","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"benedict733"},"content":"        switch(items[0]) {","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"benedict733"},"content":"            case \"T\":","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"benedict733"},"content":"                task \u003d new ToDo(items[2], isDone);","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"benedict733"},"content":"            case \"D\":","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"benedict733"},"content":"                task \u003d new Deadline(items[2], items[3], isDone);","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"benedict733"},"content":"            case \"E\":","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"benedict733"},"content":"                String[] timeOfEvent \u003d items[3].split(\"-\");","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"benedict733"},"content":"                task \u003d new Event(items[2], timeOfEvent[0], timeOfEvent[1], isDone);","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"benedict733"},"content":"            default:","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"benedict733"},"content":"                throw new WrongTaskFormatException(\"Invalid task.Task String Format\");","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"benedict733"},"content":"        return task;","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"benedict733"},"content":"    public boolean getIsDone(String doneString) {","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"benedict733"},"content":"        return doneString.equals(\"1\");","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"benedict733"},"content":"    public void saveList(TaskList tasks) {","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"benedict733"},"content":"            // no need to deleteIfExists as BufferedWritter automatically clears all prev input","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"benedict733"},"content":"            BufferedWriter fileWriter \u003d Files.newBufferedWriter(this.filePath);","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"benedict733"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"benedict733"},"content":"                fileWriter.write(task.saveString());","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"benedict733"},"content":"                fileWriter.newLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"benedict733"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"benedict733"},"content":"            fileWriter.close();","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"benedict733"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"benedict733"},"content":"            // unsure of what cases would throw IOException under deleteIfExists","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"benedict733":85}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"public class Ui {","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"    private static final String LINE \u003d \"~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"    private final Scanner sc;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"    public Ui() {","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"        // error in reading the file","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"        print(\"error\");","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"    public void print(String toBePrinted) {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"        System.out.println(toBePrinted);","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"        print(errorMsg(errorMessage));","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"    public String errorMsg(String error) {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"        return String.format(\"☹ OOPS!!!\\n%s :-(\", error);","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"     * Used in Level-1 to echo","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"    public void echo(String cmd) {","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"        System.out.println(cmd);","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"    public String ownName() {","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"benedict733"},"content":"        String name \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"benedict733"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"benedict733"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"benedict733"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"benedict733"},"content":"        return name;","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"benedict733"},"content":"    public void greet() {","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"benedict733"},"content":"        print(String.format(\"Hello I am:\\n%sWhat can I do for you?\", ownName()));","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"benedict733"},"content":"    public void showLine() {","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"benedict733"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"benedict733"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"benedict733"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"benedict733"},"content":"    public void closeUi() {","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"benedict733"},"content":"        this.sc.close();","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"benedict733":50}},{"path":"src/main/java/duke/WrongTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"public class WrongTaskFormatException extends Exception {","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"    public WrongTaskFormatException(String errorMessage) {","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"benedict733":7}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke.command;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"import java.util.regex.PatternSyntaxException;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"    private final String typeOfTask;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"    public AddTaskCommand(String command) {","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"        super(command);","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"        this.typeOfTask \u003d command.split(\" \")[0];","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"        try{","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"            Task task \u003d makeTask();","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"            tasks.add(task);","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"            ui.print(String.format(\"Got it. I\u0027ve added this task:\\n\\t%s\\nNow you have %d tasks in the list.\", task, tasks.size()));","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"            storage.saveList(tasks);","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"        } catch (RuntimeException wrongFormat) {","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"            throw new DukeException(\"Please enter the command in the correct format:\\n\" + correctFormat());","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"benedict733"},"content":"    private Task makeTask() throws PatternSyntaxException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"        Task task \u003d new Task(this.command);","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"benedict733"},"content":"        String cmd \u003d this.command.replace(typeOfTask + \" \", \"\");","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"benedict733"},"content":"        switch (typeOfTask) {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"benedict733"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"benedict733"},"content":"                task \u003d new ToDo(cmd);","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"benedict733"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"benedict733"},"content":"                task \u003d new Deadline(cmd);","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"benedict733"},"content":"            case \"event\":","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"benedict733"},"content":"                task \u003d new Event(cmd);","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"benedict733"},"content":"        return task;","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"benedict733"},"content":"    public String correctFormat() {","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"benedict733"},"content":"        String format \u003d \"THE TASK\";","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"benedict733"},"content":"        switch(this.typeOfTask) {","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"benedict733"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"benedict733"},"content":"                format \u003d \"todo [TASK]\";","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"benedict733"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"benedict733"},"content":"                format \u003d \"deadline [TASK] /by yyyy-mm-ddThh:mm:ss\";","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"benedict733"},"content":"            case \"event\":","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"benedict733"},"content":"                format \u003d \"event [TASK] /from TIME /to TIME\";","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"benedict733"},"content":"        return format;","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"benedict733"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"benedict733"},"content":"        return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"benedict733":66}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke.command;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"public class Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    protected final String command;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"    public Command() {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"        this(\"\");","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"    public Command(String command) {","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"        // do the commands purpose","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"        // ui.print() the correct output","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"        return;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"        return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"benedict733":24}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke.command;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    private final String index;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"    public DeleteCommand(String index) {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"        super(\"delete\");","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"            int idx \u003d Integer.parseInt(this.index);","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"            String taskDescription \u003d tasks.delete(idx);","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"            ui.print(String.format(\"Noted, I\u0027ve removed this task: \\n\\t%s\\nNow you have %d tasks in this list.\",","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"                    taskDescription, tasks.size()));","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"            storage.saveList(tasks);","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"        } catch (NumberFormatException notANumber) {","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"            throw new DukeException(\"Please enter a valid number\");","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"        return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"benedict733":30}},{"path":"src/main/java/duke/command/EchoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke.command;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"public class EchoCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"    private final String input;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    public EchoCommand(String input) {","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"        ui.print(input);","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"benedict733":16}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke.command;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"        storage.saveList(tasks);","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"        ui.closeUi();","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"        return true;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"benedict733":17}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke.command;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    public FindCommand(String wordsToFind) {","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"        super(wordsToFind);","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"        TaskList tasksWithWords \u003d tasks.find(this.command);","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"        if (tasksWithWords.isEmpty()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"            throw new DukeException(\"There are no tasks found with words:\\n\" + this.command);","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"        String str \u003d \"List:\";","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"        for (int i \u003d 1; i \u003c\u003d tasksWithWords.size(); i++) {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"            str +\u003d String.format(\"\\n\\t%d. %s\", i, tasksWithWords.get(i));","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"        ui.print(str);","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"benedict733":25}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke.command;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"        String str \u003d \"List:\";","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"            str +\u003d String.format(\"\\n\\t%d. %s\", i, tasks.get(i));","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"        ui.print(str);","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"        return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"benedict733":21}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke.command;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    private final String index;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"    public MarkCommand(String index) {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"        super(\"mark\");","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"            throw new DukeException(\"You do not have any items in your list!\");","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"            int idx \u003d Integer.parseInt(this.index);","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"            tasks.get(idx).markAsDone();","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"            ui.print(String.format(\"Nice! I\u0027ve marked this task as done: \\n\\t%s\",","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"                    tasks.get(idx)));","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"            storage.saveList(tasks);","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"        } catch (NumberFormatException notANumber) {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"            throw new DukeException(\"Please enter a valid number\");","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"benedict733"},"content":"        return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"benedict733":33}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke.command;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    private final String index;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"    public UnmarkCommand(String index) {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"        super(\"unmark\");","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"            throw new DukeException(\"You do not have any items in your list!\");","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"            int idx \u003d Integer.parseInt(this.index);","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"            tasks.get(idx).unmarkAsDone();","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"            ui.print(String.format(\"Nice! I\u0027ve marked this task as done: \\n\\t%s\",","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"                    tasks.get(idx)));","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"            storage.saveList(tasks);","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"        } catch (NumberFormatException notANumber) {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"            throw new DukeException(\"Please enter a valid number\");","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"benedict733"},"content":"        return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"benedict733":33}},{"path":"src/main/java/duke/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"todo borrow book","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"mark 2","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"list","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"bye","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"benedict733":6}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke.task;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"import java.util.regex.PatternSyntaxException;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    public Deadline(String cmd) throws PatternSyntaxException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"        this(cmd,false);","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"    public Deadline(String cmd, boolean isDone) throws PatternSyntaxException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"        this(cmd.split(\" /by \")[0],","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"                cmd.split(\" /by \")[1],","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"                isDone);","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"    public Deadline(String task, String deadlineString, boolean isDone)","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"            throws PatternSyntaxException, ArrayIndexOutOfBoundsException, DateTimeParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"        super(task, isDone);","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"        this.deadline \u003d LocalDateTime.parse(deadlineString);","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"     * Return the String for Deadline","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"        return String.format(\"[D]%s (by:%s)\", super.toString(), deadline);","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"    public String saveString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"benedict733"},"content":"        int done \u003d isDone() ? 1 : 0;","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"        return String.format(\"D | %d | %s | %s\", done, getTask(), deadline);","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"benedict733":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke.task;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import java.util.regex.PatternSyntaxException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"    private final String from;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"    private final String to;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"    public Event(String cmd) throws PatternSyntaxException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"        this(cmd, false);","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"    public Event(String cmd, boolean isDone) throws PatternSyntaxException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"        this(cmd.split(\" /\")[0],","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"                cmd.split(\" /\")[1].replace(\"from \", \"\"),","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"                cmd.split(\" /\")[2].replace(\"to \", \"\"),","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"                isDone);","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"    public Event(String task, String from, String to, boolean isDone) {","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"        super(task, isDone);","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"     * Return the String for Event","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), from, to);","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"    public String saveString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"benedict733"},"content":"        int done \u003d isDone() ? 1 : 0;","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"        return String.format(\"E | %d | %s | %s-%s\", done, getTask(), from, to);","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"benedict733":34}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke.task;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import java.util.regex.PatternSyntaxException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":" * task.Task used to hold the string representation of tasks to be done","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"public class Task {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    private final String task;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"    public Task(String task) throws PatternSyntaxException {","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"        this(task, false);","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"    public Task(String task, boolean isDone) {","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"        return this.isDone;","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"     * Sets task as done","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"     * Sets task as not done","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"benedict733"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"benedict733"},"content":"    protected String getTask() {","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"benedict733"},"content":"        return this.task;","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"benedict733"},"content":"     * Returns the string of the task","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"benedict733"},"content":"    public String toString() {","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"benedict733"},"content":"        String markedAsDone \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"benedict733"},"content":"        return String.format(\"[%s] %s\", markedAsDone, task);","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"benedict733"},"content":"    public String saveString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"benedict733"},"content":"        int done \u003d isDone() ? 1 : 0;","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"benedict733"},"content":"        return String.format(\"Task | %d | %s\", done, task);","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"benedict733":48}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke.task;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"public class TaskList {","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"    public Task get(int index) throws DukeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"            return tasks.get(index - 1);","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"            throw new DukeException(String.format(","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"                    \"Please enter a number from 1 to %d\",","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"                    this.size()));","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"    public int size() {","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"        return tasks.size();","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"benedict733"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"benedict733"},"content":"    public String delete(int index) throws DukeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"benedict733"},"content":"        if (size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"benedict733"},"content":"            throw new DukeException(\"You do not have any items in your list!\");","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"benedict733"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"benedict733"},"content":"            String taskDescription \u003d this.get(index).toString();","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"benedict733"},"content":"            this.tasks.remove(index-1);","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"benedict733"},"content":"            return taskDescription;","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"benedict733"},"content":"        } catch (IndexOutOfBoundsException badNumber) {","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"benedict733"},"content":"            throw new DukeException(String.format(","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"benedict733"},"content":"                    \"Please enter a number from 1 to %d\",","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"benedict733"},"content":"                    this.size()));","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"benedict733"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"benedict733"},"content":"        return this.tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"benedict733"},"content":"    public TaskList find(String words) {","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"benedict733"},"content":"        ArrayList\u003cTask\u003e tasksWithWord \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"benedict733"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"benedict733"},"content":"            if (task.getTask().contains(words)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"benedict733"},"content":"                tasksWithWord.add(task);","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"benedict733"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"benedict733"},"content":"        return new TaskList(tasksWithWord);","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"benedict733":59}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke.task;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import java.util.regex.PatternSyntaxException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"    public ToDo(String cmd) throws PatternSyntaxException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"        super(cmd);","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    public ToDo(String cmd, boolean isDone) throws PatternSyntaxException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"        super(cmd, isDone);","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"     * Return the String for duke.task.ToDo","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"    public String saveString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"        int done \u003d isDone() ? 1 : 0;","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"        return String.format(\"T | %d | %s\", done, getTask());","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"benedict733":24}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke.task;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"    public void getTask_alphabetsNumbers_success() {","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"        String input \u003d \"abcdefADCDEF123456\";","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"        Task task \u003d new Task(input);","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"        assertEquals(input, task.getTask());","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"    public void saveString_markAsDone_success() {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"        Task task \u003d new Task(\"the task\");","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"        task.markAsDone();","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"        assertEquals(\"Task | 1 | the task\", task.saveString());","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"benedict733":20}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"package duke.task;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"    public void testStringUnmarked() {","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"        ToDo task \u003d new ToDo(\"A123!@# task\");","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"        assertEquals(\"[T][ ] A123!@# task\", task.toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"        assertEquals(\"T | 0 | A123!@# task\", task.saveString());","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"    public void testStringMarked() {","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"        ToDo task1 \u003d new ToDo(\"A123!@# task\");","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"        task1.markAsDone();","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"        ToDo task2 \u003d new ToDo(\"A123!@# task\", true);","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"        assertEquals(\"[T][X] A123!@# task\", task1.toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"        assertEquals(\"T | 1 | A123!@# task\", task1.saveString());","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"        assertEquals(\"[T][X] A123!@# task\", task2.toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"        assertEquals(\"T | 1 | A123!@# task\", task2.saveString());","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"benedict733":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"todo borrow book","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"mark 1","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"list","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"bye","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"benedict733":6}}]
