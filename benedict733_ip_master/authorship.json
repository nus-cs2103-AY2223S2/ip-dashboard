[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"    private String deadline;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"    public Deadline(String cmd) {","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"        this(cmd.replace(\"deadline \", \"\").split(\" /by\")[0],","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"                cmd.replace(\"deadline \", \"\").split(\" /by\")[1]);","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"    Deadline(String task, String deadline) {","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"        super(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"     * Return the String for Deadline","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"        return String.format(\"[D]%s (by:%s)\", super.toString(), deadline);","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"benedict733":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"    static final String BYE \u003d \"bye\";","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"        System.out.println(greet());","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"            String cmd \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"            if (cmd.equals(BYE)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"                exit();","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"            execute(cmd, arr);","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"        sc.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"    static void execute(String cmd, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"        String[] words \u003d cmd.split(\" \");","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"        switch (words[0]) {","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"            case \"list\":","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"                printList(arr);","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"                mark(words[1], arr);","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"benedict733"},"content":"                unmark(words[1], arr);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"benedict733"},"content":"            default:","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"benedict733"},"content":"                print(add(cmd, arr));","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"benedict733"},"content":"        /* if (words[0].equals(\"list\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"benedict733"},"content":"            printList(arr);","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"benedict733"},"content":"        } else if (words[0].equals(\"mark\")) {   //try catch if words have 2 elements","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"benedict733"},"content":"            mark(words[1], arr);","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"benedict733"},"content":"        } else if (words[0].equals(\"unmark\")) { //try catch if words have 2 elements","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"benedict733"},"content":"            unmark(words[1], arr);","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"benedict733"},"content":"        } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"benedict733"},"content":"            print(add(cmd, arr));","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"benedict733"},"content":"        }*/","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"benedict733"},"content":"    static void mark(String num, ArrayList\u003cTask\u003e arr) {     //try catch, possibility of error if user enter wrong cmd","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"benedict733"},"content":"        int index \u003d Integer.parseInt(num);","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"benedict733"},"content":"        arr.get(index - 1).markAsDone();","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"benedict733"},"content":"        print(String.format(\"Nice! I\u0027ve marked this task as done: \\n\\t%s\", arr.get(index - 1)));","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"benedict733"},"content":"    static void unmark(String num, ArrayList\u003cTask\u003e arr) {   //try catch, possibility of error if user enter wrong cmd","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"benedict733"},"content":"        int index \u003d Integer.parseInt(num);","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"benedict733"},"content":"        arr.get(index - 1).unmarkAsDone();","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"benedict733"},"content":"        print(String.format(\"Ok, I\u0027ve marked this task as not done yet: \\n\\t%s\", arr.get(index - 1)));","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"benedict733"},"content":"    static String ownName() {","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"benedict733"},"content":"        String name \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"benedict733"},"content":"        return name;","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"benedict733"},"content":"    static String greet() {","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"benedict733"},"content":"        return String.format(\"Hello I am: \\n%sWhat can I do for you?\", ownName());","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"benedict733"},"content":"    static String add(String cmd, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"benedict733"},"content":"        String[] words \u003d cmd.split(\" \");","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"benedict733"},"content":"        String typeOfTask \u003d words[0];","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"benedict733"},"content":"        Task task \u003d new Task(cmd);","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"benedict733"},"content":"        switch(typeOfTask) {","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"benedict733"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"benedict733"},"content":"                task \u003d new ToDo(cmd);","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"benedict733"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"benedict733"},"content":"                task \u003d new Deadline(cmd);","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"benedict733"},"content":"            case \"event\":","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"benedict733"},"content":"                task \u003d new Event(cmd);","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"benedict733"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"benedict733"},"content":"        arr.add(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"benedict733"},"content":"        return String.format(\"Got it. I\u0027ve added this task: \\n\\t\\t%s \\n\\tNow you have %d tasks in the list.\", task, arr.size());","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"benedict733"},"content":"    static void printList(ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"benedict733"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"benedict733"},"content":"        for (int i \u003d 0; i \u003c arr.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"benedict733"},"content":"            if (i !\u003d 0) {","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"benedict733"},"content":"                str +\u003d \"\\t\";","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"benedict733"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"benedict733"},"content":"            str +\u003d String.format(\"%d. %s \\n\", i+1, arr.get(i));","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"benedict733"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"benedict733"},"content":"        print(str);","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"benedict733"},"content":"    static void exit() {","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"benedict733"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"benedict733"},"content":"     * Used to print out any reply with the correct formatting","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"benedict733"},"content":"    static void print(String reply) {","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"benedict733"},"content":"        String topBottom \u003d \"~~~~~~~~~~~~~~~~~~~~\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"benedict733"},"content":"        System.out.println(String.format(\"\\t%s \\t%s\\n \\t%s\", topBottom, reply, topBottom));","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"benedict733"},"content":"     * Used in Level-1 to echo","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"benedict733"},"content":"    static String echo(String cmd) {","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"benedict733"},"content":"        return cmd;","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":9,"benedict733":103}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"    private String from;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"    private String to;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"    public Event(String cmd) {","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"        this(cmd.replace(\"event \", \"\").split(\" /\")[0],","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"                cmd.replace(\"event \", \"\").split(\" /\")[1].replace(\"from \", \"\"),","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"                cmd.replace(\"event \", \"\").split(\" /\")[2].replace(\"to \", \"\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    Event(String task, String from, String to) {","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"        super(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"     * Return the String for Event","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), from, to);","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"benedict733":21}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":" * Task used to hold the string representation of tasks to be done","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"public class Task {","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"    private String task;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"    Task(String task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"        this(task, false);","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"    Task(String task, boolean isDone) {","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"benedict733"},"content":"     * Sets task as done","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"benedict733"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"benedict733"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"benedict733"},"content":"     * Sets task as not done","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"benedict733"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"benedict733"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"benedict733"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"benedict733"},"content":"     * Returns the string of the task","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"benedict733"},"content":"    public String toString() {","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"benedict733"},"content":"        String markedAsDone \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"benedict733"},"content":"        return String.format(\"[%s] %s\", markedAsDone, task);","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"benedict733":35}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benedict733"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"benedict733"},"content":"    public ToDo(String cmd) {","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"benedict733"},"content":"        super(cmd);","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"benedict733"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"benedict733"},"content":"     * Return the String for ToDo","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"benedict733"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"benedict733"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"benedict733"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"benedict733"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"benedict733"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"benedict733"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"benedict733":12}}]
