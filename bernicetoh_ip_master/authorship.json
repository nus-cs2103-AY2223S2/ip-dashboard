[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bernicetoh"},"content":"[D][ ] return toy (by: 15 Oct 2019)","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bernicetoh"},"content":"[E][X] event project (from: 10 Mar 2018 to: 11 Mar 2018)","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bernicetoh"},"content":"[T][ ] hw","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bernicetoh":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernicetoh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"bernicetoh"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bernicetoh"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bernicetoh"},"content":"import task.Task;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"bernicetoh"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"bernicetoh"},"content":"import ui.TextUi;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bernicetoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bernicetoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"bernicetoh"},"content":"    private TextUi ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bernicetoh"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"bernicetoh"},"content":"    public Duke() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"bernicetoh"},"content":"        this.ui \u003d new TextUi();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"bernicetoh"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"bernicetoh"},"content":"    public void run() {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"bernicetoh"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"bernicetoh"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"bernicetoh"},"content":"        String command \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"bernicetoh"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"bernicetoh"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"bernicetoh"},"content":"            if (command.equals(\"list\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"bernicetoh"},"content":"                parser.listCommand(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"bernicetoh"},"content":"            } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"bernicetoh"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"bernicetoh"},"content":"                    parser.checkCommand(taskList, command);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"bernicetoh"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"bernicetoh"},"content":"                    System.out.println(e);","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"bernicetoh"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"bernicetoh"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"bernicetoh"},"content":"            parser.nextCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"bernicetoh"},"content":"            command \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"bernicetoh"},"content":"        parser.byeCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"bernicetoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"bernicetoh"},"content":"        new Duke().run();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bernicetoh":43,"-":9}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernicetoh"},"content":"package exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"bernicetoh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"bernicetoh"},"content":"    public DukeException(String errorMsg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"bernicetoh"},"content":"        super(errorMsg);","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"bernicetoh"},"content":"}","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"bernicetoh":9}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernicetoh"},"content":"package parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bernicetoh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bernicetoh"},"content":"import task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bernicetoh"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bernicetoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bernicetoh"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"bernicetoh"},"content":"     * Returns true if a String is numerical; return false otherwise.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"bernicetoh"},"content":"    public static boolean isNumber(String str) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"bernicetoh"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"bernicetoh"},"content":"            Double.parseDouble(str);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"bernicetoh"},"content":"            return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"bernicetoh"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"bernicetoh"},"content":"            return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"bernicetoh"},"content":"     * Returns the number of \u0027/\u0027 characters in the command.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"bernicetoh"},"content":"     * @return The number of \u0027/\u0027 characters in the command","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"bernicetoh"},"content":"    public static int countSlash(String str) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"bernicetoh"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"bernicetoh"},"content":"        for (int i \u003d 0; i \u003c str.length(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"bernicetoh"},"content":"            if (str.charAt(i) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"bernicetoh"},"content":"                count ++;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"bernicetoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"bernicetoh"},"content":"        return count;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"bernicetoh"},"content":"     * Executes the mark command by marking the task as done.","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"bernicetoh"},"content":"     * @param taskList The tasklist that the task is in","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"bernicetoh"},"content":"     * @param t The task to be marked as done","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"bernicetoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"bernicetoh"},"content":"    public static void markCommand(TaskList taskList, Task t) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"bernicetoh"},"content":"        taskList.markTask(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"bernicetoh"},"content":"     * Executes the unmark command by unmarking the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"bernicetoh"},"content":"     * @param taskList The tasklist that the task is in","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"bernicetoh"},"content":"     * @param t The task to be marked as undone","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"bernicetoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"bernicetoh"},"content":"    public static void unmarkCommand(TaskList taskList, Task t) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"bernicetoh"},"content":"        taskList.unmarkTask(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"bernicetoh"},"content":"     * Executes the list command by listing the tasks in the tasklist.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"bernicetoh"},"content":"     * @param taskList The tasklist to be listed out","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"bernicetoh"},"content":"    public static void listCommand(TaskList taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"bernicetoh"},"content":"        if (taskList.getNumTasks() \u003d\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"bernicetoh"},"content":"            System.out.println(\"You have no tasks in your list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"bernicetoh"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"bernicetoh"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"bernicetoh"},"content":"            System.out.println(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"bernicetoh"},"content":"     * Executes the todo command.","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"bernicetoh"},"content":"     * @param tasklist The tasklist to add the todo","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"bernicetoh"},"content":"     * @param desc The title of the todo","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"bernicetoh"},"content":"    public static void todoCommand(TaskList tasklist, String desc) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"bernicetoh"},"content":"        System.out.println(\"Got it, I\u0027ve added this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"bernicetoh"},"content":"        tasklist.addTodo(desc);","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"bernicetoh"},"content":"     * Executes the deadline command.","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"bernicetoh"},"content":"     * @param taskList The tasklist to add the deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"bernicetoh"},"content":"     * @param desc The title of the deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"bernicetoh"},"content":"     * @param date The time/date of the deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"bernicetoh"},"content":"    public static void deadlineCommand(TaskList taskList, String desc, String date) {","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"bernicetoh"},"content":"        // convert string date to localdate","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"bernicetoh"},"content":"        LocalDate localDate \u003d LocalDate.parse(date);","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"bernicetoh"},"content":"        System.out.println(\"Got it, I\u0027ve added this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"bernicetoh"},"content":"        taskList.addDeadline(localDate, desc);","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"bernicetoh"},"content":"     * Executes the event command.","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"bernicetoh"},"content":"     * @param taskList The tasklist to add the event","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"bernicetoh"},"content":"     * @param start The start time/date of the event","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"bernicetoh"},"content":"     * @param end The end time/date of the event","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"bernicetoh"},"content":"     * @param desc The title of the event","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"bernicetoh"},"content":"    public static void eventCommand(TaskList taskList, String start, String end, String desc) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"bernicetoh"},"content":"        System.out.println(\"Got it, I\u0027ve added this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"bernicetoh"},"content":"        LocalDate startLocalDate \u003d LocalDate.parse(start);","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"bernicetoh"},"content":"        LocalDate endLocalDate \u003d LocalDate.parse(end);","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"bernicetoh"},"content":"        taskList.addEvent(startLocalDate, endLocalDate, desc);","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"bernicetoh"},"content":"     * Executes the delete command.","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"bernicetoh"},"content":"     * @param taskList The tasklist to delete the task from","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"bernicetoh"},"content":"     * @param taskNum The task number of the task to be deleted","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"bernicetoh"},"content":"    public static void deleteCommand(TaskList taskList, int taskNum) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"bernicetoh"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"bernicetoh"},"content":"        taskList.deleteTask(taskNum);","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"bernicetoh"},"content":"     * Executes the next command.","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"bernicetoh"},"content":"    public static void nextCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"bernicetoh"},"content":"        System.out.println(\"What else can I do for you?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"bernicetoh"},"content":"     * Executes the bye command.","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"bernicetoh"},"content":"    public static void byeCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"bernicetoh"},"content":"        System.out.println(\"Bye. Hope to see you again soon! :-p\");","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"bernicetoh"},"content":"     * Checks if the command is in the right format in order to execute the mark command.","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"bernicetoh"},"content":"    public static void checkMark(TaskList taskList, String command) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"bernicetoh"},"content":"        String arr[] \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"bernicetoh"},"content":"        if (arr.length \u003d\u003d 2 \u0026\u0026 isNumber(arr[1]) \u0026\u0026 (arr[0].equals(\"mark\") || arr[0].equals(\"unmark\"))) {","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"bernicetoh"},"content":"            // check if task exists","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"bernicetoh"},"content":"            int taskNum \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"bernicetoh"},"content":"            if (taskList.doesTaskExist(taskNum)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"bernicetoh"},"content":"                // mark or unmark task","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"bernicetoh"},"content":"                if (arr[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"bernicetoh"},"content":"                    markCommand(taskList, taskList.getTask(taskNum - 1));","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"bernicetoh"},"content":"                } else if (arr[0].equals(\"unmark\")){","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"bernicetoh"},"content":"                    unmarkCommand(taskList, taskList.getTask(taskNum - 1));","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"bernicetoh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"bernicetoh"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"bernicetoh"},"content":"                throw new DukeException(\"Huh... the task does not exist.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"bernicetoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"bernicetoh"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"bernicetoh"},"content":"            throw new DukeException(\"Hmm... I can\u0027t quite understand you :-/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"bernicetoh"},"content":"     * Checks if the command is in the right format to execute a delete command.","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"bernicetoh"},"content":"     * @param taskList","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"bernicetoh"},"content":"     * @param command","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"bernicetoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"bernicetoh"},"content":"    public static void checkDelete(TaskList taskList, String command) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"bernicetoh"},"content":"        String arr[] \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"bernicetoh"},"content":"        if (arr.length \u003d\u003d 2 \u0026\u0026 arr[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"bernicetoh"},"content":"            if (isNumber(arr[1])) {","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"bernicetoh"},"content":"                if (taskList.doesTaskExist(Integer.parseInt(arr[1]))) {","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"bernicetoh"},"content":"                    deleteCommand(taskList, Integer.parseInt(arr[1]));","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"bernicetoh"},"content":"                } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"bernicetoh"},"content":"                    throw new DukeException(\"Huh... the task does not exist.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":179,"author":{"gitId":"bernicetoh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":180,"author":{"gitId":"bernicetoh"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":181,"author":{"gitId":"bernicetoh"},"content":"                throw new DukeException(\"Oops! You need to specify the task number for me to delete it.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":182,"author":{"gitId":"bernicetoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":183,"author":{"gitId":"bernicetoh"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":184,"author":{"gitId":"bernicetoh"},"content":"            throw new DukeException(\"Hmm... I can\u0027t quite understand you :-/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":185,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":186,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":187,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":188,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":189,"author":{"gitId":"bernicetoh"},"content":"     * Checks the command in order to execute the corresponding command correctly.","lastModifiedDate":"2023-01-26"},{"lineNumber":190,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":191,"author":{"gitId":"bernicetoh"},"content":"    public static void checkCommand(TaskList taskList, String command) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":192,"author":{"gitId":"bernicetoh"},"content":"        String arr[] \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2023-01-26"},{"lineNumber":193,"author":{"gitId":"bernicetoh"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":194,"author":{"gitId":"bernicetoh"},"content":"            if (arr[0].equals(\"todo\") || arr[0].equals(\"event\") || arr[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":195,"author":{"gitId":"bernicetoh"},"content":"                String e \u003d String.format(\"Oops! The description of a %s cannot be empty.\", arr[0]);","lastModifiedDate":"2023-01-26"},{"lineNumber":196,"author":{"gitId":"bernicetoh"},"content":"                throw new DukeException(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":197,"author":{"gitId":"bernicetoh"},"content":"            } else if (command.equals(\"mark\") || command.equals(\"unmark\")","lastModifiedDate":"2023-01-26"},{"lineNumber":198,"author":{"gitId":"bernicetoh"},"content":"                    || command.equals(\"mark \") || command.equals(\"unmark \") || command.equals(\"delete\") || command.equals(\"delete \")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":199,"author":{"gitId":"bernicetoh"},"content":"                String e \u003d String.format(\"Oops! You need to specify the task number for me to %s it.\", command);","lastModifiedDate":"2023-01-26"},{"lineNumber":200,"author":{"gitId":"bernicetoh"},"content":"                throw new DukeException(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":201,"author":{"gitId":"bernicetoh"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":202,"author":{"gitId":"bernicetoh"},"content":"                throw new DukeException(\"Hmm... I can\u0027t quite understand you :-/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":203,"author":{"gitId":"bernicetoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":204,"author":{"gitId":"bernicetoh"},"content":"        } else if (arr[0].equals(\"mark\") || arr[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":205,"author":{"gitId":"bernicetoh"},"content":"            checkMark(taskList, command);","lastModifiedDate":"2023-01-26"},{"lineNumber":206,"author":{"gitId":"bernicetoh"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":207,"author":{"gitId":"bernicetoh"},"content":"            if (arr[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":208,"author":{"gitId":"bernicetoh"},"content":"                String desc \u003d command.split(\" \", 2)[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":209,"author":{"gitId":"bernicetoh"},"content":"                todoCommand(taskList, desc);","lastModifiedDate":"2023-01-26"},{"lineNumber":210,"author":{"gitId":"bernicetoh"},"content":"            } else if (arr[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":211,"author":{"gitId":"bernicetoh"},"content":"                if (!command.contains(\"/by\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":212,"author":{"gitId":"bernicetoh"},"content":"                    throw new DukeException(\"Please specify the deadline.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":213,"author":{"gitId":"bernicetoh"},"content":"                } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":214,"author":{"gitId":"bernicetoh"},"content":"                    String segments[] \u003d command.split(\"/by \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":215,"author":{"gitId":"bernicetoh"},"content":"                    String desc \u003d segments[0].split(\"deadline \", 2)[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":216,"author":{"gitId":"bernicetoh"},"content":"                    String date \u003d segments[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":217,"author":{"gitId":"bernicetoh"},"content":"                    deadlineCommand(taskList, desc, date);","lastModifiedDate":"2023-01-26"},{"lineNumber":218,"author":{"gitId":"bernicetoh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":219,"author":{"gitId":"bernicetoh"},"content":"            } else if (arr[0].equals(\"event\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":220,"author":{"gitId":"bernicetoh"},"content":"                if (!command.contains(\"/from\") \u0026\u0026 !command.contains(\"/to\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":221,"author":{"gitId":"bernicetoh"},"content":"                    throw new DukeException(\"Please specify both the start and end times/dates.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":222,"author":{"gitId":"bernicetoh"},"content":"                } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":223,"author":{"gitId":"bernicetoh"},"content":"                    String segments[] \u003d command.split(\"/from \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":224,"author":{"gitId":"bernicetoh"},"content":"                    String desc \u003d segments[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":225,"author":{"gitId":"bernicetoh"},"content":"                    String start \u003d segments[1].split(\" /to\")[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":226,"author":{"gitId":"bernicetoh"},"content":"                    String end \u003d segments[1].split(\"/to \")[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":227,"author":{"gitId":"bernicetoh"},"content":"                    eventCommand(taskList, start, end, desc);","lastModifiedDate":"2023-01-26"},{"lineNumber":228,"author":{"gitId":"bernicetoh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":229,"author":{"gitId":"bernicetoh"},"content":"            } else if (arr[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":230,"author":{"gitId":"bernicetoh"},"content":"                checkDelete(taskList, command);","lastModifiedDate":"2023-01-26"},{"lineNumber":231,"author":{"gitId":"bernicetoh"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":232,"author":{"gitId":"bernicetoh"},"content":"                throw new DukeException(\"Hmm... I can\u0027t quite understand you :-/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":233,"author":{"gitId":"bernicetoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":234,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":235,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":236,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":237,"author":{"gitId":"bernicetoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bernicetoh":237}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernicetoh"},"content":"package storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"bernicetoh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bernicetoh"},"content":"import task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"bernicetoh"},"content":"import task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"bernicetoh"},"content":"import task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"bernicetoh"},"content":"import task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"bernicetoh"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"bernicetoh"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"bernicetoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"bernicetoh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"bernicetoh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"bernicetoh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"bernicetoh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"bernicetoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"bernicetoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"bernicetoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"bernicetoh"},"content":"import java.util.List;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bernicetoh"},"content":"public class Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"bernicetoh"},"content":"    private static String DEFAULT_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"bernicetoh"},"content":"    private Path filePath;","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"bernicetoh"},"content":"    private String currRelativeFilePath;","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"bernicetoh"},"content":"    public Storage() {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"bernicetoh"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"bernicetoh"},"content":"            currRelativeFilePath \u003d new File(\".\").getCanonicalPath();","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"bernicetoh"},"content":"            filePath \u003d Paths.get(currRelativeFilePath + \u0027/\u0027 + DEFAULT_PATH);","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"bernicetoh"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"bernicetoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"bernicetoh"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"bernicetoh"},"content":"    public List\u003cTask\u003e loadData() {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"bernicetoh"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"bernicetoh"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"bernicetoh"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"bernicetoh"},"content":"            for (String i: lines) {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"bernicetoh"},"content":"                char type \u003d i.charAt(1);","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"bernicetoh"},"content":"                Task task \u003d null;","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"bernicetoh"},"content":"                if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"bernicetoh"},"content":"                    String desc \u003d i.substring(7);","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"bernicetoh"},"content":"                    task \u003d new Todo(desc);","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"bernicetoh"},"content":"                } else if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"bernicetoh"},"content":"                    String sub \u003d i.substring(7);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"bernicetoh"},"content":"                    int openBraceIndex \u003d sub.indexOf(\u0027(\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"bernicetoh"},"content":"                    int closeBraceIndex \u003d sub.indexOf(\u0027)\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"bernicetoh"},"content":"                    String date \u003d sub.substring(openBraceIndex+5, closeBraceIndex);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"bernicetoh"},"content":"                    LocalDate ld \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"bernicetoh"},"content":"                    String desc \u003d sub.substring(0, openBraceIndex-1);","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"bernicetoh"},"content":"                    task \u003d new Deadline(ld, desc);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"bernicetoh"},"content":"                } else if (type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"bernicetoh"},"content":"                    String sub \u003d i.substring(7);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"bernicetoh"},"content":"                    String segments[] \u003d sub.split(\"from: \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"bernicetoh"},"content":"                    String desc \u003d segments[0].substring(0, segments[0].length()-2);","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"bernicetoh"},"content":"                    String dateTime[] \u003d segments[1].split(\" to: \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"bernicetoh"},"content":"                    String start \u003d dateTime[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"bernicetoh"},"content":"                    String end \u003d dateTime[1].substring(0, dateTime[1].length()-1);","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"bernicetoh"},"content":"                    LocalDate sld \u003d LocalDate.parse(start, DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"bernicetoh"},"content":"                    LocalDate eld \u003d LocalDate.parse(end, DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"bernicetoh"},"content":"                    task \u003d new Event(sld, eld, desc);","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"bernicetoh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"bernicetoh"},"content":"                if (i.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"bernicetoh"},"content":"                    task.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"bernicetoh"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"bernicetoh"},"content":"                list.add(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"bernicetoh"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"bernicetoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"bernicetoh"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"bernicetoh"},"content":"        } finally {","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"bernicetoh"},"content":"            return list;","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"bernicetoh"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"bernicetoh"},"content":"        String txt \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"bernicetoh"},"content":"        for (int i \u003d 0; i \u003c taskList.getNumTasks(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"bernicetoh"},"content":"            txt +\u003d taskList.getTask(i) + \"\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"bernicetoh"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"bernicetoh"},"content":"            FileWriter fileWriter \u003d new FileWriter(DEFAULT_PATH);","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"bernicetoh"},"content":"            fileWriter.write(txt);","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"bernicetoh"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"bernicetoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"bernicetoh"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"bernicetoh"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"bernicetoh":96}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernicetoh"},"content":"package task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"bernicetoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bernicetoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bernicetoh"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"bernicetoh"},"content":" * Represents a Deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"bernicetoh"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"bernicetoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"bernicetoh"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"bernicetoh"},"content":"    private static DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"bernicetoh"},"content":"     * Constructor to initialize a deadline object","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"bernicetoh"},"content":"     * @param by The date/time of the deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"bernicetoh"},"content":"     * @param desc The title of the deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"bernicetoh"},"content":"    public Deadline(LocalDate by, String desc) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"bernicetoh"},"content":"        super(desc);","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"bernicetoh"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"bernicetoh"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"bernicetoh"},"content":"     * @return The string representation of the deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"bernicetoh"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"bernicetoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"bernicetoh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(FORMATTER) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"bernicetoh"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"bernicetoh":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernicetoh"},"content":"package task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"bernicetoh"},"content":"import com.sun.jdi.LocalVariable;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bernicetoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bernicetoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bernicetoh"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"bernicetoh"},"content":" * Represents an Event","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"bernicetoh"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"bernicetoh"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"bernicetoh"},"content":"    protected LocalDate start;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"bernicetoh"},"content":"    protected LocalDate end;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bernicetoh"},"content":"    private static DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"bernicetoh"},"content":"     * Constructor to initialize an event object","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"bernicetoh"},"content":"     * @param start The start date/time of the event","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"bernicetoh"},"content":"     * @param end The end date/time of the event","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"bernicetoh"},"content":"     * @param desc The title of the event","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"bernicetoh"},"content":"    public Event(LocalDate start, LocalDate end, String desc) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"bernicetoh"},"content":"        super(desc);","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"bernicetoh"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"bernicetoh"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"bernicetoh"},"content":"     * Returns the string representation of the event","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"bernicetoh"},"content":"     * @return The string representation of the event","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"bernicetoh"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"bernicetoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"bernicetoh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start.format(FORMATTER) + \" to: \" + end.format(FORMATTER) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"bernicetoh"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"bernicetoh":38}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernicetoh"},"content":"package task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"bernicetoh"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"bernicetoh"},"content":" * Represents a task","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"bernicetoh"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"bernicetoh"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"bernicetoh"},"content":"    protected String desc;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"bernicetoh"},"content":"    protected boolean isMarked;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"bernicetoh"},"content":"     * Constructor to initialize a task object","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"bernicetoh"},"content":"     * @param desc The title of the task","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"bernicetoh"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"bernicetoh"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"bernicetoh"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"bernicetoh"},"content":"     * Marks the task as done","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"bernicetoh"},"content":"    public void mark() {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"bernicetoh"},"content":"        isMarked \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"bernicetoh"},"content":"     * Unmarks the task","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"bernicetoh"},"content":"    public void unMark() {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"bernicetoh"},"content":"        isMarked \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"bernicetoh"},"content":"    public boolean isMarked() {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"bernicetoh"},"content":"        return this.isMarked;","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"bernicetoh"},"content":"     * Returns the string representation of the task","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"bernicetoh"},"content":"     * @return The string representation of the task","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"bernicetoh"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"bernicetoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"bernicetoh"},"content":"        if (isMarked) {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"bernicetoh"},"content":"            return \"[X] \" + desc;","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"bernicetoh"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"bernicetoh"},"content":"            return \"[ ] \" + desc;","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"bernicetoh"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"bernicetoh":52}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernicetoh"},"content":"package task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"bernicetoh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"bernicetoh"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"bernicetoh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"bernicetoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bernicetoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"bernicetoh"},"content":"import java.util.List;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"bernicetoh"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"bernicetoh"},"content":" * Represents a TaskList","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"bernicetoh"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"bernicetoh"},"content":"public class TaskList {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"bernicetoh"},"content":"    protected List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"bernicetoh"},"content":"    public Storage storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"bernicetoh"},"content":"     * Constructor to initialize a tasklist object","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"bernicetoh"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"bernicetoh"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"bernicetoh"},"content":"        List\u003cTask\u003e list \u003d storage.loadData();","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"bernicetoh"},"content":"        this.tasks \u003d list;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"bernicetoh"},"content":"     * Returns true if all tasks in the tasklist is completed; returns false otherwise.","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"bernicetoh"},"content":"    public boolean isAllCompleted() {","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"bernicetoh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"bernicetoh"},"content":"            if (this.tasks.get(i).isMarked()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"bernicetoh"},"content":"                continue;","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"bernicetoh"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"bernicetoh"},"content":"                return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"bernicetoh"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"bernicetoh"},"content":"        return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"bernicetoh"},"content":"     * Returns the number of tasks in the tasklist.","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"bernicetoh"},"content":"    public int getNumTasks() {","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"bernicetoh"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"bernicetoh"},"content":"     *  Returns the task in the ith position of the tasklist.","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"bernicetoh"},"content":"     * @param i The index of the task in the tasklist","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"bernicetoh"},"content":"     * @return The task in the ith position","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"bernicetoh"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"bernicetoh"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"bernicetoh"},"content":"     * Returns true if a task exists in the tasklist; returns false otherwise.","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"bernicetoh"},"content":"    public boolean doesTaskExist(int taskNum) {","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"bernicetoh"},"content":"        return taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d getNumTasks();","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"bernicetoh"},"content":"     * Creates a new todo and adds it to the tasklist.","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"bernicetoh"},"content":"     * @param desc The title of the todo task","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"bernicetoh"},"content":"    public void addTodo(String desc) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"bernicetoh"},"content":"        Todo t \u003d new Todo(desc);","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"bernicetoh"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"bernicetoh"},"content":"        storage.save(this);","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"bernicetoh"},"content":"        System.out.println(\"    \" + t);","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"bernicetoh"},"content":"        printNumTasks();","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"bernicetoh"},"content":"     * Creates a new deadline and adds it to the tasklist.","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"bernicetoh"},"content":"     * @param date The time/date of the deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"bernicetoh"},"content":"     * @param desc The title of the deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"bernicetoh"},"content":"    public void addDeadline(LocalDate date, String desc) {","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"bernicetoh"},"content":"        Deadline d \u003d new Deadline(date, desc);","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"bernicetoh"},"content":"        tasks.add(d);","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"bernicetoh"},"content":"        storage.save(this);","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"bernicetoh"},"content":"        System.out.println(\"    \" + d);","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"bernicetoh"},"content":"        printNumTasks();","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"bernicetoh"},"content":"     * Creates a new event and adds it to the tasklist.","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"bernicetoh"},"content":"     * @param start The start date/time of the event","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"bernicetoh"},"content":"     * @param end The end date/time of the event","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"bernicetoh"},"content":"     * @param desc The title of the event","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"bernicetoh"},"content":"    public void addEvent(LocalDate start, LocalDate end, String desc) {","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"bernicetoh"},"content":"        Event e \u003d new Event(start, end, desc);","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"bernicetoh"},"content":"        tasks.add(e);","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"bernicetoh"},"content":"        storage.save(this);","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"bernicetoh"},"content":"        System.out.println(\"    \" + e);","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"bernicetoh"},"content":"        printNumTasks();","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"bernicetoh"},"content":"     * Deletes a task from the tasklist.","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"bernicetoh"},"content":"     * @param taskNum The task number to be deleted","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"bernicetoh"},"content":"    public void deleteTask(int taskNum) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"bernicetoh"},"content":"        System.out.println(\"    \" + tasks.get(taskNum-1));","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"bernicetoh"},"content":"        tasks.remove(taskNum-1);","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"bernicetoh"},"content":"        storage.save(this);","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"bernicetoh"},"content":"        printNumTasks();","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"bernicetoh"},"content":"    public void markTask(Task task) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"bernicetoh"},"content":"        if (task.isMarked) {","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"bernicetoh"},"content":"            throw new DukeException(\"This task has already been marked as done.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"bernicetoh"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"bernicetoh"},"content":"            task.mark();","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"bernicetoh"},"content":"            storage.save(this);","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"bernicetoh"},"content":"            System.out.println(\"Great job on completing this task! I\u0027ve marked it as done:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"bernicetoh"},"content":"            System.out.println(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"bernicetoh"},"content":"        if (this.isAllCompleted()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"bernicetoh"},"content":"            System.out.println(\"Yay! You have completed all your tasks :-)\");","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"bernicetoh"},"content":"    public void unmarkTask(Task task) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":139,"author":{"gitId":"bernicetoh"},"content":"        if (!task.isMarked()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"bernicetoh"},"content":"            throw new DukeException(\"Oops! This task has not been marked as done before.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"bernicetoh"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"bernicetoh"},"content":"            task.unMark();","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"bernicetoh"},"content":"            storage.save(this);","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"bernicetoh"},"content":"            System.out.println(\"Alright, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"bernicetoh"},"content":"            System.out.println(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"bernicetoh"},"content":"     * Prints the number of tasks in the tasklist.","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"bernicetoh"},"content":"    public void printNumTasks() {","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"bernicetoh"},"content":"        if (getNumTasks() \u003d\u003d 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"bernicetoh"},"content":"            System.out.println(\"Now you have 1 task in the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"bernicetoh"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"bernicetoh"},"content":"            String str \u003d String.format(\"Now you have %d tasks in the list.\", getNumTasks());","lastModifiedDate":"2023-01-18"},{"lineNumber":157,"author":{"gitId":"bernicetoh"},"content":"            System.out.println(str);","lastModifiedDate":"2023-01-18"},{"lineNumber":158,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":159,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":160,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":161,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":162,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"bernicetoh"},"content":"     * Returns the string representation of the tasklist.","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":165,"author":{"gitId":"bernicetoh"},"content":"     * @return The string representation of the tasklist","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":167,"author":{"gitId":"bernicetoh"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":168,"author":{"gitId":"bernicetoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":169,"author":{"gitId":"bernicetoh"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"bernicetoh"},"content":"        for (int i \u003d 0; i \u003c getNumTasks(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":171,"author":{"gitId":"bernicetoh"},"content":"            if (i \u003d\u003d getNumTasks()-1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":172,"author":{"gitId":"bernicetoh"},"content":"                str +\u003d (i+1) + \". \" + this.getTask(i);","lastModifiedDate":"2023-01-18"},{"lineNumber":173,"author":{"gitId":"bernicetoh"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":174,"author":{"gitId":"bernicetoh"},"content":"                str +\u003d (i+1) + \". \" + this.getTask(i) + \u0027\\n\u0027;","lastModifiedDate":"2023-01-18"},{"lineNumber":175,"author":{"gitId":"bernicetoh"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":176,"author":{"gitId":"bernicetoh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":177,"author":{"gitId":"bernicetoh"},"content":"        return str;","lastModifiedDate":"2023-01-18"},{"lineNumber":178,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":179,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":180,"author":{"gitId":"bernicetoh"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"bernicetoh":180}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernicetoh"},"content":"package task;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"bernicetoh"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"bernicetoh"},"content":" * Represents a Todo","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"bernicetoh"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"bernicetoh"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"bernicetoh"},"content":"     * Constructor to initialize a todo object","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"bernicetoh"},"content":"     * @param desc The title of the todo","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"bernicetoh"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"bernicetoh"},"content":"        super(desc);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"bernicetoh"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"bernicetoh"},"content":"     * Returns the string representation of the todo","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"bernicetoh"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"bernicetoh"},"content":"     * @return The string representation of the todo","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"bernicetoh"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"bernicetoh"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"bernicetoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"bernicetoh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"bernicetoh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"bernicetoh"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"bernicetoh":27}},{"path":"src/main/java/duke/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernicetoh"},"content":"package ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bernicetoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bernicetoh"},"content":"public class TextUi {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bernicetoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bernicetoh":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bernicetoh"},"content":"mark","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"bernicetoh"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"bernicetoh"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"bernicetoh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"bernicetoh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"bernicetoh"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"bernicetoh"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"bernicetoh"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"bernicetoh"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"bernicetoh"},"content":"mark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"bernicetoh"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"bernicetoh"},"content":"mark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"bernicetoh"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"bernicetoh"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"bernicetoh"},"content":"mark 0","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"bernicetoh"},"content":"mark 5","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"bernicetoh"},"content":"dbsibugwuif","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"bernicetoh"},"content":"blah","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"bernicetoh"},"content":"deadline read essay","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"bernicetoh"},"content":"event concert","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"bernicetoh"},"content":"delete","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"bernicetoh"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"bernicetoh"},"content":"delete 0","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"bernicetoh"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"bernicetoh"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"bernicetoh":25}}]
