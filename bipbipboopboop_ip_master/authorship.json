[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"import driver.Driver;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"    private static final String BAR \u003d","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"            \"    ____________________________________________________________\";","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"    private static final String INDENTATION \u003d \"     \";","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    private static final String NEW_LINE \u003d \"\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"    private static void greet() {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"        System.out.println(BAR);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"        System.out.println(INDENTATION + \"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"        System.out.println(INDENTATION + \"What can I do for you?\");","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"        System.out.println(BAR);","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"        System.out.print(NEW_LINE);","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"        greet();","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"        // Storage storage \u003d new Storage();","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"        TaskList taskList \u003d Storage.readTaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"        Driver driver \u003d new Driver();","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"        driver.run(taskList);","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"bipbipboopboop":24}},{"path":"src/main/java/driver/Driver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package driver;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"import parser.DukeCommand;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"import parser.DukeParser;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"public class Driver {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"    TaskList taskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"    public Driver() {}","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"    private static final String BAR \u003d","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"            \"    ____________________________________________________________\";","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"    private static final String INDENTATION \u003d \"     \";","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"    private static final String NEW_LINE \u003d \"\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"    private static void echo(String... texts) {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"        System.out.println(BAR);","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"        for (String text : texts) {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"            System.out.println(INDENTATION + text);","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"        System.out.println(BAR);","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"        System.out.print(NEW_LINE);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"    Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"bipbipboopboop"},"content":"    public TaskList run(TaskList tasks) {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"bipbipboopboop"},"content":"        while (true) {","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"bipbipboopboop"},"content":"            try {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"bipbipboopboop"},"content":"                String inputString \u003d scanner.nextLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"bipbipboopboop"},"content":"                DukeParser parser \u003d new DukeParser(inputString);","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"bipbipboopboop"},"content":"                String[] commandArgs \u003d parser.parse();","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"bipbipboopboop"},"content":"                DukeCommand command \u003d parser.getCommand();","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"bipbipboopboop"},"content":"                if (command.equals(DukeCommand.BYE)) {","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"bipbipboopboop"},"content":"                    echo(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"bipbipboopboop"},"content":"                    scanner.close();","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"bipbipboopboop"},"content":"                    return tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"bipbipboopboop"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"bipbipboopboop"},"content":"                switch (command) {","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"bipbipboopboop"},"content":"                    case LIST: {","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"bipbipboopboop"},"content":"                        System.out.println(BAR);","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"bipbipboopboop"},"content":"                        System.out.println(INDENTATION + \"list\");","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"bipbipboopboop"},"content":"                        tasks.printAll();","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"bipbipboopboop"},"content":"                        System.out.println(BAR);","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"bipbipboopboop"},"content":"                        break;","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"bipbipboopboop"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"bipbipboopboop"},"content":"                    case BYE: {","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"bipbipboopboop"},"content":"                        echo(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"bipbipboopboop"},"content":"                        scanner.close();","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"bipbipboopboop"},"content":"                        break;","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"bipbipboopboop"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"bipbipboopboop"},"content":"                    case DEADLINE: {","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"bipbipboopboop"},"content":"                        String description \u003d commandArgs[0];","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"bipbipboopboop"},"content":"                        String by \u003d commandArgs[1];","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"bipbipboopboop"},"content":"                        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"bipbipboopboop"},"content":"                        tasks.addTask(deadline);","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"bipbipboopboop"},"content":"                        int numTasks \u003d tasks.getNumTasks();","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"bipbipboopboop"},"content":"                        echo(\"Got it. I\u0027ve added this task:\", \"  \" + deadline.toString(),","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"bipbipboopboop"},"content":"                                \"Now you have \" + numTasks + \" tasks in the list.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"bipbipboopboop"},"content":"                        break;","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"bipbipboopboop"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"bipbipboopboop"},"content":"                    case EVENT: {","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"bipbipboopboop"},"content":"                        String description \u003d commandArgs[0];","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"bipbipboopboop"},"content":"                        String from \u003d commandArgs[1];","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"bipbipboopboop"},"content":"                        String to \u003d commandArgs[2];","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"bipbipboopboop"},"content":"                        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"bipbipboopboop"},"content":"                        tasks.addTask(event);","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"bipbipboopboop"},"content":"                        int numTasks \u003d tasks.getNumTasks();","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"bipbipboopboop"},"content":"                        echo(\"Got it. I\u0027ve added this task:\", \"  \" + event.toString(),","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"bipbipboopboop"},"content":"                                \"Now you have \" + numTasks + \" tasks in the list.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"bipbipboopboop"},"content":"                        break;","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"bipbipboopboop"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"bipbipboopboop"},"content":"                    case TODO: {","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"bipbipboopboop"},"content":"                        String description \u003d commandArgs[0];","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"bipbipboopboop"},"content":"                        Task task \u003d new ToDo(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"bipbipboopboop"},"content":"                        tasks.addTask(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"bipbipboopboop"},"content":"                        int numTasks \u003d tasks.getNumTasks();","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"bipbipboopboop"},"content":"                        echo(\"Got it. I\u0027ve added this task:\", \"  \" + task.toString(),","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"bipbipboopboop"},"content":"                                \"Now you have \" + numTasks + \" tasks in the list.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"bipbipboopboop"},"content":"                        break;","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"bipbipboopboop"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"bipbipboopboop"},"content":"                    case MARK: {","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"bipbipboopboop"},"content":"                        int taskIndex \u003d Integer.parseInt(commandArgs[0]);","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"bipbipboopboop"},"content":"                        echo(\"Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"bipbipboopboop"},"content":"                                \" \" + tasks.markTask(taskIndex));","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"bipbipboopboop"},"content":"                        break;","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"bipbipboopboop"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"bipbipboopboop"},"content":"                    case UNMARK: {","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"bipbipboopboop"},"content":"                        int taskIndex \u003d Integer.parseInt(commandArgs[0]);","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"bipbipboopboop"},"content":"                        echo(\"OK, I\u0027ve marked this task as not done yet:\",","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"bipbipboopboop"},"content":"                                \" \" + tasks.unmarkTask(taskIndex));","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"bipbipboopboop"},"content":"                        break;","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"bipbipboopboop"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"bipbipboopboop"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"bipbipboopboop"},"content":"            } catch (Error e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"bipbipboopboop"},"content":"                echo(e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"bipbipboopboop":112}},{"path":"src/main/java/parser/DukeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package parser;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"public enum DukeCommand {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"    BYE(\"bye\"), MARK(\"mark\"), UNMARK(\"unmark\"), LIST(\"list\"), TODO(\"todo\"), DEADLINE(","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"            \"deadline\"), EVENT(\"event\");","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"    public final String text;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"    private DukeCommand(String commandText) {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"        this.text \u003d commandText;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":13}},{"path":"src/main/java/parser/DukeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package parser;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"import java.util.List;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"public class DukeParser {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"    String inputString;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    DukeCommand command;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"    final DateTimeFormatter INPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"    public DukeParser(String inputString) {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"        this.inputString \u003d inputString;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"    public DukeCommand getCommand() {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"        return this.command;","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"    public String[] parse() {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"        parseCommand();","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"        return parseCommandArgs();","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"    private void parseCommand() {","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"        // First split by space to get each individual word of the inputString","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"        String[] splittedString \u003d inputString.split(\" \");","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"        // The first(0th) word has to be a command.","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"        String command \u003d splittedString[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"        // Check whether the command is valid.","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"bipbipboopboop"},"content":"        for (DukeCommand dukeCmd : DukeCommand.values()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"bipbipboopboop"},"content":"            if (dukeCmd.text.equals(command)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"bipbipboopboop"},"content":"                this.command \u003d dukeCmd;","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"bipbipboopboop"},"content":"                return;","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"bipbipboopboop"},"content":"        // If command is invalid:","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"bipbipboopboop"},"content":"        throw new Error(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"bipbipboopboop"},"content":"    private String[] parseCommandArgs() {","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"bipbipboopboop"},"content":"        List\u003cString\u003e commandArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"bipbipboopboop"},"content":"        switch (command) {","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"bipbipboopboop"},"content":"            case LIST:","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"bipbipboopboop"},"content":"            case BYE:","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"bipbipboopboop"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"bipbipboopboop"},"content":"            case DEADLINE: {","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"bipbipboopboop"},"content":"                int offset \u003d DukeCommand.DEADLINE.text.length();","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"bipbipboopboop"},"content":"                int byIndex \u003d inputString.indexOf(\"/by\", offset);","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"bipbipboopboop"},"content":"                boolean isByKeywordExist \u003d byIndex !\u003d -1;","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"bipbipboopboop"},"content":"                if (!isByKeywordExist)","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"bipbipboopboop"},"content":"                    throw new Error(\"Invalid argument!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"bipbipboopboop"},"content":"                String description \u003d inputString.substring(offset, byIndex).strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"bipbipboopboop"},"content":"                String deadline \u003d inputString.substring(byIndex + (\"/by\".length())).strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"bipbipboopboop"},"content":"                try {","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"bipbipboopboop"},"content":"                    LocalDate.parse(deadline, INPUT_DATE_FORMAT);","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"bipbipboopboop"},"content":"                    commandArgs.add(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"bipbipboopboop"},"content":"                    commandArgs.add(deadline);","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"bipbipboopboop"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"bipbipboopboop"},"content":"                    throw new Error(\"☹ OOPS!!! The time format is invalid, please use yyyy-MM-dd\");","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"bipbipboopboop"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"bipbipboopboop"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"bipbipboopboop"},"content":"            case EVENT: {","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"bipbipboopboop"},"content":"                int offset \u003d DukeCommand.DEADLINE.text.length();","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"bipbipboopboop"},"content":"                int fromIndex \u003d inputString.indexOf(\"/from\", offset);","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"bipbipboopboop"},"content":"                int toIndex \u003d inputString.indexOf(\"/to\", offset);","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"bipbipboopboop"},"content":"                boolean isKeywordExist \u003d fromIndex !\u003d -1 \u0026\u0026 toIndex !\u003d -1;","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"bipbipboopboop"},"content":"                if (!isKeywordExist)","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"bipbipboopboop"},"content":"                    throw new Error(\"Invalid argument!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"bipbipboopboop"},"content":"                String description \u003d inputString.substring(offset, fromIndex).strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"bipbipboopboop"},"content":"                try {","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"bipbipboopboop"},"content":"                    String from \u003d","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"bipbipboopboop"},"content":"                            inputString.substring(fromIndex + (\"/from\".length()), toIndex).strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"bipbipboopboop"},"content":"                    String to \u003d inputString.substring(toIndex + (\"/to\".length())).strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"bipbipboopboop"},"content":"                    LocalDate fromDate \u003d LocalDate.parse(from, INPUT_DATE_FORMAT);","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"bipbipboopboop"},"content":"                    LocalDate toDate \u003d LocalDate.parse(to, INPUT_DATE_FORMAT);","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"bipbipboopboop"},"content":"                    boolean isValidFromDate \u003d fromDate.isBefore(toDate) || fromDate.isEqual(toDate);","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"bipbipboopboop"},"content":"                    if (!isValidFromDate)","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"bipbipboopboop"},"content":"                        throw new Error(\"☹ OOPS!!! from date should be before to date!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"bipbipboopboop"},"content":"                    commandArgs.add(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"bipbipboopboop"},"content":"                    commandArgs.add(from);","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"bipbipboopboop"},"content":"                    commandArgs.add(to);","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"bipbipboopboop"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"bipbipboopboop"},"content":"                    throw new Error(\"☹ OOPS!!! The time format is invalid, please use yyyy-MM-dd\");","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"bipbipboopboop"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"bipbipboopboop"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"bipbipboopboop"},"content":"            case TODO: {","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"bipbipboopboop"},"content":"                String description \u003d inputString.substring(DukeCommand.TODO.text.length());","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"bipbipboopboop"},"content":"                String cleanedDescription \u003d description.strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"bipbipboopboop"},"content":"                boolean isDescriptionEmpty \u003d cleanedDescription.length() \u003d\u003d 0;","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"bipbipboopboop"},"content":"                if (isDescriptionEmpty) {","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"bipbipboopboop"},"content":"                    throw new Error(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"bipbipboopboop"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"bipbipboopboop"},"content":"                commandArgs.add(cleanedDescription);","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"bipbipboopboop"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"bipbipboopboop"},"content":"            case MARK: {","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"bipbipboopboop"},"content":"                String taskIndex \u003d inputString.substring(DukeCommand.MARK.text.length());","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"bipbipboopboop"},"content":"                String cleanedTaskIndex \u003d taskIndex.strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"bipbipboopboop"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"bipbipboopboop"},"content":"                    Integer.parseInt(cleanedTaskIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"bipbipboopboop"},"content":"                    commandArgs.add(cleanedTaskIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"bipbipboopboop"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"bipbipboopboop"},"content":"                    throw new Error(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"bipbipboopboop"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"bipbipboopboop"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"bipbipboopboop"},"content":"            case UNMARK: {","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"bipbipboopboop"},"content":"                String taskIndex \u003d inputString.substring(DukeCommand.UNMARK.text.length());","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"bipbipboopboop"},"content":"                String cleanedTaskIndex \u003d taskIndex.strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"bipbipboopboop"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"bipbipboopboop"},"content":"                    Integer.parseInt(cleanedTaskIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"bipbipboopboop"},"content":"                    commandArgs.add(cleanedTaskIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"bipbipboopboop"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"bipbipboopboop"},"content":"                    throw new Error(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"bipbipboopboop"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"bipbipboopboop"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"bipbipboopboop"},"content":"        return commandArgs.toArray(new String[] {});","lastModifiedDate":"2023-01-20"},{"lineNumber":140,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":141,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":141}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.File;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"public class Storage {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"    private static final Path STORAGE_PATH \u003d Path.of(\"src/main/java/data\", \"Storage.ser\");","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"    private static File storageFile \u003d STORAGE_PATH.toFile();","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"    private static void createStorageFile() {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"            boolean isParentFileExist \u003d storageFile.getParentFile().exists();","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"            if (!isParentFileExist) {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"                storageFile.getParentFile().mkdirs();","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"            if (!storageFile.exists()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"                storageFile.createNewFile();","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"    public static TaskList readTaskList() {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"            FileInputStream fileIn \u003d new FileInputStream(storageFile);","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"bipbipboopboop"},"content":"            ObjectInputStream in \u003d new ObjectInputStream(fileIn);","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"bipbipboopboop"},"content":"            TaskList taskList \u003d (TaskList) in.readObject();","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"bipbipboopboop"},"content":"            in.close();","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"bipbipboopboop"},"content":"            return taskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"bipbipboopboop"},"content":"            createStorageFile();","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"bipbipboopboop"},"content":"            return new TaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"bipbipboopboop"},"content":"            return new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"bipbipboopboop"},"content":"    public static void writeTaskList(TaskList taskList) {","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"bipbipboopboop"},"content":"            FileOutputStream fileOut \u003d new FileOutputStream(storageFile);","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"bipbipboopboop"},"content":"            ObjectOutputStream out \u003d new ObjectOutputStream(fileOut);","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"bipbipboopboop"},"content":"            out.writeObject(taskList);","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"bipbipboopboop"},"content":"            out.close();","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"bipbipboopboop"},"content":"            createStorageFile();","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"bipbipboopboop"},"content":"            throw new Error(\"storage.ser not found, creating one....\");","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"bipbipboopboop"},"content":"    // public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"bipbipboopboop"},"content":"    // Storage storage \u003d new Storage();","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"bipbipboopboop"},"content":"    // TaskList taskList \u003d storage.readTaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"bipbipboopboop"},"content":"    // taskList.addTask(new ToDo(\"1\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"bipbipboopboop"},"content":"    // taskList.addTask(new ToDo(\"2\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"bipbipboopboop"},"content":"    // taskList.addTask(new ToDo(\"3\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"bipbipboopboop"},"content":"    // storage.writeTaskList(taskList);","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"bipbipboopboop"},"content":"    // TaskList taskList2 \u003d storage.readTaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"bipbipboopboop"},"content":"    // taskList2.printAll();","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"bipbipboopboop"},"content":"    // }","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"bipbipboopboop":70}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package tasks;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"    private static final long serialVersionUID \u003d 8193173341399324817L;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"    LocalDate by;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"        this.by \u003d LocalDate.parse(by, super.INPUT_DATE_FORMAT);","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"                by.format(super.OUTPUT_DATE_FORMAT));","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":20}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package tasks;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"    private static final long serialVersionUID \u003d 7664438936982546960L;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"    LocalDate from;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"    LocalDate to;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"        this.from \u003d LocalDate.parse(from, super.INPUT_DATE_FORMAT);","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"        this.to \u003d LocalDate.parse(to, super.INPUT_DATE_FORMAT);","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"                from.format(super.OUTPUT_DATE_FORMAT), to.format(super.OUTPUT_DATE_FORMAT));","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":21}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package tasks;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"    private static final long serialVersionUID \u003d 4048021127880559361L;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"    boolean isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"    String description;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"    final DateTimeFormatter INPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"    final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"    public void mark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"    protected String getStatus() {","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"        return String.format(\"[%s] %s\\n\", getStatus(), this.description);","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":35}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package tasks;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"    private static final long serialVersionUID \u003d 8098680977751428278L;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"    private int numTasks \u003d 0;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"    private Task[] tasksArray \u003d new Task[100];","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    public Task[] getTasks() {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"        return this.tasksArray;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"    public int getNumTasks() {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"        return this.numTasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"    public void printAll() {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"        for (int i \u003d 0; i \u003c numTasks; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"            String printedString \u003d String.format(\"%d. %s \", i + 1, tasksArray[i].toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"            System.out.println(printedString);","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"        this.tasksArray[numTasks] \u003d task;","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"        numTasks++;","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"        // new Storage().writeTaskList(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"        Storage.writeTaskList(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"    public String markTask(int taskIndex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"        this.tasksArray[taskIndex - 1].mark();","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"        // new Storage().writeTaskList(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"bipbipboopboop"},"content":"        Storage.writeTaskList(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"bipbipboopboop"},"content":"        return this.tasksArray[taskIndex - 1].toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"bipbipboopboop"},"content":"    public String unmarkTask(int taskIndex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"bipbipboopboop"},"content":"        this.tasksArray[taskIndex - 1].unmark();","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"bipbipboopboop"},"content":"        // new Storage().writeTaskList(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"bipbipboopboop"},"content":"        Storage.writeTaskList(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"bipbipboopboop"},"content":"        return this.tasksArray[taskIndex - 1].toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":46}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package tasks;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"    private static final long serialVersionUID \u003d -8037857826265085451L;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":14}}]
