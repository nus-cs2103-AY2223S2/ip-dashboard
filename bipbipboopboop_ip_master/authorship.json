[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"import tasks.Event;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import tasks.Tasks;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"    private static final String BAR \u003d","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"            \"    ____________________________________________________________\";","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"    private static final String INDENTATION \u003d \"     \";","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"    private static final String NEW_LINE \u003d \"\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"    private static void greet() {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"        System.out.println(BAR);","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"        System.out.println(INDENTATION + \"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"        System.out.println(INDENTATION + \"What can I do for you?\");","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"        System.out.println(BAR);","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"        System.out.print(NEW_LINE);","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"    private static void echo(String... texts) {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"        System.out.println(BAR);","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"        for (String text : texts) {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"            System.out.println(INDENTATION + text);","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"        System.out.println(BAR);","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"        System.out.print(NEW_LINE);","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"        greet();","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"        Tasks tasks \u003d new Tasks();","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"bipbipboopboop"},"content":"        while (true) {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"bipbipboopboop"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"bipbipboopboop"},"content":"                String inputString \u003d scanner.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"bipbipboopboop"},"content":"                DukeParser parser \u003d new DukeParser(inputString);","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"bipbipboopboop"},"content":"                String[] commandArgs \u003d parser.parse();","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"bipbipboopboop"},"content":"                DukeCommand command \u003d parser.getCommand();","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"bipbipboopboop"},"content":"                if (command.equals(DukeCommand.BYE)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"bipbipboopboop"},"content":"                    echo(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"bipbipboopboop"},"content":"                    scanner.close();","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"bipbipboopboop"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"bipbipboopboop"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"bipbipboopboop"},"content":"                switch (command) {","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"bipbipboopboop"},"content":"                    case LIST: {","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"bipbipboopboop"},"content":"                        System.out.println(BAR);","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"bipbipboopboop"},"content":"                        tasks.printAll();","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"bipbipboopboop"},"content":"                        System.out.println(BAR);","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"bipbipboopboop"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"bipbipboopboop"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"bipbipboopboop"},"content":"                    case BYE: {","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"bipbipboopboop"},"content":"                        echo(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"bipbipboopboop"},"content":"                        scanner.close();","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"bipbipboopboop"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"bipbipboopboop"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"bipbipboopboop"},"content":"                    case DEADLINE: {","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"bipbipboopboop"},"content":"                        String description \u003d commandArgs[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"bipbipboopboop"},"content":"                        String by \u003d commandArgs[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"bipbipboopboop"},"content":"                        tasks.addTask(new Deadline(description, by));","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"bipbipboopboop"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"bipbipboopboop"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"bipbipboopboop"},"content":"                    case EVENT: {","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"bipbipboopboop"},"content":"                        String description \u003d commandArgs[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"bipbipboopboop"},"content":"                        String from \u003d commandArgs[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"bipbipboopboop"},"content":"                        String to \u003d commandArgs[2];","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"bipbipboopboop"},"content":"                        tasks.addTask(new Event(description, from, to));","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"bipbipboopboop"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"bipbipboopboop"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"bipbipboopboop"},"content":"                    case TODO: {","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"bipbipboopboop"},"content":"                        String description \u003d commandArgs[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"bipbipboopboop"},"content":"                        tasks.addTask(new ToDo(description));","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"bipbipboopboop"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"bipbipboopboop"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"bipbipboopboop"},"content":"                    case MARK: {","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"bipbipboopboop"},"content":"                        int taskIndex \u003d Integer.parseInt(commandArgs[0]);","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"bipbipboopboop"},"content":"                        echo(\"Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"bipbipboopboop"},"content":"                                \" \" + tasks.markTask(taskIndex));","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"bipbipboopboop"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"bipbipboopboop"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"bipbipboopboop"},"content":"                    case UNMARK: {","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"bipbipboopboop"},"content":"                        int taskIndex \u003d Integer.parseInt(commandArgs[0]);","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"bipbipboopboop"},"content":"                        echo(\"OK, I\u0027ve marked this task as not done yet:\",","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"bipbipboopboop"},"content":"                                \" \" + tasks.unmarkTask(taskIndex));","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"bipbipboopboop"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"bipbipboopboop"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"bipbipboopboop"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"bipbipboopboop"},"content":"                // System.out.println(\"Success! Your command is \" + command.text);","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"bipbipboopboop"},"content":"            } catch (Error e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"bipbipboopboop"},"content":"                echo(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"bipbipboopboop":94}},{"path":"src/main/java/DukeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"public enum DukeCommand {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"    BYE(\"bye\"), MARK(\"mark\"), UNMARK(\"unmark\"), LIST(\"list\"), TODO(\"todo\"), DEADLINE(","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"            \"deadline\"), EVENT(\"event\");","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"    public final String text;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"    private DukeCommand(String commandText) {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"        this.text \u003d commandText;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":10}},{"path":"src/main/java/DukeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"import java.util.List;","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"public class DukeParser {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"    String inputString;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"    DukeCommand command;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"    public DukeParser(String inputString) {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"        this.inputString \u003d inputString;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"    public DukeCommand getCommand() {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"        return this.command;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"    public String[] parse() {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"        parseCommand();","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"        return parseCommandArgs();","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"    private void parseCommand() {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"        // First split by space to get each individual word of the inputString","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"        String[] splittedString \u003d inputString.split(\" \");","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"        // The first(0th) word has to be a command.","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"        String command \u003d splittedString[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"        // Check whether the command is valid.","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"        for (DukeCommand dukeCmd : DukeCommand.values()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"            if (dukeCmd.text.equals(command)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"                this.command \u003d dukeCmd;","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"                return;","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"        // If command is invalid:","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"bipbipboopboop"},"content":"        throw new Error(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"bipbipboopboop"},"content":"    private String[] parseCommandArgs() {","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"bipbipboopboop"},"content":"        List\u003cString\u003e commandArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"bipbipboopboop"},"content":"        switch (command) {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"bipbipboopboop"},"content":"            case LIST:","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"bipbipboopboop"},"content":"            case BYE:","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"bipbipboopboop"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"bipbipboopboop"},"content":"            case DEADLINE: {","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"bipbipboopboop"},"content":"                int offset \u003d DukeCommand.DEADLINE.text.length();","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"bipbipboopboop"},"content":"                int byIndex \u003d inputString.indexOf(\"/by\", offset);","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"bipbipboopboop"},"content":"                boolean isByKeyordExist \u003d byIndex !\u003d -1;","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"bipbipboopboop"},"content":"                if (!isByKeyordExist)","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"bipbipboopboop"},"content":"                    throw new Error(\"Invalid argument!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"bipbipboopboop"},"content":"                String description \u003d inputString.substring(offset, byIndex).strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"bipbipboopboop"},"content":"                String deadline \u003d inputString.substring(byIndex + (\"/by\".length())).strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"bipbipboopboop"},"content":"                commandArgs.add(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"bipbipboopboop"},"content":"                commandArgs.add(deadline);","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"bipbipboopboop"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"bipbipboopboop"},"content":"            case EVENT: {","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"bipbipboopboop"},"content":"                int offset \u003d DukeCommand.DEADLINE.text.length();","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"bipbipboopboop"},"content":"                int fromIndex \u003d inputString.indexOf(\"/from\", offset);","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"bipbipboopboop"},"content":"                int toIndex \u003d inputString.indexOf(\"/to\", offset);","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"bipbipboopboop"},"content":"                boolean isKeywordExist \u003d fromIndex !\u003d -1 \u0026\u0026 toIndex !\u003d -1;","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"bipbipboopboop"},"content":"                if (!isKeywordExist)","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"bipbipboopboop"},"content":"                    throw new Error(\"Invalid argument!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"bipbipboopboop"},"content":"                String description \u003d inputString.substring(offset, fromIndex).strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"bipbipboopboop"},"content":"                String from \u003d","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"bipbipboopboop"},"content":"                        inputString.substring(fromIndex + (\"/from\".length()), toIndex).strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"bipbipboopboop"},"content":"                String to \u003d inputString.substring(toIndex + (\"/to\".length())).strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"bipbipboopboop"},"content":"                commandArgs.add(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"bipbipboopboop"},"content":"                commandArgs.add(from);","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"bipbipboopboop"},"content":"                commandArgs.add(to);","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"bipbipboopboop"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"bipbipboopboop"},"content":"            case TODO: {","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"bipbipboopboop"},"content":"                String description \u003d inputString.substring(DukeCommand.TODO.text.length());","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"bipbipboopboop"},"content":"                String cleanedDescription \u003d description.strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"bipbipboopboop"},"content":"                boolean isDescriptionEmpty \u003d cleanedDescription.length() \u003d\u003d 0;","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"bipbipboopboop"},"content":"                if (isDescriptionEmpty) {","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"bipbipboopboop"},"content":"                    throw new Error(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"bipbipboopboop"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"bipbipboopboop"},"content":"                commandArgs.add(cleanedDescription);","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"bipbipboopboop"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"bipbipboopboop"},"content":"            case MARK: {","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"bipbipboopboop"},"content":"                String taskIndex \u003d inputString.substring(DukeCommand.MARK.text.length());","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"bipbipboopboop"},"content":"                String cleanedTaskIndex \u003d taskIndex.strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"bipbipboopboop"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"bipbipboopboop"},"content":"                    Integer.parseInt(cleanedTaskIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"bipbipboopboop"},"content":"                    commandArgs.add(cleanedTaskIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"bipbipboopboop"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"bipbipboopboop"},"content":"                    throw new Error(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"bipbipboopboop"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"bipbipboopboop"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"bipbipboopboop"},"content":"            case UNMARK: {","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"bipbipboopboop"},"content":"                String taskIndex \u003d inputString.substring(DukeCommand.UNMARK.text.length());","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"bipbipboopboop"},"content":"                String cleanedTaskIndex \u003d taskIndex.strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"bipbipboopboop"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"bipbipboopboop"},"content":"                    Integer.parseInt(cleanedTaskIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"bipbipboopboop"},"content":"                    commandArgs.add(cleanedTaskIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"bipbipboopboop"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"bipbipboopboop"},"content":"                    throw new Error(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"bipbipboopboop"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"bipbipboopboop"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"bipbipboopboop"},"content":"        return commandArgs.toArray(new String[] {});","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":116}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package tasks;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"    String by;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by);","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":15}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package tasks;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"    String from;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"    String to;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.from, this.to);","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":17}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package tasks;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"public class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"    boolean isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"    String description;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    public void mark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"    protected String getStatus() {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"        return String.format(\"[%s] %s\\n\", getStatus(), this.description);","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":27}},{"path":"src/main/java/tasks/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package tasks;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"public class Tasks {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"    private int numTasks \u003d 0;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"    private Task[] tasksArray \u003d new Task[100];","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"    public Task[] getTasks() {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"        return this.tasksArray;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    public void printAll() {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"        for (int i \u003d 0; i \u003c numTasks; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"            String printedString \u003d String.format(\"%d. %s \", i + 1, tasksArray[i].toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"            System.out.println(printedString);","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"        this.tasksArray[numTasks] \u003d task;","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"        numTasks++;","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"    public String markTask(int taskIndex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"        this.tasksArray[taskIndex - 1].mark();","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"        return this.tasksArray[taskIndex - 1].toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"    public String unmarkTask(int taskIndex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"        this.tasksArray[taskIndex - 1].unmark();","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"        return this.tasksArray[taskIndex - 1].toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":32}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package tasks;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":12}}]
