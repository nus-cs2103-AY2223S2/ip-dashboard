[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"checkstyle {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"bipbipboopboop"},"content":"    mainClassName \u003d \"chagee.Launcher\"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"bipbipboopboop"},"content":"    archiveBaseName \u003d \"chagee\"","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"bipbipboopboop"},"content":"checkstyleMain","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"bipbipboopboop"},"content":"    .exclude(\u0027chagee/driver/GuiDriver.java\u0027,\u0027chagee/parser/ChageeParser.java\u0027)","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":39,"bipbipboopboop":25}},{"path":"src/main/java/chagee/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.ui.Gui;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"public class Launcher {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"        Application.launch(Gui.class, args);","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"bipbipboopboop":15}},{"path":"src/main/java/chagee/command/Chagee.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":" * Enum wrapper for commands used by Chagee.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"public enum Chagee {","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"    BYE(\"bye\"), MARK(\"mark\"), UNMARK(\"unmark\"), DELETE(\"delete\"), LIST(\"list\"), TODO(","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"            \"todo\"), DEADLINE(","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"                    \"deadline\"), EVENT(\"event\"), FIND(\"find\"), VIEW_SCHEDULE(\"view_schedule\");","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    public final String text;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"    private Chagee(String commandText) {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"        this.text \u003d commandText;","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":16}},{"path":"src/main/java/chagee/command/ChageeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.command;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":" * Enum wrapper for commands used by Chagee.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"public enum ChageeCommand {","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"    BYE(\"bye\"), MARK(\"mark\"), UNMARK(\"unmark\"), DELETE(\"delete\"), LIST(\"list\"), TODO(","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"            \"todo\"), DEADLINE(","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"                    \"deadline\"), EVENT(\"event\"), FIND(\"find\"), VIEW_SCHEDULE(\"view_schedule\");","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    public final String text;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"    private ChageeCommand(String commandText) {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"        this.text \u003d commandText;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"bipbipboopboop":16}},{"path":"src/main/java/chagee/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.controller;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":" * An example of a custom control using FXML. This control represents a dialog box consisting of an","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":" * ImageView to represent the speaker\u0027s face and a label containing text from the speaker.","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"            FXMLLoader fxmlLoader \u003d","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"                    new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"bipbipboopboop"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"bipbipboopboop"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"bipbipboopboop"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"bipbipboopboop"},"content":"    private void flip() {","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"bipbipboopboop"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"bipbipboopboop"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"bipbipboopboop"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"bipbipboopboop"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"bipbipboopboop"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"bipbipboopboop"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"bipbipboopboop"},"content":"    public static DialogBox getChageeDialog(String text, Image img) {","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"bipbipboopboop"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"bipbipboopboop"},"content":"        db.flip();","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"bipbipboopboop"},"content":"        return db;","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"bipbipboopboop":61}},{"path":"src/main/java/chagee/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.controller;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.driver.GuiDriver;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"    private Image userImage \u003d new Image(getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"    private Image chageeImage \u003d new Image(getClass().getResourceAsStream(\"/images/Anya.jpg\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"bipbipboopboop"},"content":"     * MainWindow Controller which acts as the layout for other controllers.","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"bipbipboopboop"},"content":"    public MainWindow() {","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"bipbipboopboop"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"bipbipboopboop"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"bipbipboopboop"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"bipbipboopboop"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"bipbipboopboop"},"content":"            ex.printStackTrace();","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"bipbipboopboop"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"bipbipboopboop"},"content":"     * Intializes the controller by adding the greet dialog to the chat and setting the height","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"bipbipboopboop"},"content":"     * property.","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"bipbipboopboop"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"bipbipboopboop"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"bipbipboopboop"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"bipbipboopboop"},"content":"        greet();","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"bipbipboopboop"},"content":"    private void greet() {","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"bipbipboopboop"},"content":"        DialogBox chageeBox \u003d","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"bipbipboopboop"},"content":"                DialogBox.getChageeDialog(\"Hihi! I\u0027m Chagee\\nWhat can I do for you?\", chageeImage);","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"bipbipboopboop"},"content":"        dialogContainer.getChildren().addAll(chageeBox);","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"bipbipboopboop"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Chagee\u0027s reply and","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"bipbipboopboop"},"content":"     * then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"bipbipboopboop"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"bipbipboopboop"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"bipbipboopboop"},"content":"        // Get input from user","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"bipbipboopboop"},"content":"        String inputString \u003d userInput.getText();","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"bipbipboopboop"},"content":"        // Process the input","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"bipbipboopboop"},"content":"        String response \u003d GuiDriver.getResponse(inputString);","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"bipbipboopboop"},"content":"        // Create DialogBox to place what the user has typed and Chagee\u0027s response","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"bipbipboopboop"},"content":"        DialogBox userBox \u003d DialogBox.getUserDialog(inputString, userImage);","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"bipbipboopboop"},"content":"        DialogBox chageeBox \u003d DialogBox.getChageeDialog(response, chageeImage);","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"bipbipboopboop"},"content":"        dialogContainer.getChildren().addAll(userBox, chageeBox);","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"bipbipboopboop"},"content":"        // Reset user input","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"bipbipboopboop"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"bipbipboopboop"},"content":"        // Terminate program if user typed \u0027bye\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"bipbipboopboop"},"content":"        exitIfByeCommand(response);","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"bipbipboopboop"},"content":"    private void exitIfByeCommand(String response) {","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"bipbipboopboop"},"content":"        boolean isByeCommand \u003d response.equals(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"bipbipboopboop"},"content":"        if (isByeCommand) {","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"bipbipboopboop"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"bipbipboopboop":97}},{"path":"src/main/java/chagee/date/ChageeDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.date;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":" * A utility class to convert date in {@code String} format to {@code LocalDate} format and","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":" * vice-versa.","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"public class ChageeDate {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    private static final DateTimeFormatter INPUT_DATE_FORMAT \u003d","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"     * Parses a {@code String} representation of date into a {@code LocalDate} instance.","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"     * @param dateString","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"     * @return A {@code LocalDate} instance","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"    public static LocalDate parseDateString(String dateString) {","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"        return LocalDate.parse(dateString, INPUT_DATE_FORMAT);","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"     * Returns the String representation of the {@code LocalDate} instance.","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"     * @param date","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"     * @return The {@code String} representation of the {@code date} instance in the format of MMM","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"     *         dd yyyy.","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"    public static String convertDateToString(LocalDate date) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"        return date.format(OUTPUT_DATE_FORMAT);","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"bipbipboopboop":36}},{"path":"src/main/java/chagee/driver/GuiDriver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.driver;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.command.Chagee;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.parser.ChageeParser;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.storage.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.tasks.Deadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.tasks.Event;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.tasks.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.tasks.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.tasks.ToDo;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.ui.UiPrinter;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":" * A class to process user\u0027s inputs and create the corresponding responses for such inputs.","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"public class GuiDriver {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"    private static TaskList taskList \u003d Storage.readTaskList();","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"     * Processes the input string and return its response.","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"     * @param inputString","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"    public static String getResponse(String inputString) {","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"            Chagee command \u003d ChageeParser.parseCommand(inputString);","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"            String[] commandArgs \u003d ChageeParser.parseCommandArgs(command, inputString);","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"            switch (command) {","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"            case LIST:","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"                assert commandArgs.length \u003d\u003d 0 : \"list command should not have any arguments\";","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"                return processListCommand(taskList);","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"            case BYE:","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"bipbipboopboop"},"content":"                assert commandArgs.length \u003d\u003d 0 : \"bye commmand should not have any arguments\";","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"bipbipboopboop"},"content":"                return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"bipbipboopboop"},"content":"            // Process find commands","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"bipbipboopboop"},"content":"            case FIND:","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"bipbipboopboop"},"content":"                return processFindCommand(commandArgs);","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"bipbipboopboop"},"content":"            case VIEW_SCHEDULE: {","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"bipbipboopboop"},"content":"                return processViewScheduleCommand(commandArgs);","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"bipbipboopboop"},"content":"            // Process task-creation commands","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"bipbipboopboop"},"content":"            case DEADLINE:","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"bipbipboopboop"},"content":"            case EVENT:","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"bipbipboopboop"},"content":"            case TODO:","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"bipbipboopboop"},"content":"                return processTaskCreationCommand(command, commandArgs);","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"bipbipboopboop"},"content":"            // Process index-based commands","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"bipbipboopboop"},"content":"            case MARK:","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"bipbipboopboop"},"content":"            case UNMARK:","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"bipbipboopboop"},"content":"            case DELETE:","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"bipbipboopboop"},"content":"                return processIndexBasedCommand(command, commandArgs);","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (Error e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"bipbipboopboop"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"bipbipboopboop"},"content":"        return inputString;","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"bipbipboopboop"},"content":"    private static String processViewScheduleCommand(String[] commandArgs) {","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"bipbipboopboop"},"content":"        String dateString \u003d commandArgs[0];","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"bipbipboopboop"},"content":"        TaskList filteredDateList \u003d taskList.filterTaskByDate(dateString);","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"bipbipboopboop"},"content":"        return UiPrinter.addLineBreak(\"Here are some some scheduled date on\",","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"bipbipboopboop"},"content":"                filteredDateList.toString());","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"bipbipboopboop"},"content":"    private static String processListCommand(TaskList taskList) {","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"bipbipboopboop"},"content":"        String taskStringList \u003d UiPrinter.addLineBreak(\"Here are your tasks:\", taskList.toString());","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"bipbipboopboop"},"content":"        return taskStringList;","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"bipbipboopboop"},"content":"    private static String processFindCommand(String[] commandArgs) {","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"bipbipboopboop"},"content":"        String keyword \u003d commandArgs[0];","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"bipbipboopboop"},"content":"        return UiPrinter.addLineBreak(\"Here are the matching tasks in your list:\",","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"bipbipboopboop"},"content":"                taskList.filterTaskByKeyword(keyword).toString());","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"bipbipboopboop"},"content":"    private static String processTaskCreationCommand(Chagee command, String[] commandArgs) {","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"bipbipboopboop"},"content":"        switch (command) {","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"bipbipboopboop"},"content":"        case DEADLINE: {","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"bipbipboopboop"},"content":"            return processDeadlineCommand(commandArgs);","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"bipbipboopboop"},"content":"        case EVENT: {","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"bipbipboopboop"},"content":"            return processEventCommand(commandArgs);","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"bipbipboopboop"},"content":"        case TODO: {","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"bipbipboopboop"},"content":"            return processTodoCommand(commandArgs);","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"bipbipboopboop"},"content":"        default:","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"bipbipboopboop"},"content":"            // Shouldn\u0027t reach here","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"bipbipboopboop"},"content":"            return \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"bipbipboopboop"},"content":"    private static String processIndexBasedCommand(Chagee command, String[] commandArgs) {","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"bipbipboopboop"},"content":"        switch (command) {","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"bipbipboopboop"},"content":"        case MARK:","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"bipbipboopboop"},"content":"            return processMarkCommand(commandArgs);","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"bipbipboopboop"},"content":"        case UNMARK:","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"bipbipboopboop"},"content":"            return processUnmarkCommand(commandArgs);","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"bipbipboopboop"},"content":"        case DELETE:","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"bipbipboopboop"},"content":"            return processDeleteCommand(commandArgs);","lastModifiedDate":"2023-02-11"},{"lineNumber":117,"author":{"gitId":"bipbipboopboop"},"content":"        default:","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"bipbipboopboop"},"content":"            return \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":120,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"bipbipboopboop"},"content":"    // Task Creation helper functions","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"bipbipboopboop"},"content":"    private static String processTodoCommand(String[] commandArgs) {","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"bipbipboopboop"},"content":"        String description \u003d commandArgs[0];","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"bipbipboopboop"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"bipbipboopboop"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"bipbipboopboop"},"content":"        int numTasks \u003d taskList.getNumTasks();","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"bipbipboopboop"},"content":"        return UiPrinter.getTaskCreationMessage(task, numTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":133,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":134,"author":{"gitId":"bipbipboopboop"},"content":"    private static String processEventCommand(String[] commandArgs) {","lastModifiedDate":"2023-02-11"},{"lineNumber":135,"author":{"gitId":"bipbipboopboop"},"content":"        String description \u003d commandArgs[0];","lastModifiedDate":"2023-02-11"},{"lineNumber":136,"author":{"gitId":"bipbipboopboop"},"content":"        String from \u003d commandArgs[1];","lastModifiedDate":"2023-02-11"},{"lineNumber":137,"author":{"gitId":"bipbipboopboop"},"content":"        String to \u003d commandArgs[2];","lastModifiedDate":"2023-02-11"},{"lineNumber":138,"author":{"gitId":"bipbipboopboop"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-11"},{"lineNumber":139,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":140,"author":{"gitId":"bipbipboopboop"},"content":"        taskList.addTask(event);","lastModifiedDate":"2023-02-11"},{"lineNumber":141,"author":{"gitId":"bipbipboopboop"},"content":"        int numTasks \u003d taskList.getNumTasks();","lastModifiedDate":"2023-02-11"},{"lineNumber":142,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":143,"author":{"gitId":"bipbipboopboop"},"content":"        return UiPrinter.getTaskCreationMessage(event, numTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":145,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":146,"author":{"gitId":"bipbipboopboop"},"content":"    private static String processDeadlineCommand(String[] commandArgs) {","lastModifiedDate":"2023-02-11"},{"lineNumber":147,"author":{"gitId":"bipbipboopboop"},"content":"        String description \u003d commandArgs[0];","lastModifiedDate":"2023-02-11"},{"lineNumber":148,"author":{"gitId":"bipbipboopboop"},"content":"        String by \u003d commandArgs[1];","lastModifiedDate":"2023-02-11"},{"lineNumber":149,"author":{"gitId":"bipbipboopboop"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-11"},{"lineNumber":150,"author":{"gitId":"bipbipboopboop"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2023-02-11"},{"lineNumber":151,"author":{"gitId":"bipbipboopboop"},"content":"        int numTasks \u003d taskList.getNumTasks();","lastModifiedDate":"2023-02-11"},{"lineNumber":152,"author":{"gitId":"bipbipboopboop"},"content":"        return UiPrinter.getTaskCreationMessage(deadline, numTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":154,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":155,"author":{"gitId":"bipbipboopboop"},"content":"    // Index-based helper functions","lastModifiedDate":"2023-02-11"},{"lineNumber":156,"author":{"gitId":"bipbipboopboop"},"content":"    private static String processMarkCommand(String[] commandArgs) {","lastModifiedDate":"2023-02-11"},{"lineNumber":157,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":158,"author":{"gitId":"bipbipboopboop"},"content":"            int taskIndex \u003d Integer.parseInt(commandArgs[0]);","lastModifiedDate":"2023-02-11"},{"lineNumber":159,"author":{"gitId":"bipbipboopboop"},"content":"            return UiPrinter.addLineBreak(\"Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2023-02-12"},{"lineNumber":160,"author":{"gitId":"bipbipboopboop"},"content":"                    taskList.markTask(taskIndex));","lastModifiedDate":"2023-02-11"},{"lineNumber":161,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":162,"author":{"gitId":"bipbipboopboop"},"content":"            return \"Please input numerals as your index!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":163,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":164,"author":{"gitId":"bipbipboopboop"},"content":"            return \"Please input a valid index!\";","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":166,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":167,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":168,"author":{"gitId":"bipbipboopboop"},"content":"    private static String processUnmarkCommand(String[] commandArgs) {","lastModifiedDate":"2023-02-11"},{"lineNumber":169,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":170,"author":{"gitId":"bipbipboopboop"},"content":"            int taskIndex \u003d Integer.parseInt(commandArgs[0]);","lastModifiedDate":"2023-02-11"},{"lineNumber":171,"author":{"gitId":"bipbipboopboop"},"content":"            return UiPrinter.addLineBreak(\"OK, I\u0027ve marked this task as not done yet:\",","lastModifiedDate":"2023-02-12"},{"lineNumber":172,"author":{"gitId":"bipbipboopboop"},"content":"                    taskList.unmarkTask(taskIndex));","lastModifiedDate":"2023-02-11"},{"lineNumber":173,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":174,"author":{"gitId":"bipbipboopboop"},"content":"            return \"Please input numerals as your index!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":175,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":176,"author":{"gitId":"bipbipboopboop"},"content":"            return \"Please input a valid index!\";","lastModifiedDate":"2023-02-12"},{"lineNumber":177,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":178,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":179,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":180,"author":{"gitId":"bipbipboopboop"},"content":"    private static String processDeleteCommand(String[] commandArgs) {","lastModifiedDate":"2023-02-11"},{"lineNumber":181,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":182,"author":{"gitId":"bipbipboopboop"},"content":"            int taskIndex \u003d Integer.parseInt(commandArgs[0]);","lastModifiedDate":"2023-02-11"},{"lineNumber":183,"author":{"gitId":"bipbipboopboop"},"content":"            return UiPrinter.addLineBreak(\"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2023-02-12"},{"lineNumber":184,"author":{"gitId":"bipbipboopboop"},"content":"                    taskList.deleteTask(taskIndex));","lastModifiedDate":"2023-02-11"},{"lineNumber":185,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":186,"author":{"gitId":"bipbipboopboop"},"content":"            return \"Please input numerals as your index!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":187,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":188,"author":{"gitId":"bipbipboopboop"},"content":"            return \"Please input a valid index!\";","lastModifiedDate":"2023-02-12"},{"lineNumber":189,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":190,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":191,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":192,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":193,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"bipbipboopboop":193}},{"path":"src/main/java/chagee/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.exception;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":" * A class to represent an empty description instantiation.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"public class EmptyDescriptionException extends Error {","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"        super(\"☹ OOPS!!! The description of a task cannot be empty :-(\");","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"bipbipboopboop":10}},{"path":"src/main/java/chagee/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.exception;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":" * A class to represent an invalid argument.","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"public class InvalidArgumentException extends Error {","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"    public InvalidArgumentException() {","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t understand your argument :-(\");","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"bipbipboopboop":10}},{"path":"src/main/java/chagee/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.exception;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":" * A class to represent an invalid command exception.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"public class InvalidCommandException extends Error {","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"bipbipboopboop":11}},{"path":"src/main/java/chagee/exception/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.exception;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":" * A class to represent an invalid date exception.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"public class InvalidDateFormatException extends Error {","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"     * Constructor for InvalidDateFormatException.","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"     * @param dateString","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"    public InvalidDateFormatException(String dateString) {","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"        super(String.format(","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"                \"☹ OOPS!!! I don\u0027t understand what %s means, please make sure your date is in yyyy-MM-dd format\",","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"                dateString));","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"bipbipboopboop":17}},{"path":"src/main/java/chagee/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.exception;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":" * A class to represent an invalid Event instatiation.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"public class InvalidEventException extends Error {","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"    public InvalidEventException() {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"        super(\"☹ OOPS!!! from date should be before to date!\");","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"bipbipboopboop":10}},{"path":"src/main/java/chagee/parser/ChageeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"import java.util.List;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.command.Chagee;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.date.ChageeDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.exception.EmptyDescriptionException;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.exception.InvalidArgumentException;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.exception.InvalidCommandException;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.exception.InvalidDateFormatException;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.exception.InvalidEventException;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":" * A class for parsing the user\u0027s input.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"public class ChageeParser {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"     * Breaks the input string into commands and its corresponding arguments, or throw an error if","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"     * the input string is not a valid command.","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"     * @param inputString","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"    public static Chagee parseCommand(String inputString) {","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"        // First split by space to get each individual word of the inputString","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"        String[] splittedString \u003d inputString.split(\" \");","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"        // The first(0th) word has to be a command.","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"        String command \u003d splittedString[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"bipbipboopboop"},"content":"        // Check whether the command is valid.","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"bipbipboopboop"},"content":"        return getCommandOrError(command);","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"bipbipboopboop"},"content":"    private static Chagee getCommandOrError(String command) {","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"bipbipboopboop"},"content":"        for (Chagee chageeCmd : Chagee.values()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"bipbipboopboop"},"content":"            if (chageeCmd.text.equals(command)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"bipbipboopboop"},"content":"                return chageeCmd;","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"bipbipboopboop"},"content":"        // This command is invalid if it\u0027s not any of the ChageeCommand.","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"bipbipboopboop"},"content":"        throw new InvalidCommandException();","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"bipbipboopboop"},"content":"     * Parses {@code inputString} to get the command arguments by using {@code command} to check for","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"bipbipboopboop"},"content":"     * the type of arguments it should get.","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"bipbipboopboop"},"content":"     * @param command","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"bipbipboopboop"},"content":"     * @param inputString","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"bipbipboopboop"},"content":"     * @return","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"bipbipboopboop"},"content":"    public static String[] parseCommandArgs(Chagee command, String inputString) {","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"bipbipboopboop"},"content":"        List\u003cString\u003e commandArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"bipbipboopboop"},"content":"        switch (command) {","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"bipbipboopboop"},"content":"        case LIST:","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"bipbipboopboop"},"content":"        case BYE:","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"bipbipboopboop"},"content":"            parseListOrBye(inputString, commandArgs);","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"bipbipboopboop"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"bipbipboopboop"},"content":"        case DEADLINE: {","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"bipbipboopboop"},"content":"            parseDeadline(inputString, commandArgs);","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"bipbipboopboop"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"bipbipboopboop"},"content":"        case EVENT: {","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"bipbipboopboop"},"content":"            parseEvent(inputString, commandArgs);","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"bipbipboopboop"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"bipbipboopboop"},"content":"        case TODO: {","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"bipbipboopboop"},"content":"            parseToDo(inputString, commandArgs);","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"bipbipboopboop"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"bipbipboopboop"},"content":"        case FIND: {","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"bipbipboopboop"},"content":"            parseFind(inputString, commandArgs);","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"bipbipboopboop"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"bipbipboopboop"},"content":"        case VIEW_SCHEDULE: {","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"bipbipboopboop"},"content":"            parseViewSchedule(inputString, commandArgs);","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"bipbipboopboop"},"content":"            break;","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"bipbipboopboop"},"content":"        case DELETE: {","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"bipbipboopboop"},"content":"            parseIndexCommand(Chagee.DELETE, inputString, commandArgs);","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"bipbipboopboop"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"bipbipboopboop"},"content":"        case MARK: {","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"bipbipboopboop"},"content":"            parseIndexCommand(Chagee.MARK, inputString, commandArgs);","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"bipbipboopboop"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"bipbipboopboop"},"content":"        case UNMARK: {","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"bipbipboopboop"},"content":"            parseIndexCommand(Chagee.UNMARK, inputString, commandArgs);","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"bipbipboopboop"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"bipbipboopboop"},"content":"        return commandArgs.toArray(new String[] {});","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"bipbipboopboop"},"content":"    private static void parseListOrBye(String inputString, List\u003cString\u003e commandArgs) {","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"bipbipboopboop"},"content":"        boolean isInputJustList \u003d inputString.strip().length() \u003d\u003d Chagee.LIST.text.length();","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"bipbipboopboop"},"content":"        boolean isInputJustBye \u003d inputString.strip().length() \u003d\u003d Chagee.BYE.text.length();","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"bipbipboopboop"},"content":"        boolean hasUserProvidedArgs \u003d !isInputJustList \u0026\u0026 !isInputJustBye;","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"bipbipboopboop"},"content":"        if (hasUserProvidedArgs) {","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"bipbipboopboop"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"bipbipboopboop"},"content":"    private static void parseFind(String inputString, List\u003cString\u003e commandArgs) {","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"bipbipboopboop"},"content":"        String keyword \u003d inputString.substring(Chagee.FIND.text.length());","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"bipbipboopboop"},"content":"        String cleanedKeyword \u003d keyword.strip();","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"bipbipboopboop"},"content":"        commandArgs.add(cleanedKeyword);","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"bipbipboopboop"},"content":"    private static void parseViewSchedule(String inputString, List\u003cString\u003e commandArgs)","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"bipbipboopboop"},"content":"            throws Error {","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"bipbipboopboop"},"content":"        int offset \u003d Chagee.VIEW_SCHEDULE.text.length();","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"bipbipboopboop"},"content":"        String dateString \u003d inputString.substring(offset).strip();","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":126,"author":{"gitId":"bipbipboopboop"},"content":"            ChageeDate.parseDateString(dateString);","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"bipbipboopboop"},"content":"            commandArgs.add(dateString);","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":129,"author":{"gitId":"bipbipboopboop"},"content":"            throw new Error(\"☹ OOPS!!! The time format is invalid, please use yyyy-MM-dd\");","lastModifiedDate":"2023-02-03"},{"lineNumber":130,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"bipbipboopboop"},"content":"    private static void parseToDo(String inputString, List\u003cString\u003e commandArgs) {","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"bipbipboopboop"},"content":"        // Shift the offset as follows to capture the description using substring;","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"bipbipboopboop"},"content":"        // {todo}[offset] {description}","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"bipbipboopboop"},"content":"        int offset \u003d getCommandLength(Chagee.TODO);","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"bipbipboopboop"},"content":"        String description \u003d inputString.substring(offset).strip();","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"bipbipboopboop"},"content":"        checkHasDescription(description);","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"bipbipboopboop"},"content":"        commandArgs.add(description);","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"bipbipboopboop"},"content":"    private static void checkHasDescription(String description) {","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"bipbipboopboop"},"content":"        boolean isDescriptionEmpty \u003d description.length() \u003d\u003d 0;","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"bipbipboopboop"},"content":"        if (isDescriptionEmpty) {","lastModifiedDate":"2023-02-20"},{"lineNumber":145,"author":{"gitId":"bipbipboopboop"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-02-20"},{"lineNumber":146,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":147,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":149,"author":{"gitId":"bipbipboopboop"},"content":"    private static void parseEvent(String inputString, List\u003cString\u003e commandArgs) {","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"bipbipboopboop"},"content":"        int offset \u003d getCommandLength(Chagee.EVENT);","lastModifiedDate":"2023-02-20"},{"lineNumber":151,"author":{"gitId":"bipbipboopboop"},"content":"        int fromIndex \u003d inputString.indexOf(\"/from\", offset);","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"bipbipboopboop"},"content":"        int toIndex \u003d inputString.indexOf(\"/to\", offset);","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"bipbipboopboop"},"content":"        boolean isKeywordExist \u003d fromIndex !\u003d -1 \u0026\u0026 toIndex !\u003d -1;","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"bipbipboopboop"},"content":"        if (!isKeywordExist) {","lastModifiedDate":"2023-02-19"},{"lineNumber":156,"author":{"gitId":"bipbipboopboop"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":158,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"bipbipboopboop"},"content":"        String description \u003d inputString.substring(offset, fromIndex).strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":160,"author":{"gitId":"bipbipboopboop"},"content":"        checkHasDescription(description);","lastModifiedDate":"2023-02-20"},{"lineNumber":161,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":162,"author":{"gitId":"bipbipboopboop"},"content":"        String from \u003d inputString.substring(fromIndex + (\"/from\".length()), toIndex).strip();","lastModifiedDate":"2023-02-12"},{"lineNumber":163,"author":{"gitId":"bipbipboopboop"},"content":"        String to \u003d inputString.substring(toIndex + (\"/to\".length())).strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":164,"author":{"gitId":"bipbipboopboop"},"content":"        LocalDate fromDate \u003d checkValidDate(from);","lastModifiedDate":"2023-02-20"},{"lineNumber":165,"author":{"gitId":"bipbipboopboop"},"content":"        LocalDate toDate \u003d checkValidDate(to);","lastModifiedDate":"2023-02-20"},{"lineNumber":166,"author":{"gitId":"bipbipboopboop"},"content":"        checkValidEventPeriod(fromDate, toDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":167,"author":{"gitId":"bipbipboopboop"},"content":"        commandArgs.add(description);","lastModifiedDate":"2023-02-20"},{"lineNumber":168,"author":{"gitId":"bipbipboopboop"},"content":"        commandArgs.add(from);","lastModifiedDate":"2023-02-20"},{"lineNumber":169,"author":{"gitId":"bipbipboopboop"},"content":"        commandArgs.add(to);","lastModifiedDate":"2023-02-20"},{"lineNumber":170,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":171,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":172,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":173,"author":{"gitId":"bipbipboopboop"},"content":"    private static void checkValidEventPeriod(LocalDate fromDate, LocalDate toDate) {","lastModifiedDate":"2023-02-20"},{"lineNumber":174,"author":{"gitId":"bipbipboopboop"},"content":"        boolean isValidFromDate \u003d fromDate.isBefore(toDate) || fromDate.isEqual(toDate);","lastModifiedDate":"2023-02-03"},{"lineNumber":175,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":176,"author":{"gitId":"bipbipboopboop"},"content":"        if (!isValidFromDate) {","lastModifiedDate":"2023-02-19"},{"lineNumber":177,"author":{"gitId":"bipbipboopboop"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2023-02-20"},{"lineNumber":178,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":179,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":180,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":181,"author":{"gitId":"bipbipboopboop"},"content":"    private static LocalDate checkValidDate(String dateString) {","lastModifiedDate":"2023-02-20"},{"lineNumber":182,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":183,"author":{"gitId":"bipbipboopboop"},"content":"            LocalDate date \u003d ChageeDate.parseDateString(dateString);","lastModifiedDate":"2023-02-20"},{"lineNumber":184,"author":{"gitId":"bipbipboopboop"},"content":"            return date;","lastModifiedDate":"2023-02-20"},{"lineNumber":185,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":186,"author":{"gitId":"bipbipboopboop"},"content":"            throw new InvalidDateFormatException(dateString);","lastModifiedDate":"2023-02-20"},{"lineNumber":187,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":188,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":189,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":190,"author":{"gitId":"bipbipboopboop"},"content":"    private static void parseDeadline(String inputString, List\u003cString\u003e commandArgs) {","lastModifiedDate":"2023-02-20"},{"lineNumber":191,"author":{"gitId":"bipbipboopboop"},"content":"        int offset \u003d getCommandLength(Chagee.DEADLINE);","lastModifiedDate":"2023-02-20"},{"lineNumber":192,"author":{"gitId":"bipbipboopboop"},"content":"        int byIndex \u003d inputString.indexOf(\"/by\", offset);","lastModifiedDate":"2023-02-20"},{"lineNumber":193,"author":{"gitId":"bipbipboopboop"},"content":"        boolean isByKeywordExist \u003d byIndex !\u003d -1;","lastModifiedDate":"2023-02-20"},{"lineNumber":194,"author":{"gitId":"bipbipboopboop"},"content":"        if (!isByKeywordExist) {","lastModifiedDate":"2023-02-20"},{"lineNumber":195,"author":{"gitId":"bipbipboopboop"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2023-02-20"},{"lineNumber":196,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":197,"author":{"gitId":"bipbipboopboop"},"content":"        String description \u003d inputString.substring(offset, byIndex).strip();","lastModifiedDate":"2023-02-20"},{"lineNumber":198,"author":{"gitId":"bipbipboopboop"},"content":"        String deadline \u003d checkValidDeadline(inputString, byIndex);","lastModifiedDate":"2023-02-20"},{"lineNumber":199,"author":{"gitId":"bipbipboopboop"},"content":"        checkHasDescription(description);","lastModifiedDate":"2023-02-20"},{"lineNumber":200,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":201,"author":{"gitId":"bipbipboopboop"},"content":"        commandArgs.add(description);","lastModifiedDate":"2023-02-12"},{"lineNumber":202,"author":{"gitId":"bipbipboopboop"},"content":"        commandArgs.add(deadline);","lastModifiedDate":"2023-02-20"},{"lineNumber":203,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":204,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":205,"author":{"gitId":"bipbipboopboop"},"content":"    private static String checkValidDeadline(String inputString, int byIndex) {","lastModifiedDate":"2023-02-20"},{"lineNumber":206,"author":{"gitId":"bipbipboopboop"},"content":"        String deadline \u003d inputString.substring(byIndex + (\"/by\".length())).strip();","lastModifiedDate":"2023-02-20"},{"lineNumber":207,"author":{"gitId":"bipbipboopboop"},"content":"        checkValidDate(deadline);","lastModifiedDate":"2023-02-20"},{"lineNumber":208,"author":{"gitId":"bipbipboopboop"},"content":"        return deadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":209,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":210,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":211,"author":{"gitId":"bipbipboopboop"},"content":"    private static void parseIndexCommand(Chagee command, String inputString,","lastModifiedDate":"2023-02-20"},{"lineNumber":212,"author":{"gitId":"bipbipboopboop"},"content":"            List\u003cString\u003e commandArgs) {","lastModifiedDate":"2023-02-20"},{"lineNumber":213,"author":{"gitId":"bipbipboopboop"},"content":"        int offset \u003d getCommandLength(command);","lastModifiedDate":"2023-02-20"},{"lineNumber":214,"author":{"gitId":"bipbipboopboop"},"content":"        String taskIndex \u003d inputString.substring(offset);","lastModifiedDate":"2023-02-20"},{"lineNumber":215,"author":{"gitId":"bipbipboopboop"},"content":"        String cleanedTaskIndex \u003d taskIndex.strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":216,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":217,"author":{"gitId":"bipbipboopboop"},"content":"            Integer.parseInt(cleanedTaskIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":218,"author":{"gitId":"bipbipboopboop"},"content":"            commandArgs.add(cleanedTaskIndex);","lastModifiedDate":"2023-01-20"},{"lineNumber":219,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":220,"author":{"gitId":"bipbipboopboop"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2023-02-12"},{"lineNumber":221,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":222,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":223,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":224,"author":{"gitId":"bipbipboopboop"},"content":"    private static int getCommandLength(Chagee command) {","lastModifiedDate":"2023-02-20"},{"lineNumber":225,"author":{"gitId":"bipbipboopboop"},"content":"        return command.text.length();","lastModifiedDate":"2023-02-20"},{"lineNumber":226,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":227,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":228,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":228}},{"path":"src/main/java/chagee/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.File;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.tasks.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":" * A class to represent some commonly used methods for reading and writing from Storage.","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"public class Storage {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"    private static final Path STORAGE_PATH \u003d Path.of(\"src/main/java/data\", \"Storage.ser\");","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"    private static File storageFile \u003d STORAGE_PATH.toFile();","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"    private static void createStorageFile() {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"            boolean isParentFileExist \u003d storageFile.getParentFile().exists();","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"            if (!isParentFileExist) {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"                storageFile.getParentFile().mkdirs();","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"            if (!storageFile.exists()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"                storageFile.createNewFile();","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"bipbipboopboop"},"content":"     * Reads from data/Storage.ser and return the saved {@code TaskList} or an empty","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"bipbipboopboop"},"content":"     * {@code TaskList} if Storage.ser is not found or corrupted.","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"bipbipboopboop"},"content":"     * @return a {@code TaskList} instance","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"bipbipboopboop"},"content":"    public static TaskList readTaskList() {","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"bipbipboopboop"},"content":"            FileInputStream fileIn \u003d new FileInputStream(storageFile);","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"bipbipboopboop"},"content":"            ObjectInputStream in \u003d new ObjectInputStream(fileIn);","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"bipbipboopboop"},"content":"            TaskList taskList \u003d (TaskList) in.readObject();","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"bipbipboopboop"},"content":"            in.close();","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"bipbipboopboop"},"content":"            return taskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"bipbipboopboop"},"content":"            createStorageFile();","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"bipbipboopboop"},"content":"            return new TaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"bipbipboopboop"},"content":"            return new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"bipbipboopboop"},"content":"     * Writes into data/Storage.ser if it already exists and creates a new Storage.ser before","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"bipbipboopboop"},"content":"     * writing if not found.","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"bipbipboopboop"},"content":"     * @param taskList the {@code TaskList} instance to be written into Storage.ser","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"bipbipboopboop"},"content":"    public static void writeTaskList(TaskList taskList) {","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"bipbipboopboop"},"content":"            FileOutputStream fileOut \u003d new FileOutputStream(storageFile);","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"bipbipboopboop"},"content":"            ObjectOutputStream out \u003d new ObjectOutputStream(fileOut);","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"bipbipboopboop"},"content":"            out.writeObject(taskList);","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"bipbipboopboop"},"content":"            out.close();","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"bipbipboopboop"},"content":"            createStorageFile();","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"bipbipboopboop"},"content":"            throw new Error(\"storage.ser not found, creating one....\");","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"bipbipboopboop":76}},{"path":"src/main/java/chagee/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.date.ChageeDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":" * A class to represent a Deadline.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    private static final long serialVersionUID \u003d 8193173341399324817L;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"    private LocalDate by;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"     * A {@code Deadline} constructor.","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"     * @param description","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"     * @param by","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"        this.by \u003d ChageeDate.parseDateString(by);","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"     * Checks whether the deadline is still active on {@code dateString}.","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"    public boolean checkIfDeadlineActive(String dateString) {","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"        LocalDate date \u003d ChageeDate.parseDateString(dateString);","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"        boolean isBeforeByDate \u003d date.isBefore(by);","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"        return isBeforeByDate \u0026\u0026 !super.isDone;","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"bipbipboopboop"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"bipbipboopboop"},"content":"        return String.format(\"  [D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"bipbipboopboop"},"content":"                ChageeDate.convertDateToString(by));","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":40}},{"path":"src/main/java/chagee/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.date.ChageeDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":" * A class to represent an Event.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    private static final long serialVersionUID \u003d 7664438936982546960L;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"    private LocalDate from;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"    private LocalDate to;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"     * An {@code Event} constructor.","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"        this.from \u003d ChageeDate.parseDateString(from);","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"        this.to \u003d ChageeDate.parseDateString(to);","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"     * Checks if this event is still incomplete and whether it lands on {@code dateString}.","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"     * @param dateString","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"     * @return Whether this task is","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"    public boolean checkIfEventActiveOnDate(String dateString) {","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"        LocalDate date \u003d ChageeDate.parseDateString(dateString);","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"        boolean isAfterStartingDate \u003d date.isAfter(from);","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"        boolean isBeforeEndDate \u003d date.isBefore(to);","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"        return isAfterStartingDate \u0026\u0026 isBeforeEndDate \u0026\u0026 !super.isDone;","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"bipbipboopboop"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"bipbipboopboop"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"bipbipboopboop"},"content":"        return String.format(\"  [E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"bipbipboopboop"},"content":"                ChageeDate.convertDateToString(from), ChageeDate.convertDateToString(to));","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":43}},{"path":"src/main/java/chagee/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":" * A class to represent Task.","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"    private static final long serialVersionUID \u003d 4048021127880559361L;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"    private String description;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"    public void mark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"        return description.contains(keyword);","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"    protected String getStatus() {","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"bipbipboopboop"},"content":"        return String.format(\"[%s] %s\\n\", getStatus(), this.description);","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":38}},{"path":"src/main/java/chagee/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"import java.util.List;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.storage.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":" * A class to represent a list of tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"    private static final long serialVersionUID \u003d 8098680977751428278L;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"    private List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"    public TaskList() {}","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"    private TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"     * @return Number of tasks in the task list","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"    public int getNumTasks() {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"        return taskList.size();","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"    public String toString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"        String taskListString \u003d \"\";","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"bipbipboopboop"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"bipbipboopboop"},"content":"            String printedString \u003d String.format(\"%d. %s \\n\", i + 1, taskList.get(i).toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"bipbipboopboop"},"content":"            // taskListString.concat(printedString);","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"bipbipboopboop"},"content":"            taskListString +\u003d printedString;","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"bipbipboopboop"},"content":"        return taskListString;","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"bipbipboopboop"},"content":"    public String[] getPrintableTaskList() {","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"bipbipboopboop"},"content":"        List\u003cString\u003e printableStringList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"bipbipboopboop"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"bipbipboopboop"},"content":"            String printedString \u003d String.format(\"%d. %s \", i + 1, taskList.get(i).toString());","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"bipbipboopboop"},"content":"            printableStringList.add(printedString);","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"bipbipboopboop"},"content":"        return printableStringList.toArray(new String[0]);","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"bipbipboopboop"},"content":"     * Adds a new task into the list of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"bipbipboopboop"},"content":"     * @param task a {@code Task} instance.","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"bipbipboopboop"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"bipbipboopboop"},"content":"        taskList.add(task);","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"bipbipboopboop"},"content":"        Storage.writeTaskList(this);","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"bipbipboopboop"},"content":"     * Deletes an existing task from the list of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"bipbipboopboop"},"content":"     * @param taskIndex the index of the {@code Task} instance obtained through list command.","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"bipbipboopboop"},"content":"     * @return The string representation of the deleted task.","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"bipbipboopboop"},"content":"    public String deleteTask(int taskIndex) {","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"bipbipboopboop"},"content":"            Task targetTask \u003d taskList.get(taskIndex - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"bipbipboopboop"},"content":"            taskList.remove(taskIndex - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"bipbipboopboop"},"content":"            Storage.writeTaskList(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"bipbipboopboop"},"content":"            return targetTask.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"bipbipboopboop"},"content":"            throw new IndexOutOfBoundsException(\"The index is out of bound!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"bipbipboopboop"},"content":"     * Marks an existing task as done from the list of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"bipbipboopboop"},"content":"     * @param taskIndex the index of the {@code Task} instance obtained through list command.","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"bipbipboopboop"},"content":"     * @return The string representation of the marked task.","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"bipbipboopboop"},"content":"    public String markTask(int taskIndex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"bipbipboopboop"},"content":"            Task targetTask \u003d taskList.get(taskIndex - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"bipbipboopboop"},"content":"            targetTask.mark();","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"bipbipboopboop"},"content":"            taskList.set(taskIndex - 1, targetTask);","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"bipbipboopboop"},"content":"            Storage.writeTaskList(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"bipbipboopboop"},"content":"            return targetTask.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"bipbipboopboop"},"content":"            throw new IndexOutOfBoundsException(\"The index is out of bound!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"bipbipboopboop"},"content":"     * Marks an existing task as not done from the list of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"bipbipboopboop"},"content":"     * @param taskIndex the index of the {@code Task} instance obtained through list command.","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"bipbipboopboop"},"content":"     * @return The string representation of the unmarked task.","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"bipbipboopboop"},"content":"    public String unmarkTask(int taskIndex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"bipbipboopboop"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"bipbipboopboop"},"content":"            Task targetTask \u003d taskList.get(taskIndex - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":110,"author":{"gitId":"bipbipboopboop"},"content":"            targetTask.unmark();","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"bipbipboopboop"},"content":"            taskList.set(taskIndex - 1, targetTask);","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"bipbipboopboop"},"content":"            Storage.writeTaskList(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"bipbipboopboop"},"content":"            return targetTask.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":114,"author":{"gitId":"bipbipboopboop"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":115,"author":{"gitId":"bipbipboopboop"},"content":"            throw new IndexOutOfBoundsException(\"The index is out of bound!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":117,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":119,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"bipbipboopboop"},"content":"     * Filters tasks that contain a given keyword.","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"bipbipboopboop"},"content":"     * @param keyword","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"bipbipboopboop"},"content":"     * @return A filtered {@code TaskList} that contains task that contain {@code keyword}.","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"bipbipboopboop"},"content":"    public TaskList filterTaskByKeyword(String keyword) {","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"bipbipboopboop"},"content":"        List\u003cTask\u003e filteredTaskList \u003d taskList.stream().filter((task) -\u003e task.contains(keyword))","lastModifiedDate":"2023-02-08"},{"lineNumber":127,"author":{"gitId":"bipbipboopboop"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-08"},{"lineNumber":128,"author":{"gitId":"bipbipboopboop"},"content":"        return new TaskList(filteredTaskList);","lastModifiedDate":"2023-02-08"},{"lineNumber":129,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":130,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":131,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":132,"author":{"gitId":"bipbipboopboop"},"content":"     * Filters incomplete tasks that land on a given date.","lastModifiedDate":"2023-02-19"},{"lineNumber":133,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"bipbipboopboop"},"content":"     * @param dateString","lastModifiedDate":"2023-02-19"},{"lineNumber":135,"author":{"gitId":"bipbipboopboop"},"content":"     * @return A filtered {@code TaskList} that contains task that are not done and land on","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"bipbipboopboop"},"content":"     *         {@code dateString}.","lastModifiedDate":"2023-02-19"},{"lineNumber":137,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":138,"author":{"gitId":"bipbipboopboop"},"content":"    public TaskList filterTaskByDate(String dateString) {","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"bipbipboopboop"},"content":"        List\u003cTask\u003e filteredTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"bipbipboopboop"},"content":"        // TODO : Refactor this","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"bipbipboopboop"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"bipbipboopboop"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"bipbipboopboop"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"bipbipboopboop"},"content":"                boolean isEventWithinDate \u003d event.checkIfEventActiveOnDate(dateString);","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"bipbipboopboop"},"content":"                if (isEventWithinDate) {","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"bipbipboopboop"},"content":"                    filteredTaskList.add(event);","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"bipbipboopboop"},"content":"                }","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":151,"author":{"gitId":"bipbipboopboop"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"bipbipboopboop"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-02-18"},{"lineNumber":153,"author":{"gitId":"bipbipboopboop"},"content":"                boolean isDeadlineActive \u003d deadline.checkIfDeadlineActive(dateString);","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"bipbipboopboop"},"content":"                if (isDeadlineActive) {","lastModifiedDate":"2023-02-19"},{"lineNumber":155,"author":{"gitId":"bipbipboopboop"},"content":"                    filteredTaskList.add(deadline);","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"bipbipboopboop"},"content":"                }","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"bipbipboopboop"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":159,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":160,"author":{"gitId":"bipbipboopboop"},"content":"        return new TaskList(filteredTaskList);","lastModifiedDate":"2023-02-18"},{"lineNumber":161,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":163,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":164,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":164}},{"path":"src/main/java/chagee/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":" * A class to represent a Todo task.","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"    private static final long serialVersionUID \u003d -8037857826265085451L;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"        return String.format(\"  [T]%s\", super.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"bipbipboopboop":17}},{"path":"src/main/java/chagee/ui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.controller.MainWindow;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":" * A class that acts as the entry point into the GUI.","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"public class Gui extends Application {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"    public void start(Stage primaryStage) throws Exception {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"        // Create control","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"        MainWindow mainWindow \u003d new MainWindow();","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"        // Set window","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"        configureStage(primaryStage);","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"        Scene scene \u003d new Scene(mainWindow);","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"        primaryStage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"        primaryStage.show(); // Render the stage.","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"    private void configureStage(Stage primaryStage) {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"        primaryStage.setTitle(\"Chagee\");","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"        primaryStage.setResizable(false);","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"        primaryStage.setMinHeight(600.0);","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"        primaryStage.setMinWidth(400.0);","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"bipbipboopboop":35}},{"path":"src/main/java/chagee/ui/UiPrinter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.tasks.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":" * A class for adding indentation and printing messages to fit Chagee\u0027s style.","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"public class UiPrinter {","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"     * Adds a new line to all the string in textArray, joins them then returns the final string.","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"     * @param textArray","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"    public static String addLineBreak(String... textArray) {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"        String finalString \u003d \"\";","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"        for (int i \u003d 0; i \u003c textArray.length; i++) {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"            finalString +\u003d textArray[i] + \"\\n\";","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"        return finalString;","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"     * Creates a message to signal that this task has been created and how many tasks are there in","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"     * the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"     * @param task","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"     * @param numTasks","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"    public static String getTaskCreationMessage(Task task, int numTasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"bipbipboopboop"},"content":"        return addLineBreak(\"Got it. I\u0027ve added this task:\", task.toString(),","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"bipbipboopboop"},"content":"                \"Now you have \" + numTasks + \" tasks in the list.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"bipbipboopboop":38}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"bipbipboopboop":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"bipbipboopboop":19}},{"path":"src/test/java/chagee/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bipbipboopboop"},"content":"package chagee;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"bipbipboopboop"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"bipbipboopboop"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.command.Chagee;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"bipbipboopboop"},"content":"import chagee.parser.ChageeParser;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"bipbipboopboop"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"bipbipboopboop"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"bipbipboopboop"},"content":"    public void testParseCommand() {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"bipbipboopboop"},"content":"        assertEquals(ChageeParser.parseCommand(Chagee.BYE.text), Chagee.BYE);","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"bipbipboopboop"},"content":"        assertEquals(ChageeParser.parseCommand(Chagee.DEADLINE.text), Chagee.DEADLINE);","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"bipbipboopboop"},"content":"        assertEquals(ChageeParser.parseCommand(Chagee.DELETE.text), Chagee.DELETE);","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"bipbipboopboop"},"content":"        assertEquals(ChageeParser.parseCommand(Chagee.EVENT.text), Chagee.EVENT);","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"bipbipboopboop"},"content":"        assertEquals(ChageeParser.parseCommand(Chagee.FIND.text), Chagee.FIND);","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"bipbipboopboop"},"content":"        assertEquals(ChageeParser.parseCommand(Chagee.LIST.text), Chagee.LIST);","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"bipbipboopboop"},"content":"        assertEquals(ChageeParser.parseCommand(Chagee.MARK.text), Chagee.MARK);","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"bipbipboopboop"},"content":"        assertEquals(ChageeParser.parseCommand(Chagee.TODO.text), Chagee.TODO);","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"bipbipboopboop"},"content":"        assertEquals(ChageeParser.parseCommand(Chagee.UNMARK.text), Chagee.UNMARK);","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"bipbipboopboop"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"bipbipboopboop"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"bipbipboopboop"},"content":"    public void testParseCommandArg() {","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"bipbipboopboop"},"content":"        // TODO : Add more test cases","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"bipbipboopboop"},"content":"        String inpuString \u003d \"todo something\";","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"bipbipboopboop"},"content":"        Chagee cmd \u003d ChageeParser.parseCommand(\"todo something\");","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"bipbipboopboop"},"content":"        String description \u003d ChageeParser.parseCommandArgs(cmd, inpuString)[0];","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"bipbipboopboop"},"content":"        assertEquals(description, \"something\");","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"bipbipboopboop"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"bipbipboopboop"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"bipbipboopboop":34}}]
