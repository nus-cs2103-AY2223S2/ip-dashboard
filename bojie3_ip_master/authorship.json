[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"    private String deadline;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"        super(name);","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"        if (super.getStatus()) {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"            return String.format(\"[D][X] %s (%s)\\n\", super.getTaskName(), this.deadline);","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"            return String.format(\"[D][ ] %s (%s)\\n\",super.getTaskName(), this.deadline);","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"bojie3":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"    public static String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"    public static String intro \u003d \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"            \"     Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"            \"     What can I do for you?\\n\" +","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"            \"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"    public static String outro \u003d \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"            \"     Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"            \"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"    private static String isMark(String s, TaskManager tm) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"        //checks if input is mark and throw exception for wrong format if matches","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"        if (s.length() \u003e\u003d 4 \u0026\u0026 Objects.equals(s.substring(0, 4), \"mark\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"            if (s.length() \u003c 5) {","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a index to mark.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"            }else if (!Objects.equals(s.charAt(4), \u0027 \u0027)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a spacing after the mark keyword.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"            }else if (s.length() \u003c 6) {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide the index to mark.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"            }else if (!s.substring(5, s.length()).matches(\"[0-9]+\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide only positive integers for index to mark.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"                return tm.mark(Integer.parseInt(s.substring(5, s.length())));","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"        return \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"    private static String isUnmark(String s, TaskManager tm) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"        //checks if input is unmark and throw exception for wrong format if matches","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"        if (s.length() \u003e\u003d 6 \u0026\u0026 Objects.equals(s.substring(0, 6), \"unmark\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"            if (s.length() \u003c 7) {","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a index to unmark.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"            }else if (!Objects.equals(s.charAt(6), \u0027 \u0027)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a spacing after the unmark keyword\");","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"            }else if (s.length() \u003c 8) {","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide the index to unmark.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"            }else if (!s.substring(7, s.length()).matches(\"[0-9]+\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide only positive integers for index to unmark.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"                return tm.unmark(Integer.parseInt(s.substring(7, s.length())));","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"        return \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"    private static String isTodo(String s, TaskManager tm) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"        //checks if input is todotask and throw exception for wrong format if matches","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"        if (s.length() \u003e\u003d 4 \u0026\u0026 Objects.equals(s.substring(0, 4), \"todo\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"            if (s.length() \u003c 5) {","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"bojie3"},"content":"            }else if (!Objects.equals(s.charAt(4), \u0027 \u0027)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a spacing after the todo keyword.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"bojie3"},"content":"            }else if (s.length() \u003c 6) {","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"bojie3"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"                return tm.addTodo(s.substring(5, s.length()));","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"        return \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":70,"author":{"gitId":"bojie3"},"content":"    private static String isDeadline(String s, TaskManager tm) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"bojie3"},"content":"        //checks if input is deadline task and throw exception for wrong format if matches","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"bojie3"},"content":"        if (s.length() \u003e\u003d 8 \u0026\u0026 Objects.equals(s.substring(0, 8), \"deadline\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"bojie3"},"content":"            if (s.length() \u003c 9) {","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"bojie3"},"content":"            }else if (!Objects.equals(s.charAt(8), \u0027 \u0027)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a spacing after the deadline keyword\");","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"bojie3"},"content":"            }else if (s.length() \u003c 10) {","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"bojie3"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"bojie3"},"content":"                s \u003d s.substring(9, s.length());","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"bojie3"},"content":"                String[] parts \u003d s.split(\"/\");","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"bojie3"},"content":"                String dl \u003d parts[1].substring(3, parts[1].length()).strip();","lastModifiedDate":"2023-01-16"},{"lineNumber":83,"author":{"gitId":"bojie3"},"content":"                String name \u003d parts[0].strip();","lastModifiedDate":"2023-01-16"},{"lineNumber":84,"author":{"gitId":"bojie3"},"content":"                return tm.addDeadline(name, \"by: \" + dl);","lastModifiedDate":"2023-01-16"},{"lineNumber":85,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":86,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"bojie3"},"content":"        return \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":88,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":89,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":90,"author":{"gitId":"bojie3"},"content":"    private static String isEvent(String s, TaskManager tm) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":91,"author":{"gitId":"bojie3"},"content":"        //check if input is event task and throw exception for wrong format if matches","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"bojie3"},"content":"        if (s.length() \u003e\u003d 5 \u0026\u0026 Objects.equals(s.substring(0, 5), \"event\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"bojie3"},"content":"            if (s.length() \u003c 6) {","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"bojie3"},"content":"            }else if (!Objects.equals(s.charAt(5), \u0027 \u0027)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a spacing after the event keyword\");","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"bojie3"},"content":"            }else if (s.length() \u003c 7) {","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"bojie3"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"bojie3"},"content":"                s \u003d s.substring(6, s.length());","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"bojie3"},"content":"                String[] parts \u003d s.split(\"/\");","lastModifiedDate":"2023-01-16"},{"lineNumber":102,"author":{"gitId":"bojie3"},"content":"                String name \u003d parts[0].strip();","lastModifiedDate":"2023-01-16"},{"lineNumber":103,"author":{"gitId":"bojie3"},"content":"                String from \u003d parts[1].substring(5, parts[1].length()).strip();","lastModifiedDate":"2023-01-16"},{"lineNumber":104,"author":{"gitId":"bojie3"},"content":"                String to \u003d parts[2].substring(3, parts[2].length()).strip();","lastModifiedDate":"2023-01-16"},{"lineNumber":105,"author":{"gitId":"bojie3"},"content":"                return tm.addEvent(name, String.format(\"from: %s to: %s\", from, to));","lastModifiedDate":"2023-01-16"},{"lineNumber":106,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":107,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":108,"author":{"gitId":"bojie3"},"content":"        return \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":109,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":110,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":111,"author":{"gitId":"bojie3"},"content":"    private static String isDelete(String s, TaskManager tm) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"bojie3"},"content":"        //checks if input is delete and throw exception for wrong format if matches","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"bojie3"},"content":"        if (s.length() \u003e\u003d 6 \u0026\u0026 Objects.equals(s.substring(0, 6), \"delete\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"bojie3"},"content":"            if (s.length() \u003c 7) {","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a index to delete.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"bojie3"},"content":"            }else if (!Objects.equals(s.charAt(6), \u0027 \u0027)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a spacing after the delete keyword.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"bojie3"},"content":"            }else if (s.length() \u003c 8) {","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide the index to delete.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"bojie3"},"content":"            }else if (!s.substring(7, s.length()).matches(\"[0-9]+\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide only positive integers for index to delete.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"bojie3"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"bojie3"},"content":"                return tm.deleteTask(Integer.parseInt(s.substring(7, s.length())));","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"bojie3"},"content":"        return \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-15"},{"lineNumber":130,"author":{"gitId":"bojie3"},"content":"        System.out.println(Duke.intro);","lastModifiedDate":"2023-01-15"},{"lineNumber":131,"author":{"gitId":"bojie3"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-15"},{"lineNumber":132,"author":{"gitId":"bojie3"},"content":"        TaskManager tm \u003d new TaskManager();","lastModifiedDate":"2023-01-16"},{"lineNumber":133,"author":{"gitId":"bojie3"},"content":"        while (true) {","lastModifiedDate":"2023-01-15"},{"lineNumber":134,"author":{"gitId":"bojie3"},"content":"            try {","lastModifiedDate":"2023-01-17"},{"lineNumber":135,"author":{"gitId":"bojie3"},"content":"                String str \u003d sc.nextLine();","lastModifiedDate":"2023-01-15"},{"lineNumber":136,"author":{"gitId":"bojie3"},"content":"                if (Objects.equals(str, \"bye\")) {","lastModifiedDate":"2023-01-15"},{"lineNumber":137,"author":{"gitId":"bojie3"},"content":"                    System.out.println(Duke.outro);","lastModifiedDate":"2023-01-15"},{"lineNumber":138,"author":{"gitId":"bojie3"},"content":"                    break;","lastModifiedDate":"2023-01-15"},{"lineNumber":139,"author":{"gitId":"bojie3"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":140,"author":{"gitId":"bojie3"},"content":"                if (Objects.equals(str, \"list\")) {","lastModifiedDate":"2023-01-16"},{"lineNumber":141,"author":{"gitId":"bojie3"},"content":"                    System.out.println(tm.getAllTaskStr());","lastModifiedDate":"2023-01-16"},{"lineNumber":142,"author":{"gitId":"bojie3"},"content":"                    continue;","lastModifiedDate":"2023-01-16"},{"lineNumber":143,"author":{"gitId":"bojie3"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":144,"author":{"gitId":"bojie3"},"content":"                String ismark \u003d Duke.isMark(str, tm);","lastModifiedDate":"2023-01-16"},{"lineNumber":145,"author":{"gitId":"bojie3"},"content":"                if (!Objects.equals(ismark, \"\")) {","lastModifiedDate":"2023-01-16"},{"lineNumber":146,"author":{"gitId":"bojie3"},"content":"                    System.out.println(ismark);","lastModifiedDate":"2023-01-16"},{"lineNumber":147,"author":{"gitId":"bojie3"},"content":"                    continue;","lastModifiedDate":"2023-01-16"},{"lineNumber":148,"author":{"gitId":"bojie3"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":149,"author":{"gitId":"bojie3"},"content":"                String isUnmark \u003d Duke.isUnmark(str, tm);","lastModifiedDate":"2023-01-16"},{"lineNumber":150,"author":{"gitId":"bojie3"},"content":"                if (!Objects.equals(isUnmark, \"\")) {","lastModifiedDate":"2023-01-16"},{"lineNumber":151,"author":{"gitId":"bojie3"},"content":"                    System.out.println(isUnmark);","lastModifiedDate":"2023-01-16"},{"lineNumber":152,"author":{"gitId":"bojie3"},"content":"                    continue;","lastModifiedDate":"2023-01-16"},{"lineNumber":153,"author":{"gitId":"bojie3"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":154,"author":{"gitId":"bojie3"},"content":"                String isTodo \u003d Duke.isTodo(str, tm);","lastModifiedDate":"2023-01-16"},{"lineNumber":155,"author":{"gitId":"bojie3"},"content":"                if (!Objects.equals(isTodo, \"\")) {","lastModifiedDate":"2023-01-16"},{"lineNumber":156,"author":{"gitId":"bojie3"},"content":"                    System.out.println(isTodo);","lastModifiedDate":"2023-01-16"},{"lineNumber":157,"author":{"gitId":"bojie3"},"content":"                    continue;","lastModifiedDate":"2023-01-16"},{"lineNumber":158,"author":{"gitId":"bojie3"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":159,"author":{"gitId":"bojie3"},"content":"                String isDeadline \u003d Duke.isDeadline(str, tm);","lastModifiedDate":"2023-01-16"},{"lineNumber":160,"author":{"gitId":"bojie3"},"content":"                if (!Objects.equals(isDeadline, \"\")) {","lastModifiedDate":"2023-01-16"},{"lineNumber":161,"author":{"gitId":"bojie3"},"content":"                    System.out.println(isDeadline);","lastModifiedDate":"2023-01-16"},{"lineNumber":162,"author":{"gitId":"bojie3"},"content":"                    continue;","lastModifiedDate":"2023-01-16"},{"lineNumber":163,"author":{"gitId":"bojie3"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":164,"author":{"gitId":"bojie3"},"content":"                String isEvent \u003d Duke.isEvent(str, tm);","lastModifiedDate":"2023-01-16"},{"lineNumber":165,"author":{"gitId":"bojie3"},"content":"                if (!Objects.equals(isEvent, \"\")) {","lastModifiedDate":"2023-01-16"},{"lineNumber":166,"author":{"gitId":"bojie3"},"content":"                    System.out.println(isEvent);","lastModifiedDate":"2023-01-16"},{"lineNumber":167,"author":{"gitId":"bojie3"},"content":"                    continue;","lastModifiedDate":"2023-01-17"},{"lineNumber":168,"author":{"gitId":"bojie3"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":169,"author":{"gitId":"bojie3"},"content":"                String isDelete \u003d Duke.isDelete(str, tm);","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"bojie3"},"content":"                if (!Objects.equals(isDelete, \"\")){","lastModifiedDate":"2023-01-18"},{"lineNumber":171,"author":{"gitId":"bojie3"},"content":"                    System.out.println(isDelete);","lastModifiedDate":"2023-01-18"},{"lineNumber":172,"author":{"gitId":"bojie3"},"content":"                    continue;","lastModifiedDate":"2023-01-18"},{"lineNumber":173,"author":{"gitId":"bojie3"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":174,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-17"},{"lineNumber":175,"author":{"gitId":"bojie3"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":176,"author":{"gitId":"bojie3"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":177,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":178,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bojie3":172,"-":8}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"import java.lang.StringBuilder;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"    private static final String starting \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"    private static final String ending \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"    private static final String spacing \u003d \"     ☹ OOPS!!! \";","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"        super(message);","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"        sb.append(DukeException.starting).append(DukeException.spacing).append(super.getMessage()).append(\"\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"        sb.append(DukeException.ending);","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"bojie3":18}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"    private String duration;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"    public Event(String name, String duration) {","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"        super(name);","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"        if (super.getStatus()) {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"            return String.format(\"[E][X] %s (%s)\\n\", super.getTaskName(), this.duration);","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"            return String.format(\"[E][ ] %s (%s)\\n\",super.getTaskName(), this.duration);","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"bojie3":17}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"public class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"    private boolean status \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"    private String taskName;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"    public Task (String name) {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"        this.taskName \u003d name;","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"        return this.status;","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"        return this.taskName;","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    public void setStatus(boolean state) {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"        this.status \u003d state;","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"bojie3":20}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"import java.lang.StringBuilder;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"import java.sql.Array;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"public class TaskManager {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"    private static int size \u003d 100;","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"    private static final String starting \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"    private static final String ending \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"    private static final String spacing \u003d \"     \";","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"    public TaskManager() {}","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"    public String wrap(String s) {","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"        //wrap string with the correct indentation and lines when returning add task string","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"        //assumes s contains the nextline character","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"        sb.append(TaskManager.starting).append(TaskManager.spacing).append(\"Got it. I\u0027ve added this task:\\n  \");","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"        sb.append(TaskManager.spacing).append(s).append(TaskManager.spacing);","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"        sb.append(String.format(\"Now you have %d tasks in the list.\\n\", this.tasks.size())).append(TaskManager.ending);","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"    public String addDeadline(String task, String deadline) {","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"        //adds deadline and return the add string for deadlines","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"        Deadline dl \u003d new Deadline(task, deadline);","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"        this.tasks.add(dl);","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"        return this.wrap(dl.toString());","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"    public String addEvent(String task, String duration) {","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"        //adds deadline and return the add string for deadlines","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"        Event ev \u003d new Event(task, duration);","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"        this.tasks.add(ev);","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"        return this.wrap(ev.toString());","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"    public String addTodo(String task) {","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"        //adds deadline and return the add string for deadlines","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"        Todo td \u003d new Todo(task);","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"        this.tasks.add(td);","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"        return this.wrap(td.toString());","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"    public String mark(int index) {","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"        //marks the task and return the string for marking tasks","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"        this.tasks.get(index-1).setStatus(true);","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"        String s \u003d TaskManager.starting + TaskManager.spacing + \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"        s +\u003d TaskManager.spacing + \"  \" + this.tasks.get(index-1).toString() + TaskManager.ending;","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"        return s;","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"    public String unmark(int index) {","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"        //unmarks the task and returns the string for unmarking tasks","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"        this.tasks.get(index-1).setStatus(false);","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"        String s \u003d TaskManager.starting + TaskManager.spacing + \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2023-01-16"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"        s +\u003d TaskManager.spacing + \"  \" + this.tasks.get(index-1).toString() + TaskManager.ending;","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"        return s;","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"bojie3"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"bojie3"},"content":"        //deletes the task and returns the string for deleting tasks","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"bojie3"},"content":"        Task t \u003d this.tasks.get(index - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"        this.tasks.remove(index - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"bojie3"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"bojie3"},"content":"        sb.append(TaskManager.starting).append(TaskManager.spacing).append(\"Noted. I\u0027ve removed this task:\\n  \");","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"        sb.append(TaskManager.spacing).append(t.toString()).append(TaskManager.spacing);","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"bojie3"},"content":"        sb.append(String.format(\"Now you have %d tasks in the list.\\n\", this.tasks.size())).append(TaskManager.ending);","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"bojie3"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"bojie3"},"content":"    public String getAllTaskStr() {","lastModifiedDate":"2023-01-16"},{"lineNumber":73,"author":{"gitId":"bojie3"},"content":"        //returns string for all the tasks","lastModifiedDate":"2023-01-16"},{"lineNumber":74,"author":{"gitId":"bojie3"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"bojie3"},"content":"        s.append(TaskManager.starting);","lastModifiedDate":"2023-01-16"},{"lineNumber":76,"author":{"gitId":"bojie3"},"content":"        s.append(TaskManager.spacing).append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-01-16"},{"lineNumber":77,"author":{"gitId":"bojie3"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"bojie3"},"content":"            s.append(String.format(\"%s%d.%s\", TaskManager.spacing, i + 1, this.tasks.get(i).toString()));","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":80,"author":{"gitId":"bojie3"},"content":"        s.append(TaskManager.ending);","lastModifiedDate":"2023-01-16"},{"lineNumber":81,"author":{"gitId":"bojie3"},"content":"        return s.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":83,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"bojie3":83}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"        super(name);","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"        if (super.getStatus()) {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"            return String.format(\"[T][X] %s\\n\", super.getTaskName());","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"            return String.format(\"[T][ ] %s\\n\",super.getTaskName());","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"bojie3":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"unmark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"bojie3":9}}]
