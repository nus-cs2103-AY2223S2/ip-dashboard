[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"# duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bojie3":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"checkstyle {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bojie3":21,"-":40}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"    private void flip() {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"     * Takes in user image and text, and convert it into a dialog box","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"     * @param text","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"     * @param img","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"     * @return Dialogbox of user","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"bojie3"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"bojie3"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"     * Takes in Duke\u0027s response and image and output a dialog box","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"bojie3"},"content":"     * @param text Duke\u0027s response","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"     * @param img Duke\u0027s image","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"bojie3"},"content":"     * @return dialogbox of duke","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"bojie3"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"bojie3"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"bojie3"},"content":"        db.flip();","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"bojie3"},"content":"        return db;","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"bojie3":75}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":" * A class for managing tasks","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke{","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"    private TaskList tl;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"    public Duke() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"        this.tl \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"        this.storage.populate(this.tl);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"     * @return String version of introduction","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"    public String getIntro() {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"        return this.ui.getIntro();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"     * Returns the response when given a non null user input","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"     * @param input User input string","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"     * @return Output string","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"            Command command \u003d this.parser.parse(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"            if (Objects.equals(command, null)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"                return this.ui.getOutro();","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"            return command.execute(tl, ui, storage);","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"            return e.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bojie3":52,"-":3}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"    public Main() throws IOException {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"     * Set up the componenets for GUI","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"     *              the application scene can be set.","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"     *              Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"     *              primary stages.","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"            stage.show();","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"bojie3":42}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"    private Duke duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"     * Set private duke variable of MainWindows object and","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"     * output intro message in gui","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"     * @param d","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"        duke \u003d d;","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"                DialogBox.getDukeDialog(d.getIntro(), dukeImage)","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"        );","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"        );","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"bojie3":60}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import duke.datetime.DateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":" * Class in charge of handling the case of adding Deadline Task","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    private String deadlineString;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"    private String name;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"     * Constructor to create a AddDeadlineCommand","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"     * @param name deadline name","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"     * @param deadlineString Task\u0027s deadline in string form","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    public AddDeadlineCommand(String name, String deadlineString) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"        this.deadlineString \u003d deadlineString;","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"     * Adds the Task to TaskList and storage, and output result string","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"     * @param tl TasList to be used to get Task","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"     * @param ui Ui to output result","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"     * @param storage Storage to modify if necessary","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"     * @return output string","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"            LocalDateTime deadline \u003d DateTime.parseDateTimeString(this.deadlineString);","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"            Deadline dl \u003d new Deadline(this.name, deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"            tl.addTask(dl);","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"            storage.add(storage.getStorageTaskString(dl));","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"            return ui.showAddDeadlineResult(dl.toString(), tl.getSize());","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"            throw new DukeException(\"Wrong format for deadline, \"","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"                    + \"please follow deadline name /by datetime(yyyy-mm-dd HH:mm)\");","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"bojie3":52}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import duke.datetime.DateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":" * Class in charge of handling the case of adding Event task","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    private String fromString;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"    private String toString;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"    private String name;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"     * Constructor to create AddEventCommand","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"     * @param name Name of task","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"     * @param fromString Task\u0027s starting time in string","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"     * @param toString Task\u0027s ending time in string","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"    public AddEventCommand(String name, String fromString, String toString) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"        this.fromString \u003d fromString;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"        this.toString \u003d toString;","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"     * Adds the Task to TaskList and storage, and output result string","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"     * @param tl TasList to be used to get Task","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"     * @param ui Ui to output result","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"     * @param storage Storage to modify if necessary","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"     * @return output string","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"            LocalDateTime from \u003d DateTime.parseDateTimeString(this.fromString);","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"            LocalDateTime to \u003d DateTime.parseDateTimeString(this.toString);","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"            Event ev \u003d new Event(this.name, from, to);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"            tl.addTask(ev);","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"            storage.add(storage.getStorageTaskString(ev));","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"            return ui.showAddEventResult(ev.toString(), tl.getSize());","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"            throw new DukeException(\"Wrong format for event, \"","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"                    + \"please follow deadline name /from datetime /to datetime(yyyy-mm-dd hh:mm)\");","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"bojie3":57}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":" * Class in charge of handling the case of adding a Todotask","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"    private String name;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"    public AddTodoCommand(String name) {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"     * Adds the Task to TaskList and storage, and output result string","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"     * @param tl TasList to be used to get Task","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"     * @param ui Ui to output result","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"     * @param storage Storage to modify if necessary","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"     * @return output string","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"        Todo td \u003d new Todo(this.name);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"        tl.addTask(td);","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"        storage.add(storage.getStorageTaskString(td));","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"        return ui.showAddTodoResult(td.toString(), tl.getSize());","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"bojie3":32}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":" * Command class, with a function execute() to execute the command","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"    public abstract String execute(TaskList tl, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bojie3":14}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":" * Class to handle the case of deleting Task","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"    private int index;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"    public DeleteTaskCommand(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"     * Delete task from TaskList and Storage, and output result string","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"     * @param tl TasList to be used to get Task","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"     * @param ui Ui to output result","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"     * @param storage Storage to modify if necessary","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"     * @return output string","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"        storage.delete(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"        Task task \u003d tl.getTask(index - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"        tl.remove(index - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"        return ui.showDeleteResult(task.toString(), tl.getSize());","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"bojie3":32}},{"path":"src/main/java/duke/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":" * Class in charge of handling the case to display all task matching keyword","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"    private String keyword;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"     * Find all matching tasks and return the output string of all the task combined","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"     * @param tl TasList to be used to get Task","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"     * @param ui Ui to output result","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"     * @param storage Storage to modify if necessary","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"     * @return output string","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"        ArrayList\u003cTask\u003e taskArr \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"        for (int i \u003d 0; i \u003c tl.getSize(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"            Task task \u003d tl.getTask(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"            String taskname \u003d task.getTaskName();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"            if (taskname.contains(keyword)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"                taskArr.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"        return ui.showFindTaskResult(taskArr);","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bojie3":40}},{"path":"src/main/java/duke/command/GetAllTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":" * Class in charge of handling the case to display all task","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"public class GetAllTaskCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"     * Get all the task and output it as string","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"     * @param tl TasList to be used to get Task","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"     * @param ui Ui to output result","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"     * @param storage Storage to modify if necessary","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"     * @return output string","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"        return ui.showGetAllTaskResult(tl);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bojie3":24}},{"path":"src/main/java/duke/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":" * Class in charge of handling the case to mark Task","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"    private int index;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"    public MarkTaskCommand(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"     * Marks Task as done, update it to storage, and output result using Ui","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"     * @param tl TasList to be used to get Task","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"     * @param ui Ui to output result","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"     * @param storage Storage to modify if necessary","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"     * @return output string","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"        tl.mark(this.index - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"        storage.modify(storage.getStorageTaskString(tl.getTask(this.index - 1)), this.index);","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"        return ui.showMarkResult(tl.getTask(this.index - 1).toString(), this.index);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"bojie3":31}},{"path":"src/main/java/duke/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.command;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":" * Class to exectue the command to sort","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"     * Sorts the task in tasklist, and then update the task in data.txt","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"     * @param tl Tasklist to sort","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"     * @param ui Ui to give user output after sorting","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"     * @param storage Storage which will be updated during sorting","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"     * @return Tasks in sorted order","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"     * @throws DukeException If there is error in sorting","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"        tl.sortTaskList(storage);","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"        return \"Results sorted!\\n\" + ui.showGetAllTaskResult(tl);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"bojie3":27}},{"path":"src/main/java/duke/command/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":" * Class in charge of handling the case of Unmakring Task","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"    private int index;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"    public UnmarkTaskCommand(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"     * Marks Task as undone, update it to storage, and return result string","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"     * @param tl TasList to be used to get Task","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"     * @param ui Ui to output result","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"     * @param storage Storage to modify if necessary","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"     * @return output string","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    public String execute(TaskList tl, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"        tl.unmark(this.index - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"        storage.modify(storage.getStorageTaskString(tl.getTask(this.index - 1)), this.index);","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"        return ui.showUnmarkResult(tl.getTask(this.index - 1).toString(), this.index);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"bojie3":31}},{"path":"src/main/java/duke/datetime/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.datetime;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":" * Class to manage conversion date and time in Task between LocalDateTime and String","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"public class DateTime {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"    public DateTime() {}","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"     * Converts string representing datetime into LocalDateTime","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"     * @param dateTimeString String representing datetime of task","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"     * @return LocalDateTime of Task","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"     * @throws DateTimeParseException If the format of string datetime is wrong","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"    public static LocalDateTime parseDateTimeString(String dateTimeString) throws DateTimeParseException {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString, DateTime.formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"        return dateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"     * Given the datetime of Task, convert it into string form","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"     * @param dateTime LocalDateTime of Task","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"     * @return String version of Task datetime","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"    public static String getDateTimeString(LocalDateTime dateTime) {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"        return dateTime.format(DateTime.formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"bojie3":36}},{"path":"src/main/java/duke/dukeexception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.dukeexception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":" * Class to manage problems during execution of Duke CLI","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"        super(message);","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"     * @return String version of exception","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"        return super.getMessage() + \"\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"bojie3":19}},{"path":"src/main/java/duke/launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"public class launcher {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"bojie3":9}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"import duke.datetime.DateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":" * Class to parse user input","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"    public Parser() {}","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"     * Parse data from data.txt in storage and adds it to TaskList","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"     * @param str String to be parsed","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"     * @param tl TaskList where Tasks are added to","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"    public void parseAndAddStorageTask(String str, TaskList tl) {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"        //parse from string that is either a event, deadline or todoevent","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"        String[] arr \u003d str.split(\",\");","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"        Task task;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"            if (Objects.equals(arr[0], \"T\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"                task \u003d new Todo(arr[2]);","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"            } else if (Objects.equals(arr[0], \"D\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"                LocalDateTime deadline \u003d DateTime.parseDateTimeString(arr[3]);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"                task \u003d new Deadline(arr[2], deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"            } else if (Objects.equals(arr[0], \"E\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"                String fromString \u003d arr[3].strip();","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"                String toString \u003d arr[4].strip();","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"                LocalDateTime from \u003d DateTime.parseDateTimeString(fromString);","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"                LocalDateTime to \u003d DateTime.parseDateTimeString(toString);","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"                task \u003d new Event(arr[2], from, to);","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"                System.out.println(\"Parser parseAndAddStorageTask() Error in text:\" + str);","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"                return;","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"            tl.addTask(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"            if (Objects.equals(arr[1], \"1\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"                task.setIsCompleted(true);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"            System.out.println(\"Parser parseAndAddStorageTask() Index out of bound when parsing string:\" + str);","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"     * Parse input from user given in CLI","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"bojie3"},"content":"     * @param str String input of user","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"bojie3"},"content":"     * @return Command corresponding to the input of user","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"bojie3"},"content":"     * @throws DukeException If user input is unknown or incorrect format","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"bojie3"},"content":"    public Command parse(String str) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"        if (Objects.equals(str, \"bye\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"bojie3"},"content":"            return null;","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"        if (Objects.equals(str, \"list\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"bojie3"},"content":"            return new GetAllTaskCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"bojie3"},"content":"        Command command \u003d this.isMark(str);","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"bojie3"},"content":"        if (!Objects.equals(command, null)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"bojie3"},"content":"            return command;","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"bojie3"},"content":"        command \u003d this.isUnmark(str);","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"bojie3"},"content":"        if (!Objects.equals(command, null)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"bojie3"},"content":"            return command;","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"bojie3"},"content":"        command \u003d this.isTodo(str);","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"bojie3"},"content":"        if (!Objects.equals(command, null)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"bojie3"},"content":"            return command;","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"bojie3"},"content":"        command \u003d this.isDeadline(str);","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"bojie3"},"content":"        if (!Objects.equals(command, null)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"bojie3"},"content":"            return command;","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"bojie3"},"content":"        command \u003d this.isEvent(str);","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"bojie3"},"content":"        if (!Objects.equals(command, null)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"bojie3"},"content":"            return command;","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"bojie3"},"content":"        command \u003d this.isDelete(str);","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"bojie3"},"content":"        if (!Objects.equals(command, null)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"bojie3"},"content":"            return command;","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"bojie3"},"content":"        command \u003d this.isFind(str);","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"bojie3"},"content":"        if (!Objects.equals(command, null)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"bojie3"},"content":"            return command;","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"bojie3"},"content":"        command \u003d this.isSort(str);","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"bojie3"},"content":"        if (!Objects.equals(command, null)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"bojie3"},"content":"            return command;","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"bojie3"},"content":"        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"bojie3"},"content":"    private Command isSort(String s) throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"bojie3"},"content":"        if (s.length() \u003d\u003d 4 \u0026\u0026 Objects.equals(s, \"sort\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"bojie3"},"content":"            return new SortCommand();","lastModifiedDate":"2023-02-08"},{"lineNumber":108,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"bojie3"},"content":"        return null;","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":112,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"bojie3"},"content":"     * Check if user input String is to Mark task as done","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"bojie3"},"content":"     * @param s Stirng input of user","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"bojie3"},"content":"     * @return MarkTask Command if user input is correct, else null","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"bojie3"},"content":"     * @throws DukeException If no spacing/index/index are not numbers only","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"bojie3"},"content":"    private Command isMark(String s) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"bojie3"},"content":"        //checks if input is mark and throw exception for wrong format if matches","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"bojie3"},"content":"        if (s.length() \u003e\u003d 4 \u0026\u0026 Objects.equals(s.substring(0, 4), \"mark\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"bojie3"},"content":"            if (s.length() \u003c 5) {","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a index to mark.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"bojie3"},"content":"            } else if (!Objects.equals(s.charAt(4), \u0027 \u0027)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a spacing after the mark keyword.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"bojie3"},"content":"            } else if (s.length() \u003c 6) {","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide the index to mark.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"bojie3"},"content":"            } else if (!s.substring(5, s.length()).matches(\"[0-9]+\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide only positive integers for index to mark.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"bojie3"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"bojie3"},"content":"                return new MarkTaskCommand(Integer.parseInt(s.substring(5, s.length())));","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"bojie3"},"content":"        return null;","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":136,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"bojie3"},"content":"     * Check if user input String is to Unmark task","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"bojie3"},"content":"     * @param s Stirng input of user","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"bojie3"},"content":"     * @return MarkTask Command if user input is correct, else null","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"bojie3"},"content":"     * @throws DukeException If no spacing/index/index are not numbers only","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"bojie3"},"content":"    private Command isUnmark(String s) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":145,"author":{"gitId":"bojie3"},"content":"        //checks if input is unmark and throw exception for wrong format if matches","lastModifiedDate":"2023-01-24"},{"lineNumber":146,"author":{"gitId":"bojie3"},"content":"        if (s.length() \u003e\u003d 6 \u0026\u0026 Objects.equals(s.substring(0, 6), \"unmark\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":147,"author":{"gitId":"bojie3"},"content":"            if (s.length() \u003c 7) {","lastModifiedDate":"2023-01-24"},{"lineNumber":148,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a index to unmark.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":149,"author":{"gitId":"bojie3"},"content":"            } else if (!Objects.equals(s.charAt(6), \u0027 \u0027)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":150,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a spacing after the unmark keyword\");","lastModifiedDate":"2023-01-24"},{"lineNumber":151,"author":{"gitId":"bojie3"},"content":"            } else if (s.length() \u003c 8) {","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide the index to unmark.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":153,"author":{"gitId":"bojie3"},"content":"            } else if (!s.substring(7, s.length()).matches(\"[0-9]+\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":154,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide only positive integers for index to unmark.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":155,"author":{"gitId":"bojie3"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":156,"author":{"gitId":"bojie3"},"content":"                return new UnmarkTaskCommand(Integer.parseInt(s.substring(7, s.length())));","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":158,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":159,"author":{"gitId":"bojie3"},"content":"        return null;","lastModifiedDate":"2023-01-24"},{"lineNumber":160,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":161,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":162,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"bojie3"},"content":"     * Check if user input String is to add todotask","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"bojie3"},"content":"     * @param s Stirng input of user","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"bojie3"},"content":"     * @return AddTodo Command if user input is correct, else null","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"bojie3"},"content":"     * @throws DukeException If no spacing/taskname","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"bojie3"},"content":"    private Command isTodo(String s) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":170,"author":{"gitId":"bojie3"},"content":"        //checks if input is todotask and throw exception for wrong format if matches","lastModifiedDate":"2023-01-24"},{"lineNumber":171,"author":{"gitId":"bojie3"},"content":"        if (s.length() \u003e\u003d 4 \u0026\u0026 Objects.equals(s.substring(0, 4), \"todo\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":172,"author":{"gitId":"bojie3"},"content":"            if (s.length() \u003c 5) {","lastModifiedDate":"2023-01-24"},{"lineNumber":173,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":174,"author":{"gitId":"bojie3"},"content":"            } else if (!Objects.equals(s.charAt(4), \u0027 \u0027)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":175,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a spacing after the todo keyword.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":176,"author":{"gitId":"bojie3"},"content":"            } else if (s.length() \u003c 6) {","lastModifiedDate":"2023-01-24"},{"lineNumber":177,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":178,"author":{"gitId":"bojie3"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":179,"author":{"gitId":"bojie3"},"content":"                return new AddTodoCommand(s.substring(5, s.length()));","lastModifiedDate":"2023-01-26"},{"lineNumber":180,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":181,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":182,"author":{"gitId":"bojie3"},"content":"        return null;","lastModifiedDate":"2023-01-24"},{"lineNumber":183,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":184,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":185,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":186,"author":{"gitId":"bojie3"},"content":"     * Check if user input String is to add Deadline task","lastModifiedDate":"2023-01-26"},{"lineNumber":187,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":188,"author":{"gitId":"bojie3"},"content":"     * @param s Stirng input of user","lastModifiedDate":"2023-01-26"},{"lineNumber":189,"author":{"gitId":"bojie3"},"content":"     * @return AddDeadline Command if user input is correct, else null","lastModifiedDate":"2023-01-26"},{"lineNumber":190,"author":{"gitId":"bojie3"},"content":"     * @throws DukeException If no spacing/taskanme/date/date wrong format","lastModifiedDate":"2023-01-26"},{"lineNumber":191,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":192,"author":{"gitId":"bojie3"},"content":"    private Command isDeadline(String s) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":193,"author":{"gitId":"bojie3"},"content":"        //checks if input is deadline task and throw exception for wrong format if matches","lastModifiedDate":"2023-01-24"},{"lineNumber":194,"author":{"gitId":"bojie3"},"content":"        if (s.length() \u003e\u003d 8 \u0026\u0026 Objects.equals(s.substring(0, 8), \"deadline\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":195,"author":{"gitId":"bojie3"},"content":"            if (s.length() \u003c 9) {","lastModifiedDate":"2023-01-24"},{"lineNumber":196,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":197,"author":{"gitId":"bojie3"},"content":"            } else if (!Objects.equals(s.charAt(8), \u0027 \u0027)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":198,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a spacing after the deadline keyword\");","lastModifiedDate":"2023-01-24"},{"lineNumber":199,"author":{"gitId":"bojie3"},"content":"            } else if (s.length() \u003c 10) {","lastModifiedDate":"2023-01-24"},{"lineNumber":200,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":201,"author":{"gitId":"bojie3"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":202,"author":{"gitId":"bojie3"},"content":"                s \u003d s.substring(9, s.length());","lastModifiedDate":"2023-01-24"},{"lineNumber":203,"author":{"gitId":"bojie3"},"content":"                String[] parts \u003d s.split(\"/\");","lastModifiedDate":"2023-01-24"},{"lineNumber":204,"author":{"gitId":"bojie3"},"content":"                String deadlineString \u003d parts[1].substring(3, parts[1].length()).strip();","lastModifiedDate":"2023-01-24"},{"lineNumber":205,"author":{"gitId":"bojie3"},"content":"                String name \u003d parts[0].strip();","lastModifiedDate":"2023-01-24"},{"lineNumber":206,"author":{"gitId":"bojie3"},"content":"                return new AddDeadlineCommand(name, deadlineString);","lastModifiedDate":"2023-01-26"},{"lineNumber":207,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":208,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":209,"author":{"gitId":"bojie3"},"content":"        return null;","lastModifiedDate":"2023-01-24"},{"lineNumber":210,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":211,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":212,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":213,"author":{"gitId":"bojie3"},"content":"     * Check if user input String is to add Event task","lastModifiedDate":"2023-01-26"},{"lineNumber":214,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":215,"author":{"gitId":"bojie3"},"content":"     * @param s Stirng input of user","lastModifiedDate":"2023-01-26"},{"lineNumber":216,"author":{"gitId":"bojie3"},"content":"     * @return AddEvent Command if user input is correct, else null","lastModifiedDate":"2023-01-26"},{"lineNumber":217,"author":{"gitId":"bojie3"},"content":"     * @throws DukeException If no spacing/taskanme/date/date wrong format","lastModifiedDate":"2023-01-26"},{"lineNumber":218,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":219,"author":{"gitId":"bojie3"},"content":"    private Command isEvent(String s) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":220,"author":{"gitId":"bojie3"},"content":"        //check if input is event task and throw exception for wrong format if matches","lastModifiedDate":"2023-01-24"},{"lineNumber":221,"author":{"gitId":"bojie3"},"content":"        if (s.length() \u003e\u003d 5 \u0026\u0026 Objects.equals(s.substring(0, 5), \"event\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":222,"author":{"gitId":"bojie3"},"content":"            if (s.length() \u003c 6) {","lastModifiedDate":"2023-01-24"},{"lineNumber":223,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":224,"author":{"gitId":"bojie3"},"content":"            } else if (!Objects.equals(s.charAt(5), \u0027 \u0027)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":225,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a spacing after the event keyword\");","lastModifiedDate":"2023-01-24"},{"lineNumber":226,"author":{"gitId":"bojie3"},"content":"            } else if (s.length() \u003c 7) {","lastModifiedDate":"2023-01-24"},{"lineNumber":227,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":228,"author":{"gitId":"bojie3"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":229,"author":{"gitId":"bojie3"},"content":"                s \u003d s.substring(6, s.length());","lastModifiedDate":"2023-01-24"},{"lineNumber":230,"author":{"gitId":"bojie3"},"content":"                String[] parts \u003d s.split(\"/\");","lastModifiedDate":"2023-01-24"},{"lineNumber":231,"author":{"gitId":"bojie3"},"content":"                String name \u003d parts[0].strip();","lastModifiedDate":"2023-01-24"},{"lineNumber":232,"author":{"gitId":"bojie3"},"content":"                String fromString \u003d parts[1].substring(5, parts[1].length()).strip();","lastModifiedDate":"2023-01-24"},{"lineNumber":233,"author":{"gitId":"bojie3"},"content":"                String toString \u003d parts[2].substring(3, parts[2].length()).strip();","lastModifiedDate":"2023-01-24"},{"lineNumber":234,"author":{"gitId":"bojie3"},"content":"                return new AddEventCommand(name, fromString, toString);","lastModifiedDate":"2023-01-26"},{"lineNumber":235,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":236,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":237,"author":{"gitId":"bojie3"},"content":"        return null;","lastModifiedDate":"2023-01-24"},{"lineNumber":238,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":239,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":240,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":241,"author":{"gitId":"bojie3"},"content":"     * Check if user input String is to Delete task","lastModifiedDate":"2023-01-26"},{"lineNumber":242,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":243,"author":{"gitId":"bojie3"},"content":"     * @param s Stirng input of user","lastModifiedDate":"2023-01-26"},{"lineNumber":244,"author":{"gitId":"bojie3"},"content":"     * @return DeleteTask Command if user input is correct, else null","lastModifiedDate":"2023-01-26"},{"lineNumber":245,"author":{"gitId":"bojie3"},"content":"     * @throws DukeException If no spacing/index/index not all numbers","lastModifiedDate":"2023-01-26"},{"lineNumber":246,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":247,"author":{"gitId":"bojie3"},"content":"    private Command isDelete(String s) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":248,"author":{"gitId":"bojie3"},"content":"        //checks if input is delete and throw exception for wrong format if matches","lastModifiedDate":"2023-01-24"},{"lineNumber":249,"author":{"gitId":"bojie3"},"content":"        if (s.length() \u003e\u003d 6 \u0026\u0026 Objects.equals(s.substring(0, 6), \"delete\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":250,"author":{"gitId":"bojie3"},"content":"            if (s.length() \u003c 7) {","lastModifiedDate":"2023-01-24"},{"lineNumber":251,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a index to delete.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":252,"author":{"gitId":"bojie3"},"content":"            } else if (!Objects.equals(s.charAt(6), \u0027 \u0027)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":253,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a spacing after the delete keyword.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":254,"author":{"gitId":"bojie3"},"content":"            } else if (s.length() \u003c 8) {","lastModifiedDate":"2023-01-24"},{"lineNumber":255,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide the index to delete.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":256,"author":{"gitId":"bojie3"},"content":"            } else if (!s.substring(7, s.length()).matches(\"[0-9]+\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":257,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide only positive integers for index to delete.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":258,"author":{"gitId":"bojie3"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":259,"author":{"gitId":"bojie3"},"content":"                return new DeleteTaskCommand(Integer.parseInt(s.substring(7, s.length())));","lastModifiedDate":"2023-01-26"},{"lineNumber":260,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":261,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":262,"author":{"gitId":"bojie3"},"content":"        return null;","lastModifiedDate":"2023-01-24"},{"lineNumber":263,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":264,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":265,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":266,"author":{"gitId":"bojie3"},"content":"     * Check if user input string is to find task using keyword","lastModifiedDate":"2023-01-26"},{"lineNumber":267,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":268,"author":{"gitId":"bojie3"},"content":"     * @param s String input of user","lastModifiedDate":"2023-01-26"},{"lineNumber":269,"author":{"gitId":"bojie3"},"content":"     * @return FindTaskCommand if user input is Find... else null","lastModifiedDate":"2023-01-26"},{"lineNumber":270,"author":{"gitId":"bojie3"},"content":"     * @throws DukeException If no spacing or incorrect indentation","lastModifiedDate":"2023-01-26"},{"lineNumber":271,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":272,"author":{"gitId":"bojie3"},"content":"    private Command isFind(String s) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":273,"author":{"gitId":"bojie3"},"content":"        if (s.length() \u003e\u003d 4 \u0026\u0026 Objects.equals(s.substring(0, 4), \"find\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":274,"author":{"gitId":"bojie3"},"content":"            if (s.length() \u003c 5) {","lastModifiedDate":"2023-01-26"},{"lineNumber":275,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a keyword to find.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":276,"author":{"gitId":"bojie3"},"content":"            } else if (!Objects.equals(s.charAt(4), \u0027 \u0027)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":277,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide a spacing after the find keyword.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":278,"author":{"gitId":"bojie3"},"content":"            } else if (s.length() \u003c 6) {","lastModifiedDate":"2023-01-26"},{"lineNumber":279,"author":{"gitId":"bojie3"},"content":"                throw new DukeException(\"Please provide the keyword to find.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":280,"author":{"gitId":"bojie3"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":281,"author":{"gitId":"bojie3"},"content":"                return new FindTaskCommand(s.substring(5, s.length()));","lastModifiedDate":"2023-01-26"},{"lineNumber":282,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":283,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":284,"author":{"gitId":"bojie3"},"content":"        return null;","lastModifiedDate":"2023-01-26"},{"lineNumber":285,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":286,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"bojie3":286}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"import duke.datetime.DateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":" * Task to manage and store tasks created by user in data.txt","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"public class Storage {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"    private static final String DATAPATH \u003d \"src/main/java/Duke/Storage/data.txt\";","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"     * Constructor class for Storage","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"     * Creates data.txt if not present","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"    public Storage() {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"            File data \u003d new File(Storage.DATAPATH);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"            data.createNewFile();","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"            System.out.println(\"Storage constructor Error in creating new file:\" + e);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"     * Add task in data.txt to TaskList","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"     * @param tl TaskList to populate","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"    public void populate(TaskList tl) {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"        //populate the arraylist of taskmanager with values in file","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"        File file \u003d new File(Storage.DATAPATH);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"                String str \u003d sc.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"                parser.parseAndAddStorageTask(str, tl);","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"            System.out.println(\"Storage populate() data.txt is not found\");","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"bojie3"},"content":"     * Add the string to data.txt","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"bojie3"},"content":"     * @param str String to be added to data.txt","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"    public void add(String str) {","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"bojie3"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"bojie3"},"content":"            Path filePath \u003d Paths.get(Storage.DATAPATH);","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"            Files.write(filePath, (str + System.lineSeparator()).getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"bojie3"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"bojie3"},"content":"            System.out.println(\"storage add() Error:\" + e);","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"bojie3"},"content":"     * Overwrite line in data.txt to string provided","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"bojie3"},"content":"     * @param str New string value to override to","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"bojie3"},"content":"     * @param line Line number of modify","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"bojie3"},"content":"    public void modify(String str, int line) {","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"bojie3"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"bojie3"},"content":"            Path filePath \u003d Paths.get(Storage.DATAPATH);","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"bojie3"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"bojie3"},"content":"            lines.set(line - 1, str);","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"bojie3"},"content":"            Files.write(filePath, lines);","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"bojie3"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"bojie3"},"content":"            System.out.println(\"storage modify() Error:\" + e);","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"bojie3"},"content":"     * Delete line in data.txt","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"bojie3"},"content":"     * @param line Line number to delete","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"bojie3"},"content":"    public void delete(int line) {","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"bojie3"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"bojie3"},"content":"            Path filePath \u003d Paths.get(Storage.DATAPATH);","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"bojie3"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"bojie3"},"content":"            lines.remove(line - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"bojie3"},"content":"            Files.write(filePath, lines);","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"bojie3"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"bojie3"},"content":"            System.out.println(\"storage delete() Error:\" + e);","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"bojie3"},"content":"     * Given Task, convert them to the correct format in String to be stored","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"bojie3"},"content":"     * in data.txt.","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"bojie3"},"content":"     * Format: A,B,C,D,E","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"bojie3"},"content":"     * A: Type of task (E for event, D for deadline, T for todotask)","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"bojie3"},"content":"     * B: Status of task (1 for done, 0 for undone)","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"bojie3"},"content":"     * C: Taskname","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"bojie3"},"content":"     * D: DateTime of Deadline/From if Task is deadline/event","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"bojie3"},"content":"     * E: Datetime of To if Task is event","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"bojie3"},"content":"     * @param task Task to be converted to string to be stored","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"bojie3"},"content":"     * @return String that can be stored in data.txt","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"bojie3"},"content":"    public String getStorageTaskString(Task task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"bojie3"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"bojie3"},"content":"        String completed \u003d task.getIsCompleted() ? \"1\" : \"0\";","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"bojie3"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"bojie3"},"content":"            res +\u003d \"E,\";","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"bojie3"},"content":"            res +\u003d completed + \",\";","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"bojie3"},"content":"            res +\u003d task.getTaskName() + \",\";","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"bojie3"},"content":"            res +\u003d DateTime.getDateTimeString(((Event) task).getStartTime()) + \",\";","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"bojie3"},"content":"            res +\u003d DateTime.getDateTimeString(((Event) task).getEndTime());","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"bojie3"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"bojie3"},"content":"            res +\u003d \"D,\";","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"bojie3"},"content":"            res +\u003d completed + \",\";","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"bojie3"},"content":"            res +\u003d task.getTaskName() + \",\";","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"bojie3"},"content":"            res +\u003d DateTime.getDateTimeString(((Deadline) task).getDeadline());","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"bojie3"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"bojie3"},"content":"            res +\u003d \"T,\";","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"bojie3"},"content":"            res +\u003d completed + \",\";","lastModifiedDate":"2023-01-24"},{"lineNumber":136,"author":{"gitId":"bojie3"},"content":"            res +\u003d task.getTaskName();","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"bojie3"},"content":"        return res;","lastModifiedDate":"2023-01-24"},{"lineNumber":139,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":140,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":141,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"bojie3":141}},{"path":"src/main/java/duke/storage/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"E,1,go for run,2021-01-01 12:00,2021-01-01 13:00","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"E,1,go for run,2021-01-01 12:00,2021-01-01 13:00","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"D,1,eat lunch,2021-12-01 12:00","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"T,1,borrow book","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"bojie3":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import duke.datetime.DateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":" * Task to represent Deadline task created by user","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"     * Constructor for Deadline","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"     * @param name Name of task","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"     * @param deadline Task\u0027s deadline","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"    public Deadline(String name, LocalDateTime deadline) {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"        super(name);","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"        return this.deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"     * @return String version of Deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"        String deadline \u003d DateTime.getDateTimeString(this.deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"        if (super.getIsCompleted()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"            return String.format(\"[D][X] %s (by: %s)\\n\", super.getTaskName(), deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"            return String.format(\"[D][ ] %s (by: %s)\\n\", super.getTaskName(), deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"bojie3":40}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import duke.datetime.DateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":" * Task to represent Event task created by user","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"     * Constructor class for Event","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"     * @param name Name of Task","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"     * @param from Task\u0027s starting time","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"     * @param to Task\u0027s ending time","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"    public Event(String name, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"        super(name);","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"        this.startTime \u003d from;","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"        this.endTime \u003d to;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"        return this.startTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"        return this.endTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"     * @return String version of Event","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"        String from \u003d DateTime.getDateTimeString(this.startTime);","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"        String to \u003d DateTime.getDateTimeString(this.endTime);","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"        if (super.getIsCompleted()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"            return String.format(\"[E][X] %s (from: %s to: %s)\\n\", super.getTaskName(), from, to);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"            return String.format(\"[E][ ] %s (from: %s to: %s)\\n\", super.getTaskName(), from, to);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"bojie3":48}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":" * Class to represent the Task created by user","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"public class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"    private boolean isCompleted \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"    private String taskName;","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"        this.taskName \u003d name;","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    public boolean getIsCompleted() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"        return this.isCompleted;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"        return this.taskName;","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"     * Change the status of Task to state","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"     * @param state State of Task to be changed into","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"    public void setIsCompleted(boolean state) {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"        this.isCompleted \u003d state;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"    public LocalDateTime getTaskEndTime() {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"        if (this instanceof Deadline) {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"            return ((Deadline) this).getDeadline();","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"        if (this instanceof Event) {","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"            return ((Event) this).getEndTime();","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"        return null;","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"    public int compareTo(Task task) {","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"            return -1;","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"        if (this instanceof Todo) {","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"            return 1;","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"        if (task.getTaskEndTime().isAfter(this.getTaskEndTime())) {","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"            return -1;","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"        return 1;","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"bojie3":57}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":" * Class to represent Todotask created by user","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"        super(name);","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"     * @return String version of todotask","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"        if (super.getIsCompleted()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"            return String.format(\"[T][X] %s\\n\", super.getTaskName());","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"            return String.format(\"[T][ ] %s\\n\", super.getTaskName());","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"bojie3":23}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.tasklist;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":" * Class to manage tasks created by user","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"public class TaskList {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"    public TaskList() {}","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"     * Add Task to TaskList","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"     * @param task Task to be added to TaskList","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"     * @return size of TaskList","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"     * @param index index of task in TaskList (in 0 based index)","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"     * @return Corresponding task with the index","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"     * @param index Index of task to be removed (in 0 based index)","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"     * @param index Index of task to be marked as done","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"    public void mark(int index) {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"        this.tasks.get(index).setIsCompleted(true);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"     * @param index Index of task to be marked as undone","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"    public void unmark(int index) {","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"bojie3"},"content":"        this.tasks.get(index).setIsCompleted(false);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"bojie3"},"content":"    public void sortTaskList(Storage storage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"bojie3"},"content":"        Collections.sort(this.tasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"bojie3"},"content":"            storage.modify(storage.getStorageTaskString(this.tasks.get(i)), i + 1);","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"bojie3":68}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":" * Ui class to perform the outputting to user","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"public class Ui {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"    private static final String INTRO \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"    private static final String OUTRO \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"    public Ui() {}","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"     * Returns the intro of Duke CLI","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"bojie3"},"content":"     * @return output string","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bojie3"},"content":"    public String getIntro() {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"bojie3"},"content":"        return Ui.INTRO;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"bojie3"},"content":"     * Returns the outro of Duke CLI","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"bojie3"},"content":"     * @return output string","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"bojie3"},"content":"    public String getOutro() {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"bojie3"},"content":"        return Ui.OUTRO;","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"bojie3"},"content":"     * Format the string and tasklist size to return to user","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"bojie3"},"content":"     * @param s String to be wrapped","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"bojie3"},"content":"     * @param size Size of TaskList","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"bojie3"},"content":"     * @return Formatted string","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"bojie3"},"content":"    public String wrap(String s, int size) {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"bojie3"},"content":"        //wrap string with the correct indentation and lines when returning add task string","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"bojie3"},"content":"        //assumes s contains the nextline character","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"bojie3"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"bojie3"},"content":"        sb.append(\"Got it. I\u0027ve added this task:\\n  \").append(s);","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"bojie3"},"content":"        sb.append(String.format(\"Now you have %d tasks in the list.\\n\", size));","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"bojie3"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"bojie3"},"content":"     * Returns the ouput string after adding a Deadline","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"bojie3"},"content":"     * @param taskString String version of the Deadline task","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"bojie3"},"content":"     * @param size Size of TaskList after adding","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"bojie3"},"content":"     * @return output string","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"bojie3"},"content":"    public String showAddDeadlineResult(String taskString, int size) {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"bojie3"},"content":"        return this.wrap(taskString, size);","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"bojie3"},"content":"     * Print the output after adding an Event","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"bojie3"},"content":"     * @param taskString String version of Event task","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"bojie3"},"content":"     * @param size Size of TaskList after adding","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"bojie3"},"content":"    public String showAddEventResult(String taskString, int size) {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"bojie3"},"content":"        return this.wrap(taskString, size);","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"bojie3"},"content":"     * Returns the output string after adding Todo","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"bojie3"},"content":"     * @param taskString String version of Todo task","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"bojie3"},"content":"     * @param size Size of TaskList after adding","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"bojie3"},"content":"    public String showAddTodoResult(String taskString, int size) {","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"bojie3"},"content":"        return this.wrap(taskString, size);","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"bojie3"},"content":"     * Returns the string output after marking a Task as done","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"bojie3"},"content":"     * @param taskString","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"bojie3"},"content":"     * @param index","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"bojie3"},"content":"     * @return output string","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"bojie3"},"content":"    public String showMarkResult(String taskString, int index) {","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"bojie3"},"content":"        String s \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"bojie3"},"content":"        s +\u003d \"  \" + taskString;","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"bojie3"},"content":"        return s;","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"bojie3"},"content":"     * Returns the string output after marking Task as undone","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"bojie3"},"content":"     * @param taskString","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"bojie3"},"content":"     * @param index","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"bojie3"},"content":"     * @return output string","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"bojie3"},"content":"    public String showUnmarkResult(String taskString, int index) {","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"bojie3"},"content":"        String s \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"bojie3"},"content":"        s +\u003d \"  \" + taskString;","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"bojie3"},"content":"        return s;","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"bojie3"},"content":"     * Returns the string output after deleting Task","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"bojie3"},"content":"     * @param taskString String version of Task deleted","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"bojie3"},"content":"     * @param size Size of TaskList after delete","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"bojie3"},"content":"     * @return output string","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"bojie3"},"content":"    public String showDeleteResult(String taskString, int size) {","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"bojie3"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"bojie3"},"content":"        sb.append(\"Noted. I\u0027ve removed this task:\\n  \").append(taskString);","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"bojie3"},"content":"        sb.append(String.format(\"Now you have %d tasks in the list.\\n\", size));","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"bojie3"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"bojie3"},"content":"     * Return the string version of all the task matching to user input","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"bojie3"},"content":"     * @param taskArr ArrayList containing tasks with matching taskname","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"bojie3"},"content":"     * @return output string","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"bojie3"},"content":"    public String showFindTaskResult(ArrayList\u003cTask\u003e taskArr) {","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"bojie3"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"bojie3"},"content":"        sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"bojie3"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"bojie3"},"content":"        for (Task task : taskArr) {","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"bojie3"},"content":"            sb.append(String.format(\"%s%d.%s\", \" \", counter, task.toString()));","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"bojie3"},"content":"            counter +\u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"bojie3"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"bojie3"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"bojie3"},"content":"     * Return the string version of all the Task in TaskList","lastModifiedDate":"2023-01-30"},{"lineNumber":142,"author":{"gitId":"bojie3"},"content":"     * after user calls \u0027list\u0027 command","lastModifiedDate":"2023-01-30"},{"lineNumber":143,"author":{"gitId":"bojie3"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"bojie3"},"content":"     * @param tl TaskList containing all the task","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"bojie3"},"content":"     * @return output string","lastModifiedDate":"2023-01-30"},{"lineNumber":146,"author":{"gitId":"bojie3"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"bojie3"},"content":"    public String showGetAllTaskResult(TaskList tl) {","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"bojie3"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2023-01-24"},{"lineNumber":149,"author":{"gitId":"bojie3"},"content":"        s.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"bojie3"},"content":"        for (int i \u003d 0; i \u003c tl.getSize(); i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":151,"author":{"gitId":"bojie3"},"content":"            s.append(String.format(\"%s%d.%s\", \" \", i + 1, tl.getTask(i).toString()));","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"bojie3"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":153,"author":{"gitId":"bojie3"},"content":"        return s.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":155,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"bojie3":155}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"bojie3":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"bojie3"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"bojie3"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"bojie3"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"bojie3"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"bojie3":19}},{"path":"src/test/java/duke/dukeexception/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.dukeexception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"    public void DukeExceptionStringTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"        String expected \u003d \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"                \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"                \"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"bojie3"},"content":"        assertEquals(expected, new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\").toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"bojie3":14}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"bojie3"},"content":"    public void TodoStringTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bojie3"},"content":"        assertEquals(String.format(\"[T][ ] %s\\n\", \"Borrow book\"), new Todo(\"Borrow book\").toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"bojie3"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"bojie3":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bojie3"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"bojie3"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"bojie3"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"bojie3"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"bojie3"},"content":"unmark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"bojie3"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"bojie3"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"bojie3":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"bojie3"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bojie3"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bojie3":2,"-":19}}]
