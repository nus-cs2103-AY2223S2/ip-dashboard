[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bokuanT":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"checkstyle {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bokuanT":23,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"E@false@e@11/01/2022 1900@11/02/2022 1900","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"bokuanT":1}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    private void flip() {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        db.flip();","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        return db;","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"bokuanT":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Project Duke is an educational software project designed to take you through","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * the steps of building a small software incrementally, while applying as many","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * Java and SE techniques as possible along the way.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"public class Duke {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     * The \u003ccode\u003eStorage\u003c/code\u003e object Duke accesses.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     * The \u003ccode\u003eTaskList\u003c/code\u003e object Duke accesses.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     * The \u003ccode\u003eUi\u003c/code\u003e object Duke accesses.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     * Boolean to track whether we should close the Duke GUI.","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"     * Constructor for Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"     * @param filePath Filepath of the storage txt file","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"     * Starts Duke\u0027s backend processes.","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"    public void run() {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        ui.showInitMessage();","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        ui.showGreeting();","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        ui.makeSeperation();","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"            } finally {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"                if (!isExit) {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"                    ui.makeSeperation();","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        ui.makeSeperation();","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"     * Returns a string of the response for the Duke GUI.","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"     * @return Duke\u0027s response to input","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"        String ret \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        System.out.println(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"            ret \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"            this.isExit \u003d c.isExit();","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"            System.out.println(ret);","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"            return ret;","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"            System.out.println(\"error: \" + e);","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"            ret \u003d ui.showError(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"        return ret;","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"     * Returns true if the Duke program should be closing. False otherwise.","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"     * @return True if the Duke program should be closing. False otherwise.","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"    public boolean checkIfExit() {","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"        return this.isExit;","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bokuanT":108}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"public class Launcher {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"     * Starts up Duke GUI.","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"     * @param args arguments to main","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"bokuanT":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"            stage.show();","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"bokuanT":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * Initialize \u003ccode\u003eDuke\u003c/code\u003e GUI","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        String greeting \u003d Ui.showGreeting();","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"                DialogBox.getDukeDialog(greeting, dukeImage)","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        if (duke.checkIfExit()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"bokuanT":63}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import duke.exception.DukeBadInstructionFormatException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" * Encapsulates the \u0027bye\u0027 \u003ccode\u003eCommand\u003c/code\u003e\u003e from the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     * Constructor for an instance of a \u003ccode\u003eByeCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     * @param fullCommand A \u003ccode\u003eString\u003c/code\u003e of the user\u0027s full input.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public ByeCommand(String fullCommand) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"        super(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     * Executes the logic behind \u003ccode\u003eByeCommand\u003c/code\u003e, exiting Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     * @throws DukeBadInstructionFormatException If user input is not \u0027bye\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"            throws DukeBadInstructionFormatException {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        String[] splitted \u003d this.fullCommand.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        if (splitted.length !\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"            throw new DukeBadInstructionFormatException(\"To exit, type *bye*\");","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        assert splitted[0].equals(Parser.BYE_STRING) : \"Wrong command made a bye\";","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        return ui.showByeMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     * Returns true if \u003ccode\u003eCommand\u003c/code\u003e is \u003ccode\u003eByeCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bokuanT":51}},{"path":"src/main/java/duke/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import duke.exception.DukeBadInstructionFormatException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" * Encapsulates the \u0027clear\u0027 \u003ccode\u003eCommand\u003c/code\u003e\u003e from the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     * Constructor for an instance of a \u003ccode\u003eClearCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     * @param fullCommand A \u003ccode\u003eString\u003c/code\u003e of the user\u0027s full input.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public ClearCommand(String fullCommand) {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"        super(fullCommand);","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     * Executes the logic behind \u003ccode\u003eClearCommand\u003c/code\u003e, deleting all","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     * \u003ccode\u003eTask\u003c/code\u003es in \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     * @throws DukeBadInstructionFormatException If user input is not \u0027clear\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"            throws DukeBadInstructionFormatException {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        String[] splitted \u003d this.fullCommand.split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        if (splitted.length !\u003d 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"            throw new DukeBadInstructionFormatException(","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"                    \"Usage of *clear* command: clear\");","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        assert splitted[0].equals(Parser.CLEAR_STRING) : \"Wrong command made a clear\";","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        tasks.clearAllTasks();","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        storage.clearAllTasks();","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        return ui.showClearTasksMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     * Returns true if \u003ccode\u003eCommand\u003c/code\u003e is \u003ccode\u003eByeCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"bokuanT":53}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Encapsulates a \u003ccode\u003eCommand\u003c/code\u003e\u003e from the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     * The full command form the user, a \u003ccode\u003eString\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    protected String fullCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     * Constructor for a \u003ccode\u003eCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * @param fullCommand A \u003ccode\u003eString\u003c/code\u003e of the user\u0027s full input.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public Command(String fullCommand) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     * Executes the logic behind this \u003ccode\u003eCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     * @throws DukeException If user input is wrong.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"            throws DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"     * Returns true if \u003ccode\u003eCommand\u003c/code\u003e is \u003ccode\u003eByeCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * Returns the index of task in task list to be marked or unmarked.","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     * @param command The \u0027mark\u0027 or \u0027unmark\u0027 command with an index.","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"     * @return int, the index of the \u0027mark\u0027 or \u0027unmark\u0027 command.","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    public static int getMarkIndex(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        String[] splitted \u003d command.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        return Integer.parseInt(splitted[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"     * Returns the keyword of a find \u003ccode\u003eCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"     * @param command The find \u003ccode\u003eCommand\u003c/code\u003e from the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"     * @return The keyword the user wants to find.","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    public static String getFindKeyword(String command) {","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        String[] splitted \u003d command.split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        return splitted[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"     * Returns a \u003ccode\u003eTask\u003c/code\u003e\u0027s description.","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"     * @param splitted \u003ccode\u003eString[]\u003c/code\u003e of input","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"     * @param index End index of description","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"     * @return Description of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"    public static String getTaskDescription(String[] splitted, int index) {","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        String[] descriptionArray \u003d Arrays.copyOfRange(splitted, 1, index);","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        return description;","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"     * Returns an \u003ccode\u003eEvent\u003c/code\u003e\u0027s From.","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"     * @param splitted \u003ccode\u003eString[]\u003c/code\u003e of input","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"     * @param startIndex Start index of from","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"     * @param endIndex End Index of from","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"     * @return From of an \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    public static String getEventFrom(String[] splitted, int startIndex, int endIndex) {","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        String[] fromArray \u003d Arrays.copyOfRange(splitted, startIndex + 1,","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"                endIndex);","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"        String from \u003d String.join(\" \", fromArray);","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"        return from;","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"     * Returns \u003ccode\u003eDeadline\u003c/code\u003e\u0027s by or \u003ccode\u003eEvent\u003c/code\u003e\u0027s to","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"     * @param splitted \u003ccode\u003eString[]\u003c/code\u003e of input","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"     * @param startIndex Start index of by or to","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"     * @return By or to of deadline or event.","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"    public static String getEventToOrDeadlineBy(String[] splitted, int startIndex) {","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"        String[] toArray \u003d Arrays.copyOfRange(splitted, startIndex + 1,","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"                splitted.length);","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"        String toOrBy \u003d String.join(\" \", toArray);","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"        return toOrBy;","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bokuanT":103}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import duke.exception.DukeBadInstructionFormatException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * Encapsulates the \u0027deadline\u0027 \u003ccode\u003eCommand\u003c/code\u003e\u003e from the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     * Constructor for an instance of a \u003ccode\u003eDeadlineCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     * @param fullCommand A \u003ccode\u003eString\u003c/code\u003e of the user\u0027s full input.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    public DeadlineCommand(String fullCommand) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"        super(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * Executes the logic behind \u003ccode\u003eDeadlineCommand\u003c/code\u003e, adding a \u003ccode\u003eDeadline\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     * to \u003ccode\u003etasks\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     * @throws DukeBadInstructionFormatException If user input is wrong.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"            throws DukeBadInstructionFormatException {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        String[] splitted \u003d this.fullCommand.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        assert splitted[0].equals(Parser.DEADLINE_STRING) : \"Wrong command made a deadline\";","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        //Get \u0027duke.task.Deadline\u0027 description and \u0027by\u0027 index","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        int byStartIndex \u003d -1;","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        for (int i \u003d 0; i \u003c splitted.length; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"            String curString \u003d splitted[i];","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"            if (curString.equals(\"/by\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"                byStartIndex \u003d i;","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        //Handle no \u0027by\u0027 in instruction","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        if (byStartIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"            throw new DukeBadInstructionFormatException(\"Usage of deadline: \"","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"                    + \"deadline [description] /by[date]\");","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        //Make description and by string","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        String description \u003d Command.getTaskDescription(splitted, byStartIndex);","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        String by \u003d Command.getEventToOrDeadlineBy(splitted, byStartIndex);","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        //Handle no description for a duke.task.Deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"            throw new DukeBadInstructionFormatException(","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"                    \"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        //Make duke.task.Deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        Deadline currentTask \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"        storage.fileAppend(currentTask);","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        tasks.append(currentTask);","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        return ui.showAddedTask(currentTask, tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"     * Returns true if \u003ccode\u003eCommand\u003c/code\u003e is \u003ccode\u003eByeCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bokuanT":82}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import duke.exception.DukeBadInstructionFormatException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" * Encapsulates the \u0027delete\u0027 \u003ccode\u003eCommand\u003c/code\u003e\u003e from the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     * Constructor for an instance of a \u003ccode\u003eDeleteCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     * @param fullCommand A \u003ccode\u003eString\u003c/code\u003e of the user\u0027s full input.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public DeleteCommand(String fullCommand) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"        super(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     * Executes the logic behind \u003ccode\u003eDeleteCommand\u003c/code\u003e, deletes the","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     * \u003ccode\u003eTask\u003c/code\u003e at the specified index.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     * @throws DukeBadInstructionFormatException If user input is wrong","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"            throws DukeBadInstructionFormatException {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        int index \u003d Command.getMarkIndex(this.fullCommand) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        if (index \u003e\u003d tasks.getLength()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"            throw new DukeBadInstructionFormatException(\"Delete index\"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"                    + \"out of range.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        storage.fileDeleteTask(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        Task removed \u003d tasks.delete(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        return ui.showDeletedTask(removed, tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"     * Returns true if \u003ccode\u003eCommand\u003c/code\u003e is \u003ccode\u003eByeCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bokuanT":54}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import duke.exception.DukeBadInstructionFormatException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Encapsulates the \u0027event\u0027 \u003ccode\u003eCommand\u003c/code\u003e\u003e from the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     * Constructor for an instance of an \u003ccode\u003eEventCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     * @param fullCommand A \u003ccode\u003eString\u003c/code\u003e of the user\u0027s full input.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    public EventCommand(String fullCommand) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"        super(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     * Executes the logic behind \u003ccode\u003eEventCommand\u003c/code\u003e, adding an \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * to tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * @throws DukeBadInstructionFormatException If user input is not \u0027clear\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"            throws DukeBadInstructionFormatException {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        String[] splitted \u003d this.fullCommand.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        assert splitted[0].equals(Parser.EVENT_STRING) : \"Wrong command made an event\";","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        //Get \u0027duke.task.Deadline\u0027 description, \u0027from\u0027 and \u0027to\u0027 index","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        int fromStartIndex \u003d -1;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        int toStartIndex \u003d -1;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        for (int i \u003d 0; i \u003c splitted.length; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"            String curString \u003d splitted[i];","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"            if (curString.equals(\"/from\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"                fromStartIndex \u003d i;","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"            } else if (curString.equals(\"/to\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"                toStartIndex \u003d i;","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        //Handle invalid from or to start index","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        boolean invalidFromOrTo \u003d fromStartIndex \u003d\u003d -1 || toStartIndex \u003d\u003d -1","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"                || fromStartIndex \u003e toStartIndex;","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        if (invalidFromOrTo) {","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"            throw new DukeBadInstructionFormatException(\"Usage of duke.task.Event: \"","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"                    + \"event [description] /from[date] /to[date]\");","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        //Make description and from and to string","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        String description \u003d Command.getTaskDescription(splitted, fromStartIndex);","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        String from \u003d Command.getEventFrom(splitted, fromStartIndex, toStartIndex);","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        String to \u003d Command.getEventToOrDeadlineBy(splitted, toStartIndex);","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        //Handle no description for an duke.task.Event","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"            throw new DukeBadInstructionFormatException(","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"                    \"The description of an event cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        //Make duke.task.Event","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        Event currentTask \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        storage.fileAppend(currentTask);","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        tasks.append(currentTask);","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        return ui.showAddedTask(currentTask, tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"     * Returns true if \u003ccode\u003eCommand\u003c/code\u003e is \u003ccode\u003eByeCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bokuanT":85}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Encapsulates the \u0027find\u0027 \u003ccode\u003eCommand\u003c/code\u003e from the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     * Constructor for an instance of a \u003ccode\u003eFindCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     * @param fullCommand A \u003ccode\u003eString\u003c/code\u003e of the user\u0027s full input.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    public FindCommand(String fullCommand) {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"        super(fullCommand);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * Executes the logic behind \u003ccode\u003eFindCommand\u003c/code\u003e, listing all \u003ccode\u003eTask\u003c/code\u003es","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * that contains a keyword.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e associated with Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e associated with Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e associated with Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        String keyword \u003d Command.getFindKeyword(this.fullCommand);","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.findInTaskList(keyword);","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        return ui.showTaskListPretty(foundTasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     * Returns true if \u003ccode\u003eCommand\u003c/code\u003e is \u003ccode\u003eByeCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"bokuanT":48}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Encapsulates the \u0027list\u0027 \u003ccode\u003eCommand\u003c/code\u003e\u003e from the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     * Constructor for an instance of a \u003ccode\u003eListCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     * @param fullCommand A \u003ccode\u003eString\u003c/code\u003e of the user\u0027s full input.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    public ListCommand(String fullCommand) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"        super(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * Executes the logic behind \u003ccode\u003eListCommand\u003c/code\u003e, listing all \u003ccode\u003eTask\u003c/code\u003es","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * in \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.list();","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        return ui.showTaskListPretty(foundTasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"     * Returns true if \u003ccode\u003eCommand\u003c/code\u003e is \u003ccode\u003eByeCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bokuanT":46}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import duke.exception.DukeBadInstructionFormatException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" * Encapsulates the \u0027mark\u0027 \u003ccode\u003eCommand\u003c/code\u003e\u003e from the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"     * Constructor for an instance of a \u003ccode\u003eMarkCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     * @param fullCommand A \u003ccode\u003eString\u003c/code\u003e of the user\u0027s full input.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    public MarkCommand(String fullCommand) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"        super(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * Executes the logic behind \u003ccode\u003eMarkCommand\u003c/code\u003e, marking a \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * @throws DukeBadInstructionFormatException If user input is wrong.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"            throws DukeBadInstructionFormatException {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"        int index \u003d Command.getMarkIndex(this.fullCommand) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        if (index \u003e\u003d tasks.getLength()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"            throw new DukeBadInstructionFormatException(\"Mark index\"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"                    + \"out of range.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        storage.fileMarkTask(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        tasks.markTask(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        String taskDescription \u003d tasks.taskToString(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        return ui.showMarkedTask(taskDescription);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * Returns true if \u003ccode\u003eCommand\u003c/code\u003e is \u003ccode\u003eByeCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bokuanT":52}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import duke.exception.DukeBadInstructionFormatException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * Encapsulates the \u0027todo\u0027 \u003ccode\u003eCommand\u003c/code\u003e\u003e from the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     * Constructor for an instance of a \u003ccode\u003eTodoCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     * @param fullCommand A \u003ccode\u003eString\u003c/code\u003e of the user\u0027s full input.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    public TodoCommand(String fullCommand) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"        super(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * Executes the logic behind \u003ccode\u003eDeleteCommand\u003c/code\u003e, adding a \u003ccode\u003eTodo\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     * to \u003ccode\u003etasks\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     * @throws DukeBadInstructionFormatException If user input is wrong","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"            throws DukeBadInstructionFormatException {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        String[] splitted \u003d this.fullCommand.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        if (splitted.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"            throw new DukeBadInstructionFormatException(","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"                    \"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        assert splitted[0].equals(Parser.TODO_STRING) : \"Wrong command made a todo\";","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        //Get \u0027duke.task.ToDo\u0027 description","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        String description \u003d Command.getTaskDescription(splitted, splitted.length);","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        //Make Todo","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        ToDo currentTask \u003d new ToDo(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        storage.fileAppend(currentTask);","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        tasks.append(currentTask);","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        return ui.showAddedTask(currentTask, tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"     * Returns true if \u003ccode\u003eCommand\u003c/code\u003e is \u003ccode\u003eByeCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bokuanT":62}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import duke.exception.DukeUnknownInputException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" * Encapsulates an unknown \u003ccode\u003eCommand\u003c/code\u003e\u003e from the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"     * Constructor for an instance of an \u003ccode\u003eUnknownCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     * @param fullCommand A \u003ccode\u003eString\u003c/code\u003e of the user\u0027s full input.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    public UnknownCommand(String fullCommand) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"        super(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * Throws a \u003ccode\u003eDukeUnknownInputException\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * @throws DukeUnknownInputException","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"            throws DukeUnknownInputException {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"        throw new DukeUnknownInputException(\"Unknown input.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"     * Returns true if \u003ccode\u003eCommand\u003c/code\u003e is \u003ccode\u003eByeCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bokuanT":44}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import duke.exception.DukeBadInstructionFormatException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" * Encapsulates the \u0027unmark\u0027 \u003ccode\u003eCommand\u003c/code\u003e\u003e from the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"     * Constructor for an instance of a \u003ccode\u003eUnmarkCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     * @param fullCommand A \u003ccode\u003eString\u003c/code\u003e of the user\u0027s full input.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    public UnmarkCommand(String fullCommand) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"        super(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * Executes the logic behind \u003ccode\u003eUnmarkCommand\u003c/code\u003e, unmarking a \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e associated with Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * @throws DukeBadInstructionFormatException If user input is wrong.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"            throws DukeBadInstructionFormatException {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"        int index \u003d Command.getMarkIndex(this.fullCommand) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        if (index \u003e\u003d tasks.getLength()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"            throw new DukeBadInstructionFormatException(\"Mark index\"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"                    + \"out of range.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        storage.fileUnmarkTask(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        tasks.unmarkTask(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        String taskDescription \u003d tasks.taskToString(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        return ui.showUnmarkedTask(taskDescription);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * Returns true if \u003ccode\u003eCommand\u003c/code\u003e is \u003ccode\u003eByeCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bokuanT":52}},{"path":"src/main/java/duke/exception/DukeBadInstructionFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * If the user inputs a \u003ccode\u003eCommand\u003c/code\u003e of wrong format, then a","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" * \u003ccode\u003eDukeBadInstructionFormatException\u003c/code\u003e will be thrown.","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"public class DukeBadInstructionFormatException extends DukeException {","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"     * Constructor for a \u003ccode\u003eDukeBadInstructionFormatException\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"     * @param message The error message.","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    public DukeBadInstructionFormatException(String message) {","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"        super(message);","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     * Returns the string representation of a \u003ccode\u003eDukeBadInstructionFormatException\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     * @return The string representation of a \u003ccode\u003eDukeBadInstructionFormatException.\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"        return \"\\t☹ OOPS!!! \" + this.message;","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"bokuanT":26}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * Custom Exceptions specific to the \u003ccode\u003eDuke\u003c/code\u003e\u003e class.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"     * In Duke Exceptions, we are not interested in the specific name of the","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"     * exception, just the message.","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    protected String message;","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     * Constructor for duke.exception.DukeException Exception.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     * @param errorMessage String describing the error message.","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"        this.message \u003d errorMessage;","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     * Returns the string representation of a \u003ccode\u003eDukeException\u003c/code\u003e\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * @return The string representation of a \u003ccode\u003eDukeException\u003c/code\u003e\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"        return this.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"bokuanT":32}},{"path":"src/main/java/duke/exception/DukeUnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * If the user inputs a \u003ccode\u003eCommand\u003c/code\u003e that Duke does not understand, then a","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" * \u003ccode\u003eDukeUnknownInputException\u003c/code\u003e will be thrown.","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"public class DukeUnknownInputException extends DukeException {","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"     * Constructor for a \u003ccode\u003eDukeUnknownInputException\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"     * @param message The error message.","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    public DukeUnknownInputException(String message) {","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"        super(message);","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     * Returns the string representation of a \u003ccode\u003eDukeUnknownInputException\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     * @return The string representation of a \u003ccode\u003eDukeUnknownInputException\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"        return \"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"bokuanT":27}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import duke.command.ClearCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import duke.command.UnknownCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" * Encapsulates the System.in parser of \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    * String to register a list command.","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public static final String LIST_STRING \u003d \"list\";","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * String to register a mark command.","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public static final String MARK_STRING \u003d \"mark\";","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     * String to register an unmark command.","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    public static final String UNMARK_STRING \u003d \"unmark\";","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"     * String to register a todo command.","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    public static final String TODO_STRING \u003d \"todo\";","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"     * String to register a deadline command.","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    public static final String DEADLINE_STRING \u003d \"deadline\";","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * String to register an event command.","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    public static final String EVENT_STRING \u003d \"event\";","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"     * String to register a delete command.","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    public static final String DELETE_STRING \u003d \"delete\";","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"     * String to register a bye command.","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    public static final String BYE_STRING \u003d \"bye\";","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"     * String to register a clear command.","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    public static final String CLEAR_STRING \u003d \"clear\";","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"     * String to register a find command.","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"    public static final String FIND_STRING \u003d \"find\";","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"     * Parsers the user\u0027s input to return the respective \u003ccode\u003eCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"     * @param fullCommand A \u003ccode\u003eString\u003c/code\u003e of the user\u0027s full input.","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"     * @return The \u003ccode\u003eCommand\u003c/code\u003e corresponding to what the user gave.","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"        String[] splitted \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        switch (splitted[0]) {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        case LIST_STRING:","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"            Command listC \u003d new ListCommand(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"            return listC;","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        case MARK_STRING:","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"            Command markC \u003d new MarkCommand(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"            return markC;","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        case UNMARK_STRING:","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"            Command unmarkC \u003d new UnmarkCommand(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"            return unmarkC;","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"        case TODO_STRING:","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"            Command todoC \u003d new TodoCommand(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"            return todoC;","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"        case DEADLINE_STRING:","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"            Command deadlineC \u003d new DeadlineCommand(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"            return deadlineC;","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        case EVENT_STRING:","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"            Command eventC \u003d new EventCommand(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"            return eventC;","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"        case DELETE_STRING:","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"            Command deleteC \u003d new DeleteCommand(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"            return deleteC;","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"        case BYE_STRING:","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"            Command byeC \u003d new ByeCommand(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"            return byeC;","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"        case CLEAR_STRING:","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"            Command clearC \u003d new ClearCommand(fullCommand);","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"            return clearC;","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"        case FIND_STRING:","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"            Command findC \u003d new FindCommand(fullCommand);","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"            return findC;","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"            Command unknownC \u003d new UnknownCommand(fullCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"            return unknownC;","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bokuanT":118}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import duke.exception.DukeBadInstructionFormatException;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" * Encapsulates the \u0027hard disc\u0027 implementation \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"public class Storage {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     * The file path of duke.txt.","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    private String taskFilePath;","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * Constructor for an instance of \u003ccode\u003eStorage\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * @param filePath The filepath to tasks.txt.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        makeDukeDirectoryAndFile(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     * Appends a \u003ccode\u003eTask\u003c/code\u003e to the end of tasks.txt.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"     * @param t The \u003ccode\u003eTask\u003c/code\u003e to be appended.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    public void fileAppend(Task t) {","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"            String textToAdd \u003d t.getFileFormatString() + System.lineSeparator();","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"            FileWriter fw \u003d new FileWriter(this.taskFilePath, true);","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"            fw.write(textToAdd);","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"            fw.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"            System.out.println(\"Could not append to file\");","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"     * Marks a \u003ccode\u003eTask\u003c/code\u003e in tasks.txt.","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"     * @param index The index of the \u003ccode\u003eTask\u003c/code\u003e to be marked.","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"     * @throws DukeBadInstructionFormatException If the format of the user input is wrong.","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    public void fileMarkTask(int index) throws DukeBadInstructionFormatException {","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"            Scanner scanner \u003d new Scanner(new File(this.taskFilePath));","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"            StringBuffer buffer \u003d new StringBuffer();","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"                if (i !\u003d index) {","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"                    buffer.append(scanner.nextLine() + System.lineSeparator());","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"                } else {","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"                    String tmp \u003d scanner.nextLine();","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"                    Task oldTask \u003d Task.getTaskFromFileFormat(tmp);","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"                    oldTask.markAsDone();","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"                    buffer.append(oldTask.getFileFormatString() + System.lineSeparator());","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"                i++;","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"            String newFileContents \u003d buffer.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"            scanner.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"            FileWriter fw \u003d new FileWriter(this.taskFilePath, false);","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"            fw.write(newFileContents);","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"            fw.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"            System.out.println(\"Could not edit file\");","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"     * Unmarks a \u003ccode\u003eTask\u003c/code\u003e in tasks.txt.","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"     * @param index The index of the \u003ccode\u003eTask\u003c/code\u003e to be unmarked.","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"     * @throws DukeBadInstructionFormatException If the format of the user input is wrong.","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"    public void fileUnmarkTask(int index) throws DukeBadInstructionFormatException {","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-01-21"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"            Scanner scanner \u003d new Scanner(new File(this.taskFilePath));","lastModifiedDate":"2023-01-21"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"            StringBuffer buffer \u003d new StringBuffer();","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"                if (i !\u003d index) {","lastModifiedDate":"2023-01-21"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"                    buffer.append(scanner.nextLine() + System.lineSeparator());","lastModifiedDate":"2023-01-21"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"                } else {","lastModifiedDate":"2023-01-21"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"                    String tmp \u003d scanner.nextLine();","lastModifiedDate":"2023-01-21"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"                    Task oldTask \u003d Task.getTaskFromFileFormat(tmp);","lastModifiedDate":"2023-01-21"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"                    oldTask.markAsNotDone();","lastModifiedDate":"2023-01-21"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"                    buffer.append(oldTask.getFileFormatString() + System.lineSeparator());","lastModifiedDate":"2023-01-21"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"                i++;","lastModifiedDate":"2023-01-21"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"            String newFileContents \u003d buffer.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"            scanner.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"            FileWriter fw \u003d new FileWriter(this.taskFilePath, false);","lastModifiedDate":"2023-01-21"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"            fw.write(newFileContents);","lastModifiedDate":"2023-01-21"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"            fw.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"            System.out.println(\"Could not edit file\");","lastModifiedDate":"2023-01-21"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"     * Deletes a \u003ccode\u003eTask\u003c/code\u003e from tasks.txt.","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"     * @param index The index of the \u003ccode\u003eTask\u003c/code\u003e to be deleted.","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"    public void fileDeleteTask(int index) {","lastModifiedDate":"2023-01-21"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-01-21"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"            Scanner scanner \u003d new Scanner(new File(this.taskFilePath));","lastModifiedDate":"2023-01-21"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"            StringBuffer buffer \u003d new StringBuffer();","lastModifiedDate":"2023-01-21"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"                if (i !\u003d index) {","lastModifiedDate":"2023-01-21"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"                    buffer.append(scanner.nextLine() + System.lineSeparator());","lastModifiedDate":"2023-01-21"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"                } else {","lastModifiedDate":"2023-01-21"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"                    scanner.nextLine();","lastModifiedDate":"2023-01-21"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"                i++;","lastModifiedDate":"2023-01-21"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"            String newFileContents \u003d buffer.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"            scanner.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":141,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":143,"author":{"gitId":"bokuanT"},"content":"            FileWriter fw \u003d new FileWriter(this.taskFilePath, false);","lastModifiedDate":"2023-01-21"},{"lineNumber":144,"author":{"gitId":"bokuanT"},"content":"            fw.write(newFileContents);","lastModifiedDate":"2023-01-21"},{"lineNumber":145,"author":{"gitId":"bokuanT"},"content":"            fw.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":146,"author":{"gitId":"bokuanT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":147,"author":{"gitId":"bokuanT"},"content":"            System.out.println(\"Could not edit file\");","lastModifiedDate":"2023-01-21"},{"lineNumber":148,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":149,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":151,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":152,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"bokuanT"},"content":"     * Translate the \u003ccode\u003eTask\u003c/code\u003es from task.txt to an \u003ccode\u003eArrayList\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":154,"author":{"gitId":"bokuanT"},"content":"     * of \u003ccode\u003eTask\u003c/code\u003es.","lastModifiedDate":"2023-01-28"},{"lineNumber":155,"author":{"gitId":"bokuanT"},"content":"     * @return The \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003eTask\u003c/code\u003es.","lastModifiedDate":"2023-01-28"},{"lineNumber":156,"author":{"gitId":"bokuanT"},"content":"     * @throws DukeBadInstructionFormatException If the tasks stored were in the wrong format.","lastModifiedDate":"2023-01-28"},{"lineNumber":157,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":158,"author":{"gitId":"bokuanT"},"content":"    public ArrayList\u003cTask\u003e load()","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"bokuanT"},"content":"            throws DukeBadInstructionFormatException {","lastModifiedDate":"2023-01-22"},{"lineNumber":160,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":161,"author":{"gitId":"bokuanT"},"content":"            File taskFile \u003d new File(this.taskFilePath);","lastModifiedDate":"2023-01-21"},{"lineNumber":162,"author":{"gitId":"bokuanT"},"content":"            Scanner scanner \u003d new Scanner(taskFile);","lastModifiedDate":"2023-01-21"},{"lineNumber":163,"author":{"gitId":"bokuanT"},"content":"            ArrayList\u003cTask\u003e returnList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-21"},{"lineNumber":164,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":165,"author":{"gitId":"bokuanT"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":166,"author":{"gitId":"bokuanT"},"content":"                String taskInFileFormat \u003d scanner.nextLine();","lastModifiedDate":"2023-01-21"},{"lineNumber":167,"author":{"gitId":"bokuanT"},"content":"                Task curTask \u003d Task.getTaskFromFileFormat(taskInFileFormat);","lastModifiedDate":"2023-01-21"},{"lineNumber":168,"author":{"gitId":"bokuanT"},"content":"                returnList.add(curTask);","lastModifiedDate":"2023-01-21"},{"lineNumber":169,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":170,"author":{"gitId":"bokuanT"},"content":"            System.out.println(\"Existing tasks found. Loaded existing tasks.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":171,"author":{"gitId":"bokuanT"},"content":"            return returnList;","lastModifiedDate":"2023-01-21"},{"lineNumber":172,"author":{"gitId":"bokuanT"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":173,"author":{"gitId":"bokuanT"},"content":"            System.out.println(\"No previous tasks found. Initialising fresh start.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":174,"author":{"gitId":"bokuanT"},"content":"            ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":175,"author":{"gitId":"bokuanT"},"content":"            return newList;","lastModifiedDate":"2023-01-22"},{"lineNumber":176,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":177,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":178,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":179,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":180,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":181,"author":{"gitId":"bokuanT"},"content":"     * Creates /filepath/tasks.txt if it doesn\u0027t yet exist.","lastModifiedDate":"2023-01-28"},{"lineNumber":182,"author":{"gitId":"bokuanT"},"content":"     * @param filePath The file path to tasks.txt.","lastModifiedDate":"2023-01-28"},{"lineNumber":183,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":184,"author":{"gitId":"bokuanT"},"content":"    public void makeDukeDirectoryAndFile(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":185,"author":{"gitId":"bokuanT"},"content":"        String[] dirAndFileName \u003d filePath.split(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":186,"author":{"gitId":"bokuanT"},"content":"        String dukeDirectory \u003d dirAndFileName[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":187,"author":{"gitId":"bokuanT"},"content":"        File directory \u003d new File(dukeDirectory);","lastModifiedDate":"2023-01-21"},{"lineNumber":188,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":189,"author":{"gitId":"bokuanT"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":190,"author":{"gitId":"bokuanT"},"content":"            directory.mkdir();","lastModifiedDate":"2023-01-21"},{"lineNumber":191,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":192,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":193,"author":{"gitId":"bokuanT"},"content":"        this.taskFilePath \u003d dukeDirectory + \u0027/\u0027 + dirAndFileName[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":194,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":195,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":196,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":197,"author":{"gitId":"bokuanT"},"content":"     * Removes all \u003ccode\u003eTask\u003c/code\u003es from tasks.txt.","lastModifiedDate":"2023-01-28"},{"lineNumber":198,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":199,"author":{"gitId":"bokuanT"},"content":"    public void clearAllTasks() {","lastModifiedDate":"2023-01-28"},{"lineNumber":200,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":201,"author":{"gitId":"bokuanT"},"content":"            PrintWriter writer \u003d new PrintWriter(this.taskFilePath);","lastModifiedDate":"2023-01-28"},{"lineNumber":202,"author":{"gitId":"bokuanT"},"content":"            writer.print(\"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":203,"author":{"gitId":"bokuanT"},"content":"            writer.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":204,"author":{"gitId":"bokuanT"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":205,"author":{"gitId":"bokuanT"},"content":"            System.out.println(\"Tried to clear storage when it doesn\u0027t exist.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":206,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":207,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":208,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"bokuanT":208}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import duke.exception.DukeBadInstructionFormatException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" * Subclass of \u003ccode\u003eTask\u003c/code\u003e class used by \u003ccode\u003eDuke\u003c/code\u003e to keep track of user\u0027s","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" * \u003ccode\u003eTask\u003c/code\u003es inputted.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     * A \u003ccode\u003eLocalDateTime\u003c/code\u003e representing the deadline of the \u003ccode\u003eDeadline\u003c/code\u003e instance.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     * A \u003ccode\u003eString\u003c/code\u003e representing the deadline of the \u003ccode\u003eDeadline\u003c/code\u003e instance.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    private String byString;","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     * Constructor for a \u003ccode\u003eDeadline\u003c/code\u003e instance.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * @param description String describing this \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     * @param by deadline of this \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    public Deadline(String description, String by) throws DukeBadInstructionFormatException {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"        super(description);","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"            this.byString \u003d by;","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"            this.by \u003d Task.getLocalDateTime(by);","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"            throw new DukeBadInstructionFormatException(\"Use date/time format: \"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"                    + Task.STORE_DATE_TIME_FORMAT);","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * Returns the string representation of a \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-15"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     * @return The string representation of a \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + Task.getDateTimeString(this.by) + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    public String getFileFormatString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        //to be split using \"@\"","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        return \"D\" + \"@\" + this.isDone + \"@\" + this.description + \"@\" + this.byString;","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"bokuanT":58}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import duke.exception.DukeBadInstructionFormatException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" * Subclass of \u003ccode\u003eTask\u003c/code\u003e class used by duke.Duke to keep track of user\u0027s tasks inputted.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"     * A \u003ccode\u003eLocalDateTime\u003c/code\u003e representing the start of the \u003ccode\u003eEvent\u003c/code\u003e instance.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     * A \u003ccode\u003eLocalDateTime\u003c/code\u003e representing the end of the \u003ccode\u003eEvent\u003c/code\u003e instance.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * A \u003ccode\u003eString\u003c/code\u003e representing the start of the \u003ccode\u003eEvent\u003c/code\u003e instance.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    private String fromString;","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * A \u003ccode\u003eString\u003c/code\u003e representing the end of the \u003ccode\u003eEvent\u003c/code\u003e instance.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    private String toString;","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     * Constructor for an \u003ccode\u003eEvent\u003c/code\u003e instance.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-15"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"     * @param description String describing this \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"     * @param from String representing the start of this \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"     * @param to String representing the end of this \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    public Event(String description, String from, String to)","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"            throws DukeBadInstructionFormatException {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        super(description);","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"            this.fromString \u003d from;","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"            this.toString \u003d to;","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"            this.from \u003d Task.getLocalDateTime(from);","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"            this.to \u003d Task.getLocalDateTime(to);","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"            throw new DukeBadInstructionFormatException(\"Use date/time format: \"","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"                    + Task.STORE_DATE_TIME_FORMAT);","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"     * Returns the string representation of an \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-15"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"     * @return The string representation of an \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + Task.getDateTimeString(this.from)","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"                + \" to: \" + Task.getDateTimeString(this.to) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"     * Returns the string representation of a \u003ccode\u003eEvent\u003c/code\u003e for storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"     * @return The string representation of a \u003ccode\u003eEvent\u003c/code\u003e for storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    public String getFileFormatString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        //to be split using \"@\"","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        return \"E\" + \"@\" + this.isDone + \"@\" + this.description + \"@\"","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"                + this.fromString + \"@\" + this.toString;","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"bokuanT":74}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import duke.exception.DukeBadInstructionFormatException;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * \u003ccode\u003eTask\u003c/code\u003e class used by \u003ccode\u003eDuke\u003c/code\u003e to keep track of user\u0027s tasks inputted.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     * Format of the stored date and time.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    public static final String STORE_DATE_TIME_FORMAT \u003d \"dd/MM/yyyy HHmm\";","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     * Format of the displayed date and time.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    public static final String DISPLAY_DATE_TIME_FORMAT \u003d \"dd LLL yyyy HHmm\";","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     * Boolean representing if user set \u003ccode\u003eTask\u003c/code\u003e to \u0027done\u0027 state. True if done. False","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * otherwise.","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * String describing \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    protected String description;","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"     * Constructor for a \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-15"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"     * @param description String describing the \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-15"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     * Returns string representation of \u003ccode\u003eTask\u003c/code\u003e status.","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-15"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"     * @return \"X\" if isDone is true. \" \" otherwise.","lastModifiedDate":"2023-01-15"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-15"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-15"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"     * Sets isDone to true.","lastModifiedDate":"2023-01-15"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-15"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-15"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"     * Sets isDone to false.","lastModifiedDate":"2023-01-15"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-15"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"     * Parses a string date time format in \u003ccode\u003eSTORE_DATE_TIME_FORMAT\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"     * and returns it of type \u003ccode\u003eLocalDateTime\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"     * @param dateTime \u003ccode\u003eString\u003c/code\u003e format of a date time.","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003eLocalDateTime\u003c/code\u003e format of a date time.","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"     * @throws DateTimeParseException If users enters the date time in the wrong format.","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"    public static LocalDateTime getLocalDateTime(String dateTime)","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"            throws DateTimeParseException {","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(STORE_DATE_TIME_FORMAT);","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.parse(dateTime,","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"                formatter);","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        return localDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"     * Converts a \u003ccode\u003eLocalDateTime\u003c/code\u003e in \u003ccode\u003eDISPLAY_DATE_TIME_FORMAT\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"     * to a \u003ccode\u003eString\u003c/code\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"     * and returns it of type \u003ccode\u003eLocalDateTime\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"     * @param dateTime \u003ccode\u003eString\u003c/code\u003e format of a date time.","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003eLocalDateTime\u003c/code\u003e format of a date time.","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"     * @throws DateTimeParseException If users enters the date time in the wrong format.","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"    public static String getDateTimeString(LocalDateTime dateTime) {","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DISPLAY_DATE_TIME_FORMAT);","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"     * Returns the string representation of a \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-15"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"     * @return The string representation of a \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-15"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"     * Returns the format of the \u003ccode\u003eTask\u003c/code\u003e to be stored","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"     * in tasks.txt.","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representing the \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"    public abstract String getFileFormatString();","lastModifiedDate":"2023-01-21"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"     * Converts a \u003ccode\u003eTask\u003c/code\u003e stored in tasks.txt to its instance.","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"     * @param fileFormat The \u003ccode\u003eString\u003c/code\u003e representation of a \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"     * @return The instance of the stored \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"     * @throws DukeBadInstructionFormatException If stored instruction is of wrong format.","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"    public static Task getTaskFromFileFormat(String fileFormat)","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"            throws DukeBadInstructionFormatException {","lastModifiedDate":"2023-01-22"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"        String[] splitted \u003d fileFormat.split(\"@\", 5);","lastModifiedDate":"2023-01-21"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"        switch (splitted[0]) {","lastModifiedDate":"2023-01-21"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"        case \"T\":","lastModifiedDate":"2023-01-21"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"            ToDo toDoTask \u003d new ToDo(splitted[2]);","lastModifiedDate":"2023-01-21"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"            if (splitted[1].equals(\"true\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"                toDoTask.markAsDone();","lastModifiedDate":"2023-01-21"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"            return toDoTask;","lastModifiedDate":"2023-01-21"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"        case \"D\":","lastModifiedDate":"2023-01-21"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"            Deadline deadlineTask \u003d new Deadline(splitted[2], splitted[3]);","lastModifiedDate":"2023-01-21"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"            if (splitted[1].equals(\"true\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"                deadlineTask.markAsDone();","lastModifiedDate":"2023-01-21"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"            return deadlineTask;","lastModifiedDate":"2023-01-21"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"        case \"E\":","lastModifiedDate":"2023-01-21"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"            Event eventTask \u003d new Event(splitted[2], splitted[3], splitted[4]);","lastModifiedDate":"2023-01-21"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"            if (splitted[1].equals(\"true\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":141,"author":{"gitId":"bokuanT"},"content":"                eventTask.markAsDone();","lastModifiedDate":"2023-01-21"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":143,"author":{"gitId":"bokuanT"},"content":"            return eventTask;","lastModifiedDate":"2023-01-21"},{"lineNumber":144,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":145,"author":{"gitId":"bokuanT"},"content":"        default:","lastModifiedDate":"2023-01-21"},{"lineNumber":146,"author":{"gitId":"bokuanT"},"content":"            System.out.println(\"unknown task from txt file\");","lastModifiedDate":"2023-01-21"},{"lineNumber":147,"author":{"gitId":"bokuanT"},"content":"            return null;","lastModifiedDate":"2023-01-21"},{"lineNumber":148,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":149,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":151,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"bokuanT":151}},{"path":"src/main/java/duke/task/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * Simplified \u003ccode\u003eTask\u003c/code\u003e class for testing.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"     * Constructor for \u003ccode\u003eTaskStub\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    public TaskStub() {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"        super(\"description\");","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"     * Get simplified store format of a \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"     * @return Simplified store format of a \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    public String getFileFormatString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"        //to be split using \"@\"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"        return \"T\" + \"@\" + \"[]\" + \"@\" + \"description\";","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"bokuanT":22}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * Subclass of \u003ccode\u003eTask\u003c/code\u003e class used by \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"     * Constructor for a \u003ccode\u003eTodo\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"     * @param description String describing the \u003ccode\u003eTodo\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"        super(description);","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     * Returns the string representation of a \u003ccode\u003eTodo\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     * @return The string representation of a \u003ccode\u003eTodo\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * Returns the string representation of a \u003ccode\u003eTodo\u003c/code\u003e for storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     * @return The string representation of a \u003ccode\u003eEvent\u003c/code\u003e for storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    public String getFileFormatString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        //to be split using \"@\"","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        return \"T\" + \"@\" + this.isDone + \"@\" + this.description;","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"bokuanT":37}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.tasklist;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":" * This class encapsulates everything the \u003ccode\u003eTask\u003c/code\u003e arraylist needs to do.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"     * The \u003ccode\u003eArrayList\u003c/code\u003e storing all of \u003ccode\u003eDuke\u003c/code\u003e\u0027s \u003ccode\u003eTask\u003c/code\u003es.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     * Constructor for \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     * Alternative constructor for \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    public TaskList(ArrayList\u003cTask\u003e loadedList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"        this.taskList \u003d loadedList;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     * Getter for a \u003ccode\u003eTask\u003c/code\u003e given its index.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * @param index Index of \u003ccode\u003eTask\u003c/code\u003e instance of interest.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003eTask\u003c/code\u003e instance of given index.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"     * Returns string representation of a \u003ccode\u003eTask\u003c/code\u003e given its index.","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     * @param index Index of \u003ccode\u003eTask\u003c/code\u003e instance of interest.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     * @return String representation of given \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    public String taskToString(int index) {","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        Task curTask \u003d taskList.get(index);","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        return curTask.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"     * Appends a task to arraylist.","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"     * @param t \u003ccode\u003eTask\u003c/code\u003e to be appended.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    public void append(Task t) {","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        taskList.add(t);","lastModifiedDate":"2023-01-16"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"     * Prints out all \u003ccode\u003eTask\u003c/code\u003es for the \"list\" command.","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    public ArrayList\u003cTask\u003e list() {","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        ArrayList\u003cTask\u003e copy \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"            copy.add(t);","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        return copy;","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"     * Marks given \u003ccode\u003eTask\u003c/code\u003e as done for the \"mark\" command.","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-16"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"     * @param index Index of task to be marked.","lastModifiedDate":"2023-01-16"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-01-16"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        Task curTask \u003d taskList.get(index);","lastModifiedDate":"2023-01-16"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        curTask.markAsDone();","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"     * Unmarks given \u003ccode\u003eTask\u003c/code\u003e as done for the \"unmark\" command.","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-16"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"     * @param index Index of task to be unmarked.","lastModifiedDate":"2023-01-16"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        Task curTask \u003d taskList.get(index);","lastModifiedDate":"2023-01-16"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        curTask.markAsNotDone();","lastModifiedDate":"2023-01-16"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"     * Returns total number of \u003ccode\u003eTask\u003c/code\u003es.","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-16"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"     * @return Length of arraylist.","lastModifiedDate":"2023-01-16"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"    public int getLength() {","lastModifiedDate":"2023-01-16"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-16"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"     * Removes a \u003ccode\u003eTask\u003c/code\u003e from the arraylist.","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-16"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"     * @param index Index of task to be removed.","lastModifiedDate":"2023-01-16"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-01-16"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"     * @return Removed \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"    public Task delete(int index) {","lastModifiedDate":"2023-01-16"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"        Task removed \u003d taskList.get(index);","lastModifiedDate":"2023-01-16"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        taskList.remove(index);","lastModifiedDate":"2023-01-16"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        return removed;","lastModifiedDate":"2023-01-16"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"     * Prints all \u003ccode\u003eTask\u003c/code\u003es in \u003ccode\u003eTaskList\u003c/code\u003e that contains","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"     * \u003ccode\u003ekeyword\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"     * @param keyword Keyword to check all \u003ccode\u003eTask\u003c/code\u003es for.","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"    public ArrayList\u003cTask\u003e findInTaskList(String keyword) {","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"        ArrayList\u003cTask\u003e foundList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"        for (int i \u003d 0; i \u003c this.getLength(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"            Task curTask \u003d this.getTask(i);","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"            String cur \u003d curTask.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"            if (cur.contains(keyword)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"                foundList.add(curTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"        return foundList;","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"     * Removes all \u003ccode\u003eTask\u003c/code\u003e from arraylist.","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"    public void clearAllTasks() {","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"        while (taskList.size() !\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"            delete(0);","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"bokuanT":130}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" * This class encapsulates everything \u003ccode\u003eDuke\u003c/code\u003e Duke\u0027s interactions with the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     * \u003ccode\u003eDuke\u003c/code\u003e\u0027s logo.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     * \u003ccode\u003eScanner\u003c/code\u003e to take user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    private static final String GREETING_MESSAGE \u003d \"\\tHello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"            + \"\\tWhat can I do for you?\";","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    private final String init_message \u003d \"Hello from\\n\" + Ui.LOGO;","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    private final String marked_task_message \u003d \"\\tNice! I\u0027ve marked this task as done:\\n\\t  \";","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    private final String unmarked_task_message \u003d \"\\tOK, I\u0027ve marked this task as not done yet:\"","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"            + \"\\n\\t  \";","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    private final String added_task_message \u003d \"\\tGot it. I\u0027ve added this task:\\n\\t  \";","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    private final String deleted_task_message \u003d \"\\tNoted. I\u0027ve removed this task:\\n\\t  \";","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    private final String clear_task_message \u003d \"\\tI have cleared the task list.\";","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    private final String bye_message \u003d \"\\tBye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    private final String line_seperation \u003d \"\\t___________________________________\"","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"            + \"_________________________\";","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    private final String loading_error_message \u003d \"Error loading file from storage.\";","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     * Constructor for \u003ccode\u003eDuke\u003c/code\u003e\u0027s \u003ccode\u003eUi\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    public Ui() {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"     * Reads from \u003ccode\u003eSystem.in\u003c/code\u003e and returns input in \u003ccode\u003eString\u003c/code\u003e format.","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"     * @return Input in \u003ccode\u003eString\u003c/code\u003e format.","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        if (this.scanner.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"            String userInput \u003d this.scanner.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"            makeSeperation();","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"            return userInput;","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        return null;","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"     * Returns and prints \u003ccode\u003eDuke\u003c/code\u003e\u0027s init message.","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003eDuke\u003c/code\u003e\u0027s init message","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"    public String showInitMessage() {","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        System.out.println(init_message);","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        return init_message;","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"     * Returns and prints the greeting message and a line separation.","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003eDuke\u003c/code\u003e\u0027s greeting message","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"    public static String showGreeting() {","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        System.out.println(GREETING_MESSAGE);","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        return GREETING_MESSAGE;","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"     * Returns and prints \u003ccode\u003eDuke\u003c/code\u003e\u0027s marked-task message.","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003eDuke\u003c/code\u003e\u0027s marked-task message","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"    public String showMarkedTask(String taskDescription) {","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        String message \u003d marked_task_message + taskDescription;","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        System.out.println(message);","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"        return message;","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"     * Returns and prints \u003ccode\u003eDuke\u003c/code\u003e\u0027s unmarked-task message.","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003eDuke\u003c/code\u003e\u0027s unmarked-task message","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"    public String showUnmarkedTask(String taskDescription) {","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        String message \u003d unmarked_task_message + taskDescription;","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        System.out.println(message);","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"        return message;","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"     * Returns and prints \u003ccode\u003eDuke\u003c/code\u003e\u0027s added-task message.","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003eDuke\u003c/code\u003e\u0027s added-task message","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"    public String showAddedTask(Task t, TaskList tl) {","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"        String message \u003d added_task_message + t + getTaskListLengthString(tl);","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"        System.out.println(message);","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        return message;","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"     * Returns and prints \u003ccode\u003eDuke\u003c/code\u003e\u0027s deleted-task message.","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003eDuke\u003c/code\u003e\u0027s deleted-task message","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"    public String showDeletedTask(Task t, TaskList tl) {","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"        String message \u003d deleted_task_message + t + getTaskListLengthString(tl);","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"        System.out.println(message);","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"        return message;","lastModifiedDate":"2023-02-08"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"     * Returns and prints \u003ccode\u003eDuke\u003c/code\u003e\u0027s cleared-tasks message.","lastModifiedDate":"2023-02-08"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003eDuke\u003c/code\u003e\u0027s cleared-tasks message","lastModifiedDate":"2023-02-08"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"    public String showClearTasksMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"        System.out.println(clear_task_message);","lastModifiedDate":"2023-02-08"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"        return clear_task_message;","lastModifiedDate":"2023-02-08"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"     * Returns and prints \u003ccode\u003eDuke\u003c/code\u003e\u0027s goodbye message.","lastModifiedDate":"2023-02-08"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"     * @return \u003ccode\u003eDuke\u003c/code\u003e\u0027s goodbye message","lastModifiedDate":"2023-02-08"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"    public String showByeMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"        System.out.println(bye_message);","lastModifiedDate":"2023-02-08"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        return bye_message;","lastModifiedDate":"2023-02-08"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"     * Returns and prints a numbered list \u003ccode\u003eString\u003c/code\u003e.","lastModifiedDate":"2023-02-03"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"     * @param tasks \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003eTask\u003c/code\u003es","lastModifiedDate":"2023-02-03"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"     * @return Formatted \u003ccode\u003eString\u003c/code\u003e of list of \u003ccode\u003eTask\u003c/code\u003es","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"    public String showTaskListPretty(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"        String toPrint \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"            toPrint +\u003d \"\\t\" + (i) + \". \" + t.toString() + \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"            i++;","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"        System.out.println((toPrint));","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"bokuanT"},"content":"        return toPrint;","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"bokuanT"},"content":"     * Prints \u003ccode\u003eDuke\u003c/code\u003e\u0027s error response message.","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"bokuanT"},"content":"    public String showError(String e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"        System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"bokuanT"},"content":"        return e;","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"bokuanT"},"content":"     * Prints out a line separation.","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"bokuanT"},"content":"    public void makeSeperation() {","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"bokuanT"},"content":"        System.out.println(line_seperation);","lastModifiedDate":"2023-02-08"},{"lineNumber":159,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":161,"author":{"gitId":"bokuanT"},"content":"     * Prints \u003ccode\u003eDuke\u003c/code\u003e\u0027s loading-error-from-tasks.txt message.","lastModifiedDate":"2023-01-28"},{"lineNumber":162,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":163,"author":{"gitId":"bokuanT"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"bokuanT"},"content":"        System.out.println(loading_error_message);","lastModifiedDate":"2023-02-08"},{"lineNumber":165,"author":{"gitId":"bokuanT"},"content":"        makeSeperation();","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":168,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":169,"author":{"gitId":"bokuanT"},"content":"     * Returns a formatted string of the number of items in a \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-02-08"},{"lineNumber":170,"author":{"gitId":"bokuanT"},"content":"     * @param tl \u003ccode\u003eTaskList\u003c/code\u003e whose length to be measured","lastModifiedDate":"2023-02-08"},{"lineNumber":171,"author":{"gitId":"bokuanT"},"content":"     * @return Formatted string of the number of items in a \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":172,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":173,"author":{"gitId":"bokuanT"},"content":"    public String getTaskListLengthString(TaskList tl) {","lastModifiedDate":"2023-02-08"},{"lineNumber":174,"author":{"gitId":"bokuanT"},"content":"        return String.format(\"Now you have %d tasks in the list.\",","lastModifiedDate":"2023-02-08"},{"lineNumber":175,"author":{"gitId":"bokuanT"},"content":"                tl.getLength());","lastModifiedDate":"2023-02-08"},{"lineNumber":176,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":177,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bokuanT":177}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"bokuanT":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"bokuanT":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import duke.exception.DukeBadInstructionFormatException;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Test class for the \u003ccode\u003eDeadline\u003c/code\u003e class.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     * Instantiate \u003ccode\u003eDeadline\u003c/code\u003e instance with wrong date format.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     * @result \u003ccode\u003eDukeBadInstructionFormatException\u003c/code\u003e will be thrown.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    @DisplayName(\"Deadline bad date handling test\")","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    public void wrongDateTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"        assertThrows(DukeBadInstructionFormatException.class, () -\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"            Task deadline \u003d new Deadline(\"dl A\", \"Sunday\");","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"        });","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"bokuanT":28}},{"path":"src/test/java/duke/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package duke.tasklist;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import duke.task.TaskStub;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * Test class for the \u003ccode\u003eTaskList\u003c/code\u003e class.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" * @author Bo Kuan (LG17)","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     * Append \u003ccode\u003eTask\u003c/code\u003e to empty \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     * @result \u003ccode\u003eTaskList\u003c/code\u003e will have 1 item.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    @DisplayName(\"Task list append test\")","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    public void appendTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"        Task t \u003d new TaskStub();","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        taskList.append(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        assertEquals(1, taskList.getLength());","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"bokuanT":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"todo read book","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"deadline return book /by 06/06/2023 1800","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"event project meeting /from 06/08/2023 1400 /to 06/08/2023 1600","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"todo join sports club","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"mark 1","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"mark 4","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"todo borrow book","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"event project meeting /from 22/01/2023 0800 /to 22/01/2023 2200","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"todo","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"blah","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"event a /to 23/01/2023 1400 /from 23/01/2023 0800","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"deadline /by 22/01/2023 0800","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"event /from 22/01/2023 0800 /to 22/01/2023 0800","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"delete 3","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"bye","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"bokuanT":18}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"bye","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bokuanT":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"if exist ACTUAL2.TXT del ACTUAL2.TXT","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"if exist data\\tasks.txt del data\\tasks.txt","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"java -classpath ..\\bin Duke \u003c input2.txt \u003e ACTUAL2.TXT","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"FC ACTUAL2.TXT EXPECTED2.TXT","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"bokuanT":5,"-":19}}]
