{"authorDailyContributionsMap":{"bokuanT":[{"date":"2023-01-14","commitResults":[{"hash":"312ef3f8f33bbe0b84130c15098daa537628e9c1","messageTitle":"Implemented Level 0. Greet","messageBody":"Added greet(), bidFarewell() methods for Duke to say hi and bye\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}},{"hash":"0e2a37b5248b1c80696f5724919ac23e39d692e8","messageTitle":"Added JavaDocs for level 0","messageBody":"Added docs for Duke class, greet(), bidFarewell() and makeSeparation() methods\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}}]},{"date":"2023-01-15","commitResults":[{"hash":"f886bbf892519b9fc9279186a26ac3c8b0a622dc","messageTitle":"Completed implementation of Level 1. Greet, Echo, Exit","messageBody":"Added takeCommand() and makeResponse() methods.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":3}}},{"hash":"ec9e5d3ffc3284a23b9bd546a1eb80a0f13e24e3","messageTitle":"Completed Level 2. Add, List","messageBody":"Duke now can store tasks\nadded array to store task\nmodified makeResponse() to handle \u0027list\u0027 command\nadded \u0027\\t\u0027 escape sequence to Duke\u0027s responses\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":6}}},{"hash":"c7f7df6515b100cf1049f52f676a3ea3fe4c7432","messageTitle":"Completed implementation of Level 3. Mark as Done","messageBody":"Added Task class\nAdded checkForCommand() method to check for commands. Improved command handling in makeResponse() method\n","tags":["Level-3","A-Classes"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0},"java":{"insertions":150,"deletions":25}}},{"hash":"4e289c1de89d909c361caefcfe88a0d9ae5d5924","messageTitle":"Completed implementation of Level 4. ToDOs, Events, Deadlines","messageBody":"Added ToDo, Event and Deadline classes, subclasses of Task class\nAdded CreareTask() method to handle the creation of correct Task subclasses\nImplemented basic error handling using print statements\nAdded semi automated test-cases, to be tested using runtest.bat\n","tags":["Level-4","A-TextUiTesting","A-Inheritance"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":6},"java":{"insertions":203,"deletions":3}}},{"hash":"d493d089e826b1d7e822e757f0232c1a5417af73","messageTitle":"Completed Level 5. Handle Errors","messageBody":"Added DukeException, DukeUnknownInputException and DukeBadInstructionFormatException\nDuke now handles wrong commands and wrong format for tasks\n","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0},"java":{"insertions":147,"deletions":17}}}]},{"date":"2023-01-16","commitResults":[{"hash":"afcdbde71fa9d153f42a5dd6b845c89ee6493dbb","messageTitle":"Completed Level 6. Delete","messageBody":"Added delete function to Duke.\nAdded DukeMemory class, which acts as a task manager.\nAdded enum for commands like \"mark\", \"delete\" etc.\nUpdated Automated Testing.\n","tags":["Level-6","A-Enums","A-Collections"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":142,"deletions":30}}}]},{"date":"2023-01-21","commitResults":[{"hash":"86d42d3cb5d7e140a123c0d58c1ff0ecc6cff195","messageTitle":"Add small changes in Duke.java","messageBody":"If-else statements are harder to read than switch statements. There\nare no javadocs for Commands enum.\n\nBetter coding practices from CS2103T can be followed.\n\nUsing switch statements make code more readable than if-else.\n\nLet\u0027s convert if-else statements to switch statements when possible.\n\nSwitch statements are easier to read than if-else statements.\n","fileTypesAndContributionMap":{"java":{"insertions":74,"deletions":39}}},{"hash":"1766bde74cd8bcf3cba9b78fefde0c856ac03f01","messageTitle":"Add save feature to Duke","messageBody":"Level 6 Duke does not have \u0027save\u0027 feature. Level 7 increment\nrequires \u0027save\u0027 feature.\n\nLet\u0027s.\n* add FileManager class to keep track of duke.txt, the \u0027hard disk\u0027\n* update automated testing runtest.bat and input to support testing\nthis new feature\n","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"java":{"insertions":248,"deletions":3},"bat":{"insertions":4,"deletions":1}}}]},{"date":"2023-01-22","commitResults":[{"hash":"595217fb0c1f50135d3aa8e24f60c16749b28caf","messageTitle":"Add feature to understand date and times","messageBody":"Duke uses String to store \u0027by\u0027 of deadlines or \u0027from\u0027 and \u0027to\u0027 of\nevents.\n\nThis is not utilizing available package LocalDateTime to display\ndates and times better.\n\nLet\u0027s,\n* Use LocalDateTime for subclasses of Task that need to store a\ndate and time instead of Strings.\n* Display date time in \u0027dd LLL yyyy HHmm\u0027 format.\n* Get user date time input in \u0027dd/MM/yyyy HHmm\u0027 format.\n","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":11}}},{"hash":"c58c44e4180901a13d5ced23b7132b66f2436554","messageTitle":"Merge Save feature with date and time feature","messageBody":"Loading Tasks from memory: Deadline and Event date time format in\nduke.txt not compatible with constructor parameter format.\n\nStored date time format is compatible with constructor date time\nformat.\n\nLet\u0027s,\n* Add variable to store acceptable date time format strings\n* Update automated testing scripts\n","tags":["Level-8","Level-7"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":9},"java":{"insertions":39,"deletions":25}}}]},{"date":"2023-01-26","commitResults":[{"hash":"83b880318b76058e441d95fade0d64eb2b486e61","messageTitle":"Improve OOP usage and organization","messageBody":"All classes are in the same directory and the main duke file is very\nlong as a lot of logic that can be abstracted to other classes are\nin there.\n\nBetter OOP practices need to be followed and the main duke class\nneeds to be more readable and less cluttered.\n\nLets,\n* Encapsulate logic behind parsing user input and printing to output\ninto the Ui and Parser classes\n* Encapsulate all commands using Command classes and move away from\nsimple enumerations\n* Package and refactor files into better organized directories.\n* Update the automated testing scripts\n","tags":["A-Packages","A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":677,"deletions":444},"bat":{"insertions":2,"deletions":2},"md":{"insertions":2,"deletions":2}}}]},{"date":"2023-01-28","commitResults":[{"hash":"adadc8ddf089fa24cbaa2a6917c592a18252f024","messageTitle":"Integrate gradle, JUnit and package duke as a JAR file","messageBody":"We do not have build automation or JUnit testing.\n\nWeek 3 iP task 4 requires the addition of gradle, Junit testing and\nhaving a duke.jar.\n\nLet\u0027s,\n* Merge the gradle fork available\n* Add simple JUnit tests for TaskList and Deadline\n* Create a Jar file (make it available on new release page)\n","tags":["A-Jar","A-JUnit","A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":7,"deletions":1},"txt":{"insertions":2,"deletions":0},"java":{"insertions":119,"deletions":25}}},{"hash":"6a7369e2768ff3a3fb513fae1ea9f2e44074992b","messageTitle":"Fix style errors and add javadocs to main classes","messageBody":"Not all classes have javadocs or match the code style.\n\nWe know its good practice to do so.\n\nLet\u0027s,\n* Add javadocs to all non-test classes\n* Correct the wrong style formats\n","fileTypesAndContributionMap":{"java":{"insertions":575,"deletions":222}}},{"hash":"533a1e7de3ab44cfb0f3747119b4dc9d578e250f","messageTitle":"Finalize coding standard conventions","messageBody":"Style conventions are not fully adhered to.\n\nIt is good practice to follow the given coding standard.\n\nLet\u0027s,\n* Strictly follow the coding standard and pass gradle\u0027s checkstyles\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"229d209506f1156d118021832856baa99d2fc53e","messageTitle":"Add find function","messageBody":"Duke does not have a \u0027find\u0027 function.\n\nLevel 9 requires us to add it.\n\nLet\u0027s,\n* Add a \u0027find\u0027 function to Duke\n* Add a FindCommand class to encapsulate this\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":73,"deletions":0}}}]},{"date":"2023-02-01","commitResults":[{"hash":"0215319e4d6a7c11f31f5f852968c0bb6f8d9d4a","messageTitle":"Implement rough but functional Duke with GUI","messageBody":"Let\u0027s,\n* Integrate javafx for a GUI.\n* Add relevant classes like DialogBox.\n* Make Duke.java compatible with javafx launcher\n* Make Duke the entrypoint of the javafx launcher\n","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"txt":{"insertions":1,"deletions":2},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":362,"deletions":42}}},{"hash":"78d4a8ebac3bf82a556a83ca0253056379111c38","messageTitle":"Make temporary commit","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":0,"deletions":15},"txt":{"insertions":2,"deletions":1},"fxml":{"insertions":0,"deletions":35},"java":{"insertions":42,"deletions":362}}},{"hash":"fd57e273b5d250a9d43771fee8d8d5222eb2fcf5","messageTitle":"Implement rough but functional Duke with GUI","messageBody":"Let\u0027s,\n* Integrate javafx for a GUI.\n* Add relevant classes like DialogBox.\n* Make Duke.java compatible with javafx launcher\n* Make Duke the entrypoint of the javafx launcher\n\n(cherry picked from commit 0215319e4d6a7c11f31f5f852968c0bb6f8d9d4a)\n","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"txt":{"insertions":1,"deletions":2},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":362,"deletions":42}}}]},{"date":"2023-02-03","commitResults":[{"hash":"89edf2ea7d0d1956395fa6ea378950ed9722f6a9","messageTitle":"Add GUI to Duke and fix minor issues","messageBody":"Duke is only works on CLI, minimizing user satisfaction.\n\nDuke may seem unappealing to some users.\n\nLet\u0027s,\n* Integrate Javafx to give Duke a GUI\n* Use fxml files to make code follow OOP principles better\n* Update minor details like comments based on PR review feedback\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":1},"java":{"insertions":144,"deletions":236}}}]}]},"authorFileTypeContributionMap":{"bokuanT":{"java":2015,"md":2,"fxml":35,"sh":0,"bat":5,"gradle":22,"txt":25}},"authorContributionVariance":{"bokuanT":169816.0},"authorDisplayNameMap":{"bokuanT":"CS2103T-T17-4 TANG..KUAN"}}
