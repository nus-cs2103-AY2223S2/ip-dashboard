{"authorDailyContributionsMap":{"bokuanT":[{"date":"2023-01-14","commitResults":[{"hash":"312ef3f8f33bbe0b84130c15098daa537628e9c1","messageTitle":"Implemented Level 0. Greet","messageBody":"Added greet(), bidFarewell() methods for Duke to say hi and bye\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}},{"hash":"0e2a37b5248b1c80696f5724919ac23e39d692e8","messageTitle":"Added JavaDocs for level 0","messageBody":"Added docs for Duke class, greet(), bidFarewell() and makeSeparation() methods\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}}]},{"date":"2023-01-15","commitResults":[{"hash":"f886bbf892519b9fc9279186a26ac3c8b0a622dc","messageTitle":"Completed implementation of Level 1. Greet, Echo, Exit","messageBody":"Added takeCommand() and makeResponse() methods.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":3}}},{"hash":"ec9e5d3ffc3284a23b9bd546a1eb80a0f13e24e3","messageTitle":"Completed Level 2. Add, List","messageBody":"Duke now can store tasks\nadded array to store task\nmodified makeResponse() to handle \u0027list\u0027 command\nadded \u0027\\t\u0027 escape sequence to Duke\u0027s responses\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":6}}},{"hash":"c7f7df6515b100cf1049f52f676a3ea3fe4c7432","messageTitle":"Completed implementation of Level 3. Mark as Done","messageBody":"Added Task class\nAdded checkForCommand() method to check for commands. Improved command handling in makeResponse() method\n","tags":["Level-3","A-Classes"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0},"java":{"insertions":150,"deletions":25}}},{"hash":"4e289c1de89d909c361caefcfe88a0d9ae5d5924","messageTitle":"Completed implementation of Level 4. ToDOs, Events, Deadlines","messageBody":"Added ToDo, Event and Deadline classes, subclasses of Task class\nAdded CreareTask() method to handle the creation of correct Task subclasses\nImplemented basic error handling using print statements\nAdded semi automated test-cases, to be tested using runtest.bat\n","tags":["Level-4","A-TextUiTesting","A-Inheritance"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":6},"java":{"insertions":203,"deletions":3}}},{"hash":"d493d089e826b1d7e822e757f0232c1a5417af73","messageTitle":"Completed Level 5. Handle Errors","messageBody":"Added DukeException, DukeUnknownInputException and DukeBadInstructionFormatException\nDuke now handles wrong commands and wrong format for tasks\n","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0},"java":{"insertions":147,"deletions":17}}}]},{"date":"2023-01-16","commitResults":[{"hash":"afcdbde71fa9d153f42a5dd6b845c89ee6493dbb","messageTitle":"Completed Level 6. Delete","messageBody":"Added delete function to Duke.\nAdded DukeMemory class, which acts as a task manager.\nAdded enum for commands like \"mark\", \"delete\" etc.\nUpdated Automated Testing.\n","tags":["Level-6","A-Enums","A-Collections"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":142,"deletions":30}}}]},{"date":"2023-01-21","commitResults":[{"hash":"86d42d3cb5d7e140a123c0d58c1ff0ecc6cff195","messageTitle":"Add small changes in Duke.java","messageBody":"If-else statements are harder to read than switch statements. There\nare no javadocs for Commands enum.\n\nBetter coding practices from CS2103T can be followed.\n\nUsing switch statements make code more readable than if-else.\n\nLet\u0027s convert if-else statements to switch statements when possible.\n\nSwitch statements are easier to read than if-else statements.\n","fileTypesAndContributionMap":{"java":{"insertions":74,"deletions":39}}},{"hash":"1766bde74cd8bcf3cba9b78fefde0c856ac03f01","messageTitle":"Add save feature to Duke","messageBody":"Level 6 Duke does not have \u0027save\u0027 feature. Level 7 increment\nrequires \u0027save\u0027 feature.\n\nLet\u0027s.\n* add FileManager class to keep track of duke.txt, the \u0027hard disk\u0027\n* update automated testing runtest.bat and input to support testing\nthis new feature\n","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"java":{"insertions":248,"deletions":3},"bat":{"insertions":4,"deletions":1}}}]},{"date":"2023-01-22","commitResults":[{"hash":"595217fb0c1f50135d3aa8e24f60c16749b28caf","messageTitle":"Add feature to understand date and times","messageBody":"Duke uses String to store \u0027by\u0027 of deadlines or \u0027from\u0027 and \u0027to\u0027 of\nevents.\n\nThis is not utilizing available package LocalDateTime to display\ndates and times better.\n\nLet\u0027s,\n* Use LocalDateTime for subclasses of Task that need to store a\ndate and time instead of Strings.\n* Display date time in \u0027dd LLL yyyy HHmm\u0027 format.\n* Get user date time input in \u0027dd/MM/yyyy HHmm\u0027 format.\n","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":11}}},{"hash":"c58c44e4180901a13d5ced23b7132b66f2436554","messageTitle":"Merge Save feature with date and time feature","messageBody":"Loading Tasks from memory: Deadline and Event date time format in\nduke.txt not compatible with constructor parameter format.\n\nStored date time format is compatible with constructor date time\nformat.\n\nLet\u0027s,\n* Add variable to store acceptable date time format strings\n* Update automated testing scripts\n","tags":["Level-8","Level-7"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":9},"java":{"insertions":39,"deletions":25}}}]}]},"authorFileTypeContributionMap":{"bokuanT":{"java":1003,"md":0,"fxml":0,"sh":0,"bat":4,"gradle":0,"txt":24}},"authorContributionVariance":{"bokuanT":42664.605},"authorDisplayNameMap":{"bokuanT":"CS2103T-T17-4 TANG..KUAN"}}
