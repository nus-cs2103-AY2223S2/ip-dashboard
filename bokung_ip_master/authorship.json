[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"    ","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"bokung"},"content":"    mainClassName \u003d \"uwuke.UwUke\"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bokung":16,"-":40}},{"path":"src/main/java/uwuke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package uwuke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"public class Launcher {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"        Application.launch(UwUke.class, args);","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"bokung":9}},{"path":"src/main/java/uwuke/UwUke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package uwuke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"import uwuke.gui.DialogBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"import uwuke.input.Advisor;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"import uwuke.input.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"import uwuke.output.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"import uwuke.output.Printer;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"import uwuke.output.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"import uwuke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"public class UwUke extends Application {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"    private final static int CAPACITY \u003d 100;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"bokung"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"bokung"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"bokung"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"bokung"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"bokung"},"content":"        // Initialise GUI elements","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"bokung"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"bokung"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"bokung"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"bokung"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"bokung"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"bokung"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"bokung"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"bokung"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"bokung"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"bokung"},"content":"        ","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"bokung"},"content":"        // Configure GUI elements","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"bokung"},"content":"        configureStage(stage);","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"bokung"},"content":"        configureScrollPane();","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"bokung"},"content":"        configureAnchorPane();","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"bokung"},"content":"        configureDialogContainer();","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"bokung"},"content":"        configureUserInputTextField();","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"bokung"},"content":"        configureSendButton();","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"bokung"},"content":"        ","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"bokung"},"content":"        // Initialise Helper classes","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"bokung"},"content":"        Printer.setDialogContainer(dialogContainer);","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"bokung"},"content":"        DialogBox.setDukeImage(duke);","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"bokung"},"content":"        DialogBox.setUserImage(user);","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"bokung"},"content":"        inititialiseModels();","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"bokung"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"bokung"},"content":"        stage.show();","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"bokung"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"bokung"},"content":"        String inputString \u003d userInput.getText();","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"bokung"},"content":"        Label userText \u003d new Label(inputString);","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"bokung"},"content":"        DialogBox userBox \u003d DialogBox.getUserDialogBox(userText);","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"bokung"},"content":"        dialogContainer.getChildren().add(userBox);","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"bokung"},"content":"        displayDukeResponse(inputString);","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"bokung"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"bokung"},"content":"    private void displayDukeResponse(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"bokung"},"content":"        run(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"bokung"},"content":"    private void configureSendButton() {","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"bokung"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"bokung"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"bokung"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"bokung"},"content":"        });","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"bokung"},"content":"    private void configureUserInputTextField() {","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"bokung"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"bokung"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"bokung"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"bokung"},"content":"        });","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"bokung"},"content":"    private void configureDialogContainer() {","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"bokung"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"bokung"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":104,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":105,"author":{"gitId":"bokung"},"content":"    private static void configureStage(Stage stage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"bokung"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"bokung"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"bokung"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"bokung"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"bokung"},"content":"    private void configureScrollPane() {","lastModifiedDate":"2023-02-10"},{"lineNumber":113,"author":{"gitId":"bokung"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"bokung"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"bokung"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-03"},{"lineNumber":116,"author":{"gitId":"bokung"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":117,"author":{"gitId":"bokung"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-03"},{"lineNumber":118,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":119,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":120,"author":{"gitId":"bokung"},"content":"    private void configureAnchorPane() {","lastModifiedDate":"2023-02-10"},{"lineNumber":121,"author":{"gitId":"bokung"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"bokung"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":123,"author":{"gitId":"bokung"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"bokung"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"bokung"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":126,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":127,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":128,"author":{"gitId":"bokung"},"content":"    private static void inititialiseModels() {","lastModifiedDate":"2023-02-10"},{"lineNumber":129,"author":{"gitId":"bokung"},"content":"        Printer.uwu();","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"bokung"},"content":"        tasks \u003d new TaskList(CAPACITY);","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"bokung"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"bokung"},"content":"            tasks \u003d Storage.readSavedTasks();","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"bokung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"bokung"},"content":"            Printer.printError(\"Could not load save file, creating new task list\");","lastModifiedDate":"2023-02-10"},{"lineNumber":135,"author":{"gitId":"bokung"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":140,"author":{"gitId":"bokung"},"content":"     * Main handler to perform all commands other than the bye command","lastModifiedDate":"2023-02-10"},{"lineNumber":141,"author":{"gitId":"bokung"},"content":"     * @param input command string","lastModifiedDate":"2023-02-10"},{"lineNumber":142,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":143,"author":{"gitId":"bokung"},"content":"    private static void performCommand(String input) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":144,"author":{"gitId":"bokung"},"content":"        switch (Command.matchCommand(input)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"bokung"},"content":"        case LIST:","lastModifiedDate":"2023-01-17"},{"lineNumber":146,"author":{"gitId":"bokung"},"content":"            Printer.printTasks(tasks.getList());","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"bokung"},"content":"            break;","lastModifiedDate":"2023-01-17"},{"lineNumber":148,"author":{"gitId":"bokung"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-17"},{"lineNumber":149,"author":{"gitId":"bokung"},"content":"            tasks.addDeadline(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"bokung"},"content":"            break;","lastModifiedDate":"2023-01-17"},{"lineNumber":151,"author":{"gitId":"bokung"},"content":"        case EVENT:","lastModifiedDate":"2023-01-18"},{"lineNumber":152,"author":{"gitId":"bokung"},"content":"            tasks.addEvent(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"bokung"},"content":"            break;","lastModifiedDate":"2023-01-17"},{"lineNumber":154,"author":{"gitId":"bokung"},"content":"        case TODO:","lastModifiedDate":"2023-01-17"},{"lineNumber":155,"author":{"gitId":"bokung"},"content":"            tasks.addTodo(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"bokung"},"content":"            break;","lastModifiedDate":"2023-01-17"},{"lineNumber":157,"author":{"gitId":"bokung"},"content":"        case MARK:","lastModifiedDate":"2023-01-18"},{"lineNumber":158,"author":{"gitId":"bokung"},"content":"            tasks.markTask(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"bokung"},"content":"            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":160,"author":{"gitId":"bokung"},"content":"        case UNMARK:","lastModifiedDate":"2023-01-18"},{"lineNumber":161,"author":{"gitId":"bokung"},"content":"            tasks.unmarkTask(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"bokung"},"content":"            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":163,"author":{"gitId":"bokung"},"content":"        case DELETE:","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"bokung"},"content":"            tasks.deleteTask(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"bokung"},"content":"            break;","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"bokung"},"content":"        case FIND:","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"bokung"},"content":"            tasks.findTask(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"bokung"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"bokung"},"content":"        case BYE:","lastModifiedDate":"2023-02-10"},{"lineNumber":170,"author":{"gitId":"bokung"},"content":"            saveTask();","lastModifiedDate":"2023-02-10"},{"lineNumber":171,"author":{"gitId":"bokung"},"content":"            break;","lastModifiedDate":"2023-02-10"},{"lineNumber":172,"author":{"gitId":"bokung"},"content":"        default:","lastModifiedDate":"2023-01-19"},{"lineNumber":173,"author":{"gitId":"bokung"},"content":"            Printer.printWithDecorations(Advisor.advise(input));","lastModifiedDate":"2023-01-19"},{"lineNumber":174,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":175,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":176,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":177,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":178,"author":{"gitId":"bokung"},"content":"     * Handles error if input contains a comma character, which will interfere with save file loading.","lastModifiedDate":"2023-02-10"},{"lineNumber":179,"author":{"gitId":"bokung"},"content":"     * Can potentially cause fatal errors when trying to read files if commas were allowed.","lastModifiedDate":"2023-02-10"},{"lineNumber":180,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":181,"author":{"gitId":"bokung"},"content":"    private static void handleIllegalCharacter(String input) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":182,"author":{"gitId":"bokung"},"content":"        if (input.contains(\",\")) { ","lastModifiedDate":"2023-02-10"},{"lineNumber":183,"author":{"gitId":"bokung"},"content":"            throw new DukeException(\"Please do not use reserved character \\\u0027,\\\u0027.\");","lastModifiedDate":"2023-02-10"},{"lineNumber":184,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":185,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":186,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":187,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":188,"author":{"gitId":"bokung"},"content":"     * Handles saving tasks and any potential errors","lastModifiedDate":"2023-02-10"},{"lineNumber":189,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":190,"author":{"gitId":"bokung"},"content":"    private static void saveTask() {","lastModifiedDate":"2023-02-10"},{"lineNumber":191,"author":{"gitId":"bokung"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":192,"author":{"gitId":"bokung"},"content":"            Storage.saveTasks(tasks.getList());","lastModifiedDate":"2023-01-29"},{"lineNumber":193,"author":{"gitId":"bokung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":194,"author":{"gitId":"bokung"},"content":"            Printer.printWithDecorations(\"Error occured when trying to save tasks\");","lastModifiedDate":"2023-01-28"},{"lineNumber":195,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":196,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":197,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":198,"author":{"gitId":"bokung"},"content":"    private static void run(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":199,"author":{"gitId":"bokung"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":200,"author":{"gitId":"bokung"},"content":"            handleIllegalCharacter(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":201,"author":{"gitId":"bokung"},"content":"            performCommand(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":202,"author":{"gitId":"bokung"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":203,"author":{"gitId":"bokung"},"content":"            Printer.printError(e.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":204,"author":{"gitId":"bokung"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":205,"author":{"gitId":"bokung"},"content":"            Printer.printError(\"Error occurred when trying to read next line, try again.\");","lastModifiedDate":"2023-02-10"},{"lineNumber":206,"author":{"gitId":"bokung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":207,"author":{"gitId":"bokung"},"content":"            Printer.printError(\"Unknown error ocurred\");","lastModifiedDate":"2023-02-10"},{"lineNumber":208,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":209,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bokung":209,"-":1}},{"path":"src/main/java/uwuke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package uwuke.gui;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"    private Label text;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"    private static Image userImage;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"    private static Image dukeImage;","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"    public static void setUserImage(Image userImage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"        DialogBox.userImage \u003d userImage;","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"    public static void setDukeImage(Image dukeImage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"        DialogBox.dukeImage \u003d dukeImage;","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"    ","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"bokung"},"content":"    private void flip() {","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"bokung"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"bokung"},"content":"        ObservableList\u003cNode\u003e temp \u003d FXCollections.observableArrayList(this.getChildren()); // why must we use this weird thing?","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"bokung"},"content":"        FXCollections.reverse(temp);","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"bokung"},"content":"        this.getChildren().setAll(temp); // Clears original children and add new collection of children","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"bokung"},"content":"     * User on the right","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"bokung"},"content":"     * ","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"bokung"},"content":"     * @param text","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"bokung"},"content":"     * @param picView","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"bokung"},"content":"     * @return","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"bokung"},"content":"    public static DialogBox getUserDialogBox(Label text) {","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"bokung"},"content":"        return new DialogBox(text, new ImageView(userImage));","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"bokung"},"content":"    ","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"bokung"},"content":"     * Duke on the left, reverse all elements then return a dialog box","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"bokung"},"content":"     * ","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"bokung"},"content":"     * @param text","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"bokung"},"content":"     * @param picView","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"bokung"},"content":"     * @return","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"bokung"},"content":"    public static DialogBox getDukeDialogBox(Label text) {","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"bokung"},"content":"        DialogBox db \u003d new DialogBox(text, new ImageView(dukeImage));","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"bokung"},"content":"        db.flip();","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"bokung"},"content":"        return db;","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"bokung":68}},{"path":"src/main/java/uwuke/input/Advisor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package uwuke.input;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":" * Advises users on potential solutions when no matching command is found.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":" * ","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":" * TODO: Add more functionality to the class in the future, advise is not that helpful currently.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"public class Advisor {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"     * Advise users on potential fixes","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"     * ","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"     * @param input faulty input string given by user","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"     * @return advise based on faulty input","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"    public static String advise(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"        if (input.contains(\"deadline\") \u0026\u0026 !input.contains(\"/by\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"            return \"Please add a description for deadline using the \\\"/by\\\" keyword. :c\\nExample: deadline a /by b\";","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"        } else if (input.contains(\"event\") \u0026\u0026 !(input.contains(\"/from\") \u0026\u0026 input.contains(\"/to\"))) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"            return \"Please use both the \\\"/from\\\" and \\\"/to\\\" keywords to add a new event. :c\\nExample: event a /from b /to c\";","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"        } else if (input.contains(\"todo\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"            return \"The description of a todo cannot be empty :c\";","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"            return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :c\";","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"bokung":26}},{"path":"src/main/java/uwuke/input/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package uwuke.input;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":" * Enum thats lists all possible commands","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"public enum Command {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"    TODO, DEADLINE, EVENT, LIST, MARK, UNMARK, DELETE, FIND, UNKNOWN, BYE;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"    public static Command matchCommand(String input) {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"            return Command.LIST;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"        } else if (input.matches(\"^mark\\\\s\\\\d+$\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"            return Command.MARK;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"        } else if (input.matches(\"^unmark\\\\s\\\\d+$\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"            return Command.UNMARK;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"        } else if (input.matches(\"^deadline\\\\s.+/by\\\\s.+$\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"        } else if (input.matches(\"^event\\\\s.+/from\\\\s.+/to\\\\s.+$\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"            return Command.EVENT;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"        } else if (input.matches(\"^todo\\\\s.+$\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"            return Command.TODO;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"        } else if (input.matches(\"^delete\\\\s\\\\d+$\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"            return Command.DELETE;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"        } else if (input.matches(\"find\\\\s.+\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"            return Command.FIND;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"            return Command.BYE;","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"            return Command.UNKNOWN;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"bokung":32}},{"path":"src/main/java/uwuke/input/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package uwuke.input;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"import uwuke.output.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":" * Main input processor with only static methods that attempts to extract useful information from user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":" * Note that this class should only be used when the type of command is identified and is of the correct format. ","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":" * Methods implemented in this class assumes a specific regex, very limited debugging information is given ","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":" * by this class when a string in the wrong format is passed in to any of the methods.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"public abstract class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"     * Processes string into useful information when command is identified as a deadline command","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"     * \u003cp\u003e Regular Expression: deadline\\\\s.+/by\\\\s.+$","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"     * ","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"     * @param input deadline command that matches the above regular expression","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"     * @return string array of length 2, can be used directly to create a new deadline object","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"     * @throws DukeException if input cannot be parsed","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"    public static String[] parseDeadline(String input) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"            String removeDeadlineKeyword \u003d input.substring(9);","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"            int by \u003d removeDeadlineKeyword.indexOf(\"/by\");","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"            String task \u003d removeDeadlineKeyword.substring(0, by).strip();","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"            String deadline \u003d removeDeadlineKeyword.substring(by+3, removeDeadlineKeyword.length()).strip();","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"            return new String[] {task, deadline};","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"            throw new DukeException(\"Unexpected input format, could not parse deadline properly.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"            throw new DukeException(\"Unexpected error occured\");","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"bokung"},"content":"     * Processes string into useful information when command is identified as a event command","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"bokung"},"content":"     * \u003cp\u003e Regular Expression: ^event\\\\s.+/from\\\\s.+/to\\\\s.+$","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"bokung"},"content":"     * ","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"bokung"},"content":"     * @param input event command that matches the above regular expression","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"bokung"},"content":"     * @return string array of length 3, can be used directly to create a new deadline object","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"bokung"},"content":"     * @throws DukeException if input cannot be parsed","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"bokung"},"content":"    public static String[] parseEvent(String input) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"bokung"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"bokung"},"content":"            String removeEventKeyword \u003d input.substring(6);","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"bokung"},"content":"            int from \u003d removeEventKeyword.indexOf(\"/from\");","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"bokung"},"content":"            int to \u003d removeEventKeyword.indexOf(\"/to\");","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"bokung"},"content":"            String task \u003d removeEventKeyword.substring(0, from).strip();","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"bokung"},"content":"            String start \u003d removeEventKeyword.substring(from+5, to).strip();","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"bokung"},"content":"            String end \u003d removeEventKeyword.substring(to+3, removeEventKeyword.length()).strip();","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"bokung"},"content":"            return new String[] {task, start, end};","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"bokung"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"bokung"},"content":"            throw new DukeException(\"Unexpected input format, could not parse event properly.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"bokung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"bokung"},"content":"            throw new DukeException(\"Unexpected error occured\");","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"bokung"},"content":"     * Processes string into useful information when command is identified as a todo command","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"bokung"},"content":"     * \u003cp\u003e Regular Expression: ^todo\\\\s.+$","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"bokung"},"content":"     * ","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"bokung"},"content":"     * @param input todo command that matches the above regular expression","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"bokung"},"content":"     * @return string that can be used directly to create a new deadline object","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"bokung"},"content":"     * @throws DukeException if input cannot be parsed","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"bokung"},"content":"    public static String parseTodo(String input) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"bokung"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"bokung"},"content":"            return input.substring(5, input.length()).strip();","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"bokung"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"bokung"},"content":"            throw new DukeException(\"Unexpected input format, could not parse todo properly.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"bokung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"bokung"},"content":"            throw new DukeException(\"Unexpected error occured\");","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"bokung"},"content":"     * Processes string into useful information when command is identified as a mark command","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"bokung"},"content":"     * \u003cp\u003e Regular Expression: ^mark\\\\s\\\\d+$","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"bokung"},"content":"     * ","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"bokung"},"content":"     * @param input mark command","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"bokung"},"content":"     * @return index to mark task","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"bokung"},"content":"     * @throws DukeException if input cannot be parsed","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"bokung"},"content":"    public static int parseMark(String input) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"bokung"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"bokung"},"content":"            int markIndex \u003d Integer.valueOf(input.substring(5)) - 1; // account for 1 indexing","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"bokung"},"content":"            return markIndex;","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"bokung"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"bokung"},"content":"            throw new DukeException(\"Unexpected input format, could not parse mark properly.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"bokung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"bokung"},"content":"            throw new DukeException(\"Unexpected error occured\");","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"bokung"},"content":"     * Processes string into useful information when command is identified as an unmark command","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"bokung"},"content":"     * \u003cp\u003e Regular Expression: ^unmark\\\\s\\\\d+$","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"bokung"},"content":"     * ","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"bokung"},"content":"     * @param input unmark command","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"bokung"},"content":"     * @return index to mark task","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"bokung"},"content":"     * @throws DukeException if input cannot be parsed","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"bokung"},"content":"    public static int parseUnmark(String input) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"bokung"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"bokung"},"content":"            int unmarkIndex \u003d Integer.valueOf(input.substring(7)) - 1; // account for 1 indexing","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"bokung"},"content":"            return unmarkIndex;","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"bokung"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"bokung"},"content":"            throw new DukeException(\"Unexpected input format, could not parse unmark properly.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"bokung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"bokung"},"content":"            throw new DukeException(\"Unexpected error occured\");","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"bokung"},"content":"     * Processes string into useful information when command is identified as a delete command","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"bokung"},"content":"     * \u003cp\u003e Regular Expression: ^delete\\\\s\\\\d+$","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"bokung"},"content":"     * ","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"bokung"},"content":"     * @param input delete command","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"bokung"},"content":"     * @return index to delete task","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"bokung"},"content":"     * @throws DukeException if input cannot be parsed","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"bokung"},"content":"    public static int parseDelete(String input) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"bokung"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"bokung"},"content":"            int deleteIndex \u003d Integer.valueOf(input.substring(7)) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"bokung"},"content":"            return deleteIndex;","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"bokung"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"bokung"},"content":"            throw new DukeException(\"Unexpected input format, could not parse unmark properly.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"bokung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"bokung"},"content":"            throw new DukeException(\"Unexpected error occured\");","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"bokung"},"content":"    public static String parseFind(String input) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"bokung"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"bokung"},"content":"            Pattern p \u003d Pattern.compile(\"find\\\\s(.+)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"bokung"},"content":"            Matcher m \u003d p.matcher(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"bokung"},"content":"            m.find();","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"bokung"},"content":"            return m.group(1);","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"bokung"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"bokung"},"content":"            throw new DukeException(\"Unexpected input format, could not parse find properly.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"bokung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"bokung"},"content":"            throw new DukeException(\"Unexpected error occured\");","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"bokung":149}},{"path":"src/main/java/uwuke/output/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package uwuke.output;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"    public DukeException(String e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"        super(e);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"bokung":7}},{"path":"src/main/java/uwuke/output/Printer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package uwuke.output;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"import uwuke.gui.DialogBox;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"import uwuke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":" * Helper class that prints out everything in required format to System.out","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"public class Printer {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"    private static VBox dialogContainer; ","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"    public static void setDialogContainer(VBox dialogContainer) {","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"        Printer.dialogContainer \u003d dialogContainer;","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"     * Prints the string with some OwO\u0027s","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"     * ","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"     * @param input message that should be displayed","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"    public static void printWithDecorations(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"        StringBuilder sb \u003d new StringBuilder(\"OwO OwO OwO OwO OwO OwO\");","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"        sb.append(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"        sb.append(\"\\nOwO OwO OwO OwO OwO OwO\");","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialogBox(new Label(sb.toString())));","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"     * Prints a boring welcome message","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"    public static void printWelcome() {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"        String welcomeString \u003d ","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"bokung"},"content":"                \"Hello from\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"bokung"},"content":"                +\" ____        _        \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"bokung"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"bokung"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"bokung"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"bokung"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"bokung"},"content":"        ","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"bokung"},"content":"        printWithDecorations(welcomeString);","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"bokung"},"content":"     * Prints out a giant uwu","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"bokung"},"content":"    public static void uwu() {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"bokung"},"content":"        String uwu \u003d","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"bokung"},"content":"        \"Hewwo from\\n\"+","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"bokung"},"content":"        \"_\\\\/\\\\\\\\\\\\_______\\\\/\\\\\\\\\\\\__\\\\/\\\\\\\\\\\\_____________\\\\/\\\\\\\\\\\\__\\\\/\\\\\\\\\\\\_______\\\\/\\\\\\\\\\\\_       \\n\"+","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"bokung"},"content":"        \"__/\\\\\\\\\\\\________/\\\\\\\\\\\\___/\\\\\\\\\\\\______________/\\\\\\\\\\\\___/\\\\\\\\\\\\________/\\\\\\\\\\\\_       \\n\"+ ","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"bokung"},"content":"        \" _\\\\/\\\\\\\\\\\\_______\\\\/\\\\\\\\\\\\__\\\\/\\\\\\\\\\\\_____________\\\\/\\\\\\\\\\\\__\\\\/\\\\\\\\\\\\_______\\\\/\\\\\\\\\\\\_      \\n\"+","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"bokung"},"content":"        \"  _\\\\/\\\\\\\\\\\\_______\\\\/\\\\\\\\\\\\__\\\\//\\\\\\\\\\\\____/\\\\\\\\\\\\____/\\\\\\\\\\\\___\\\\/\\\\\\\\\\\\_______\\\\/\\\\\\\\\\\\_     \\n\"+","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"bokung"},"content":"        \"   _\\\\/\\\\\\\\\\\\_______\\\\/\\\\\\\\\\\\___\\\\//\\\\\\\\\\\\__/\\\\\\\\\\\\\\\\\\\\__/\\\\\\\\\\\\____\\\\/\\\\\\\\\\\\_______\\\\/\\\\\\\\\\\\_    \\n\"+","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"bokung"},"content":"        \"    _\\\\/\\\\\\\\\\\\_______\\\\/\\\\\\\\\\\\____\\\\//\\\\\\\\\\\\/\\\\\\\\\\\\/\\\\\\\\\\\\/\\\\\\\\\\\\_____\\\\/\\\\\\\\\\\\_______\\\\/\\\\\\\\\\\\_   \\n\"+","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"bokung"},"content":"        \"     _\\\\//\\\\\\\\\\\\______/\\\\\\\\\\\\______\\\\//\\\\\\\\\\\\\\\\\\\\\\\\//\\\\\\\\\\\\\\\\\\\\______\\\\//\\\\\\\\\\\\______/\\\\\\\\\\\\__  \\n\"+","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"bokung"},"content":"        \"      __\\\\///\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\/________\\\\//\\\\\\\\\\\\__\\\\//\\\\\\\\\\\\________\\\\///\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\/___ \\n\"+","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"bokung"},"content":"        \"       ____\\\\/////////___________\\\\///____\\\\///___________\\\\/////////_____\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"bokung"},"content":"       ","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"bokung"},"content":"        printWithDecorations(uwu);","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"bokung"},"content":"     * Prints the goodbye message","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"bokung"},"content":"    public static void printBye() {","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"bokung"},"content":"        String bye \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"bokung"},"content":"        printWithDecorations(bye);","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"bokung"},"content":"     * Prints out all the tasks that the user currently has stored in the list.","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"bokung"},"content":"     * Runtime grows linearly with total number of characters in all tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"bokung"},"content":"     * ","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"bokung"},"content":"     * @param tasks list of all tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"bokung"},"content":"    public static void printTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"bokung"},"content":"        String s;","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"bokung"},"content":"        if (tasks.size() \u003c\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"bokung"},"content":"            s \u003d \"No task found! Please add a task.\";","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"bokung"},"content":"        } else if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"bokung"},"content":"            s \u003d \"Here is the task in your list:\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"bokung"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"bokung"},"content":"            s \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"bokung"},"content":"        ","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"bokung"},"content":"        StringBuilder sb \u003d new StringBuilder(s);","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"bokung"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"bokung"},"content":"            sb.append(String.format(\"%d.%s\\n\", i+1, tasks.get(i).toString()));","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"bokung"},"content":"        printWithDecorations(sb.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"bokung"},"content":"     * Prints out a confirmation message when a task is added successfully.","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"bokung"},"content":"     * Should only be called after the actual add operation.","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"bokung"},"content":"     * ","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"bokung"},"content":"     * @param task task that was added","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"bokung"},"content":"     * @param numTasks number of tasks after adding this new task","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"bokung"},"content":"    public static void printAddedConfirmation(Task task, int numTasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"bokung"},"content":"        String grammar \u003d numTasks \u003c\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"bokung"},"content":"        String s \u003d String.format(\"Got it. I\u0027ve added this task:\\n   %s\\nNow you have %d %s in the list.\", task.toString(), numTasks, grammar);","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"bokung"},"content":"        printWithDecorations(s);","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"bokung"},"content":"     * Prints out a warning message when list has reach it\u0027s capacity","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"bokung"},"content":"    public static void printNotEnoughSpace() {","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"bokung"},"content":"        printWithDecorations(\"You have added too many tasks!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"bokung"},"content":"     * Prints out an error message.","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"bokung"},"content":"     * Should only be used when an error is encountered.","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"bokung"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"bokung"},"content":"     * @param errorMessage description of the error","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"bokung"},"content":"    public static void printError(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"bokung"},"content":"        printWithDecorations(errorMessage);","lastModifiedDate":"2023-02-10"},{"lineNumber":127,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"bokung"},"content":"     * Prints out a confirmation when a task is deleted successfully.","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"bokung"},"content":"     * Should only be used after the actual delete operation.","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"bokung"},"content":"     * ","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"bokung"},"content":"     * @param task task that was just deleted","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"bokung"},"content":"     * @param numTasksAfterDelete number of tasks after deleting the task","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"bokung"},"content":"    public static void printDeleteConfirmation(Task task, int numTasksAfterDelete) {","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"bokung"},"content":"        String grammar \u003d numTasksAfterDelete \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"bokung"},"content":"        String s \u003d String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d %s in the list.\", ","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"bokung"},"content":"                                 task.toString(), ","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"bokung"},"content":"                                 numTasksAfterDelete, ","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"bokung"},"content":"                                 grammar);","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"bokung"},"content":"        printWithDecorations(s);    ","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"bokung"},"content":"    public static void printFindResults(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"bokung"},"content":"        String s;","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"bokung"},"content":"        if (matchingTasks.size() \u003c\u003d 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"bokung"},"content":"            s \u003d \"No task found with the given keyword! Please choose a different keyword.\";","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"bokung"},"content":"        } else if (matchingTasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"bokung"},"content":"            s \u003d \"Here is a matching task in your list:\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"bokung"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"bokung"},"content":"            s \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"bokung"},"content":"        ","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"bokung"},"content":"        StringBuilder sb \u003d new StringBuilder(s);","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"bokung"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"bokung"},"content":"            sb.append(String.format(\"%d.%s\\n\", i+1, matchingTasks.get(i).toString()));","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"bokung"},"content":"        printWithDecorations(sb.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"bokung"},"content":"    ","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"bokung":163}},{"path":"src/main/java/uwuke/output/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package uwuke.output;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"import java.util.Collection;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"import uwuke.task.Deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"import uwuke.task.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"import uwuke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"import uwuke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"import uwuke.task.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":" * Handler for task storage and retrieval","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"public class Storage {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"    private static final Path DATA_DIRECTORY \u003d Path.of(\"data\");","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"    private static final Path DATA_FILE \u003d Path.of(\"data\", \"tasks.dat\");","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"    public static void saveTasks(Collection\u003c? super Task\u003e tasks) throws Exception {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"        if (!Files.exists(DATA_DIRECTORY)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"            Files.createDirectory(DATA_DIRECTORY);","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"        ","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"        // Creates .dat file if it doesn\u0027t exist, removes all content originally there","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"        Files.write(DATA_FILE, Arrays.toString(tasks.toArray()).getBytes());","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"    public static TaskList readSavedTasks() throws Exception {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"        String rawString \u003d Files.readString(DATA_FILE);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"        String[] taskStrings \u003d rawString.split(\", \");","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"        taskStrings \u003d cleanTaskString(taskStrings);","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"        for (String s : taskStrings) {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"bokung"},"content":"            tasks.addTask(getTaskFromString(s));","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"bokung"},"content":"        return tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"bokung"},"content":"     * Return array of tasks without beginning and ending brackets","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"bokung"},"content":"     * ","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"bokung"},"content":"     * @param taskStrings Array of tasks split by commas","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"bokung"},"content":"     * @return Cleaned up array","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"bokung"},"content":"    private static String[] cleanTaskString(String[] taskStrings) {","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"bokung"},"content":"        if (taskStrings.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"bokung"},"content":"            String s \u003d taskStrings[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"bokung"},"content":"            taskStrings[0] \u003d s.substring(1, s.length()-1);","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"bokung"},"content":"            return taskStrings;","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"bokung"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"bokung"},"content":"            String f \u003d taskStrings[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"bokung"},"content":"            String e \u003d taskStrings[taskStrings.length-1];","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"bokung"},"content":"            taskStrings[0] \u003d f.substring(1);","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"bokung"},"content":"            taskStrings[taskStrings.length-1] \u003d e.substring(0, e.length()-1);","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"bokung"},"content":"            return taskStrings;","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"bokung"},"content":"    private static Task getTaskFromString(String taskString) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"bokung"},"content":"        boolean isMarked \u003d taskString.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"bokung"},"content":"        char type \u003d taskString.charAt(1);","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"bokung"},"content":"        if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"bokung"},"content":"            String s \u003d StorageParser.parseTodo(taskString);","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"bokung"},"content":"            Todo td \u003d new Todo(s);","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"bokung"},"content":"            if (isMarked) {","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"bokung"},"content":"                td.markDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"bokung"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"bokung"},"content":"            return td;","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"bokung"},"content":"        } else if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"bokung"},"content":"            String[] s \u003d StorageParser.parseDeadline(taskString);","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"bokung"},"content":"            Deadline dl \u003d new Deadline(s[0], s[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"bokung"},"content":"            if (isMarked) {","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"bokung"},"content":"                dl.markDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"bokung"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"bokung"},"content":"            return dl;","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"bokung"},"content":"        } else if (type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"bokung"},"content":"            String[] s \u003d StorageParser.parseEvent(taskString);","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"bokung"},"content":"            Event e \u003d new Event(s[0], s[1], s[2]);","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"bokung"},"content":"            if (isMarked) {","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"bokung"},"content":"                e.markDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"bokung"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"bokung"},"content":"            return e;","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"bokung"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"bokung"},"content":"            throw new DukeException(\"Cannot parse save file\");","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"bokung":91}},{"path":"src/main/java/uwuke/output/StorageParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package uwuke.output;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":" * Helper class to parse strings from save files ","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"public abstract class StorageParser {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"    public static String[] parseDeadline(String deadlineString) {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"        Pattern p \u003d Pattern.compile(\"\\\\[D\\\\]\\\\[[\\\\sX]\\\\]\\\\s(.+)\\\\s\\\\(by:\\\\s(.+)\\\\)\");","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"        Matcher m \u003d p.matcher(deadlineString);","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"        m.find();","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"        return new String[] {m.group(1), m.group(2)};","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"    public static String[] parseEvent(String eventString) {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"        Pattern p \u003d Pattern.compile(\"\\\\[E\\\\]\\\\[[\\\\sX]\\\\]\\\\s(.+)\\\\s\\\\(from:\\\\s(.+)\\\\sto:\\\\s(.+)\\\\)\");","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"        Matcher m \u003d p.matcher(eventString);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"        m.find();","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"        return new String[] {m.group(1), m.group(2), m.group(3)};","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"    public static String parseTodo(String todoString) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"        Pattern p \u003d Pattern.compile(\"\\\\[T\\\\]\\\\[[\\\\sX]\\\\]\\\\s(.+)\");","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"        Matcher m \u003d p.matcher(todoString);","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"        m.find();","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"        return m.group(1);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"bokung":30}},{"path":"src/main/java/uwuke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package uwuke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"import uwuke.output.Printer;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"    private String deadlineString;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"    private Optional\u003cLocalDateTime\u003e deadlineTime \u003d Optional.empty();","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"    public Deadline(String task, String deadline) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"        super(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"        this.deadlineString \u003d deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"            this.deadlineTime \u003d Optional.of(LocalDateTime.parse(deadline, formatter));","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"            Printer.printError(\"Could not parse date. Ignore this if you weren\u0027t trying to input a date!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"        return String.format(\"%s%s (by: %s)\", ","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"                            \"[D]\", ","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"                            super.toString(),","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"                            deadlineTime.map(Object::toString).orElse(deadlineString));","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"bokung":35}},{"path":"src/main/java/uwuke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package uwuke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"    private String start;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"    private String end;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"    public Event(String task, String start, String end) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"        super(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"        return String.format(\"%s%s (from: %s to: %s)\", ","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"            \"[E]\", super.toString(), start, end);","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"    ","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"bokung":20}},{"path":"src/main/java/uwuke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package uwuke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"    private boolean markedDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"    private final String taskName; // Do not allow task name to change for now","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"        return String.format(\"%s %s\", this.getStatusIcon(), this.taskName);","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"    public String markDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"        this.markedDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"        String msg \u003d String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\", this.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"        return msg;","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"    public String unmarkDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"        this.markedDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"        String msg \u003d String.format(\"Ok, I\u0027ve marked this task as not done yet:\\n  %s\", this.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"        return msg;","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"        char c \u003d markedDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"        return String.format(\"[%c]\", c);","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"bokung":32}},{"path":"src/main/java/uwuke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package uwuke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"import uwuke.input.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"import uwuke.output.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"import uwuke.output.Printer;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":" * Encapsulates an ArrayList to help with task operations","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"    private static final int CAPACITY \u003d 100;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"    public TaskList(int capacity) {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(capacity);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"    ","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(CAPACITY);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"    private boolean isValidIndex(int index) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"            Printer.printWithDecorations(\"Index out of bounds!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"            return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"        } else if (tasks.get(index) \u003d\u003d null) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"            Printer.printWithDecorations(\"Task not initialised!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"            return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"    public void addDeadline(String input) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"bokung"},"content":"        if (tasks.size() \u003e\u003d CAPACITY) {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"bokung"},"content":"            Printer.printNotEnoughSpace();","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"bokung"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"bokung"},"content":"        String[] dt \u003d Parser.parseDeadline(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"bokung"},"content":"        Deadline dl \u003d new Deadline(dt[0], dt[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"bokung"},"content":"        tasks.add(dl);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"bokung"},"content":"        Printer.printAddedConfirmation(dl, tasks.size());","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"bokung"},"content":"    public void addEvent(String input) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"bokung"},"content":"        if (tasks.size() \u003e\u003d CAPACITY) {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"bokung"},"content":"            Printer.printNotEnoughSpace();","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"bokung"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"bokung"},"content":"        String[] et \u003d Parser.parseEvent(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"bokung"},"content":"        Event e \u003d new Event(et[0], et[1], et[2]);","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"bokung"},"content":"        tasks.add(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"bokung"},"content":"        Printer.printAddedConfirmation(e, tasks.size());","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"bokung"},"content":"    public void addTodo(String input) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"bokung"},"content":"        if (tasks.size() \u003e\u003d CAPACITY) {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"bokung"},"content":"            Printer.printNotEnoughSpace();","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"bokung"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"bokung"},"content":"        Todo td \u003d new Todo(Parser.parseTodo(input));","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"bokung"},"content":"        tasks.add(td);","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"bokung"},"content":"        Printer.printAddedConfirmation(td, tasks.size());","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"bokung"},"content":"    public void markTask(String input) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"bokung"},"content":"        int markIndex \u003d Parser.parseMark(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"bokung"},"content":"        if (isValidIndex(markIndex)) // Note that this check also prints out error messages if any","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"bokung"},"content":"            Printer.printWithDecorations(tasks.get(markIndex).markDone());","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"bokung"},"content":"    public void unmarkTask(String input) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"bokung"},"content":"        int unmarkIndex \u003d Parser.parseUnmark(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"bokung"},"content":"        if (isValidIndex(unmarkIndex)) // Note that this check also prints out error messages if any","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"bokung"},"content":"            Printer.printWithDecorations(tasks.get(unmarkIndex).unmarkDone());","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"bokung"},"content":"    public void deleteTask(String input) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"bokung"},"content":"        int deleteIndex \u003d Parser.parseDelete(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"bokung"},"content":"        if (isValidIndex(deleteIndex)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"bokung"},"content":"            Task removedTask \u003d tasks.get(deleteIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"bokung"},"content":"            tasks.remove(deleteIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"bokung"},"content":"            Printer.printDeleteConfirmation(removedTask, tasks.size());","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"bokung"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"bokung"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"bokung"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"bokung"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"bokung"},"content":"    public void findTask(String input) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"bokung"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"bokung"},"content":"        String keyword \u003d Parser.parseFind(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"bokung"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"bokung"},"content":"            if (t.toString().contains(keyword)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"bokung"},"content":"                matchingTasks.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"bokung"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"bokung"},"content":"        Printer.printFindResults(matchingTasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"bokung":109}},{"path":"src/main/java/uwuke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package uwuke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"    public Todo(String task) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"        super(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"    ","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"bokung":14}},{"path":"src/test/java/uwuke/input/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package uwuke.input;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"import uwuke.input.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"    public void parseDeadline_normalInput_success() throws Exception {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"        String[] actual \u003d Parser.parseDeadline(\"deadline complete A-JUnit /by today\");","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"        String[] expected \u003d {\"complete A-JUnit\", \"today\"};","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"        assertEquals(true, Arrays.equals(actual, expected));","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"    public void parseDeadline_emptyString_throwsException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"        assertThrows(Exception.class, () -\u003e Parser.parseDeadline(\"\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"    public void parseDeadline_null_throwsException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"        assertThrows(Exception.class, () -\u003e Parser.parseDeadline(null));","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"bokung":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"event hey /from hello /to bye","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"todo hello /by hjuiodjfg","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"deadline hello /by wokdasdw","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"mark 12893421","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"wjkiadjksdowafjg","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"ghoasgjaosijd","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"unmark 12840142","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"bokung"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"bokung"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"bokung":39}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"java -classpath ..\\bin UwUke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bokung":1,"-":20}}]
