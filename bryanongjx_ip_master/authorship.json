[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"[T][ ] benji","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"[T][X] test","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"[T][ ] walaaao","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"[E][ ] hello (from: 2pm to: 5pm)","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"[D][ ] hello (02/01/2019)","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"bryanongjx":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"    LocalDate dueDate;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    public Deadline(String description, LocalDate dueDate) {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"        return \"[D]\" + super.toString() + \" (\" + this.dueDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")) + \u0027)\u0027;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":16}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"import java.util.*;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import java.io.File;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"    public static void main(String[] args) throws FileNotFoundException {","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"        System.out.println(\"What can I do for you?\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"        List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"        /* load duke.txt into task list */","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"        File f \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"        Scanner scannerTxtFile \u003d new Scanner(f);","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"        while (scannerTxtFile.hasNext()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"            String txt \u003d scannerTxtFile.nextLine();","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"            if (txt.substring(1,2).equals(\"T\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"                String details \u003d txt.substring(7);","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"                Task t \u003d new Todo(details);","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"                if (txt.substring(4, 5).equals(\"X\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"                    t.mark();","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"                lst.add(t);","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"            } else if (txt.substring(1,2).equals(\"D\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"                String[] detailsAndDueDate \u003d txt.substring(7).split(\" \\\\(\");","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"                String details \u003d detailsAndDueDate[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"                DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"                LocalDate dueDate \u003d LocalDate.parse(detailsAndDueDate[1].substring(0, detailsAndDueDate[1].length() - 1), dateFormatter);","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"                Task t \u003d new Deadline(details, dueDate);","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"                if (txt.substring(4, 5).equals(\"X\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"                    t.mark();","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"                lst.add(t);","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"            } else if (txt.substring(1,2).equals(\"E\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"                String[] detailsAndDate \u003d txt.substring(7).split(\" \\\\(\");","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"                String details \u003d detailsAndDate[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"                String[] tmp \u003d detailsAndDate[1].split(\" to: \");","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"                String to \u003d tmp[1].substring(0, tmp[1].length() - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"                String from \u003d tmp[0].split(\"from: \")[1];","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"                Task t \u003d new Event(details, from, to);","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"                if (txt.substring(4, 5).equals(\"X\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"                    t.mark();","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"                lst.add(t);","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"        scannerTxtFile.close();","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"bryanongjx"},"content":"        /* take in user input */","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"bryanongjx"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"bryanongjx"},"content":"        while (true) {","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"bryanongjx"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"bryanongjx"},"content":"                String input \u003d sc.nextLine().toLowerCase();","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"bryanongjx"},"content":"                String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"bryanongjx"},"content":"                String action \u003d inputArr[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"bryanongjx"},"content":"                if (action.equals(\"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"bryanongjx"},"content":"                    return;","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"bryanongjx"},"content":"                } else if (action.equals(\"list\")) { // list","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"bryanongjx"},"content":"                    for (int i \u003d 1; i \u003c\u003d lst.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"bryanongjx"},"content":"                        System.out.println(i + \". \" + lst.get(i - 1));","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"bryanongjx"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"bryanongjx"},"content":"                } else if (action.equals(\"mark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"bryanongjx"},"content":"                    String details \u003d inputArr[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"bryanongjx"},"content":"                    int taskNum \u003d Integer.parseInt(details);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"bryanongjx"},"content":"                    Task currTask \u003d lst.get(taskNum - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"bryanongjx"},"content":"                    currTask.mark();","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done\" + \u0027\\n\u0027 + currTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"bryanongjx"},"content":"                } else if (action.equals(\"unmark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"bryanongjx"},"content":"                    String details \u003d inputArr[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"bryanongjx"},"content":"                    int taskNum \u003d Integer.parseInt(details);","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"bryanongjx"},"content":"                    Task currTask \u003d lst.get(taskNum - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"bryanongjx"},"content":"                    currTask.unMark();","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as not done yet\" + \u0027\\n\u0027 + currTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"bryanongjx"},"content":"                } else if (action.equals(\"todo\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"bryanongjx"},"content":"                    String[] actionAndDetails \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"bryanongjx"},"content":"                    if (actionAndDetails.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"bryanongjx"},"content":"                        throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"bryanongjx"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"bryanongjx"},"content":"                    String details \u003d actionAndDetails[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"bryanongjx"},"content":"                    Todo newTodo \u003d new Todo(details);","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"bryanongjx"},"content":"                    lst.add(newTodo);","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\" + \u0027\\n\u0027 + newTodo + \u0027\\n\u0027 + \"Now you have \" + lst.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"bryanongjx"},"content":"                } else if (action.equals(\"deadline\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"bryanongjx"},"content":"                    String[] detailsAndDate \u003d inputArr[1].split(\" /by \");","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"bryanongjx"},"content":"                    String details \u003d detailsAndDate[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"bryanongjx"},"content":"                    LocalDate date \u003d LocalDate.parse(detailsAndDate[1]);","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"bryanongjx"},"content":"                    Deadline newDeadline \u003d new Deadline(details, date);","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"bryanongjx"},"content":"                    lst.add(newDeadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\" + \u0027\\n\u0027 + newDeadline + \u0027\\n\u0027 + \"Now you have \" + lst.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"bryanongjx"},"content":"                } else if (action.equals(\"event\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"bryanongjx"},"content":"                    String[] detailsAndTime \u003d inputArr[1].split(\" /from \");","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"bryanongjx"},"content":"                    String details \u003d detailsAndTime[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"bryanongjx"},"content":"                    String[] Time \u003d detailsAndTime[1].split(\" /to \");","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"bryanongjx"},"content":"                    String To \u003d Time[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"bryanongjx"},"content":"                    String From \u003d Time[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"bryanongjx"},"content":"                    Event newEvent \u003d new Event(details, To, From);","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"bryanongjx"},"content":"                    lst.add(newEvent);","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\" + \u0027\\n\u0027 + newEvent + \u0027\\n\u0027 + \"Now you have \" + lst.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"bryanongjx"},"content":"                } else if (action.equals(\"delete\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"bryanongjx"},"content":"                    String details \u003d inputArr[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"bryanongjx"},"content":"                    int taskNum \u003d Integer.parseInt(details);","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"bryanongjx"},"content":"                    Task currTask \u003d lst.get(taskNum - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"bryanongjx"},"content":"                    lst.remove(taskNum - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\" + \u0027\\n\u0027 + currTask  + \u0027\\n\u0027 + \"Now you have \" + lst.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"bryanongjx"},"content":"                }else {","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"bryanongjx"},"content":"                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"bryanongjx"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"bryanongjx"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"bryanongjx"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"bryanongjx"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":126,"author":{"gitId":"bryanongjx"},"content":"                System.out.println(\"Date format should be in YYYY-MM-DD!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":127,"author":{"gitId":"bryanongjx"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":130,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"        super(message);","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"        return super.getMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"    String From;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"    String To;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"    public Event(String description, String From, String To) {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"        this.From \u003d From;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"        this.To \u003d To;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.From + \" to: \" + this.To + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"import java.util.*;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"public class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"    protected String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"        return (isDone ? \"X\": \" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"        return this.description;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"    public void mark() {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"    public void unMark() {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":32}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"todo borrow book","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":5}}]
