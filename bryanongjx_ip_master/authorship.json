[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bryanongjx":1,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"[T][ ] benji","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"[T][X] test","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"[T][ ] walaaao","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"[E][ ] hello (from: 2pm to: 5pm)","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"[D][ ] hello (02/01/2019)","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"[T][ ] hello","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"[E][ ] hello (from: 6pm to: 5pm)","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"[T][ ] test2","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"[D][ ] test2 (01/01/2015)","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"bryanongjx":9}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"    LocalDate dueDate;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"    public Deadline(String description, LocalDate dueDate) {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"        return \"[D]\" + super.toString() + \" (\" + this.dueDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")) + \u0027)\u0027;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":18}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"import java.util.*;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"    public void run() {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"        ui.greet();","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"        while (true) {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"                    Parser.parse(input,tasks);","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"                    break;","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"                Parser.parse(input, tasks);","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"                storage.save(tasks);","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":45,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"        super(message);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"        return super.getMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":13}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"    String From;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"    String To;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    public Event(String description, String From, String To) {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"        this.From \u003d From;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"        this.To \u003d To;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.From + \" to: \" + this.To + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":18}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"public class Parser {","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"    public static void parse(String userInput, TaskList lst) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"        String[] inputArr \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"            ui.exit();","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"            lst.printTaskList();","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"            String details \u003d inputArr[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"            int taskNum \u003d Integer.parseInt(details);","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"            lst.markTask(taskNum);","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"            String details \u003d inputArr[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"            int taskNum \u003d Integer.parseInt(details);","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"            lst.unmarkTask(taskNum);","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"        } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"            String details \u003d inputArr[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"            lst.addTask(details, \"todo\");","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"            String details \u003d inputArr[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"            lst.addTask(details, \"deadline\");","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"            String details \u003d inputArr[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"            lst.addTask(details, \"event\");","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"            String details \u003d inputArr[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"            int taskNum \u003d Integer.parseInt(details);","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"            lst.deleteTask(taskNum);","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"bryanongjx":54}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"import java.io.File;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"public class Storage {","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"    String filePath;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"    ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"    public Storage (String filePath) {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"            Scanner scannerTxtFile \u003d new Scanner(f);","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"            while (scannerTxtFile.hasNext()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"                String txt \u003d scannerTxtFile.nextLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"                if (txt.substring(1, 2).equals(\"T\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"                    String details \u003d txt.substring(7);","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"                    Task t \u003d new Todo(details);","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"                    if (txt.substring(4, 5).equals(\"X\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"                        t.mark();","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"                    }","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"                    loadedTasks.add(t);","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"                } else if (txt.substring(1, 2).equals(\"D\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"                    String[] detailsAndDueDate \u003d txt.substring(7).split(\" \\\\(\");","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"                    String details \u003d detailsAndDueDate[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"                    DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"                    LocalDate dueDate \u003d LocalDate.parse(detailsAndDueDate[1].substring(0, detailsAndDueDate[1].length() - 1), dateFormatter);","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"                    Task t \u003d new Deadline(details, dueDate);","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"                    if (txt.substring(4, 5).equals(\"X\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"                        t.mark();","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"                    }","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"                    loadedTasks.add(t);","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"                } else if (txt.substring(1, 2).equals(\"E\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"                    String[] detailsAndDate \u003d txt.substring(7).split(\" \\\\(\");","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"                    String details \u003d detailsAndDate[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"                    String[] tmp \u003d detailsAndDate[1].split(\" to: \");","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"                    String to \u003d tmp[1].substring(0, tmp[1].length() - 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"                    String from \u003d tmp[0].split(\"from: \")[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"                    Task t \u003d new Event(details, from, to);","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"                    if (txt.substring(4, 5).equals(\"X\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"                        t.mark();","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"                    }","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"                    loadedTasks.add(t);","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"            scannerTxtFile.close();","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"bryanongjx"},"content":"            System.out.println(\"File could not be found\");","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"bryanongjx"},"content":"        return this.loadedTasks;","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"bryanongjx"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"bryanongjx"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"bryanongjx"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"bryanongjx"},"content":"            f.createNewFile();","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"bryanongjx"},"content":"            FileWriter fw \u003d new FileWriter(filePath, false);","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"bryanongjx"},"content":"            fw.write(tasks.tasksToStringFormat());","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"bryanongjx"},"content":"            fw.close();","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"bryanongjx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"bryanongjx"},"content":"            System.out.println(\"error writing into file\");","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"bryanongjx":76}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"public class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"    protected String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"        return (isDone ? \"X\": \" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"        return this.description;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"    public void mark() {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"    public void unMark() {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":31}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"public class TaskList {","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"    public TaskList (ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"            this.tasks.add(t);","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"    public TaskList () {","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"    public void addTask(String details, String taskType) {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"        if (taskType.equals(\"todo\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"            try {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"                if (details.equals(\"\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"                Todo newTodo \u003d new Todo(details);","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"                tasks.add(newTodo);","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\" + \u0027\\n\u0027 + newTodo + \u0027\\n\u0027 + \"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"        } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"            try {","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"                String[] detailsAndDate \u003d details.split(\" /by \");","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"                String description \u003d detailsAndDate[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"                LocalDate date \u003d LocalDate.parse(detailsAndDate[1]);","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"                Deadline newDeadline \u003d new Deadline(description, date);","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"                tasks.add(newDeadline);","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\" + \u0027\\n\u0027 + newDeadline + \u0027\\n\u0027 + \"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"                System.out.println(\"Please input date in YYYY-MM-DD format!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"        } else if (taskType.equals(\"event\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"            String[] detailsAndTime \u003d details.split(\" /from \");","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"            String description \u003d detailsAndTime[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"            String[] Time \u003d detailsAndTime[1].split(\" /to \");","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"            String To \u003d Time[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"            String From \u003d Time[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"            Event newEvent \u003d new Event(description, To, From);","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"            tasks.add(newEvent);","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\" + \u0027\\n\u0027 + newEvent + \u0027\\n\u0027 + \"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"    public void printTaskList() {","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"            System.out.println(i + \". \" + tasks.get(i - 1));","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"bryanongjx"},"content":"    public void markTask (int index) {","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"bryanongjx"},"content":"        Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"bryanongjx"},"content":"        currTask.mark();","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"bryanongjx"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done\" + \u0027\\n\u0027 + currTask);","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"bryanongjx"},"content":"    public void unmarkTask (int index) {","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"bryanongjx"},"content":"        Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"bryanongjx"},"content":"        currTask.unMark();","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"bryanongjx"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as not done yet\" + \u0027\\n\u0027 + currTask);","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"bryanongjx"},"content":"    public void deleteTask (int index) {","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"bryanongjx"},"content":"        Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"bryanongjx"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"bryanongjx"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\" + \u0027\\n\u0027 + currTask  + \u0027\\n\u0027 + \"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"bryanongjx"},"content":"    public String tasksToStringFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"bryanongjx"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"bryanongjx"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i ++) {","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"bryanongjx"},"content":"            res +\u003d Integer.toString(i + 1) + \". \";","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"bryanongjx"},"content":"            res +\u003d tasks.get(i).toString();","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"bryanongjx"},"content":"            res +\u003d \u0027\\n\u0027;","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"bryanongjx"},"content":"        return res;","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"bryanongjx":87}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":13}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"public class Ui {","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"    public void greet() {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"        System.out.println(\"Hello! I\u0027m Duke\" + \"\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"    public void exit() {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"        System.out.println(\"There was an error in loading your file\");","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"bryanongjx":17}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"    public void TestAdditionOfDeadlineToTaskList() {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"        tasks.addTask(\"test task /by 2023-01-02\", \"deadline\");","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"        assertEquals(\"1. [D][ ] test task (02/01/2023)\\n\", tasks.tasksToStringFormat());","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"bryanongjx":13}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"public class EventTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"    public void TestAdditionOfEventToTaskList() {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"        tasks.addTask(\"test task /from 2pm /to 6pm\", \"event\");","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"        assertEquals(\"1. [E][ ] test task (from: 2pm to: 6pm)\\n\", tasks.tasksToStringFormat());","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"bryanongjx":14}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"    public void TestAdditionOfToDoToTaskList() {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"        tasks.addTask(\"test task\", \"todo\");","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"        assertEquals(\"1. [T][ ] test task\\n\", tasks.tasksToStringFormat());","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"bryanongjx":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"todo borrow book","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":5}}]
