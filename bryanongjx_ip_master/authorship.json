[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"    String dueDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"        return \"[D]\" + super.toString() + \" (\" + this.dueDate + \u0027)\u0027;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"import java.util.*;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"        System.out.println(\"What can I do for you?\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"        List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"        while (true) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"                String input \u003d sc.nextLine().toLowerCase();","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"                String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"                String action \u003d inputArr[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"                if (action.equals(\"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"                    return;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"                } else if (action.equals(\"list\")) { // list","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"                    for (int i \u003d 1; i \u003c\u003d lst.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"                        System.out.println(i + \". \" + lst.get(i - 1));","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"                } else if (action.equals(\"mark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"                    String details \u003d inputArr[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"                    int taskNum \u003d Integer.parseInt(details);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"                    Task currTask \u003d lst.get(taskNum - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"                    currTask.mark();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done\" + \u0027\\n\u0027 + currTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"                } else if (action.equals(\"unmark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"                    String details \u003d inputArr[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"                    int taskNum \u003d Integer.parseInt(details);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"                    Task currTask \u003d lst.get(taskNum - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"                    currTask.unMark();","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as not done yet\" + \u0027\\n\u0027 + currTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"                } else if (action.equals(\"todo\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"                    String[] actionAndDetails \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"                    if (actionAndDetails.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"                        throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"                    String details \u003d actionAndDetails[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"                    Todo newTodo \u003d new Todo(details);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"                    lst.add(newTodo);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\" + \u0027\\n\u0027 + newTodo + \u0027\\n\u0027 + \"Now you have \" + lst.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"                } else if (action.equals(\"deadline\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"                    String[] detailsAndDate \u003d inputArr[1].split(\" /by \");","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"                    String details \u003d detailsAndDate[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"                    String date \u003d detailsAndDate[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"                    Deadline newDeadline \u003d new Deadline(details, date);","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"                    lst.add(newDeadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\" + \u0027\\n\u0027 + newDeadline + \u0027\\n\u0027 + \"Now you have \" + lst.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"                } else if (action.equals(\"event\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"                    String[] detailsAndTime \u003d inputArr[1].split(\" /from \");","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"bryanongjx"},"content":"                    String details \u003d detailsAndTime[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"bryanongjx"},"content":"                    String[] Time \u003d detailsAndTime[1].split(\" /to \");","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"bryanongjx"},"content":"                    String To \u003d Time[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"bryanongjx"},"content":"                    String From \u003d Time[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"bryanongjx"},"content":"                    Event newEvent \u003d new Event(details, To, From);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"bryanongjx"},"content":"                    lst.add(newEvent);","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\" + \u0027\\n\u0027 + newEvent + \u0027\\n\u0027 + \"Now you have \" + lst.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"bryanongjx"},"content":"                } else if (action.equals(\"delete\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"bryanongjx"},"content":"                    String details \u003d inputArr[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"bryanongjx"},"content":"                    int taskNum \u003d Integer.parseInt(details);","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"bryanongjx"},"content":"                    Task currTask \u003d lst.get(taskNum - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"bryanongjx"},"content":"                    lst.remove(taskNum - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\" + \u0027\\n\u0027 + currTask  + \u0027\\n\u0027 + \"Now you have \" + lst.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"bryanongjx"},"content":"                }else {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"bryanongjx"},"content":"                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"bryanongjx"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"bryanongjx"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"bryanongjx"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":79,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"        super(message);","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"        return super.getMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"    String From;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"    String To;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"    public Event(String description, String From, String To) {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"        this.From \u003d From;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"        this.To \u003d To;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.From + \" to: \" + this.To + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"import java.util.*;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"public class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"    protected String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"        return (isDone ? \"X\": \" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"        return this.description;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"    public void mark() {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"    public void unMark() {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":32}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"todo borrow book","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":5}}]
