[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"# Tick Pro","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"\u003e \"For every minute spent organising, an hour is earned\" - Tick from Brawl Stars","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"\"Tick OP\" - every salty brawl stars player","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"![This is an image](/assets/tick.png)","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"Tick Pro frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"- text-based","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"- easy to learn","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"- ~~FAST~~ SUPER FAST to learn","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"## Setting it up","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"1. download **Tick Pro (v0.2)** from [here](https://github.com/bryanongjx/ip/releases/tag/A-Release)","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"2. double-click it","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"3. add your tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"4. let it manage tasks for you :wink:","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"and it\u0027s **FREE**!! :money_mouth_face:","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"Features:","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"- [x] Managing tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"- [x] Managing deadlines","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"If you are a java programmer, you can use it to practice java too. Here\u0027s ","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"the main method:","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"public class Main {","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"bryanongjx":31,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bryanongjx":15,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"[D]/!@#\u0026/ /!@#\u0026/high/!@#\u0026/hello/!@#\u0026/02/01/2021","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"[T]/!@#\u0026/ /!@#\u0026/ /!@#\u0026/hello","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"[T]/!@#\u0026/ /!@#\u0026/ /!@#\u0026/hello","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"[T]/!@#\u0026/ /!@#\u0026/ /!@#\u0026/hello","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"[T]/!@#\u0026/ /!@#\u0026/ /!@#\u0026/hello","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"[T]/!@#\u0026/ /!@#\u0026/ /!@#\u0026/hello","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"[T]/!@#\u0026/ /!@#\u0026/ /!@#\u0026/hello","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"bryanongjx":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"# User Guide for Tick Pro","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"![This is an image](Ui.png)","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"## Getting Started","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"1. Have Java 11 installed on your device.","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"2. Download the latest version of Duke from here.","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"3. Copy the file to the folder you want to use as the home folder for Duke.","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"4. Double click the application to run","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"5. Enter your command in the text box and press enter to execute command. Refer to the features below on the various commands.","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"## Features","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"### Feature - Adding Tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"*Adds a task into the list*","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"#### Usage - Todo","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"Command:","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"todo \u003cdescription\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"Eg. todo Read Book","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"Expected output:","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"[T][] Read Book","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"Priority:","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"#### Usage - Deadline","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"Command:","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"deadline \u003cdescription\u003e /by \u003cYYYY-MM-DD\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"Eg. deadline Finish CS2100 Quiz /by 2021-01-02","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"Expected output:","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"[D][] Finish CS2100 Quiz (02/01/2021)","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"Priority:","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"#### Usage - Event","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"Command:","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"Eg. event Industry Talk /from 03/06/2021 2pm /to 03/06/2021 4pm","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"Expected output:","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"[E][] Industry Talk (from: 03/06/2021 2pm to: 03/06/2021 4pm)","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"Priority:","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"bryanongjx"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"bryanongjx"},"content":"### Feature - List","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"bryanongjx"},"content":"*Displays all tasks in your list*","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"bryanongjx"},"content":"#### Usage","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"bryanongjx"},"content":"Command: ","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"bryanongjx"},"content":"`list`","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"bryanongjx"},"content":"Expected output:","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"bryanongjx"},"content":"Here are the tasks in your list: ","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"bryanongjx"},"content":"1. [T][] Read Book","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"bryanongjx"},"content":"Priority:","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"bryanongjx"},"content":"2. [D][] CS2100 Quiz (02/01/2021)","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"bryanongjx"},"content":"Priority:","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"bryanongjx"},"content":"3. [E][] Industry Talk (from: 03/06/2021 2pm to: 03/06/2021 4pm)","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"bryanongjx"},"content":"### Feature - Mark","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"bryanongjx"},"content":"*Marks a task in your list as completed*","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"bryanongjx"},"content":"#### Usage","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"bryanongjx"},"content":"Command:","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"bryanongjx"},"content":"mark \u003ctask_number\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"bryanongjx"},"content":"Eg. mark 2","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"bryanongjx"},"content":"Expected output:","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"bryanongjx"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"bryanongjx"},"content":"[D][X] CS2100 Quiz (02/01/2021)","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"bryanongjx"},"content":"Priority:","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"bryanongjx"},"content":"### Feature - Unmark","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"bryanongjx"},"content":"*Marks a task in your list as not completed*","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"bryanongjx"},"content":"#### Usage","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"bryanongjx"},"content":"Command:","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"bryanongjx"},"content":"unmark \u003ctask_number\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"bryanongjx"},"content":"Eg. unmark 2","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"bryanongjx"},"content":"Expected output:","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"bryanongjx"},"content":"Nice! I\u0027ve marked this task as not done:","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"bryanongjx"},"content":"[D][ ] CS2100 Quiz (02/01/2021)","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"bryanongjx"},"content":"Priority:","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"bryanongjx"},"content":"### Feature - Delete","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"bryanongjx"},"content":"*Deletes a task in your list*","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"bryanongjx"},"content":"#### Usage","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"bryanongjx"},"content":"Command:","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"bryanongjx"},"content":"delete \u003ctask_number\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"bryanongjx"},"content":"Eg. delete 1","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"bryanongjx"},"content":"Expected output:","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"bryanongjx"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"bryanongjx"},"content":"[T][ ] Read Book","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"bryanongjx"},"content":"Priority:","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"bryanongjx"},"content":"### Feature - Find","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"bryanongjx"},"content":"*Searches for matching tasks in your list based on a keyword*","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"bryanongjx"},"content":"#### Usage","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"bryanongjx"},"content":"Command:","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":131,"author":{"gitId":"bryanongjx"},"content":"find \u003ckeyword\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":132,"author":{"gitId":"bryanongjx"},"content":"Eg. find talk","lastModifiedDate":"2023-02-20"},{"lineNumber":133,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"bryanongjx"},"content":"Expected output:","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"bryanongjx"},"content":"Here are the matching tasks in your list with the keyword \"talk\":","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"bryanongjx"},"content":"1. [E][ ] Industry Talk (from: 23/12/2023 10am to: 23/12/2023 12pm)","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"bryanongjx"},"content":"Priority:","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"bryanongjx"},"content":"2. [E][ ] Career Talk (from: 02/03/2023 12pm to: 02/03/2023 2pm)","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"bryanongjx"},"content":"Priority","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"bryanongjx"},"content":"3. [T][ ] Talk with friends","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"bryanongjx"},"content":"Priority:","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":146,"author":{"gitId":"bryanongjx"},"content":"### Feature - Priority","lastModifiedDate":"2023-02-20"},{"lineNumber":147,"author":{"gitId":"bryanongjx"},"content":"*Sets the priority for a task (low / medium / high)*","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"bryanongjx"},"content":"#### Usage","lastModifiedDate":"2023-02-20"},{"lineNumber":149,"author":{"gitId":"bryanongjx"},"content":"Command:","lastModifiedDate":"2023-02-20"},{"lineNumber":150,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":151,"author":{"gitId":"bryanongjx"},"content":"priority \u003ctask_number\u003e \u003cpriority_level\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":152,"author":{"gitId":"bryanongjx"},"content":"Eg. priority 1 high","lastModifiedDate":"2023-02-20"},{"lineNumber":153,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":155,"author":{"gitId":"bryanongjx"},"content":"Expected output:","lastModifiedDate":"2023-02-20"},{"lineNumber":156,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":157,"author":{"gitId":"bryanongjx"},"content":"Nice! I\u0027ve assigned this task:","lastModifiedDate":"2023-02-20"},{"lineNumber":158,"author":{"gitId":"bryanongjx"},"content":"[D] CS2100 Quiz (02/03/2021)","lastModifiedDate":"2023-02-20"},{"lineNumber":159,"author":{"gitId":"bryanongjx"},"content":"Priority: high","lastModifiedDate":"2023-02-20"},{"lineNumber":160,"author":{"gitId":"bryanongjx"},"content":"as high priority","lastModifiedDate":"2023-02-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":162,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":163,"author":{"gitId":"bryanongjx"},"content":"### Feature - Bye","lastModifiedDate":"2023-02-20"},{"lineNumber":164,"author":{"gitId":"bryanongjx"},"content":"*Exits the application*","lastModifiedDate":"2023-02-20"},{"lineNumber":165,"author":{"gitId":"bryanongjx"},"content":"#### Usage","lastModifiedDate":"2023-02-20"},{"lineNumber":166,"author":{"gitId":"bryanongjx"},"content":"Command: `bye`","lastModifiedDate":"2023-02-20"},{"lineNumber":167,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":168,"author":{"gitId":"bryanongjx"},"content":"Expected output:","lastModifiedDate":"2023-02-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":170,"author":{"gitId":"bryanongjx"},"content":"Bye! Hope to see you again soon!","lastModifiedDate":"2023-02-20"},{"lineNumber":171,"author":{"gitId":"bryanongjx"},"content":"```","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"bryanongjx":156,"-":15}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":" * Deadline class","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"    private static final String TASK_TYPE \u003d \"[D]\";","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"     * Constructor for instantiating a deadline object","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"     * @param description description of the event","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"     * @param dueDate due date of the event","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"    public Deadline(String description, LocalDate dueDate) {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"     * Returns the string representation of the deadline object","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"     * @return String string representation of the deadline, which includes type of task, completion status, task","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"     * description and due date","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"        return \"[D]\" + super.toString() + \" (\" + this.dueDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")) + \u0027)\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"                + \"\\nPriority: \" + getPriority();","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"     * Returns the string representation of the deadline object to be stored in the data.txt file","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"     * @return the string representation with dividers of the deadline object to be stored in the data.txt file","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"    public String toStorageData() {","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"        String completionStatus \u003d this.getStatusIcon();","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"        String dueDateString \u003d this.dueDate.format(dateFormatter);","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"        return TASK_TYPE + DIVIDER + completionStatus + DIVIDER + getPriority() + DIVIDER + super.description +","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"                DIVIDER + dueDateString;","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":46}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"    private void flip() {","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"        db.dialog.getStyleClass().add(\"user-dialog\");","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"        return db;","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"bryanongjx"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"bryanongjx"},"content":"        db.dialog.getStyleClass().add(\"duke-dialog\");","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"bryanongjx"},"content":"        db.flip();","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"bryanongjx"},"content":"        return db;","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"bryanongjx":64}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":" * Duke class","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke{","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"     * Constructor for duke","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"     * @param filePath file path of existing txt file with tasks stored inside","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"            try {","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"                response \u003d Parser.parse(input, tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"                response \u003d e.getMessage();","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"            try {","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"                response \u003d Parser.parse(input, tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"                storage.save(tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"                response \u003d e.getMessage();","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"        return response;","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":47,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":" * DukeException class thrown by Duke application","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"     * Constructor for instantiating a DukeException object","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"     * @param message error message to be displayed","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"        super(message);","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"     * Returns error message","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"     * @return String error message","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"        return super.getMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":24}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":" * Event class","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    private static final String TASK_TYPE \u003d \"[E]\";","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"    private String from;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"    private String to;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"     * constructor for an instantiating an event object","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"     * @param description description of the event","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"     * @param from start time of the event","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"     * @param to end time of the event","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"     * Returns the string representation of the event object","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"     * @return String string representation of the event object, which includes task type, completion status, from date","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"     * and to date","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"        return TASK_TYPE + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\"","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"                + \"\\nPriority: \" + getPriority();","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"     * Returns the string representation of the event object to be stored into the data.txt file","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"     * @return String string representation with dividers to be stored in the data.txt file","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"    public String toStorageData() {","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"        return TASK_TYPE + DIVIDER + this.getStatusIcon() + DIVIDER + getPriority() + DIVIDER + super.description","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"                + DIVIDER + this.from + DIVIDER + this.to;","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":43}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"public class Launcher {","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"bryanongjx":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"    private Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"            stage.setResizable(false);","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"            stage.show();","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"bryanongjx":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/otis.png\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/jesse.png\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"                DialogBox.getDukeDialog(ui.greet(), dukeImage)","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"        );","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"        );","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"bryanongjx"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1.5));","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"bryanongjx"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"bryanongjx"},"content":"            delay.play();","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"bryanongjx":64}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":" * Parser class","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"public class Parser {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"     * Parses the user\u0027s input and executes the corresponding actions","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"     * @param userInput user\u0027s input","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"     * @param lst user\u0027s task list","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"     * @return String response from parse","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"    public static String parse(String userInput, TaskList lst) throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"            return ui.exit();","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"            return ui.listCommandMessage() + lst.getTaskList();","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"            return lst.markTask(userInput);","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"            return lst.unmarkTask(userInput);","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"        } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"            return lst.addToDo(userInput);","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"            return lst.addDeadline(userInput);","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"            return lst.addEvent(userInput);","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"            return lst.deleteTask(userInput);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"            return lst.findTask(userInput);","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"        } else if (userInput.startsWith(\"priority\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"            return lst.markPriority(userInput);","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"bryanongjx":42}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import java.io.File;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":" * Storage class","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"public class Storage {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"    String filePath;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"    ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"     * Constructor for instantiating a Storage object","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"     * @param filePath path of file to save the storage in","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"    private Task createTask(String data) throws DukeException{","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"        String[] dataArr \u003d data.split(Task.DIVIDER);","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"        String taskType \u003d dataArr[0];","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"        String completionStatus \u003d dataArr[1];","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"        String priority \u003d dataArr[2];","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"        String description \u003d dataArr[3];","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"        Task task;","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"            case \"[T]\":","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"            case \"[D]\":","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"                String dueDateString \u003d dataArr[4];","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"                DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"                LocalDate dueDate \u003d LocalDate.parse(dueDateString, dateFormatter);","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"                task \u003d new Deadline(description, dueDate);","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"            case \"[E]\":","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"                String from \u003d dataArr[4];","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"                String to \u003d dataArr[5];","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"                task \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"            default:","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"                throw new DukeException(\"Unknown task type found in data.txt file\");","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"        if (completionStatus.equals(\"X\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"            task.mark();","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"        task.assignPriority(priority);","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"bryanongjx"},"content":"        return task;","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"bryanongjx"},"content":"    private void createFile() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"bryanongjx"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"bryanongjx"},"content":"            File data \u003d new File(\"./data\");","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"bryanongjx"},"content":"            File f_new \u003d new File(filePath);","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"bryanongjx"},"content":"            data.mkdir();","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"bryanongjx"},"content":"            f_new.createNewFile();","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"bryanongjx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"bryanongjx"},"content":"            throw new DukeException(\"Error creating file\");","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"bryanongjx"},"content":"     * Loads the file at the specified file path into the storage object","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"bryanongjx"},"content":"     * @return ArrayList an arraylist of tasks loaded from the file","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"bryanongjx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"bryanongjx"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"bryanongjx"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"bryanongjx"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"bryanongjx"},"content":"            try {","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"bryanongjx"},"content":"                Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"bryanongjx"},"content":"                while (sc.hasNext()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"bryanongjx"},"content":"                    String data \u003d sc.nextLine();","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"bryanongjx"},"content":"                    System.out.println(data);","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"bryanongjx"},"content":"                    Task taskToAdd \u003d createTask(data);","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"bryanongjx"},"content":"                    loadedTasks.add(taskToAdd);","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"bryanongjx"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"bryanongjx"},"content":"                sc.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"bryanongjx"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"bryanongjx"},"content":"                System.out.println(\"File could not be found\");","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"bryanongjx"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"bryanongjx"},"content":"        } else {","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"bryanongjx"},"content":"            createFile();","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"bryanongjx"},"content":"        return this.loadedTasks;","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"bryanongjx"},"content":"     * Takes the input task list and updates the task list in the storage","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"bryanongjx"},"content":"     * @param tasks updated task list","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"bryanongjx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"bryanongjx"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"bryanongjx"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"bryanongjx"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"bryanongjx"},"content":"            f.createNewFile();","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"bryanongjx"},"content":"            FileWriter fw \u003d new FileWriter(filePath, false);","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"bryanongjx"},"content":"            fw.write(tasks.toStorageData());","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"bryanongjx"},"content":"            fw.close();","lastModifiedDate":"2023-02-13"},{"lineNumber":111,"author":{"gitId":"bryanongjx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"bryanongjx"},"content":"            System.out.println(\"error writing into file\");","lastModifiedDate":"2023-02-13"},{"lineNumber":113,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":114,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":115,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"bryanongjx":115}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":" * Task class","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"public class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    protected static final String DIVIDER \u003d \"/!@#\u0026/\";","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"    protected String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"    private String priority \u003d \" \";","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"     * Constructor for instantiating a Task object","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"     * @param description description of the task","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"     * Returns the completion status of the task","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"     * @return String completion status","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"        return (isDone ? \"X\": \" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"     * Returns the description of the task","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"     * @return String description","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"        return this.description;","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"     * Returns the priority of the task","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"     * @return String priority","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"    public String getPriority() {","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"        return this.priority;","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"    public void assignPriority(String priority) {","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"            if (priority.equals(\"low\") || priority.equals(\"medium\") || priority.equals(\"high\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"                this.priority \u003d priority;","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"            } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"                throw new DukeException(\"Please input a valid priority: low / medium / high\");","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"            e.getMessage();","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"bryanongjx"},"content":"     * Marks the task as done","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"bryanongjx"},"content":"    public void mark() {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"bryanongjx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"bryanongjx"},"content":"     * Marks the task as not done","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"bryanongjx"},"content":"    public void unMark() {","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"bryanongjx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"bryanongjx"},"content":"     * Returns the string representation of a Task","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"bryanongjx"},"content":"     * @return String string representation of a task, which includes completion status and description","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"bryanongjx"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"bryanongjx"},"content":"     * Returns string representation of a task to be stored in the data.txt file","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"bryanongjx"},"content":"     * @return String string representation of a task to be stored in the data.txt file","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"bryanongjx"},"content":"    public String toStorageData() {","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"bryanongjx"},"content":"        return this.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":88}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":" * Task List class","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"public class TaskList {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"     * Constructor for instantiating a task list","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"     * @param tasks array of tasks to be added to the task list","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"            this.tasks.add(t);","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"     * Constructor for instantiating an empty task list","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"     * @param input input command to add a To Do","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"     * @return new task list after adding the To Do","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"    public String addToDo(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"        String details \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"            if (details.equals(\"\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"            Todo newTodo \u003d new Todo(details);","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"            tasks.add(newTodo);","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"            response \u003d \"Got it. I\u0027ve added this task:\" + \u0027\\n\u0027 + newTodo + \u0027\\n\u0027 + \"Now you have \"","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"                    + tasks.size() + \" tasks in the list\";","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"        return response;","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"     * @param input input command to add a deadline","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"     * @return new task list after adding the deadline","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"    public String addDeadline(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"bryanongjx"},"content":"        String details \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"bryanongjx"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"bryanongjx"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"bryanongjx"},"content":"            String[] detailsAndDate \u003d details.split(\" /by \");","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"bryanongjx"},"content":"            String description \u003d detailsAndDate[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"bryanongjx"},"content":"            LocalDate date \u003d LocalDate.parse(detailsAndDate[1]);","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"bryanongjx"},"content":"            Deadline newDeadline \u003d new Deadline(description, date);","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"bryanongjx"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"bryanongjx"},"content":"            response \u003d \"Got it. I\u0027ve added this task:\" + \u0027\\n\u0027 + newDeadline + \u0027\\n\u0027 + \"Now you have \"","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"bryanongjx"},"content":"                    + tasks.size() + \" tasks in the list\";","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"bryanongjx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"bryanongjx"},"content":"            response \u003d \"Please input date in YYYY-MM-DD format!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"bryanongjx"},"content":"        return response;","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"bryanongjx"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"bryanongjx"},"content":"     * @param input input command to add an event","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"bryanongjx"},"content":"     * @return new task list after adding the event","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"bryanongjx"},"content":"    public String addEvent(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"bryanongjx"},"content":"        String details \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"bryanongjx"},"content":"        String response;","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"bryanongjx"},"content":"        String[] detailsAndTime \u003d details.split(\" /from \");","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"bryanongjx"},"content":"        String description \u003d detailsAndTime[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"bryanongjx"},"content":"        String[] time \u003d detailsAndTime[1].split(\" /to \");","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"bryanongjx"},"content":"        String to \u003d time[0];","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"bryanongjx"},"content":"        String from \u003d time[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"bryanongjx"},"content":"        Event newEvent \u003d new Event(description, to, from);","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"bryanongjx"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"bryanongjx"},"content":"        response \u003d \"Got it. I\u0027ve added this task:\" + \u0027\\n\u0027 + newEvent + \u0027\\n\u0027 + \"Now you have \"","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"bryanongjx"},"content":"                + tasks.size() + \" tasks in the list\";","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"bryanongjx"},"content":"        return response;","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"bryanongjx"},"content":"     * Returns a string representation of the task list","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"bryanongjx"},"content":"     * @return String string representation of the task list","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"bryanongjx"},"content":"    public String getTaskList() {","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"bryanongjx"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"bryanongjx"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"bryanongjx"},"content":"            return \"You have no tasks as of now. Try adding some!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"bryanongjx"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i ++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"bryanongjx"},"content":"            res +\u003d Integer.toString(i + 1) + \". \";","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"bryanongjx"},"content":"            res +\u003d tasks.get(i).toString();","lastModifiedDate":"2023-02-15"},{"lineNumber":107,"author":{"gitId":"bryanongjx"},"content":"            res +\u003d \u0027\\n\u0027;","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"bryanongjx"},"content":"        assert !res.isEmpty() : \"Tasklist should not be empty!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":110,"author":{"gitId":"bryanongjx"},"content":"        return res;","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"bryanongjx"},"content":"     * Marks a specific task as done","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"bryanongjx"},"content":"     * @param input input command to mark task","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"bryanongjx"},"content":"     * @return task list after marking the task","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":118,"author":{"gitId":"bryanongjx"},"content":"    public String markTask(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"bryanongjx"},"content":"        String details \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"bryanongjx"},"content":"        int index \u003d Integer.parseInt(details);","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"bryanongjx"},"content":"        Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":122,"author":{"gitId":"bryanongjx"},"content":"        currTask.mark();","lastModifiedDate":"2023-02-13"},{"lineNumber":123,"author":{"gitId":"bryanongjx"},"content":"        return \"Nice! I\u0027ve marked this task as done\" + \u0027\\n\u0027 + currTask;","lastModifiedDate":"2023-02-15"},{"lineNumber":124,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":125,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":127,"author":{"gitId":"bryanongjx"},"content":"     * Marks a specific task as not done","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"bryanongjx"},"content":"     * @param input input command to mark task","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"bryanongjx"},"content":"     * @return task list after un-marking the task","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":131,"author":{"gitId":"bryanongjx"},"content":"    public String unmarkTask(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"bryanongjx"},"content":"        String details \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"bryanongjx"},"content":"        int index \u003d Integer.parseInt(details);","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"bryanongjx"},"content":"        Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":135,"author":{"gitId":"bryanongjx"},"content":"        currTask.unMark();","lastModifiedDate":"2023-02-13"},{"lineNumber":136,"author":{"gitId":"bryanongjx"},"content":"        return \"Nice! I\u0027ve marked this task as not done yet\" + \u0027\\n\u0027 + currTask;","lastModifiedDate":"2023-02-15"},{"lineNumber":137,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":138,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":139,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":140,"author":{"gitId":"bryanongjx"},"content":"     * Deletes a task from the task list","lastModifiedDate":"2023-02-14"},{"lineNumber":141,"author":{"gitId":"bryanongjx"},"content":"     * @param input input command to delete task","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"bryanongjx"},"content":"     * @return String task list after deletion","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":144,"author":{"gitId":"bryanongjx"},"content":"    public String deleteTask(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"bryanongjx"},"content":"        String details \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"bryanongjx"},"content":"        int index \u003d Integer.parseInt(details);","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"bryanongjx"},"content":"        Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":148,"author":{"gitId":"bryanongjx"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":149,"author":{"gitId":"bryanongjx"},"content":"        return \"Noted. I\u0027ve removed this task:\" + \u0027\\n\u0027 + currTask  + \u0027\\n\u0027 + \"Now you have \" + tasks.size() + \" tasks in the list\";","lastModifiedDate":"2023-02-15"},{"lineNumber":150,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":151,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":152,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":153,"author":{"gitId":"bryanongjx"},"content":"     * Returns the size of the task list","lastModifiedDate":"2023-02-17"},{"lineNumber":154,"author":{"gitId":"bryanongjx"},"content":"     * @return Integer size of task list","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":156,"author":{"gitId":"bryanongjx"},"content":"    public int getSize() {","lastModifiedDate":"2023-02-15"},{"lineNumber":157,"author":{"gitId":"bryanongjx"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-02-15"},{"lineNumber":158,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":159,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":160,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":161,"author":{"gitId":"bryanongjx"},"content":"     * Returns a task list filtered by a keyword","lastModifiedDate":"2023-02-17"},{"lineNumber":162,"author":{"gitId":"bryanongjx"},"content":"     * @param input input command to find a specific task with a keyword","lastModifiedDate":"2023-02-17"},{"lineNumber":163,"author":{"gitId":"bryanongjx"},"content":"     * @return String filtered task list","lastModifiedDate":"2023-02-17"},{"lineNumber":164,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":165,"author":{"gitId":"bryanongjx"},"content":"    public String findTask(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":166,"author":{"gitId":"bryanongjx"},"content":"        String keyword \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":167,"author":{"gitId":"bryanongjx"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":168,"author":{"gitId":"bryanongjx"},"content":"            ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-14"},{"lineNumber":169,"author":{"gitId":"bryanongjx"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-02-14"},{"lineNumber":170,"author":{"gitId":"bryanongjx"},"content":"                if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-02-14"},{"lineNumber":171,"author":{"gitId":"bryanongjx"},"content":"                    res.add(task);","lastModifiedDate":"2023-02-14"},{"lineNumber":172,"author":{"gitId":"bryanongjx"},"content":"                }","lastModifiedDate":"2023-02-14"},{"lineNumber":173,"author":{"gitId":"bryanongjx"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":174,"author":{"gitId":"bryanongjx"},"content":"            if (res.isEmpty()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":175,"author":{"gitId":"bryanongjx"},"content":"                return \"There are no matching tasks with the keyword: \" + keyword;","lastModifiedDate":"2023-02-15"},{"lineNumber":176,"author":{"gitId":"bryanongjx"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":177,"author":{"gitId":"bryanongjx"},"content":"            TaskList result \u003d new TaskList(res);","lastModifiedDate":"2023-02-14"},{"lineNumber":178,"author":{"gitId":"bryanongjx"},"content":"            assert !(result.getSize() \u003d\u003d 0);","lastModifiedDate":"2023-02-15"},{"lineNumber":179,"author":{"gitId":"bryanongjx"},"content":"            return \"Here are the matching tasks in your list:\\n\" + result.getTaskList();","lastModifiedDate":"2023-02-15"},{"lineNumber":180,"author":{"gitId":"bryanongjx"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":181,"author":{"gitId":"bryanongjx"},"content":"            return \"Please input the keyword\";","lastModifiedDate":"2023-02-17"},{"lineNumber":182,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":183,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":184,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":185,"author":{"gitId":"bryanongjx"},"content":"    public String markPriority(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":186,"author":{"gitId":"bryanongjx"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":187,"author":{"gitId":"bryanongjx"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":188,"author":{"gitId":"bryanongjx"},"content":"            String inputArr[] \u003d input.split(\" \", 3);","lastModifiedDate":"2023-02-17"},{"lineNumber":189,"author":{"gitId":"bryanongjx"},"content":"            String taskNum \u003d inputArr[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":190,"author":{"gitId":"bryanongjx"},"content":"            String priority \u003d inputArr[2];","lastModifiedDate":"2023-02-17"},{"lineNumber":191,"author":{"gitId":"bryanongjx"},"content":"            int index \u003d Integer.parseInt(taskNum);","lastModifiedDate":"2023-02-17"},{"lineNumber":192,"author":{"gitId":"bryanongjx"},"content":"            Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":193,"author":{"gitId":"bryanongjx"},"content":"            currTask.assignPriority(priority);","lastModifiedDate":"2023-02-17"},{"lineNumber":194,"author":{"gitId":"bryanongjx"},"content":"            response \u003d \"Nice! I have assigned this task:\\n\" + currTask + \"\\nas \" + priority + \" priority\";","lastModifiedDate":"2023-02-17"},{"lineNumber":195,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":196,"author":{"gitId":"bryanongjx"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":197,"author":{"gitId":"bryanongjx"},"content":"            response \u003d \"Please input a valid index\";","lastModifiedDate":"2023-02-17"},{"lineNumber":198,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":199,"author":{"gitId":"bryanongjx"},"content":"        return response;","lastModifiedDate":"2023-02-17"},{"lineNumber":200,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":201,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":202,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":203,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":204,"author":{"gitId":"bryanongjx"},"content":"     * Converts task list to storage data","lastModifiedDate":"2023-02-17"},{"lineNumber":205,"author":{"gitId":"bryanongjx"},"content":"     * @return String task list in storage data format with dividers","lastModifiedDate":"2023-02-17"},{"lineNumber":206,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":207,"author":{"gitId":"bryanongjx"},"content":"    public String toStorageData() {","lastModifiedDate":"2023-02-16"},{"lineNumber":208,"author":{"gitId":"bryanongjx"},"content":"        String storageData \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":209,"author":{"gitId":"bryanongjx"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":210,"author":{"gitId":"bryanongjx"},"content":"            storageData +\u003d task.toStorageData();","lastModifiedDate":"2023-02-16"},{"lineNumber":211,"author":{"gitId":"bryanongjx"},"content":"            storageData +\u003d \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":212,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":213,"author":{"gitId":"bryanongjx"},"content":"        return storageData;","lastModifiedDate":"2023-02-16"},{"lineNumber":214,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":215,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"bryanongjx":215}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":" * To do class","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"    private static final String TASK_TYPE \u003d \"[T]\";","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"     * Constructor for instantiating a to do object","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"     * @param description description of the to do","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"     * Returns the string representation of the to do object","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"     * @return String string representation of the to do object, which includes task type, completion status and","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"     * description","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"        return \"[T]\" + super.toString() + \"\\nPriority: \" + getPriority();","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"     * Returns the string representation of the to do object to be stored in the data.txt file","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"     * @return string representation with dividers of to do object to be stored in the data.txt file","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"    public String toStorageData() {","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"        String completionStatus \u003d this.getStatusIcon();","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"        return TASK_TYPE + DIVIDER + completionStatus + DIVIDER + getPriority() + DIVIDER + super.description;","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"bryanongjx":37}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":" * Ui class","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"public class Ui {","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"     * Displays a greeting to the user when he first opens the application","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"    public String greet() {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"        return \"Hello! I\u0027m Duke\" + \"\\n\" + \"What can I do for you?\";","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"     * Displays a goodbye message to the user when he closes the application","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"    public String exit() {","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"     * Displays an error in loading the file","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"        System.out.println(\"There was an error in loading your file\");","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"    public String listCommandMessage() {","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"        return \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"bryanongjx":32}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"        \u003cLabel fx:id\u003d\"dialog\" stylesheets\u003d\"@../stylesheet/dialogBoxStyle.css\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight \u003d \"-Infinity\"/\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"bryanongjx":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" pannable\u003d\"true\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"bryanongjx":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"    public void TestAdditionOfDeadlineToTaskList() {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"        tasks.addDeadline(\"deadline test deadline /by 2023-01-02\");","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"        assertEquals(\"1. [D][ ] test deadline (02/01/2023)\\n\", tasks.getTaskList());","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"bryanongjx":13}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"public class EventTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"    public void TestAdditionOfEventToTaskList() {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"        tasks.addEvent(\"event test event /from 2pm /to 6pm\");","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"        assertEquals(\"1. [E][ ] test event (from: 2pm to: 6pm)\\n\", tasks.getTaskList());","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"bryanongjx":14}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"    public void TestAdditionOfToDoToTaskList() {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"        tasks.addToDo(\"todo test todo\");","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"        assertEquals(\"1. [T][ ] test todo\\n\", tasks.getTaskList());","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"bryanongjx":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"todo borrow book","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"mark 1","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"bryanongjx":5}}]
