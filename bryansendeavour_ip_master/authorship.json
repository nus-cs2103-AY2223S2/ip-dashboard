[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"# duke project template","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bryansendeavour":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    mainClassName \u003d \"duke.MainLauncher\"","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bryansendeavour":16,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"### Adding task","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"The product allows for the addition of 3 different types of tasks :","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"- Todo","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"- Event","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"- Deadline","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"### Deleting task","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"Deletion of specific tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"### Searching of task","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"Searching for a task through a keyword.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"### Marking and Unmarking task","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"Mark or Unmark a task.","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"### Display list of tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"The whole list of tasks both done and undone will be displayed.","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"### Undo task","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"Undo your previous action. Actions that are able to be undo :","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"1. `todo`","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"2. `event`","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"3. `deadline`","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"4. `mark`","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"5. `unmark`","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"6. `delete`","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"### `todo` - Adding todo","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"Adds a todo task to your list.","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"`todo homework`","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"Successful addition will result in this feedback by Tiger","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"Aite letsgetit you added:","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"  [T][ ] homework","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"currently you have 1 tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"### `event` - Adding event","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"Adds an event task to your list","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"`event movie /from 18/02/23 1200 / to 18/02/23 1400`","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"Successful addition will result in this feedback by Tiger","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"Aite letsgetit you added:","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"  [E][ ] movie |from: 18 Feb 2023, 12:00 |to: 18 Feb 2023, 14:00|","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"currently you have 1 tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   ","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"### `deadline` - Adding deadline","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"Adds a deadline task to your list","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"`deadline project /by 20/02/23 2359`","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"Successful addition will result in this feedback by Tiger","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"Aite letsgetit you added:","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"  [D][ ] project |by: 20 Feb 2023, 23:59|","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"currently you have 1 tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  ","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"### `delete` - Deleting task","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"Deletes a certain task following task list serial number.","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"`delete 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"Successful delete will result in this feedback by Tiger","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"Alright, deleted task:","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":" [T][ ] read book","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":" ","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"3 tasks left!","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"bryansendeavour"},"content":"### `mark` - Marking task","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"bryansendeavour"},"content":"Marks a certain task following task list serial number","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"bryansendeavour"},"content":"`mark 2`","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"bryansendeavour"},"content":"Successful mark will result in this feedback by Tiger","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"bryansendeavour"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"bryansendeavour"},"content":"Congrats this has been done:","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"bryansendeavour"},"content":" [T][X] pick flowers","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"bryansendeavour"},"content":" ","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"bryansendeavour"},"content":"Leskooo!","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"bryansendeavour"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"bryansendeavour"},"content":"### `unmark` - Unmarking task","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"bryansendeavour"},"content":"Unmarks a certain task following task list serial number","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"bryansendeavour"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"bryansendeavour"},"content":"`unmark 2`","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"bryansendeavour"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"bryansendeavour"},"content":"Successful unmark will result in this feedback by Tiger","lastModifiedDate":"2023-02-18"},{"lineNumber":148,"author":{"gitId":"bryansendeavour"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"bryansendeavour"},"content":"Alright, new task:","lastModifiedDate":"2023-02-18"},{"lineNumber":151,"author":{"gitId":"bryansendeavour"},"content":" [T][ ] pick flowers","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"bryansendeavour"},"content":" ","lastModifiedDate":"2023-02-18"},{"lineNumber":153,"author":{"gitId":"bryansendeavour"},"content":"We can do dis!","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"bryansendeavour"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"bryansendeavour"},"content":"### `find` - Search task","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":159,"author":{"gitId":"bryansendeavour"},"content":"Search for task with the specified keyword given","lastModifiedDate":"2023-02-18"},{"lineNumber":160,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":161,"author":{"gitId":"bryansendeavour"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":163,"author":{"gitId":"bryansendeavour"},"content":"`find read`","lastModifiedDate":"2023-02-18"},{"lineNumber":164,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":165,"author":{"gitId":"bryansendeavour"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":166,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":167,"author":{"gitId":"bryansendeavour"},"content":"Successful find will result in this feedback by Tiger","lastModifiedDate":"2023-02-18"},{"lineNumber":168,"author":{"gitId":"bryansendeavour"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":169,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ","lastModifiedDate":"2023-02-18"},{"lineNumber":170,"author":{"gitId":"bryansendeavour"},"content":"Aye this is what i found according to your keyword:","lastModifiedDate":"2023-02-18"},{"lineNumber":171,"author":{"gitId":"bryansendeavour"},"content":"1. [T][ ] read","lastModifiedDate":"2023-02-18"},{"lineNumber":172,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-02-18"},{"lineNumber":173,"author":{"gitId":"bryansendeavour"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":174,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":175,"author":{"gitId":"bryansendeavour"},"content":"### `list` - List task","lastModifiedDate":"2023-02-18"},{"lineNumber":176,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":177,"author":{"gitId":"bryansendeavour"},"content":"Lists the whole list of tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":178,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":179,"author":{"gitId":"bryansendeavour"},"content":"Example of usage: ","lastModifiedDate":"2023-02-18"},{"lineNumber":180,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":181,"author":{"gitId":"bryansendeavour"},"content":"`list`","lastModifiedDate":"2023-02-18"},{"lineNumber":182,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":183,"author":{"gitId":"bryansendeavour"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":184,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":185,"author":{"gitId":"bryansendeavour"},"content":"Successful list will result in this feedback by Tiger","lastModifiedDate":"2023-02-18"},{"lineNumber":186,"author":{"gitId":"bryansendeavour"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":187,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-02-18"},{"lineNumber":188,"author":{"gitId":"bryansendeavour"},"content":"Hurry up and finish these tasks:","lastModifiedDate":"2023-02-18"},{"lineNumber":189,"author":{"gitId":"bryansendeavour"},"content":"1.  [T][ ] homework","lastModifiedDate":"2023-02-18"},{"lineNumber":190,"author":{"gitId":"bryansendeavour"},"content":"2.  [E][ ] movie |from: 18 Feb 2023, 12:00 |to: 18 Feb 2023, 14:00|","lastModifiedDate":"2023-02-18"},{"lineNumber":191,"author":{"gitId":"bryansendeavour"},"content":"3.  [D][ ] project |by: 20 Feb 2023, 23:59|","lastModifiedDate":"2023-02-18"},{"lineNumber":192,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-02-18"},{"lineNumber":193,"author":{"gitId":"bryansendeavour"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":194,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":195,"author":{"gitId":"bryansendeavour"},"content":"### `undo` - Undo previous action","lastModifiedDate":"2023-02-18"},{"lineNumber":196,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":197,"author":{"gitId":"bryansendeavour"},"content":"Undo the previous action done","lastModifiedDate":"2023-02-18"},{"lineNumber":198,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":199,"author":{"gitId":"bryansendeavour"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":200,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":201,"author":{"gitId":"bryansendeavour"},"content":"`undo`","lastModifiedDate":"2023-02-18"},{"lineNumber":202,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":203,"author":{"gitId":"bryansendeavour"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":205,"author":{"gitId":"bryansendeavour"},"content":"Successful undo will result in this feedback by Tiger","lastModifiedDate":"2023-02-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":207,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-02-18"},{"lineNumber":208,"author":{"gitId":"bryansendeavour"},"content":"Undone!","lastModifiedDate":"2023-02-18"},{"lineNumber":209,"author":{"gitId":"bryansendeavour"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2023-02-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"bryansendeavour":181,"-":29}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":" * This class will carry the implementation of the Deadline Command","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":" * Takes in the command line command,parses as well as executing it.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":" * @author Bryan Ong","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"public class DeadlineCommand {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    private String[] inputs;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    private static StringBuilder strBuild \u003d new StringBuilder();","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    public DeadlineCommand(String[] inputs) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"        this.inputs \u003d inputs;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"     * This method is used to create the Deadline command.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"     * Parsing as well as creation of Deadline object is done here.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    public String create() throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        assert inputs[0].equalsIgnoreCase(\"DEADLINE\") : \"Contact developer on Deadline bug\";","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"            throw new DukeException(Ui.printMissingName());","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"            boolean isName \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"            String name \u003d \" \", end \u003d \" \";","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"            for (int i \u003d 1; i \u003c inputs.length; i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"                if (isName) {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"                    if (!inputs[i + 1].equalsIgnoreCase(\"/by\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"                        strBuild.append(inputs[i]);","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"                        strBuild.append(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"                    } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"                        strBuild.append(inputs[i]);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"                        name \u003d strBuild.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"                        strBuild.setLength(0);","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"                        isName \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"                        i++;","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"                } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"                    strBuild.append(inputs[i]);","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"                    if (i + 1 !\u003d inputs.length) {","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"                        strBuild.append(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"            end \u003d strBuild.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"            strBuild.setLength(0);","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"            Deadline d \u003d new Deadline(name, end, false);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"            UndoCommand.deadline(d);","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"            TaskList.addToList(d);","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"            return Ui.printDefault(d);","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"bryansendeavour":63}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import duke.MainWindow;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":" * This class will carry the implementation of the Delete Command","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":" * Takes in the command line command,parses as well as executing it","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":" * @author Bryan Ong","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"public class DeleteCommand {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    private int number;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    private MainWindow mw \u003d new MainWindow();","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    public DeleteCommand(String number) {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"        this.number \u003d Integer.parseInt(number) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"     * This method is used to delete a certain task from TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    public String delete() throws DukeException{","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"            Task curr \u003d TaskList.get(number);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"            UndoCommand.delete(curr, number);","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"            curr.minus();","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"            TaskList.remove(number);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"            return Ui.printDelete(curr);","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        } catch (Exception m){","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"            throw new DukeException(Ui.printWrongNumber());","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"bryansendeavour":38}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":" * This class will carry the implementation of the Event Command","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":" * Takes in the command line command,parses as well as executing it.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":" * @author Bryan Ong","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"public class EventCommand {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    private String[] inputs;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    private static StringBuilder strBuild \u003d new StringBuilder();","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    public EventCommand(String[] inputs) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"        this.inputs \u003d inputs;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"     * This method is used to create the Event command.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"     * Parsing as well as creation of Event object is done here.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    public String create() throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        assert inputs[0].equalsIgnoreCase(\"EVENT\") : \"Contact developer on Event bug\";","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"            throw new DukeException(Ui.printMissingName());","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"            boolean isName \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"            boolean isStart \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"            boolean isEnd \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"            String name \u003d \" \", start \u003d \" \", end \u003d \" \";","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"            for (int i \u003d 1; i \u003c inputs.length; i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"                if (isName) {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"                    if (!inputs[i + 1].equalsIgnoreCase(\"/from\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"                        strBuild.append(inputs[i]);","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"                        strBuild.append(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"                    } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"                        isStart \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"                        strBuild.append(inputs[i]);","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"                        name \u003d strBuild.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"                        strBuild.setLength(0);","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"                        isName \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"                        i++;","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"                } else if (isStart) {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"                    if (!inputs[i + 1].equalsIgnoreCase(\"/to\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"                        strBuild.append(inputs[i]);","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"                        strBuild.append(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"                    } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"                        isEnd \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"                        strBuild.append(inputs[i]);","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"                        start \u003d strBuild.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"                        strBuild.setLength(0);","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"                        isStart \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"                        i++;","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"                } else if (isEnd) {","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"                    strBuild.append(inputs[i]);","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"                    if (i + 1 !\u003d inputs.length) {","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"                        strBuild.append(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"            end \u003d strBuild.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"            strBuild.setLength(0);","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"            Event event \u003d new Event(name, start, end, false);","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"            UndoCommand.event(event);","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"            TaskList.addToList(event);","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"            return Ui.printDefault(event);","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"bryansendeavour":78}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import duke.MainWindow;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":" * This class will carry the implementation of find command.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":" * Takes in command line command, parses it as well as finding.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"public class FindCommand {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"    private String[] inputs;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    private MainWindow mw;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    private static StringBuilder strBuild \u003d new StringBuilder();","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    public FindCommand(String[] inputs) {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"        this.inputs \u003d inputs;","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"     * This method invokes the find function to search","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"     * the keyword in tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    public String find() throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        assert inputs[0].equalsIgnoreCase(\"FIND\") : \"Contact developer on Find bug\";","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        String keyword \u003d \"\";","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        if (inputs.length !\u003d 2) {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"            throw new DukeException(Ui.printEnterKeyword());","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"            keyword \u003d inputs[1];","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"            UndoCommand.find();","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        return TaskList.search(keyword);","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"bryansendeavour":39}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import duke.MainWindow;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":" * This class will carry the implementation of the Mark Command","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":" * Takes in the command line command,parses as well as executing it.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":" * @author Bryan Ong","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"public class MarkCommand {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    private int number;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    private MainWindow mw \u003d new MainWindow();","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    public MarkCommand(String number) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"        this.number \u003d Integer.parseInt(number) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"     * This method is used to mark a certain task.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    public String mark() throws DukeException{","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"            Task curr \u003d TaskList.get(number);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"            UndoCommand.mark(number);","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"            curr.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"            return Ui.printMark(curr);","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        } catch (Exception m){","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"            throw new DukeException(Ui.printWrongNumber());","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"bryansendeavour":38}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import duke.MainWindow;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import task.Todo;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":" * This class will carry the implementation of the Todo Command","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":" * Takes in the command line command,parses as well as executing it.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":" * @author Bryan Ong","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"public class TodoCommand {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    private String[] inputs;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    private MainWindow mw \u003d new MainWindow();","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    private static StringBuilder strBuild \u003d new StringBuilder();","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    public TodoCommand(String[] inputs) {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        this.inputs \u003d inputs;","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"     * This method is used to create the Todo command.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"     * Parsing as well as creation of Todo object is done here.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    public String create() throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        assert inputs[0].equalsIgnoreCase(\"TODO\") : \"Contact developer on Todo bug\";","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"            throw new DukeException(Ui.printMissingName());","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"            for (int i \u003d 1; i \u003c inputs.length; i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"                strBuild.append(inputs[i]);","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"                if (i + 1 !\u003d inputs.length) {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"                    strBuild.append(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"            Todo t \u003d new Todo(strBuild.toString(), false);","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"            strBuild.setLength(0);","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"            UndoCommand.todo(t);","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"            TaskList.addToList(t);","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"            return Ui.printDefault(t);","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"bryansendeavour":51}},{"path":"src/main/java/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import duke.MainWindow;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":" * This class will carry the implementation of the Unmark Command","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":" * Takes in the command line command,parses as well as executing it.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":" * @author Bryan Ong","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"public class UnMarkCommand {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    private int number;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    private MainWindow mw \u003d new MainWindow();","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    public UnMarkCommand(String number) {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"        this.number \u003d Integer.parseInt(number) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"     * This method is used to unmark a certain task.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    public String unmark() throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"            Task curr \u003d TaskList.get(number);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"            UndoCommand.unmark(number);","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"            curr.unmark();","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"            return Ui.printUnmark(curr);","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"        } catch (Exception m){","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"            throw new DukeException(Ui.printWrongNumber());","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"bryansendeavour":37}},{"path":"src/main/java/command/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import task.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"public class UndoCommand {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"    private static Task task;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"    private static int number;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"    private static String previousInstruction \u003d \" \";","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"    public UndoCommand(Task task) {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"        UndoCommand.task \u003d task;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    public static void delete(Task task, int number) {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"        UndoCommand.task \u003d task;","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"        UndoCommand.number \u003d number;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"        UndoCommand.previousInstruction \u003d \"DELETE\";","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    public static void mark(int number) {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        UndoCommand.number \u003d number + 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        UndoCommand.previousInstruction \u003d \"MARK\";","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    public static void unmark(int number) {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        UndoCommand.number \u003d number + 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        UndoCommand.previousInstruction \u003d \"UNMARK\";","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    public static void find() {","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        UndoCommand.previousInstruction \u003d \"FIND\";","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    public static void deadline(Task task) {","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"        UndoCommand.task \u003d task;","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        UndoCommand.previousInstruction \u003d \"DEADLINE\";","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"    public static void event(Task task) {","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        UndoCommand.task \u003d task;","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"        UndoCommand.previousInstruction \u003d \"EVENT\";","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    public static void todo(Task task) {","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        UndoCommand.task \u003d task;","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"        UndoCommand.previousInstruction \u003d \"TODO\";","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"    public static void list() {","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"        UndoCommand.previousInstruction \u003d \"LIST\";","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"    public static String undo() throws Exception{","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"        switch (previousInstruction) {","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"            case \"DELETE\" :","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"                TaskList.addToList(task, number);","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"                task.plus();","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"                return Ui.printUndoSuccess();","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"            case \"MARK\" :","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"                new UnMarkCommand(String.valueOf(number)).unmark();","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"                return Ui.printUndoSuccess();","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"            case \"UNMARK\" :","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"                new MarkCommand(String.valueOf(number)).mark();","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"                return Ui.printUndoSuccess();","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"            case \"DEADLINE\" :","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"            case \"EVENT\" :","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"            case \"TODO\" :","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"                TaskList.remove(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"                task.minus();","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"                return Ui.printUndoSuccess();","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"            default :","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"                return Ui.printUndoFail();","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"bryansendeavour":82}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    private void flip() {","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"        db.flip();","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"        return db;","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"bryansendeavour":54}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":" * The Duke program implements an application that","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":" * is able to track the tasks that a user has.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":" * The task is divided into three different categories","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":" * Todo, Event and Deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":" * @author Bryan Ong","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    private final Parser parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    public Duke() {","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    public String getInitMsg() {","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        return storage.initFile();","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    public String getResponse(String input) throws Exception{","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"        return parser.parse(input);","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bryansendeavour":32,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":" * This class handles exceptions","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"    private String msg;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"    public DukeException(String m) {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"        super(m);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"        this.msg \u003d m;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    public String getMsg() {","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"        return msg;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"bryansendeavour":19}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"public class Launcher {","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"bryansendeavour":10}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"            stage.setTitle(\"MyTasks\");","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"            stage.show();","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"bryansendeavour":27}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pooh.jpg\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tiger.jpg\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"                DialogBox.getDukeDialog(d.getInitMsg(), dukeImage)","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"       );","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"    private void handleUserInput() throws Exception{","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"            String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"            );","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"                PauseTransition pause \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"                pause.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"                pause.play();","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"                    DialogBox.getDukeDialog(e.getMsg(), dukeImage)","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"            );","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"bryansendeavour":65}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import command.*;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":" * This class parses the command into an array","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":" * @author Bryan Ong","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"    public String parse(String command) throws Exception{","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"        String[] splitCommand \u003d command.split(\" \");","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"        switch(splitCommand[0].toUpperCase()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"            case \"LIST\":","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"                UndoCommand.list();","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"                return TaskList.printList();","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"            case \"MARK\":","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"                return new MarkCommand(splitCommand[1]).mark();","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"            case \"UNMARK\":","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"                return new UnMarkCommand(splitCommand[1]).unmark();","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"            case \"TODO\":","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"                return new TodoCommand(splitCommand).create();","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"            case \"EVENT\":","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"                return new EventCommand(splitCommand).create();","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"            case \"DEADLINE\":","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"                return new DeadlineCommand(splitCommand).create();","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"            case \"DELETE\":","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"                return new DeleteCommand(splitCommand[1]).delete();","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"            case \"FIND\" :","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"                return new FindCommand(splitCommand).find();","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"            case \"UNDO\" :","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"                return UndoCommand.undo();","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"            case \"BYE\" :","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"                TaskList.writeToFile();","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"                return Ui.printBye();","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"            default:","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"                return Ui.printWrongCommand();","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"bryansendeavour":44}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":" * This class stores the information of the data files.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":" * Checking, Loading and Creation of data files is done here.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":" * @author Bryan Ong","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    static final String DIRPATH \u003d \"./data\";","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    static final String FILEPATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    private static TaskList taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"     * This method initialises the process of checking","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"     * loading and creation of the data file.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"     * The method will try to create the directory and file","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"     * by default, exception will throw if it already exists.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"     * Exception caught will then just load the file into File object","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"     * for future reference.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    public String initFile() {","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"            Files.createDirectory(Paths.get(DIRPATH));","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"            File file \u003d new File(Files.createFile(Paths.get(FILEPATH)).toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"            taskList \u003d new TaskList(file, true);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"            return Ui.printInit();","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"        } catch (IOException m) {","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"                File file \u003d new File(Files.createFile(Paths.get(FILEPATH)).toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"                taskList \u003d new TaskList(file, true);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"                return Ui.printInit();","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"            } catch (IOException n) {","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"                File file \u003d new File(FILEPATH);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"                taskList \u003d new TaskList(file, false);","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"                return Ui.printWelcomeBack();","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"bryansendeavour":50}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":" * This class handles all the printing of the User Interface.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":" * @author Bryan Ong","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"public class Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    private static final String DIVIDER \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    private static TextField userInput;","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"     * This method reads the command entered.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"     * @return String This returns the command line","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    public static String readCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        return userInput.getText();","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"     * This method prints the task information.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"     * @param info to be printed.","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    public static String print(int num, String info) {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        return (num + \". \" + info);","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"     * This method prints the farewell message","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    public static String printBye() {","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        return(DIVIDER + \"Ah..... okkkk nehmind. GO. BYE. :)\\n\" + DIVIDER);","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"     * This method prints the message when a Task has","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"     * been added.","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"     * @param task Task object added.","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    public static String printDefault(Task task) {","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        return (DIVIDER + \"Aite letsgetit you added:\\n\" + task.toString()  +","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"                \"currently you have \" + task.numberTask() + \" tasks\\n\" + DIVIDER);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"     * This method prints the message when a Task has","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"     * been deleted.","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"     * @param task Task object to be deleted.","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"    public static String printDelete(Task task) {","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"        return(DIVIDER + \"Alright, deleted task:\\n\" + task","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"                + \"\\n\" + task.numberTask() + \" tasks left!\\n\" + DIVIDER);","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"     * This method prints the divider for user interface design.","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"    public static String printDivider() {","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"        return(DIVIDER);","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"     * This method prints when user enters more than one word","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"     * when using find function.","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"    public static String printEnterKeyword() {","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"        return(\"Please enter a keyword\");","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"     * This method prints the message for found keywords.","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"    public static String printFind() {","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"        return(DIVIDER + \"Aye this is what i found according to your keyword:\\n\");","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"    public static String printFindNot() {","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"        return(DIVIDER + \"Hey cant find any task with that keyword man.\\n\");","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"     * This method prints the message for first time","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"     * initialization of Duke program.","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"    public static String printInit() {","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"        return(DIVIDER + \"Welcome hooman!\\nCome add some tasks today!\\n\" + DIVIDER);","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"     * This method prints the message for an","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"     * empty list upon list command.","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"    public static String printListEmpty() {","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"        return(DIVIDER + \"List is empty.......\\n\" + DIVIDER);","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"     * This method prints the message for a","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"     * non-empty list upon list command","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"    public static String printListPrompt() {","lastModifiedDate":"2023-02-06"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"        return(DIVIDER + \"Hurry up and finish these tasks:\\n\");","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"bryansendeavour"},"content":"     * This method prints the message upon mark command.","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"bryansendeavour"},"content":"     * @param task Task that has been marked.","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"bryansendeavour"},"content":"    public static String printMark(Task task) {","lastModifiedDate":"2023-02-06"},{"lineNumber":118,"author":{"gitId":"bryansendeavour"},"content":"        return(DIVIDER + \"Congrats this has been done:\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"bryansendeavour"},"content":"            + task + \"\\n Leskooo!\\n\" + DIVIDER);","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"bryansendeavour"},"content":"     * This method prints the error message when","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"bryansendeavour"},"content":"     * Todo command is incomplete.","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"bryansendeavour"},"content":"    public static String printTodoError() {","lastModifiedDate":"2023-02-06"},{"lineNumber":127,"author":{"gitId":"bryansendeavour"},"content":"        return(\"What do u need to do ah? u never write.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":128,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":131,"author":{"gitId":"bryansendeavour"},"content":"     * This method prints the message upon unmark command.","lastModifiedDate":"2023-02-01"},{"lineNumber":132,"author":{"gitId":"bryansendeavour"},"content":"     * @param task Task that has been unmarked.","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"bryansendeavour"},"content":"    public static String printUnmark(Task task) {","lastModifiedDate":"2023-02-06"},{"lineNumber":135,"author":{"gitId":"bryansendeavour"},"content":"        return(DIVIDER + \"Alright, new task:\\n\" + task","lastModifiedDate":"2023-02-06"},{"lineNumber":136,"author":{"gitId":"bryansendeavour"},"content":"                + \"\\nWe can do dis!\\n\" + DIVIDER);","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"bryansendeavour"},"content":"     * This method prints the message to welcome","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"bryansendeavour"},"content":"     * user back to Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"bryansendeavour"},"content":"    public static String printWelcomeBack() {","lastModifiedDate":"2023-02-06"},{"lineNumber":144,"author":{"gitId":"bryansendeavour"},"content":"        String welcome \u003d \"Welcome back hooman!\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"bryansendeavour"},"content":"                \"Wat u want to do today?\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"bryansendeavour"},"content":"        return(DIVIDER + welcome + DIVIDER);","lastModifiedDate":"2023-02-06"},{"lineNumber":147,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"bryansendeavour"},"content":"     * This method prints the error message when","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"bryansendeavour"},"content":"     * user inputs a commmand not recognised","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"bryansendeavour"},"content":"    public static String printWrongCommand() {","lastModifiedDate":"2023-02-06"},{"lineNumber":154,"author":{"gitId":"bryansendeavour"},"content":"        return(DIVIDER + \"I have no idea what is going on, try again?\\n\" + DIVIDER);","lastModifiedDate":"2023-02-06"},{"lineNumber":155,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":158,"author":{"gitId":"bryansendeavour"},"content":"     * This method prints the error message when","lastModifiedDate":"2023-02-01"},{"lineNumber":159,"author":{"gitId":"bryansendeavour"},"content":"     * user inputs a number less than 0 or more than","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"bryansendeavour"},"content":"     * what exists for marking, unmarking and deleting commands.","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":162,"author":{"gitId":"bryansendeavour"},"content":"    public static String printWrongNumber() {","lastModifiedDate":"2023-02-06"},{"lineNumber":163,"author":{"gitId":"bryansendeavour"},"content":"        return(\"Number entered out of range, try again\");","lastModifiedDate":"2023-02-06"},{"lineNumber":164,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":165,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":166,"author":{"gitId":"bryansendeavour"},"content":"    public static String printMissingName() {","lastModifiedDate":"2023-02-06"},{"lineNumber":167,"author":{"gitId":"bryansendeavour"},"content":"        return(\"No name identified, try again\\n\");","lastModifiedDate":"2023-02-06"},{"lineNumber":168,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"bryansendeavour"},"content":"    public static String printUndoSuccess() {","lastModifiedDate":"2023-02-11"},{"lineNumber":171,"author":{"gitId":"bryansendeavour"},"content":"        return(DIVIDER + \"Undone!\\n\" + DIVIDER);","lastModifiedDate":"2023-02-11"},{"lineNumber":172,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":173,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":174,"author":{"gitId":"bryansendeavour"},"content":"    public static String printUndoFail() {","lastModifiedDate":"2023-02-11"},{"lineNumber":175,"author":{"gitId":"bryansendeavour"},"content":"        return(\"There is nothing to undo :)\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":176,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":177,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"bryansendeavour":177}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import java.io.File;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":" * This class handles the storing of","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":" * Deadline Task attributes.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":" * @author Bryan Ong","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    private static StringBuilder strBuild \u003d new StringBuilder();","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    public Deadline(String name, String end, boolean done) {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"        super(name, done);","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"        this.end \u003d LocalDateTime.parse(end,","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"                Task.DATE_TIME_FORMATTER);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"     * This method handles the writing to data file","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"     * @param file File to be written to","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"     * @return String Information of task to be written.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    public String write(File file) {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        return this.toWrite();","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"     * This method handles the creation of the String","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"     * to be printed on user interface.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"     * @return String Message to be printed.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        return \"   [D]\" + super.toString() + \" |by: \"","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"                + end.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM,","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"                FormatStyle.SHORT)) + \"|\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"     * This method handles the creation of the String","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"     * to be written on data file.","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"     * @return String Message to be written.","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"    public String toWrite() {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"        return \"D | \" + super.toWrite() + \" | \" + end.format(Task.DATE_TIME_FORMATTER) + \"\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"bryansendeavour":54}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import java.io.File;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":" * This class handles the storing of","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":" * Event Task attributes.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":" * @author Bryan Ong","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    public Event(String name, String start, String end, boolean done) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"        super(name, done);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"        this.start \u003d LocalDateTime.parse(start,","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"                Task.DATE_TIME_FORMATTER);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"        this.end \u003d LocalDateTime.parse(end,","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"                Task.DATE_TIME_FORMATTER);","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"     * This method handles the writing to data file","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"     * @param file File to be written to","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"     * @return String Information of task to be written.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    public String write(File file) {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"        return this.toWrite();","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"     * This method handles the creation of the String","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"     * to be printed on user interface.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"     * @return String Message to be printed.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"        return \"   [E]\" + super.toString() + \" |from: \"","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"                + start.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM,","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"                FormatStyle.SHORT)) + \" |to: \"","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"                + end.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM,","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"                FormatStyle.SHORT)) + \"|\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"     * This method handles the creation of the String","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"     * to be written on data file.","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"     * @return String Message to be written.","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"    public String toWrite() {","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"        return \"E | \" + super.toWrite() + \" | \"","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"                + start.format(Task.DATE_TIME_FORMATTER) + \" | \"","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"                + end.format(Task.DATE_TIME_FORMATTER) + \"\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"bryansendeavour":60}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import java.io.File;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":" * This class handles the common features of a Task object.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":" *","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":" * @author Bryan Ong","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"    private final String NAME;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"    static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy HHmm\");","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    private static int count \u003d 0;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"        this.NAME \u003d name;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"        count++;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"     * This method checks if keyword is present in current task.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"     * @param keyword to be crosschecked.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"     * @return if present or not.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        String[] keys \u003d NAME.split(\" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"        if (keys.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"            return keys[0].equalsIgnoreCase(keyword);","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"            for (String key : keys) {","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"                if (key.equalsIgnoreCase(keyword)) {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"                    return true;","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"        return false;","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"     * This method handles the marking of task.","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"    public void mark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"     * This method handles the unmarking of task.","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"     * This method returns the number of Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"     * @return int Number of task.","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"    public int numberTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"        return count;","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"     * This method decreases the Task count.","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"    public void minus() {","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"        count--;","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"    public void plus() {","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"        count++;","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"     * Abstract method for writting of Task into file.","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"     * @param file Data file to be written into.","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"     * @return String to be written.","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"    public abstract String write(File file);","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"     * This method handles the creation of String","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"     * of status and name of Task for print.","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"     * @return String of common features.","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"        return isDone ? \"[X] \" + NAME","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"                    : \"[ ] \" + NAME;","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"     * This method handles the creation of String","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"     * of status and name of Task for write.","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"     * @return String of common features.","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"    public String toWrite() {","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"        return isDone ? \"1 | \" + NAME","lastModifiedDate":"2023-02-06"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"                : \"0 | \" + NAME;","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"bryansendeavour":107}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import java.util.ListIterator;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":" * This class handles the TaskList operations.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":" * @author Bryan Ong","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    private static File dataFile;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    private static boolean isNew;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    private static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    public TaskList(File file, boolean isItNew) {","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        dataFile \u003d file;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        isNew \u003d isItNew;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        if (!isNew) {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"            init();","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"     * This method handles the addition of Task","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"     * to the Tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"     * @param t Task to be added.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    public static void addToList(Task t) {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"        taskList.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    public static void addToList(Task t, int number) {","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"        taskList.add(number, t);","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"     * This method handles the retrieval of task","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"     * by its serial number.","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"     * @param num Serial number.","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"     * @return Task The task of this serial number.","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"    public static Task get(int num) {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"        return taskList.get(num);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"     * This method handles the initialization of the file.","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"    private void init() {","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"            Scanner sc \u003d new Scanner(dataFile);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"                String in \u003d sc.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"                String[] split \u003d in.split(\" \\\\| \");","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"                boolean isDone \u003d split[1].equals(\"1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"                switch (split[0].toUpperCase()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"                    case \"T\":","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"                        Todo t \u003d new Todo(split[2], isDone);","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"                        taskList.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"                        break;","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"                    case \"E\":","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"                        Event e \u003d new Event(split[2], split[3], split[4], isDone);","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"                        taskList.add(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"                        break;","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"                    case \"D\":","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"                        Deadline d \u003d new Deadline(split[2], split[3], isDone);","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"                        taskList.add(d);","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"                        break;","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"                    default:","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"                        break;","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"     * This method handles the printing of list command.","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"    public static String printList() {","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"        ListIterator\u003cTask\u003e li \u003d taskList.listIterator();","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"        if (!li.hasNext()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"            sb.append(Ui.printListEmpty());","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"            int count \u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"            sb.append(Ui.printListPrompt());","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"            while (li.hasNext()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"                Task curr \u003d li.next();","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"                sb.append(count).append(\". \");","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"                sb.append(curr);","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"                count++;","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"            sb.append(Ui.printDivider());","lastModifiedDate":"2023-02-06"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"     * This method removes the specified task.","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"     * @param num serial number of task.","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"    public static void remove(int num) {","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"bryansendeavour"},"content":"        taskList.remove(num);","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"bryansendeavour"},"content":"    public static void remove(Task task) {","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"bryansendeavour"},"content":"        taskList.remove(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"     * This method searches for keywords in tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"bryansendeavour"},"content":"     * @param keyword keyword to be searched","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"bryansendeavour"},"content":"    public static String search(String keyword) {","lastModifiedDate":"2023-02-06"},{"lineNumber":125,"author":{"gitId":"bryansendeavour"},"content":"        ListIterator\u003cTask\u003e li \u003d taskList.listIterator();","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"bryansendeavour"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-06"},{"lineNumber":127,"author":{"gitId":"bryansendeavour"},"content":"        if (!li.hasNext()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"bryansendeavour"},"content":"            sb.append(Ui.printFindNot());","lastModifiedDate":"2023-02-06"},{"lineNumber":129,"author":{"gitId":"bryansendeavour"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"bryansendeavour"},"content":"            int count \u003d 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"bryansendeavour"},"content":"            while (li.hasNext()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"bryansendeavour"},"content":"                Task curr \u003d li.next();","lastModifiedDate":"2023-02-02"},{"lineNumber":133,"author":{"gitId":"bryansendeavour"},"content":"                if (curr.hasKeyword(keyword)) {","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"bryansendeavour"},"content":"                    if (count \u003d\u003d 1) {","lastModifiedDate":"2023-02-02"},{"lineNumber":135,"author":{"gitId":"bryansendeavour"},"content":"                        sb.append(Ui.printFind());","lastModifiedDate":"2023-02-06"},{"lineNumber":136,"author":{"gitId":"bryansendeavour"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":137,"author":{"gitId":"bryansendeavour"},"content":"                    sb.append(Ui.print(count, curr.toString()));","lastModifiedDate":"2023-02-06"},{"lineNumber":138,"author":{"gitId":"bryansendeavour"},"content":"                    count++;","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"bryansendeavour"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":141,"author":{"gitId":"bryansendeavour"},"content":"            if (count \u003d\u003d 1) {","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"bryansendeavour"},"content":"                sb.append(Ui.printFindNot());","lastModifiedDate":"2023-02-06"},{"lineNumber":143,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":144,"author":{"gitId":"bryansendeavour"},"content":"            sb.append(Ui.printDivider());","lastModifiedDate":"2023-02-06"},{"lineNumber":145,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":146,"author":{"gitId":"bryansendeavour"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":147,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":148,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":149,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":150,"author":{"gitId":"bryansendeavour"},"content":"     * This method writes the tasks to data file.","lastModifiedDate":"2023-02-02"},{"lineNumber":151,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":152,"author":{"gitId":"bryansendeavour"},"content":"    public static void writeToFile() {","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"bryansendeavour"},"content":"        if (!taskList.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"bryansendeavour"},"content":"            try (BufferedWriter writer \u003d Files.newBufferedWriter(dataFile.toPath())) {","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"bryansendeavour"},"content":"                for (Task curr : taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"bryansendeavour"},"content":"                    writer.write(curr.write(dataFile));","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"bryansendeavour"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"bryansendeavour"},"content":"                writer.flush();","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"bryansendeavour"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"bryansendeavour"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"bryansendeavour"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"bryansendeavour"},"content":"            if (!isNew) {","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"bryansendeavour"},"content":"                try (BufferedWriter writer \u003d Files.newBufferedWriter(dataFile.toPath())) {","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"bryansendeavour"},"content":"                    writer.write(\"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"bryansendeavour"},"content":"                    writer.flush();","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"bryansendeavour"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"bryansendeavour"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"bryansendeavour"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"bryansendeavour":173}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import java.io.File;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":" * This class handles the storing of","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":" * Todo Task attributes.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":" * @author Bryan Ong","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"    public Todo(String name, boolean done) {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"        super(name, done);","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"     * This method handles the writing to data file","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"     * @param file File to be written to","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"     * @return String Information of task to be written.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    public String write(File file) {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"        return this.toWrite();","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"     * This method handles the creation of the String","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"     * to be printed on user interface.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"     * @return String Message to be printed.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"        return \"   [T]\" + super.toString() + \"\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"     * This method handles the creation of the String","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"     * to be written on data file.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"     * @return String Message to be written.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"    public String toWrite() {","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"        return \"T | \" + super.toWrite() + \" \\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"bryansendeavour":45}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"bryansendeavour":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"450.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"375.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"375.0\" layoutY\u003d\"560.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#e44e4e\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"            \u003cFont name\u003d\"Osaka\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"560.0\" prefWidth\u003d\"450.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"560.0\" prefWidth\u003d\"430.0\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"bryansendeavour":23}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"class EventTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"    public void stringTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"        var e \u003d new Event(\"visiting\", \"10/10/10 1010\",","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"                \"11/10/10 1110\", false);","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(\"   [E][ ] visiting |from: \"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"                + \"10 Oct 2010, 10:10\" + \" |to: \"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"                + \"11 Oct 2010, 11:10|\\n\", e.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    public void writeTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"        var e \u003d new Event(\"visiting\", \"10/10/10 1010\",","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"                \"11/10/10 1110\", false);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(\"E | 0 | visiting | 10/10/10 1010 | 11/10/10 1110\\n\",","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"                e.toWrite());","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"bryansendeavour":24}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"    public void stringTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"        var t \u003d new Todo(\"read\", false);","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(\"   [T][ ] read\\n\", t.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"    public void writeTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"        var t \u003d new Todo(\"read\", false);","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(\"T | 0 | read |\\n\", t.toWrite());","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"bryansendeavour":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"todo read","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"deadline proj /by today","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"event CNY /from sun /to tues","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"bryansendeavour":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bryansendeavour":1,"-":20}}]
