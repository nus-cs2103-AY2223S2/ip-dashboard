[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cetigerlily":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"    mainClassName \u003d \"duke.main.Duke\"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cetigerlily":2,"-":40}},{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"T | 1 | hey","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"D | 1 | ok | 2023-01-30","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"T | 0 | learn korean","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"E | 1 | date | 2023-01-30 10:45 to 2023-01-30 11:45","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"E | 0 | bake sale | 2023-05-18 16:00 to 2023-05-19 16:00","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"E | 1 | shopping | 2023-01-01 19:00 to 2023-01-01 21:00","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"T | 0 | bake a cake","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"cetigerlily":7}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.DukeExceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"public class Duke {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"            taskList \u003d new TaskList(storage.loadTasks(parser)); // edit loadTasks()","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"        } catch (DukeExceptions e) { // throws the error if file path can\u0027t be found","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"            ui.showError(e);","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"    public void run() {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"        this.ui.showWelcome();","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"        Scanner s \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"        while(s.hasNext()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"                String input \u003d s.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"                Command command \u003d this.parser.handleCommand(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"                if(command instanceof ByeCommand) {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"                    command.execute(taskList, ui, storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"                } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"                    command.execute(taskList, ui, storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"            } catch(DukeExceptions e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"                ui.showError(e);","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"        s.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"        new Duke(\"data/data.txt\").run();","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":53}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.InvalidFilePathException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.DukeExceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"import duke.commands.ToDoCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"public class Parser {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    public enum CommandType {BYE, LIST, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE}","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"     * Handles the commands given by a user and returns the appropriate command to be executed.","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"     * @param input the input given by a user","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"     * @return the required Command","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"     * @throws UnknownCommandException If a given command doesn\u0027t match the supported command types","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"    public Command handleCommand(String input) throws DukeExceptions {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"            CommandType command \u003d CommandType.valueOf(input.split(\" \")[0].toUpperCase());","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"            switch (command) {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"                case BYE:","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"                    return new ByeCommand();","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"                case LIST:","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"                    return new ListCommand();","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"                case TODO:","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"                    return new ToDoCommand(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"                case DEADLINE:","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"                    return new DeadlineCommand(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"                case EVENT:","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"                    return new EventCommand(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"                case MARK:","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"                    return new MarkCommand(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"                case UNMARK:","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"                    return new UnmarkCommand(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"                case DELETE:","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"                    return new DeleteCommand(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"                default:","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"                    throw new UnknownCommandException();","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"cetigerlily"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"cetigerlily"},"content":"        } catch(IllegalArgumentException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"cetigerlily"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"cetigerlily"},"content":"     * Translates the Tasks saved in storage into TaskList format as needed and creates the corresponding Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"cetigerlily"},"content":"     * @param input the String of the Task saved in storage","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"cetigerlily"},"content":"     * @return the resulting Task","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"cetigerlily"},"content":"     * @throws InvalidFilePathException If the file path of storage doesn\u0027t exist","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"cetigerlily"},"content":"    public Task translateFileToTaskList(String input) throws DukeExceptions {","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"cetigerlily"},"content":"        String[] splitInput \u003d input.split(\" \\\\| \");","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"cetigerlily"},"content":"        String taskType \u003d splitInput[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"cetigerlily"},"content":"        String taskStatus \u003d splitInput[1];","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"cetigerlily"},"content":"        String taskDescription \u003d splitInput[2];","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"cetigerlily"},"content":"        Task newTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"cetigerlily"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"cetigerlily"},"content":"            case \"T\":","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"cetigerlily"},"content":"                newTask \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"cetigerlily"},"content":"                break;","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"cetigerlily"},"content":"            case \"E\":","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"cetigerlily"},"content":"                String[] eventTiming \u003d splitInput[3].split(\"to\");","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"cetigerlily"},"content":"                newTask \u003d new Event(taskDescription, LocalDateTime.parse(eventTiming[0].trim(), DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")),","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"cetigerlily"},"content":"                        LocalDateTime.parse(eventTiming[1].trim(), DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"cetigerlily"},"content":"                break;","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"cetigerlily"},"content":"            case \"D\":","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"cetigerlily"},"content":"                newTask \u003d new Deadline(taskDescription, LocalDate.parse(splitInput[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"cetigerlily"},"content":"                break;","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"cetigerlily"},"content":"            default:","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"cetigerlily"},"content":"                throw new InvalidFilePathException();","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"cetigerlily"},"content":"        if(taskStatus.equals(\"1\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"cetigerlily"},"content":"            newTask.markDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"cetigerlily"},"content":"            newTask.unmarkDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"cetigerlily"},"content":"        return newTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":101}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.DukeExceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.InvalidFilePathException;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"import java.io.File;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"import java.util.List;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"public class Storage {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"     * Loads Tasks previously stored in storage into the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"     * @param parser the Parser needed to translate the Task from storage format to TaskList format","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"     * @return the ArrayList of Tasks needed to create a TaskList","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"     * @throws InvalidFilePathException If the file path of storage doesn\u0027t exist","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"    public ArrayList\u003cTask\u003e loadTasks(Parser parser) throws DukeExceptions {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"        ArrayList\u003cTask\u003e resultingList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"        if(!file.exists() || file.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"            return resultingList; // make a new arraylist for the tasks in this new file","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"                List\u003cString\u003e content \u003d Files.readAllLines(Paths.get(this.filePath));","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"                for(String line : content) {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"                    Task thisTask \u003d parser.translateFileToTaskList(line);","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"                    resultingList.add(thisTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"                return resultingList;","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"            } catch(IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"                throw new InvalidFilePathException();","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"     * Updates the Tasks generated and reflects any changes made in storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"     * @param tasks TaskList of the resulting Tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"     * @throws InvalidFilePathException If the file path of storage doesn\u0027t exist","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"    public void updateTasks(TaskList tasks) throws DukeExceptions {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"cetigerlily"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"cetigerlily"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"cetigerlily"},"content":"            for(int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"                Task thisTask \u003d tasks.getTasks().get(i);","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"cetigerlily"},"content":"                sb.append(thisTask.getDataString()).append(System.lineSeparator());","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"cetigerlily"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"cetigerlily"},"content":"            fw.write(sb.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"cetigerlily"},"content":"            fw.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"cetigerlily"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"cetigerlily"},"content":"            throw new InvalidFilePathException();","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":72}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.DukeExceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"public class Ui {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"    private final String SEPARATOR \u003d \"\\u200E✽ ✾ \\u200E✽ ✾ \\u200E✽ ✾ \\u200E✽ ✾\";","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"     * Displays Tigerlily To-Do\u0027s welcome message when user starts session.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"        System.out.println(\"｡ﾟﾟ･｡･ﾟﾟ｡\\n\" + \"。 welcome to tigerlily to-do\\n\" + \"　ﾟ･｡･ﾟ\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"                + \"✎ . . . . add your tasks here\");","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"     * Displays Tigerlily To-Do\u0027s goodbye message when user ends session.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"        System.out.println(\"\\n(\\\\\\\\ (\\\\\\\\ \\n\" + \"(„• ֊ •„)\\n\" + \"━━O━O━━━━━━━━━━━━━━━\\n\" +","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"                \"bye, see you again soon!\\n\" + \"━━━━━━━━━━━━━━━━━━━━\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"     * Displays the given message.","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"     * @param message the String to be displayed","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"        System.out.println(\"\\n\" + message + SEPARATOR);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"     * Displays the confirmation message when a Task has been successfully added to the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"     * @param task the Task which has been added successfully","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"     * @param taskList the TaskList which the Task has been added to","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"    public void showAddedMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"        System.out.println(\"\\nokay perf, your task: \" + task.toString() + \" has been added to your list\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"                + \"there are now \" + taskList.getSize() + \" task(s) in your list\\n\" + SEPARATOR);","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"     * Displays the error message when a DukeException has been encountered.","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"    public void showError(DukeExceptions error) {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"        System.out.println(\"\\n\" + error + SEPARATOR);","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":52}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.commands;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.DukeExceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"     * Runs when user ends a session. Updates any changes made to Tasks during the session and if there are no errors,","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"     * the goodbye message is displayed.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"     * @param taskList the TaskList used during this session","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"     * @param ui the Ui needed to display according messages","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"     * @param storage the Storage used to update the save file","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"            storage.updateTasks(taskList);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"            ui.showGoodbye();","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"        } catch(DukeExceptions e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"            ui.showError(e);","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":26}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.commands;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.DukeExceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"public interface Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"    void execute(TaskList taskList, Ui ui, Storage storage) throws DukeExceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":10}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.commands;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"    private final String input;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"     * Creates a new Deadline, adds it to the TaskList, and displays confirmation message of addition.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"     * @param taskList the TaskList the new Deadline is added to","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"     * @param ui the Ui needed to display according messages","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"     * @param storage the Storage used during this session","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"        String[] s1 \u003d input.substring(9).split(\"/by\");","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"        Deadline newDeadline \u003d new Deadline(s1[0].trim(), LocalDate.parse(s1[1].trim(),","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"                Deadline.getDeadlineFormatter()));","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"        taskList.addTask(newDeadline);","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"        ui.showAddedMessage(newDeadline, taskList);","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":32}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.commands;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.DukeExceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"    private String input;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"     * Deletes a given Task and displays confirmation message of deletion. If there are any errors from trying to delete","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"     * the Task, the error is displayed.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"     * @param taskList the TaskList the Task is removed from","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"     * @param ui the Ui needed to display according messages","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"     * @param storage the Storage used during this session","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"            Task thisTask \u003d taskList.deleteTask(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"            ui.showMessage(\"okay, this task has been removed: \" + thisTask.toString() + \"\\nthe list now has \"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"                    + taskList.getSize() + \" task(s) left\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"        } catch(DukeExceptions e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"            ui.showError(e);","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":33}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.commands;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"    private String input;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"     * Creates a new Event, adds it to the TaskList, and displays confirmation message of addition.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"     * @param taskList the TaskList the new Event is added to","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"     * @param ui the Ui needed to display according messages","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"     * @param storage the Storage used during this session","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"        String[] s1 \u003d input.substring(6).split(\"/from\");","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"        String[] s2 \u003d s1[1].split(\"/to\");","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"        Event newEvent \u003d new Event(s1[0].stripTrailing(), LocalDateTime.parse(s2[0].trim(), Event.getEventFormatter()),","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"                LocalDateTime.parse(s2[1].trim(), Event.getEventFormatter()));","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"        taskList.addTask(newEvent);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"        ui.showAddedMessage(newEvent, taskList);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":34}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.commands;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"     * Runs process to display all Tasks in the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"     * @param taskList the TaskList used during this session","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"     * @param ui the Ui needed to display according messages","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"     * @param storage the Storage used to update the save file","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"        ui.showMessage(taskList.printList());","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":18}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.commands;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.DukeExceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.ForgottenArgumentException;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.InvalidIndexException;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"    private String input;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"     * Marks a given Task as completed and displays confirmation message of update. If no index is given or the index","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"     * given is out of bounds, the error is displayed.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"     * @param taskList the TaskList containing the Task to be updated","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"     * @param ui the Ui needed to display according messages","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"     * @param storage the Storage used to update the save file","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"     * @throws ForgottenArgumentException If no index is given","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"     * @throws InvalidIndexException If the given index is out of bounds in TaskList","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeExceptions {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"        if(input.length() \u003c 6) {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"            throw new ForgottenArgumentException();","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"            int index \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"            if (index \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"                throw new InvalidIndexException();","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"            Task thisTask \u003d taskList.getTasks().get(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"            thisTask.markDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"            ui.showMessage(\"well done! you\u0027ve completed this task: \" + thisTask + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":42}},{"path":"src/main/java/duke/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.commands;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.DukeExceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.ForgottenArgumentException;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"public class ToDoCommand implements Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"    private String input;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"    public ToDoCommand(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"     * Creates a new ToDo, adds it to the TaskList, and displays confirmation message of addition. If there are any","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"     * errors from creating a new ToDo, the error is displayed.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"     * @param taskList the TaskList the new ToDo is added to","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"     * @param ui the Ui needed to display according messages","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"     * @param storage the Storage used during this session","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"     * @throws ForgottenArgumentException If no description for the ToDo is given","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeExceptions {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"            String description \u003d input.substring(5);","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"            ToDo newToDo \u003d new ToDo(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"            taskList.addTask(newToDo);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"            ui.showAddedMessage(newToDo, taskList);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"        } catch(StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"            throw new ForgottenArgumentException();","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":37}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.commands;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.DukeExceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.ForgottenArgumentException;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.InvalidIndexException;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"    private String input;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"     * Marks a given Task as uncompleted and displays confirmation message of update. If no index is given or the index","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"     * given is out of bounds, the error is displayed.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"     * @param taskList the TaskList containing the Task to be updated","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"     * @param ui the Ui needed to display according messages","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"     * @param storage the Storage used to update the save file","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"     * @throws ForgottenArgumentException If no index is given","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"     * @throws InvalidIndexException If the given index is out of bounds in TaskList","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeExceptions {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"        if(input.length() \u003c 8) {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"            throw new ForgottenArgumentException();","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"            int index \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"            if (index \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"                throw new InvalidIndexException();","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"            Task thisTask \u003d taskList.getTasks().get(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"            thisTask.unmarkDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"            ui.showMessage(\"oops...this task is now marked as not done yet: \" + thisTask.toString() + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":42}},{"path":"src/main/java/duke/exceptions/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"public class DukeExceptions extends Exception {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"    public DukeExceptions(String message) {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"        super(message);","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":7}},{"path":"src/main/java/duke/exceptions/ForgottenArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"public class ForgottenArgumentException extends DukeExceptions {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"    private static final String MESSAGE \u003d \"⚠ oops...seems like you forgot part of a command, please try again\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"    public ForgottenArgumentException() {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"        super(MESSAGE);","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":8}},{"path":"src/main/java/duke/exceptions/InvalidFilePathException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"public class InvalidFilePathException extends DukeExceptions {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"    private static final String MESSAGE \u003d \"⚠ oops...we can\u0027t find where the file is\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"    public InvalidFilePathException() {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"        super(MESSAGE);","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":8}},{"path":"src/main/java/duke/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"public class InvalidIndexException extends DukeExceptions {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"    private static final String MESSAGE \u003d \"⚠ oops...there\u0027s no task with this number\\ntry asking for \u0027list\u0027 to check task \" +","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"            \"numbers\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"        super(MESSAGE);","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":9}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"public class UnknownCommandException extends DukeExceptions {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"    private static final String MESSAGE \u003d \"⚠ oops...we don\u0027t know what that means, please try again\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"        super(MESSAGE);","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":8}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"    private final LocalDate deadlineDue;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"    private static final DateTimeFormatter DEADLINE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"    public Deadline(String description, LocalDate deadlineDue) {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"        this.deadlineDue \u003d deadlineDue;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"     * Returns the DateTimeFormatter used to format Deadlines.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"     * @return the DateTimeFormatter used to format Deadlines","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"    public static DateTimeFormatter getDeadlineFormatter() {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"        return DEADLINE_FORMAT;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"     * Generates the String representation of the Deadline needed for data storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"     * @return the Deadline in String format for data storage","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"    public String getDataString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"        return \"D | \" + super.getDataString() + \" | \" + this.deadlineDue.format(getDeadlineFormatter());","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"     * Generates the String representation of the Deadline.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"     * @return the String representation of the Deadline","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"                + deadlineDue.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG)) + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":45}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"    private final LocalDateTime eventStart;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"    private final LocalDateTime eventEnd;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"    private static final DateTimeFormatter EVENT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"    public Event(String description, LocalDateTime eventStart, LocalDateTime eventEnd) {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"        super(description);","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"        this.eventStart \u003d eventStart;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"        this.eventEnd \u003d eventEnd;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"     * Returns the DateTimeFormatter used to format Events.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"     * @return the DateTimeFormatter used to format Events","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"    public static DateTimeFormatter getEventFormatter() {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"        return EVENT_FORMAT;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"     * Generates the String representation of the Event needed for data storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"     * @return the Event in String format for data storage","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"    public String getDataString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"        return \"E | \" + super.getDataString() + \" | \" + this.eventStart.format(getEventFormatter()) + \" to \"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"                + this.eventEnd.format(getEventFormatter());","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"     * Generates the String representation of the Event, representation depends on whether the Event completes on the","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"     * same day or not.","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"     * @return the String representation of the Event","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"        String timeFrame;","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"        if((eventStart.getYear() \u003d\u003d eventEnd.getYear()) \u0026\u0026 (eventStart.getDayOfYear() \u003d\u003d eventEnd.getDayOfYear())) {","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"            timeFrame \u003d eventStart.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.SHORT)) + \" \" +","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"                    eventStart.format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \" to: \" +","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"                    eventEnd.format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"            timeFrame \u003d eventStart.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.SHORT)) + \" \" +","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"                    eventStart.format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \" to: \" +","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"                    eventEnd.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.SHORT)) + \" \" +","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"                    eventEnd.format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + timeFrame;","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":59}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"public class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"    private String description;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"    private boolean status;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"        this.status \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"     * @return the description of a task","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"        return this.description;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"     * Marks a task as completed.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"        this.status \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"     * Marks a task as uncompleted.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"        this.status \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"     * Determines whether a task is completed.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"     * @return the completion status of a task","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"        return this.status;","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"     * Generates the String representation of the Task for data storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"     * @return the Task in String format for data storage","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"    public String getDataString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"        if(this.isDone()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"            return \"1 | \" + this.getDescription();","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"            return \"0 | \" + this.getDescription();","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"cetigerlily"},"content":"     * Generates the String representation of the Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"cetigerlily"},"content":"     * @return the String representation of the Task","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"cetigerlily"},"content":"        if(this.isDone()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"cetigerlily"},"content":"            return \"[X] \" + this.getDescription();","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"cetigerlily"},"content":"            return \"[ ] \" + this.getDescription();","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"cetigerlily":70}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.DukeExceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import duke.exceptions.InvalidIndexException;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"public class TaskList {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"     * Returns the ArrayList of Tasks stored in a TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"     * @return the ArrayList of Tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"     * Adds a given Task into the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"     * @param task the new Task to be added into the TaskList","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"     * Deletes the Task at the given index in the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"     * @param input the input command, which is parsed to find the index","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"     * @return the Task which was deleted","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"     * @throws DukeExceptions If the given index is out of bounds","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"    public Task deleteTask(String input) throws DukeExceptions {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"        int index \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"        if (index \u003e\u003d this.getSize()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"            Task thisTask \u003d tasks.get(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"            tasks.remove(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"            return thisTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"     * Generates the String representation of the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"     * @return the String representation of the TaskList","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"cetigerlily"},"content":"    public String printList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"cetigerlily"},"content":"        StringBuilder sb \u003d new StringBuilder(\"here\u0027s your list:\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"        for (int i \u003d 0; i \u003c this.getSize(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"cetigerlily"},"content":"            sb.append(i + 1).append(\".\").append(tasks.get(i).toString()).append(System.lineSeparator());","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"cetigerlily"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"cetigerlily"},"content":"     * Returns the number of Tasks in the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"cetigerlily"},"content":"     * @return the number of Tasks in the TaskList","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"cetigerlily"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"cetigerlily"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":75}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"     * Generates the String representation of the ToDo needed for data storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"     * @return the ToDo in String format for data storage","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"    public String getDataString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"        return \"T | \" + super.getDataString();","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"     * Generates the String representation of the ToDo.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"     * @return the String representation of the ToDo","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"cetigerlily":26}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"    public void outputTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"        Deadline testDeadline \u003d new Deadline(\"test\", LocalDate.parse(\"2023-02-14\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"        assertEquals(\"[D][ ] test (by: 14 February 2023)\", testDeadline.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":15}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"public class EventTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"    public void outputTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"        Event testEvent \u003d new Event(\"test\",","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"                LocalDateTime.parse(\"2023-02-14 18:00\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")),","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"                LocalDateTime.parse(\"2023-02-14 20:00\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"        assertEquals(\"[E][ ] test (from: 14/02/2023 18:00 to: 20:00)\", testEvent.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"cetigerlily":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"todo borrow book","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"todo read book","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"deadline return book /by mon","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"event dinner date /from sat 6pm /to 8pm","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"mark 1","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"mark 2","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"bye","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"cetigerlily":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"REM run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cetigerlily":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cetigerlily":1,"-":37}}]
