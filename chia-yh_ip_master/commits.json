{"authorDailyContributionsMap":{"chia-yh":[{"date":"2023-01-16","commitResults":[{"hash":"cc8d8bf6fb3f7dc35239e92734965c12d0a3fcef","messageTitle":"Update README.md Rename Duke.java to Book.java Update Book.java","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":10},"bat":{"insertions":1,"deletions":1},"md":{"insertions":2,"deletions":23}}},{"hash":"c846997d9db71bee40ef9e215fa107cb8b2d5905","messageTitle":"Add Echo, Exit","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":1}}},{"hash":"9b5d94e8b3ea7a59d227ce33863cf546fea15dd7","messageTitle":"Add Add, List","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":3}}},{"hash":"dc1b617e1bcbd47f932d7f4e354088701e542e25","messageTitle":"Add Task.java","messageBody":"","tags":["A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":0}}},{"hash":"627ba5a3d52c2ce4f3bb3a947f5d70bd3ed72b81","messageTitle":"Update Book.java to store tasks using the Task class","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":4}}},{"hash":"8a598b26378506ea0b996a519c502d0c8737cd7b","messageTitle":"Update Book.java, Task.java, add ToDo.java, Deadline,java, Event.java Modify Task.java into an abstract class Add ToDo.java, Deadline.java, Event.java extending from Task.java Modify Book.java to handle ToDo.java, Deadline.java, Event.java","messageBody":"","tags":["Level-4","A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":9}}},{"hash":"c72c6a46b8e5d7e0b896542949aadf71b076bb77","messageTitle":"Update runtest.bat, input.txt, EXPECTED.TXT, Book.java, Event.java Add automated testing of text UIs with runtest.bat, input.txt, EXPECTED.TXT Fix print errors in Book.java, Event.java","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":11,"deletions":0},"java":{"insertions":3,"deletions":4},"bat":{"insertions":1,"deletions":1}}},{"hash":"7956f5bacb1957b81a2059711b225d672e07d794","messageTitle":"Add IncompleteInputException.java, InvalidInputException.java Add checked exceptions to handle invalid or incomplete inputs with IncompleteInputException.java and InvalidInputException.java Update Book.java to handle exceptions Update README.md to credit Kaomoji used","messageBody":"","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":9},"md":{"insertions":4,"deletions":1}}}]},{"date":"2023-01-17","commitResults":[{"hash":"1db8830752282462f207ab5e3e354ae3f4f2c739","messageTitle":"Update Book.java, README.md Add support for deleting tasks from the list in Book.java Removed Kaomoji due to display problems","messageBody":"","tags":["Level-6","A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":29},"md":{"insertions":8,"deletions":4}}}]},{"date":"2023-01-21","commitResults":[{"hash":"efb753fe09d9f9218bf12d4003c7374b9f3a6a6c","messageTitle":"Add Level-7 Save increment to save and load task list","messageBody":"Book task list is not saved on exit and is empty on startup.\n\nUsers lose all tracked tasks in task list on exit, ability to save and\nload tasks tracked in the task list allows users to access their tasks\nacross multiple sessions.\n\nLet\u0027s update Book to save tasks whenever task list changes and load\ntask list on startup using a file.\n\n* Update Book.java, Task.java, ToDo.java, Deadline.java, Event.java to\n  support function to save task list\n* Update EXPECTED.TXT for automated text UI testing\n* Update .gitignore to ignore save folder and file\n","fileTypesAndContributionMap":{"java":{"insertions":80,"deletions":4}}},{"hash":"3b86365135d3b36c8f1f599e97d3e12910c5771e","messageTitle":"Add Level-8 Dates and Times to parse String as LocalDateTime","messageBody":"Deadlines, Events store dates as String, allow for any text to be\nstored.\n\nDeadlines, Events treat any String as Date/Time, parsing String as\nLocalDateTime enforces storing of valid Date/Time, allows for formatting\nand meaningful use of stored value.\n\nLet\u0027s update Book to store Date/Time as LocalDateTime instead of\nString.\n\n* Update Book.java, Deadline.java, Event.java, Task.java to support\n  storage of Date/Time as LocalDateTime\n","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":19}}},{"hash":"1b8569d85fb69eeb2261936f2c7c093b1379819b","messageTitle":"Update Task.java, Deadline.java, Event.java * Fix issues with save and load with Date/Time from merging Level-7,   Level-8 to master * Update input.txt, EXPECTED.TXT for automated testing of text ui   with Date/Time * Update README.md formatting","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":10,"deletions":7},"md":{"insertions":2,"deletions":0}}},{"hash":"1052ffc1c972a680ba5c51579fc53528e73fd4e0","messageTitle":"Extract Ui, Storage, Parse, TaskList classes Book class handles nearly all functionality.","messageBody":"With all functionality in a single class, code is harder to maintain and\ncomprehend. Extracting related code into different classes allows\nspecific functions to be confined within a single class, which is easier\nto maintain.\n\nLet\u0027s extract the following classes:\n* Ui: handle user interactions\n* Storage: handle loading tasks from file and saving tasks to file\n* Parser: handle interpretation of commands\n* TaskList: handle task list operations\n\nLet\u0027s extract the following Command classes to handle command execution:\n* Command: abstract class from which other Command classes inherit to\n  aid command execution\n* AddCommand: handle task list operation to add tasks\n* DeleteCommand: handle task list operation to delete tasks\n* MarkCommand: handle task list operation to mark tasks as complete\n* UnmarkCommand: handle task list operation to mark tasks as incomplete\n* ExitCommand: handle exit from Book\n\nReorganize exceptions into the following:\n* BookException: Exception class for Book from which other Book\n  exceptions inherit\n* IncompleteInputException\n* InvalidFormatException\n* InvalidInputException\n* LoadException\n* SaveException\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":329,"deletions":172}}}]},{"date":"2023-01-22","commitResults":[{"hash":"f025e3201e63ed43d02dd6e3734a397123edc1d2","messageTitle":"Organize classes into packages No organization of classes into packages.","messageBody":"Hard to manage classes with related functionality without packages.\n\nLet\u0027s divide related classes into packages,\n* book: general functionality for Book\n* book.command: handle execution of commands\n* book.exception: exceptions for Book\n* book.task: models for tasks\n\nPackages allow for easier management of related classes and prevents\nname conflicts.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":151,"deletions":18},"bat":{"insertions":2,"deletions":2},"md":{"insertions":1,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"chia-yh":{"java":572,"md":11,"fxml":0,"sh":0,"bat":2,"gradle":0,"txt":11}},"authorContributionVariance":{"chia-yh":41293.4},"authorDisplayNameMap":{"chia-yh":"CHIA..HONG"}}
