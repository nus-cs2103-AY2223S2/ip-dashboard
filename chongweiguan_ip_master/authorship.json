[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"chongweiguan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"chongweiguan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"chongweiguan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"chongweiguan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"chongweiguan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"chongweiguan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"chongweiguan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"chongweiguan"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"chongweiguan"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"chongweiguan"},"content":"checkstyle {","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"chongweiguan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"chongweiguan":28,"-":38}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"T | 0 | read book","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"D | 0 | deadline return book | 2023-11-11T18:00","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"E | 1 | event proj meeting | 2023-11-11T16:00 - 2023-11-12T17:00","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":"T | 0 | rad","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"chongweiguan":4}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":" * Deadline is a task that inherits Tasks, and it represents a task that","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":" * has a certain deadline to complete which is indicated by a Date and Time","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"public class Deadline extends Tasks {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"     * Date and Time of the deadline with the format dd/MM/yyy HHmm","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"     * Returns a Deadline object that inherits the Tasks Class, it is a task","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"     * with a certain deadline and it is first set to be undone","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":"     * @param description the details of the deadline","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"chongweiguan"},"content":"     * @param by the date and time the task should be completed","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"chongweiguan"},"content":"     * Overrides the toString() method, it prints out the full description","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"chongweiguan"},"content":"     * of the deadline","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"chongweiguan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"chongweiguan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"chongweiguan"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"chongweiguan"},"content":"            + this.by.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.SHORT)) + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"chongweiguan"},"content":"     * Saves the deadline into data/duke.txt","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"chongweiguan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"chongweiguan"},"content":"    public String log() {","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"chongweiguan"},"content":"        return \"D\" + super.log() + \" | \" + this.by + \"\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"chongweiguan":45}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"chongweiguan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"chongweiguan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"chongweiguan"},"content":"        assert text.length() \u003e 0 \u0026\u0026 !img.equals(null);","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"chongweiguan"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"chongweiguan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"../view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"chongweiguan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"chongweiguan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"chongweiguan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"chongweiguan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"chongweiguan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"chongweiguan"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"chongweiguan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"chongweiguan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"chongweiguan"},"content":"    private void flip() {","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"chongweiguan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"chongweiguan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"chongweiguan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"chongweiguan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"chongweiguan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"chongweiguan"},"content":"        assert text.length() \u003e 0 \u0026\u0026 !img.equals(null);","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"chongweiguan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"chongweiguan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"chongweiguan"},"content":"        assert text.length() \u003e 0 \u0026\u0026 !img.equals(null);","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"chongweiguan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"chongweiguan"},"content":"        db.flip();","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"chongweiguan"},"content":"        return db;","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"chongweiguan":64}},{"path":"src/main/java/duke/DontKnowWhatThatMeansException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":" * Thrown when the command that is placed in the user input does not match","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":" * any of the existing commands","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":"public class DontKnowWhatThatMeansException extends Exception {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"    public DontKnowWhatThatMeansException(String message) {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"        super(message);","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"chongweiguan":11}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":" * Duke is a program that helps you keep track of tasks","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":"     * User image from the image folder","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"chongweiguan"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"../images/DaUser.png\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"     * Duke image from the image folder","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"../images/DaDuke.png\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"chongweiguan"},"content":"     * list of tasks that are initated to a size of 100","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"chongweiguan"},"content":"    private TasksList list \u003d new TasksList(100);","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"chongweiguan"},"content":"     * UI that handles user interactions","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"chongweiguan"},"content":"    private UI ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"chongweiguan"},"content":"     * storage that extracts the list of tasks from tasklist object","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"chongweiguan"},"content":"    private Storage storage \u003d new Storage(list);","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"chongweiguan"},"content":"     * parser that makes sense of user commands","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"chongweiguan"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"chongweiguan"},"content":"     * ScrollPane from the main application","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"chongweiguan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"chongweiguan"},"content":"     * VBox from the main application","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"chongweiguan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"chongweiguan"},"content":"     * Creates a Duke Object that helps you keep track of tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"chongweiguan"},"content":"     * @param ui in charge of UI interactions","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"chongweiguan"},"content":"     * @param parser in charge of making sense of the commands","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"chongweiguan"},"content":"    public Duke(UI ui, Parser parser) {","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"chongweiguan"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"chongweiguan"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"chongweiguan"},"content":"     * initializes Duke, starts the UI, fetches the data from storage","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"chongweiguan"},"content":"     * and keeps it in the list","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"chongweiguan"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"chongweiguan"},"content":"        assert !ui.equals(null) \u0026\u0026 !storage.equals(null);","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"chongweiguan"},"content":"        ui.start();","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"chongweiguan"},"content":"        storage.findData();","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"chongweiguan"},"content":"        storage.loadData();","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"chongweiguan"},"content":"        ui.start();","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"chongweiguan"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"chongweiguan"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"chongweiguan"},"content":"     * Initializes the stage of the main application page","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"chongweiguan"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"chongweiguan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"chongweiguan"},"content":"        assert !stage.equals(null);","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"chongweiguan"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"chongweiguan"},"content":"        TextField userInput \u003d new TextField();","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"chongweiguan"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"chongweiguan"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"chongweiguan"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"chongweiguan"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"chongweiguan"},"content":"        setStage(stage, scene);","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"chongweiguan"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"chongweiguan"},"content":"        setScrollPane();","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"chongweiguan"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"chongweiguan"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"chongweiguan"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"chongweiguan"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"chongweiguan"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"chongweiguan"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"chongweiguan"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"chongweiguan"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":104,"author":{"gitId":"chongweiguan"},"content":"        setActionsOne(userInput, sendButton);","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"chongweiguan"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"chongweiguan"},"content":"        setActionsTwo(userInput, sendButton);","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"chongweiguan"},"content":"     * set actions of the user input as well as the send buttion","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"chongweiguan"},"content":"     * @param userInput command that the user types in","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"chongweiguan"},"content":"     * @param sendButton Send button that initiates an action from the user command","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"chongweiguan"},"content":"    private void setActionsOne(TextField userInput, Button sendButton) {","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"chongweiguan"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":116,"author":{"gitId":"chongweiguan"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"chongweiguan"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-10"},{"lineNumber":118,"author":{"gitId":"chongweiguan"},"content":"        });","lastModifiedDate":"2023-02-10"},{"lineNumber":119,"author":{"gitId":"chongweiguan"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":120,"author":{"gitId":"chongweiguan"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-02-10"},{"lineNumber":121,"author":{"gitId":"chongweiguan"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-10"},{"lineNumber":122,"author":{"gitId":"chongweiguan"},"content":"        });","lastModifiedDate":"2023-02-10"},{"lineNumber":123,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":125,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"chongweiguan"},"content":"     * Sets again","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"chongweiguan"},"content":"     * @param userInput command that the user types in","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"chongweiguan"},"content":"     * @param sendButton Send button that initiates an action from the user command","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"chongweiguan"},"content":"    private void setActionsTwo(TextField userInput, Button sendButton) {","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"chongweiguan"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":132,"author":{"gitId":"chongweiguan"},"content":"            handleUserInput(userInput, dialogContainer);","lastModifiedDate":"2023-02-10"},{"lineNumber":133,"author":{"gitId":"chongweiguan"},"content":"        });","lastModifiedDate":"2023-02-10"},{"lineNumber":134,"author":{"gitId":"chongweiguan"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":135,"author":{"gitId":"chongweiguan"},"content":"            handleUserInput(userInput, dialogContainer);","lastModifiedDate":"2023-02-10"},{"lineNumber":136,"author":{"gitId":"chongweiguan"},"content":"        });","lastModifiedDate":"2023-02-10"},{"lineNumber":137,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":138,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":139,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":140,"author":{"gitId":"chongweiguan"},"content":"     * Sets the stage of the main application page","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"chongweiguan"},"content":"     * @param stage Stage of the main application page","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"chongweiguan"},"content":"     * @param scene Scene of the main application page","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"chongweiguan"},"content":"    private void setStage(Stage stage, Scene scene) {","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"chongweiguan"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"chongweiguan"},"content":"        stage.show();","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"chongweiguan"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"chongweiguan"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"chongweiguan"},"content":"        stage.setMinHeight(1000.0);","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"chongweiguan"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"chongweiguan"},"content":"     * Sets the scroll Pane of the main application page","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"chongweiguan"},"content":"    private void setScrollPane() {","lastModifiedDate":"2023-02-12"},{"lineNumber":158,"author":{"gitId":"chongweiguan"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-12"},{"lineNumber":159,"author":{"gitId":"chongweiguan"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-12"},{"lineNumber":160,"author":{"gitId":"chongweiguan"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-12"},{"lineNumber":161,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":162,"author":{"gitId":"chongweiguan"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-12"},{"lineNumber":163,"author":{"gitId":"chongweiguan"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-12"},{"lineNumber":164,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":166,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":167,"author":{"gitId":"chongweiguan"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-02-10"},{"lineNumber":168,"author":{"gitId":"chongweiguan"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-02-10"},{"lineNumber":169,"author":{"gitId":"chongweiguan"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-02-10"},{"lineNumber":170,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":171,"author":{"gitId":"chongweiguan"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-02-10"},{"lineNumber":172,"author":{"gitId":"chongweiguan"},"content":"        assert text.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":173,"author":{"gitId":"chongweiguan"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-02-10"},{"lineNumber":174,"author":{"gitId":"chongweiguan"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-02-10"},{"lineNumber":175,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":176,"author":{"gitId":"chongweiguan"},"content":"        return textToAdd;","lastModifiedDate":"2023-02-10"},{"lineNumber":177,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":178,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":179,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":180,"author":{"gitId":"chongweiguan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-10"},{"lineNumber":181,"author":{"gitId":"chongweiguan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-10"},{"lineNumber":182,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":183,"author":{"gitId":"chongweiguan"},"content":"    public void handleUserInput(TextField userInput, VBox dialogContainer) {","lastModifiedDate":"2023-02-10"},{"lineNumber":184,"author":{"gitId":"chongweiguan"},"content":"        assert !userInput.equals(null) \u0026\u0026 !dialogContainer.equals(null);","lastModifiedDate":"2023-02-12"},{"lineNumber":185,"author":{"gitId":"chongweiguan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-10"},{"lineNumber":186,"author":{"gitId":"chongweiguan"},"content":"                DialogBox.getUserDialog(userInput.getText(), user),","lastModifiedDate":"2023-02-10"},{"lineNumber":187,"author":{"gitId":"chongweiguan"},"content":"                DialogBox.getDukeDialog(getResponse(userInput.getText()), duke)","lastModifiedDate":"2023-02-10"},{"lineNumber":188,"author":{"gitId":"chongweiguan"},"content":"        );","lastModifiedDate":"2023-02-10"},{"lineNumber":189,"author":{"gitId":"chongweiguan"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-10"},{"lineNumber":190,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":191,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":192,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":193,"author":{"gitId":"chongweiguan"},"content":"     * Get the response of the user input","lastModifiedDate":"2023-02-12"},{"lineNumber":194,"author":{"gitId":"chongweiguan"},"content":"     * @param input","lastModifiedDate":"2023-02-12"},{"lineNumber":195,"author":{"gitId":"chongweiguan"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":196,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":197,"author":{"gitId":"chongweiguan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":198,"author":{"gitId":"chongweiguan"},"content":"        assert !input.equals(null);","lastModifiedDate":"2023-02-12"},{"lineNumber":199,"author":{"gitId":"chongweiguan"},"content":"        return response(ui, storage, parser, list, input);","lastModifiedDate":"2023-02-10"},{"lineNumber":200,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":201,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":202,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":203,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":204,"author":{"gitId":"chongweiguan"},"content":"     * Starts the duke program and checks for various commands","lastModifiedDate":"2023-02-08"},{"lineNumber":205,"author":{"gitId":"chongweiguan"},"content":"     * @param ui UI onject responsible for User interactions","lastModifiedDate":"2023-02-08"},{"lineNumber":206,"author":{"gitId":"chongweiguan"},"content":"     * @param storage Stores your tasks in the program","lastModifiedDate":"2023-02-08"},{"lineNumber":207,"author":{"gitId":"chongweiguan"},"content":"     * @param parser formats your commands that helps Duke read","lastModifiedDate":"2023-02-08"},{"lineNumber":208,"author":{"gitId":"chongweiguan"},"content":"     * @param list list of Tasks","lastModifiedDate":"2023-02-08"},{"lineNumber":209,"author":{"gitId":"chongweiguan"},"content":"     * @return the response from the command","lastModifiedDate":"2023-02-12"},{"lineNumber":210,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":211,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":212,"author":{"gitId":"chongweiguan"},"content":"    public String response(UI ui, Storage storage, Parser parser, TasksList list, String command) {","lastModifiedDate":"2023-02-10"},{"lineNumber":213,"author":{"gitId":"chongweiguan"},"content":"        assert !ui.equals(null) \u0026\u0026 !storage.equals(null) \u0026\u0026 !parser.equals(null)","lastModifiedDate":"2023-02-12"},{"lineNumber":214,"author":{"gitId":"chongweiguan"},"content":"            \u0026\u0026 !list.equals(null) \u0026\u0026 command.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":215,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":216,"author":{"gitId":"chongweiguan"},"content":"        String[] commandArr \u003d command.split(\" \");","lastModifiedDate":"2023-02-10"},{"lineNumber":217,"author":{"gitId":"chongweiguan"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":218,"author":{"gitId":"chongweiguan"},"content":"            DukeExceptions.checkCommand(commandArr);","lastModifiedDate":"2023-02-10"},{"lineNumber":219,"author":{"gitId":"chongweiguan"},"content":"            if (commandArr[0].equals(\"todo\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":220,"author":{"gitId":"chongweiguan"},"content":"                return todoResponse(commandArr, command);","lastModifiedDate":"2023-02-12"},{"lineNumber":221,"author":{"gitId":"chongweiguan"},"content":"            } else if (commandArr[0].equals(\"deadline\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":222,"author":{"gitId":"chongweiguan"},"content":"                return deadlineResponse(commandArr, command);","lastModifiedDate":"2023-02-12"},{"lineNumber":223,"author":{"gitId":"chongweiguan"},"content":"            } else if (commandArr[0].equals(\"event\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":224,"author":{"gitId":"chongweiguan"},"content":"                return eventResponse(commandArr, command);","lastModifiedDate":"2023-02-12"},{"lineNumber":225,"author":{"gitId":"chongweiguan"},"content":"            } else if (commandArr[0].equals(\"mark\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":226,"author":{"gitId":"chongweiguan"},"content":"                return markResponse(commandArr, command);","lastModifiedDate":"2023-02-12"},{"lineNumber":227,"author":{"gitId":"chongweiguan"},"content":"            } else if (commandArr[0].equals(\"unmark\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":228,"author":{"gitId":"chongweiguan"},"content":"                return unmarkResponse(commandArr, command);","lastModifiedDate":"2023-02-12"},{"lineNumber":229,"author":{"gitId":"chongweiguan"},"content":"            } else if (commandArr[0].equals(\"delete\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":230,"author":{"gitId":"chongweiguan"},"content":"                return deleteResponse(commandArr, command);","lastModifiedDate":"2023-02-12"},{"lineNumber":231,"author":{"gitId":"chongweiguan"},"content":"            } else if (commandArr[0].equals(\"list\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":232,"author":{"gitId":"chongweiguan"},"content":"                return listResponse(commandArr, command);","lastModifiedDate":"2023-02-12"},{"lineNumber":233,"author":{"gitId":"chongweiguan"},"content":"            } else if (commandArr[0].equals(\"find\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":234,"author":{"gitId":"chongweiguan"},"content":"                return findResponse(commandArr, command);","lastModifiedDate":"2023-02-12"},{"lineNumber":235,"author":{"gitId":"chongweiguan"},"content":"            } else if (commandArr[0].equals(\"bye\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":236,"author":{"gitId":"chongweiguan"},"content":"                return byeResponse();","lastModifiedDate":"2023-02-12"},{"lineNumber":237,"author":{"gitId":"chongweiguan"},"content":"            } else if (command.equals(\"greet\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":238,"author":{"gitId":"chongweiguan"},"content":"                return ui.start();","lastModifiedDate":"2023-02-10"},{"lineNumber":239,"author":{"gitId":"chongweiguan"},"content":"            } else if (commandArr[0].equals(\"period\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":240,"author":{"gitId":"chongweiguan"},"content":"                return periodResponse(commandArr, command);","lastModifiedDate":"2023-02-12"},{"lineNumber":241,"author":{"gitId":"chongweiguan"},"content":"            } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":242,"author":{"gitId":"chongweiguan"},"content":"                return \"Should not reach this condition\";","lastModifiedDate":"2023-02-10"},{"lineNumber":243,"author":{"gitId":"chongweiguan"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":244,"author":{"gitId":"chongweiguan"},"content":"        } catch (DontKnowWhatThatMeansException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":245,"author":{"gitId":"chongweiguan"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":246,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":247,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":248,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":249,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":250,"author":{"gitId":"chongweiguan"},"content":"     * Gets the response from a todo command","lastModifiedDate":"2023-02-12"},{"lineNumber":251,"author":{"gitId":"chongweiguan"},"content":"     * @param commandArr array of strings from command String","lastModifiedDate":"2023-02-12"},{"lineNumber":252,"author":{"gitId":"chongweiguan"},"content":"     * @param command command from user input","lastModifiedDate":"2023-02-12"},{"lineNumber":253,"author":{"gitId":"chongweiguan"},"content":"     * @return the response from the command","lastModifiedDate":"2023-02-12"},{"lineNumber":254,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":255,"author":{"gitId":"chongweiguan"},"content":"    private String todoResponse(String[] commandArr, String command) {","lastModifiedDate":"2023-02-12"},{"lineNumber":256,"author":{"gitId":"chongweiguan"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":257,"author":{"gitId":"chongweiguan"},"content":"            DukeExceptions.checkEmptyDescription(commandArr);","lastModifiedDate":"2023-02-03"},{"lineNumber":258,"author":{"gitId":"chongweiguan"},"content":"            return ui.addTodo(list, parser.getTodoDescription(command));","lastModifiedDate":"2023-02-12"},{"lineNumber":259,"author":{"gitId":"chongweiguan"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":260,"author":{"gitId":"chongweiguan"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-12"},{"lineNumber":261,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":262,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":263,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":264,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":265,"author":{"gitId":"chongweiguan"},"content":"     * Gets the response from a deadline command","lastModifiedDate":"2023-02-12"},{"lineNumber":266,"author":{"gitId":"chongweiguan"},"content":"     * @param commandArr array of strings from command String","lastModifiedDate":"2023-02-12"},{"lineNumber":267,"author":{"gitId":"chongweiguan"},"content":"     * @param command command from user input","lastModifiedDate":"2023-02-12"},{"lineNumber":268,"author":{"gitId":"chongweiguan"},"content":"     * @return the response from the command","lastModifiedDate":"2023-02-12"},{"lineNumber":269,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":270,"author":{"gitId":"chongweiguan"},"content":"    private String deadlineResponse(String[] commandArr, String command) {","lastModifiedDate":"2023-02-12"},{"lineNumber":271,"author":{"gitId":"chongweiguan"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":272,"author":{"gitId":"chongweiguan"},"content":"            DukeExceptions.checkEmptyDescription(commandArr);","lastModifiedDate":"2023-02-03"},{"lineNumber":273,"author":{"gitId":"chongweiguan"},"content":"            return ui.addDeadline(list, parser.getDeadlineDescription(command), parser.getDeadlineby(command));","lastModifiedDate":"2023-02-12"},{"lineNumber":274,"author":{"gitId":"chongweiguan"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":275,"author":{"gitId":"chongweiguan"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-12"},{"lineNumber":276,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":277,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":278,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":279,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":280,"author":{"gitId":"chongweiguan"},"content":"     * Gets the response from a event command","lastModifiedDate":"2023-02-12"},{"lineNumber":281,"author":{"gitId":"chongweiguan"},"content":"     * @param commandArr array of strings from command String","lastModifiedDate":"2023-02-12"},{"lineNumber":282,"author":{"gitId":"chongweiguan"},"content":"     * @param command command from user input","lastModifiedDate":"2023-02-12"},{"lineNumber":283,"author":{"gitId":"chongweiguan"},"content":"     * @return the response from the command","lastModifiedDate":"2023-02-12"},{"lineNumber":284,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":285,"author":{"gitId":"chongweiguan"},"content":"    private String eventResponse(String[] commandArr, String command) {","lastModifiedDate":"2023-02-12"},{"lineNumber":286,"author":{"gitId":"chongweiguan"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":287,"author":{"gitId":"chongweiguan"},"content":"            DukeExceptions.checkEmptyDescription(commandArr);","lastModifiedDate":"2023-02-03"},{"lineNumber":288,"author":{"gitId":"chongweiguan"},"content":"            return ui.addEvent(list, parser.getEventDescription(command),","lastModifiedDate":"2023-02-12"},{"lineNumber":289,"author":{"gitId":"chongweiguan"},"content":"                parser.getEventFrom(command), parser.getEventEnd(command));","lastModifiedDate":"2023-02-03"},{"lineNumber":290,"author":{"gitId":"chongweiguan"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":291,"author":{"gitId":"chongweiguan"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-12"},{"lineNumber":292,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":293,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":294,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":295,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":296,"author":{"gitId":"chongweiguan"},"content":"     * Gets the response from a mark command","lastModifiedDate":"2023-02-12"},{"lineNumber":297,"author":{"gitId":"chongweiguan"},"content":"     * @param commandArr array of strings from command String","lastModifiedDate":"2023-02-12"},{"lineNumber":298,"author":{"gitId":"chongweiguan"},"content":"     * @param command command from user input","lastModifiedDate":"2023-02-12"},{"lineNumber":299,"author":{"gitId":"chongweiguan"},"content":"     * @return the response from the command","lastModifiedDate":"2023-02-12"},{"lineNumber":300,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":301,"author":{"gitId":"chongweiguan"},"content":"    private String markResponse(String[] commandArr, String command) {","lastModifiedDate":"2023-02-12"},{"lineNumber":302,"author":{"gitId":"chongweiguan"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":303,"author":{"gitId":"chongweiguan"},"content":"            DukeExceptions.checkEmptyDescription(commandArr);","lastModifiedDate":"2023-02-03"},{"lineNumber":304,"author":{"gitId":"chongweiguan"},"content":"            return ui.mark(list, parser.getMarkNum(command, true));","lastModifiedDate":"2023-02-12"},{"lineNumber":305,"author":{"gitId":"chongweiguan"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":306,"author":{"gitId":"chongweiguan"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-12"},{"lineNumber":307,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":308,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":309,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":310,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":311,"author":{"gitId":"chongweiguan"},"content":"     * Gets the response from a unmark command","lastModifiedDate":"2023-02-12"},{"lineNumber":312,"author":{"gitId":"chongweiguan"},"content":"     * @param commandArr array of strings from command String","lastModifiedDate":"2023-02-12"},{"lineNumber":313,"author":{"gitId":"chongweiguan"},"content":"     * @param command command from user input","lastModifiedDate":"2023-02-12"},{"lineNumber":314,"author":{"gitId":"chongweiguan"},"content":"     * @return the response from the command","lastModifiedDate":"2023-02-12"},{"lineNumber":315,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":316,"author":{"gitId":"chongweiguan"},"content":"    private String unmarkResponse(String[] commandArr, String command) {","lastModifiedDate":"2023-02-12"},{"lineNumber":317,"author":{"gitId":"chongweiguan"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":318,"author":{"gitId":"chongweiguan"},"content":"            DukeExceptions.checkEmptyDescription(commandArr);","lastModifiedDate":"2023-02-03"},{"lineNumber":319,"author":{"gitId":"chongweiguan"},"content":"            return ui.mark(list, parser.getMarkNum(command, false));","lastModifiedDate":"2023-02-12"},{"lineNumber":320,"author":{"gitId":"chongweiguan"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":321,"author":{"gitId":"chongweiguan"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-12"},{"lineNumber":322,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":323,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":324,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":325,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":326,"author":{"gitId":"chongweiguan"},"content":"     * Gets the response from a deadline command","lastModifiedDate":"2023-02-12"},{"lineNumber":327,"author":{"gitId":"chongweiguan"},"content":"     * @param commandArr array of strings from command String","lastModifiedDate":"2023-02-12"},{"lineNumber":328,"author":{"gitId":"chongweiguan"},"content":"     * @param command command from user input","lastModifiedDate":"2023-02-12"},{"lineNumber":329,"author":{"gitId":"chongweiguan"},"content":"     * @return the response from the command","lastModifiedDate":"2023-02-12"},{"lineNumber":330,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":331,"author":{"gitId":"chongweiguan"},"content":"    private String deleteResponse(String[] commandArr, String command) {","lastModifiedDate":"2023-02-12"},{"lineNumber":332,"author":{"gitId":"chongweiguan"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":333,"author":{"gitId":"chongweiguan"},"content":"            DukeExceptions.checkEmptyDescription(commandArr);","lastModifiedDate":"2023-02-03"},{"lineNumber":334,"author":{"gitId":"chongweiguan"},"content":"            return ui.removeTask(list, parser.getMarkNum(command, false));","lastModifiedDate":"2023-02-12"},{"lineNumber":335,"author":{"gitId":"chongweiguan"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":336,"author":{"gitId":"chongweiguan"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-12"},{"lineNumber":337,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":338,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":339,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":340,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":341,"author":{"gitId":"chongweiguan"},"content":"     * Gets the response from a list command","lastModifiedDate":"2023-02-12"},{"lineNumber":342,"author":{"gitId":"chongweiguan"},"content":"     * @param commandArr array of strings from command String","lastModifiedDate":"2023-02-12"},{"lineNumber":343,"author":{"gitId":"chongweiguan"},"content":"     * @param command command from user input","lastModifiedDate":"2023-02-12"},{"lineNumber":344,"author":{"gitId":"chongweiguan"},"content":"     * @return the response from the command","lastModifiedDate":"2023-02-12"},{"lineNumber":345,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":346,"author":{"gitId":"chongweiguan"},"content":"    private String listResponse(String[] commandArr, String command) {","lastModifiedDate":"2023-02-12"},{"lineNumber":347,"author":{"gitId":"chongweiguan"},"content":"        return ui.showList(list);","lastModifiedDate":"2023-02-12"},{"lineNumber":348,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":349,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":350,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":351,"author":{"gitId":"chongweiguan"},"content":"     * Gets the response from a find command","lastModifiedDate":"2023-02-12"},{"lineNumber":352,"author":{"gitId":"chongweiguan"},"content":"     * @param commandArr array of strings from command String","lastModifiedDate":"2023-02-12"},{"lineNumber":353,"author":{"gitId":"chongweiguan"},"content":"     * @param command command from user input","lastModifiedDate":"2023-02-12"},{"lineNumber":354,"author":{"gitId":"chongweiguan"},"content":"     * @return the response from the command","lastModifiedDate":"2023-02-12"},{"lineNumber":355,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":356,"author":{"gitId":"chongweiguan"},"content":"    private String findResponse(String[] commandArr, String command) {","lastModifiedDate":"2023-02-12"},{"lineNumber":357,"author":{"gitId":"chongweiguan"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":358,"author":{"gitId":"chongweiguan"},"content":"            DukeExceptions.checkEmptyDescription(commandArr);","lastModifiedDate":"2023-02-03"},{"lineNumber":359,"author":{"gitId":"chongweiguan"},"content":"            return ui.findTask(list, parser.getKeyword(command));","lastModifiedDate":"2023-02-12"},{"lineNumber":360,"author":{"gitId":"chongweiguan"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":361,"author":{"gitId":"chongweiguan"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-12"},{"lineNumber":362,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":363,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":364,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":365,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":366,"author":{"gitId":"chongweiguan"},"content":"     * Gets the response from a bye command","lastModifiedDate":"2023-02-12"},{"lineNumber":367,"author":{"gitId":"chongweiguan"},"content":"     * @return the response from the command","lastModifiedDate":"2023-02-12"},{"lineNumber":368,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":369,"author":{"gitId":"chongweiguan"},"content":"    private String byeResponse() {","lastModifiedDate":"2023-02-12"},{"lineNumber":370,"author":{"gitId":"chongweiguan"},"content":"        storage.saveData();","lastModifiedDate":"2023-02-12"},{"lineNumber":371,"author":{"gitId":"chongweiguan"},"content":"        return ui.showExit();","lastModifiedDate":"2023-02-12"},{"lineNumber":372,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":373,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":374,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":375,"author":{"gitId":"chongweiguan"},"content":"     * Gets the response from a period command","lastModifiedDate":"2023-02-12"},{"lineNumber":376,"author":{"gitId":"chongweiguan"},"content":"     * @param commandArr array of strings from the command","lastModifiedDate":"2023-02-12"},{"lineNumber":377,"author":{"gitId":"chongweiguan"},"content":"     * @param command user input","lastModifiedDate":"2023-02-12"},{"lineNumber":378,"author":{"gitId":"chongweiguan"},"content":"     * @return response from the command","lastModifiedDate":"2023-02-12"},{"lineNumber":379,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":380,"author":{"gitId":"chongweiguan"},"content":"    private String periodResponse(String[] commandArr, String command) {","lastModifiedDate":"2023-02-12"},{"lineNumber":381,"author":{"gitId":"chongweiguan"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":382,"author":{"gitId":"chongweiguan"},"content":"            DukeExceptions.checkEmptyDescription(commandArr);","lastModifiedDate":"2023-02-12"},{"lineNumber":383,"author":{"gitId":"chongweiguan"},"content":"            return ui.addPeriod(list, parser.getPeriodDescription(command),","lastModifiedDate":"2023-02-12"},{"lineNumber":384,"author":{"gitId":"chongweiguan"},"content":"                parser.getPeriodBetween(command), parser.getPeriodEnd(command));","lastModifiedDate":"2023-02-12"},{"lineNumber":385,"author":{"gitId":"chongweiguan"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":386,"author":{"gitId":"chongweiguan"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-12"},{"lineNumber":387,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":388,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":389,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"chongweiguan":389}},{"path":"src/main/java/duke/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":" * The class DukeExceptions helps to check whether or not an exception can be thrown","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":" * If an exception can be thrown, then DukeExceptions will throw Exceptions that are","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":" * specific to Duke","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"public class DukeExceptions {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"     * Checks whether a description is present when describing a task or action (Todo, Deadline, Event, Mark, Unmark),","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"     * If no description is present, then it throws anEmptyDescriptionException","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"     * @param command a String array that is split from the original command","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"     * @throws EmptyDescriptionException the exception thrown when no description is present","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"    static void checkEmptyDescription(String[] command) throws EmptyDescriptionException {","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"        assert !command.equals(null);","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":"        if (command.length \u003d\u003d 1 || (command[0].equals(\"deadline\") \u0026\u0026 command[1].equals(\"/by\"))","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"            || (command[0].equals(\"event\") \u0026\u0026 (command[1].equals(\"/from\") || command[1].equals(\"/to\")))) {","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"            throw new EmptyDescriptionException(\"☹ OOPS!!! The description of a \" + command[0] + \" cannot be empty\");","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"     * Checks whether the file data/duke.txt is present, if not then it throws a PastDataDoesNotExistException","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"     * @param fileExists boolean indicating whether a file exists","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"     * @throws PastDataDoesNotExistException the exception thrown when the file is not present","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"    static void checkPastData(boolean fileExists) throws PastDataDoesNotExistException {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"chongweiguan"},"content":"        if (!fileExists) {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"chongweiguan"},"content":"            throw new PastDataDoesNotExistException(\"☹ OOPS!!! Past data does not exist!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"chongweiguan"},"content":"     * Checks whether it is a valid command, if not this method throws a DontKnowWhatThatMeansException","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"chongweiguan"},"content":"     * @param command a String array that is split from the original command","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"chongweiguan"},"content":"     * @throws DontKnowWhatThatMeansException the Exception thrown when it is not a valid command","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"chongweiguan"},"content":"    static void checkCommand(String[] command) throws DontKnowWhatThatMeansException {","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"chongweiguan"},"content":"        assert !command.equals(null);","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"chongweiguan"},"content":"        String[] commandArray \u003d {\"mark\", \"unmark\", \"todo\", \"delete\", \"deadline\",","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"chongweiguan"},"content":"            \"event\", \"list\", \"bye\", \"find\", \"greet\", \"period\"};","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"chongweiguan"},"content":"        boolean isValidCommand \u003d false;","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"chongweiguan"},"content":"        for (int i \u003d 0; i \u003c commandArray.length; i++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"chongweiguan"},"content":"            if (command[0].equals(commandArray[i])) {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"chongweiguan"},"content":"                isValidCommand \u003d true;","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"chongweiguan"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"chongweiguan"},"content":"        if (isValidCommand \u003d\u003d false) {","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"chongweiguan"},"content":"            throw new DontKnowWhatThatMeansException(\"☹ OOPS!!! Don\u0027t know what that means\");","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"chongweiguan":51}},{"path":"src/main/java/duke/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":" * This exception is thrown when there is an empty description","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"        super(message);","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"chongweiguan":10}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":" * Event is a task that inherit Tasks, and it represents a task that has a certain start","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":" * date and time, and a certain end date and time","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"public class Event extends Tasks {","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"     * Returns an Event Object that inherits the Tasks Class, it is a task with a","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":"     * certain start date and time, and a certain end date and time","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"     * @param description the details of the event","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"     * @param from the start date and time of the event","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":"     * @param to the end date and time of the event","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"chongweiguan"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"chongweiguan"},"content":"     * Overrides the toString() method, it prints out the full description","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"chongweiguan"},"content":"     * of the Event","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"chongweiguan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"chongweiguan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"chongweiguan"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"chongweiguan"},"content":"            + this.from.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.SHORT))","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"chongweiguan"},"content":"                + \" to: \" + this.to.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.SHORT)) + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"chongweiguan"},"content":"     * Saves the event into data/duke.txt","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"chongweiguan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"chongweiguan"},"content":"    public String log() {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"chongweiguan"},"content":"        return \"E\" + super.log() + \" | \" + this.from + \" - \" + this.to + \"\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"chongweiguan":46}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"public class Launcher {","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"     * starts the Launcher","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"     * @param args","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"chongweiguan":16}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"     * Duke object created","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"    private Duke duke \u003d new Duke(new UI(), new Parser());","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"chongweiguan"},"content":"     * starts the Main application","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"        assert !stage.equals(null);","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"        duke.initialize();","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"chongweiguan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"../view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"chongweiguan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"chongweiguan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"chongweiguan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"chongweiguan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"chongweiguan"},"content":"            stage.show();","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"chongweiguan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"chongweiguan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"chongweiguan":38}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"chongweiguan"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"../images/DaUser.png\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"../images/DaDuke.png\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"chongweiguan"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"chongweiguan"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"chongweiguan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"chongweiguan"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"chongweiguan"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"chongweiguan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"chongweiguan"},"content":"                DialogBox.getDukeDialog(\"Hello! I\u0027m Duke!\\nWhat can I do for you?\", dukeImage));","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"chongweiguan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"chongweiguan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"chongweiguan"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"chongweiguan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"chongweiguan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"chongweiguan"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"chongweiguan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"chongweiguan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"chongweiguan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"chongweiguan"},"content":"        );","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"chongweiguan"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"chongweiguan":53}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":" * Parser is a class that deals with making sense of the user command, this includes","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":" * getting the description of a certain task, getting the index from the mark, unmark and delete","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":" * commands, getting the deadline of a Deadline object and getting the start DateTime","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":" * and end DateTime of an Event Object","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"public class Parser {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"     * Returns an index from the commands mark, unmark or delete","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"     * @param input the command from the user input","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"     * @param isMark boolean that checks whether the command is \u0027mark\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"     * @return int index of the command","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":"    public int getMarkNum(String input, boolean isMark) {","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"        assert input.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"        if (isMark) {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":"            return Integer.valueOf(input.substring(5));","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"chongweiguan"},"content":"        } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"chongweiguan"},"content":"            return Integer.valueOf(input.substring(7));","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"     * Returns the keyword from the command","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"chongweiguan"},"content":"     * @param input the command from the user input","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"chongweiguan"},"content":"     * @return keyword","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"chongweiguan"},"content":"    public String getKeyword(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"chongweiguan"},"content":"        assert input.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"chongweiguan"},"content":"        return input.substring(5);","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"chongweiguan"},"content":"     * Returns a description of a Todo object","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"chongweiguan"},"content":"     * @param input todo command","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"chongweiguan"},"content":"     * @return Description of the todo object","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"chongweiguan"},"content":"    public String getTodoDescription(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"chongweiguan"},"content":"        assert input.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"chongweiguan"},"content":"        if (input.substring(4).equals(\"\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"chongweiguan"},"content":"            return \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"chongweiguan"},"content":"        return input.substring(5);","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"chongweiguan"},"content":"     * Returns the deadline of a Deadline Object","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"chongweiguan"},"content":"     * @param input deadline command","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"chongweiguan"},"content":"     * @return deadline of the Deadline object","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"chongweiguan"},"content":"    public String getDeadlineby(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"chongweiguan"},"content":"        assert input.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"chongweiguan"},"content":"        if (input.indexOf(\"/by\") \u003d\u003d -1) {","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"chongweiguan"},"content":"            return \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"chongweiguan"},"content":"        return input.substring(input.indexOf(\"/by\") + 4);","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"chongweiguan"},"content":"     * Returns the description of a deadline object","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"chongweiguan"},"content":"     * @param input deadline command","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"chongweiguan"},"content":"     * @return description of the deadline object","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"chongweiguan"},"content":"    public String getDeadlineDescription(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"chongweiguan"},"content":"        assert input.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"chongweiguan"},"content":"        if (input.indexOf(\"/by\") \u003d\u003d 9) {","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"chongweiguan"},"content":"            return \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"chongweiguan"},"content":"        return input.substring(9, input.indexOf(\"/by\") - 1);","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"chongweiguan"},"content":"     * Returns the description of an event object","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"chongweiguan"},"content":"     * @param input event command","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"chongweiguan"},"content":"     * @return description of the event object","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"chongweiguan"},"content":"    public String getEventDescription(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"chongweiguan"},"content":"        assert input.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"chongweiguan"},"content":"        String[] arr \u003d input.split(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"chongweiguan"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"chongweiguan"},"content":"            return \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"chongweiguan"},"content":"        } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"chongweiguan"},"content":"            String output \u003d \"\";","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"chongweiguan"},"content":"            int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"chongweiguan"},"content":"            assert fromIndex \u003e -1;","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"chongweiguan"},"content":"            output \u003d input.substring(7, fromIndex - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"chongweiguan"},"content":"            return output;","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"chongweiguan"},"content":"     * Returns the event start date and time","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"chongweiguan"},"content":"     * @param input event command","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"chongweiguan"},"content":"     * @return Start date and time of an event","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"chongweiguan"},"content":"    public String getEventFrom(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"chongweiguan"},"content":"        assert input.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"chongweiguan"},"content":"        int start \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"chongweiguan"},"content":"        int end \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"chongweiguan"},"content":"        if (start \u003d\u003d -1 || end \u003d\u003d -1) {","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"chongweiguan"},"content":"            return \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"chongweiguan"},"content":"        return input.substring(start + 6, end - 1);","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"chongweiguan"},"content":"     * Returns the event end date and time","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"chongweiguan"},"content":"     * @param input event command","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"chongweiguan"},"content":"     * @return End date and time of an event","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"chongweiguan"},"content":"    public String getEventEnd(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"chongweiguan"},"content":"        assert input.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"chongweiguan"},"content":"        return input.substring(input.indexOf(\"/to\") + 4);","lastModifiedDate":"2023-02-03"},{"lineNumber":117,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":118,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"chongweiguan"},"content":"     * Returns the string of the period task description","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"chongweiguan"},"content":"     * @param input user command","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"chongweiguan"},"content":"     * @return description String","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"chongweiguan"},"content":"    public String getPeriodDescription(String input) {","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"chongweiguan"},"content":"        assert input.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"chongweiguan"},"content":"        String[] arr \u003d input.split(\" \");","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"chongweiguan"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"chongweiguan"},"content":"            return \"\";","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"chongweiguan"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"chongweiguan"},"content":"            String output \u003d \"\";","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"chongweiguan"},"content":"            int fromIndex \u003d input.indexOf(\"/between\");","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"chongweiguan"},"content":"            assert fromIndex \u003e -1;","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"chongweiguan"},"content":"            output \u003d input.substring(7, fromIndex - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"chongweiguan"},"content":"            return output;","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"chongweiguan"},"content":"     * Returns the string of the starting date and time of the period task","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"chongweiguan"},"content":"     * @param input user command","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"chongweiguan"},"content":"     * @return starting date and time of the string","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"chongweiguan"},"content":"    public String getPeriodBetween(String input) {","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"chongweiguan"},"content":"        assert input.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"chongweiguan"},"content":"        int start \u003d input.indexOf(\"/between\");","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"chongweiguan"},"content":"        int end \u003d input.indexOf(\"/and\");","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"chongweiguan"},"content":"        if (start \u003d\u003d -1 || end \u003d\u003d -1) {","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"chongweiguan"},"content":"            return \"\";","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"chongweiguan"},"content":"        return input.substring(start + 9, end - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"chongweiguan"},"content":"     * Returns the string of the ending date and time of the period task","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"chongweiguan"},"content":"     * @param input user command","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"chongweiguan"},"content":"     * @return ending date and time of the string","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":158,"author":{"gitId":"chongweiguan"},"content":"    public String getPeriodEnd(String input) {","lastModifiedDate":"2023-02-12"},{"lineNumber":159,"author":{"gitId":"chongweiguan"},"content":"        assert input.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":160,"author":{"gitId":"chongweiguan"},"content":"        return input.substring(input.indexOf(\"/and\") + 5);","lastModifiedDate":"2023-02-12"},{"lineNumber":161,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":162,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"chongweiguan":162}},{"path":"src/main/java/duke/PastDataDoesNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":" * Thrown when there is no file data/duke in the application, or no past data","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":"public class PastDataDoesNotExistException extends Exception {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":"    public PastDataDoesNotExistException(String message) {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"        super(message);","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"chongweiguan":10}},{"path":"src/main/java/duke/Period.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":" * Period is a task that needs to be done within a certain period","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"public class Period extends Tasks {","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"     * Starting date and time of the period task","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"    protected LocalDateTime between;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":"     * Ending date and time of the period task","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"    protected LocalDateTime and;","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"chongweiguan"},"content":"     * Creates a period task with a description, start and end date and time","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"     * @param description describes the period task","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"     * @param between starting date and time","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"     * @param and ending date and time","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"    public Period(String description, LocalDateTime between, LocalDateTime and) {","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"chongweiguan"},"content":"        super(description);","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"chongweiguan"},"content":"        this.between \u003d between;","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"chongweiguan"},"content":"        this.and \u003d and;","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"chongweiguan"},"content":"     * Strign representation of the period task","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"chongweiguan"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"chongweiguan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"chongweiguan"},"content":"        return \"[P]\" + super.toString() + \" (to be done between: \"","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"chongweiguan"},"content":"            + this.between.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.SHORT))","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"chongweiguan"},"content":"                + \" and: \" + this.between.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.SHORT)) + \")\";","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"chongweiguan"},"content":"     * logs the period task into data file","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"chongweiguan"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"chongweiguan"},"content":"    public String log() {","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"chongweiguan"},"content":"        return \"P\" + super.log() + \" | \" + this.between + \" - \" + this.and + \"\\n\";","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"chongweiguan":50}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"import java.io.File;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":" * Storage is a class that finds, loads and saves data into the file data/duke.txt","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"public class Storage {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"     * file that the storage gets the data from","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"chongweiguan"},"content":"    private File file;","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"     * checks whether the file exist","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"    private boolean hasFileData;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"     * list of tasks that is extracted from the file","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"chongweiguan"},"content":"    private TasksList list;","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"chongweiguan"},"content":"     * Returns a storage object that contains a list of Tasks objects","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"chongweiguan"},"content":"     * @param list ArrayList of Tasks Objects","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"chongweiguan"},"content":"    public Storage(TasksList list) {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"chongweiguan"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"chongweiguan"},"content":"        Path path \u003d Paths.get(\"data/duke.txt\");","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"chongweiguan"},"content":"        this.hasFileData \u003d java.nio.file.Files.exists(path);","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"chongweiguan"},"content":"        this.file \u003d path.toFile();","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"chongweiguan"},"content":"     * finds the past data from data/duke.txt file throws the","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"chongweiguan"},"content":"     * PastDataDoesNotExistException exception if the file does","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"chongweiguan"},"content":"     * not exists","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"chongweiguan"},"content":"    public void findData() {","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"chongweiguan"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"chongweiguan"},"content":"            DukeExceptions.checkPastData(hasFileData);","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"chongweiguan"},"content":"        } catch (PastDataDoesNotExistException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"chongweiguan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"chongweiguan"},"content":"     * Loads the data of the past data into the arraylist of storage","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"chongweiguan"},"content":"    public void loadData() {","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"chongweiguan"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"chongweiguan"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"chongweiguan"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"chongweiguan"},"content":"                String[] input \u003d sc.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"chongweiguan"},"content":"                Tasks task;","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"chongweiguan"},"content":"                if (input[0].equals(\"T\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"chongweiguan"},"content":"                    task \u003d new Todo(input[2]);","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"chongweiguan"},"content":"                } else if (input[0].equals(\"D\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"chongweiguan"},"content":"                    String dateTime \u003d input[3];","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"chongweiguan"},"content":"                    String newDateTime \u003d dateTimeFormat(dateTime);","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"chongweiguan"},"content":"                    DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"chongweiguan"},"content":"                    LocalDateTime formattedDeadline \u003d LocalDateTime.parse(newDateTime, dateTimeFormatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"chongweiguan"},"content":"                    task \u003d new Deadline(input[2], formattedDeadline);","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"chongweiguan"},"content":"                } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"chongweiguan"},"content":"                    DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"chongweiguan"},"content":"                    String[] split \u003d input[3].split(\" - \");","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"chongweiguan"},"content":"                    String from \u003d dateTimeFormat(split[0]);","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"chongweiguan"},"content":"                    String by \u003d dateTimeFormat(split[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"chongweiguan"},"content":"                    LocalDateTime formattedstartTime \u003d LocalDateTime.parse(from, dateTimeFormatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"chongweiguan"},"content":"                    LocalDateTime formattedendTime \u003d LocalDateTime.parse(by, dateTimeFormatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"chongweiguan"},"content":"                    task \u003d new Event(input[2], formattedstartTime, formattedendTime);","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"chongweiguan"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"chongweiguan"},"content":"                if (input[1].equals(\"1\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"chongweiguan"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"chongweiguan"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"chongweiguan"},"content":"                list.addTask(task);","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"chongweiguan"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"chongweiguan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"chongweiguan"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"chongweiguan"},"content":"     * Saves the data into data/duke.txt when ther bye command is executed","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"chongweiguan"},"content":"    public void saveData() {","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"chongweiguan"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"chongweiguan"},"content":"            FileWriter writer \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"chongweiguan"},"content":"            for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"chongweiguan"},"content":"                String line \u003d list.getTask(i).log();","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"chongweiguan"},"content":"                writer.write(line);","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"chongweiguan"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"chongweiguan"},"content":"            writer.close();","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"chongweiguan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"chongweiguan"},"content":"            System.out.println(\"☹ OOPS!!! I cannot write to the file!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"chongweiguan"},"content":"     * Returns a string of date and time of a certain format","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"chongweiguan"},"content":"     * @param datetime String of date and time","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"chongweiguan"},"content":"     * @return formatted string of date and time","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"chongweiguan"},"content":"    private String dateTimeFormat(String datetime) {","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"chongweiguan"},"content":"        String year \u003d datetime.substring(0, 4);","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"chongweiguan"},"content":"        String month \u003d datetime.substring(5, 7);","lastModifiedDate":"2023-02-03"},{"lineNumber":116,"author":{"gitId":"chongweiguan"},"content":"        String day \u003d datetime.substring(8, 10);","lastModifiedDate":"2023-02-03"},{"lineNumber":117,"author":{"gitId":"chongweiguan"},"content":"        String hour \u003d datetime.substring(11, 13);","lastModifiedDate":"2023-02-03"},{"lineNumber":118,"author":{"gitId":"chongweiguan"},"content":"        String min \u003d datetime.substring(14, 16);","lastModifiedDate":"2023-02-03"},{"lineNumber":119,"author":{"gitId":"chongweiguan"},"content":"        String newDateTime \u003d day + \"/\" + month + \"/\" + year + \" \" + hour + min;","lastModifiedDate":"2023-02-03"},{"lineNumber":120,"author":{"gitId":"chongweiguan"},"content":"        return newDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"chongweiguan":122}},{"path":"src/main/java/duke/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":" * Tasks is an object that is to be done or undertaken by the user","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":"public class Tasks {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"     * description of the task","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"    protected String description;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"     * boolean that indicates whether a task has been completed","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"     * returns a tasks object with a description that is marked undone","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"     * @param description Describes the task","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"chongweiguan"},"content":"    public Tasks(String description) {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"chongweiguan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"     * Saves the task in data/duke.txt","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"chongweiguan"},"content":"     * @return a string that will be saved","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"chongweiguan"},"content":"    public String log() {","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"chongweiguan"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"chongweiguan"},"content":"            return \" | 1 | \" + this.description;","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"chongweiguan"},"content":"        } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"chongweiguan"},"content":"            return (\" | 0 | \" + this.description);","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"chongweiguan"},"content":"     * Returns the description of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"chongweiguan"},"content":"     * @return description of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"chongweiguan"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"chongweiguan"},"content":"        return this.description;","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"chongweiguan"},"content":"     * Returns the status of the task, \"X\" indicates done,","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"chongweiguan"},"content":"     * \" \" indicates undone","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"chongweiguan"},"content":"     * @return Status of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"chongweiguan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"chongweiguan"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"chongweiguan"},"content":"     * Marks the task as done","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"chongweiguan"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"chongweiguan"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"chongweiguan"},"content":"     * Marks the task as undone","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"chongweiguan"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"chongweiguan"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"chongweiguan"},"content":"     * Represents the task as a string","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"chongweiguan"},"content":"     * @return String that represents the task","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"chongweiguan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"chongweiguan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"chongweiguan"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"chongweiguan":77}},{"path":"src/main/java/duke/TasksList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":" * A list of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"public class TasksList {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"     * Array list of tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"    private ArrayList\u003cTasks\u003e list;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"     * Returns a TasksList object of a certain size","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"     * @param size number of objects that can be inside the TasksList","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"    public TasksList(int size) {","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"        list \u003d new ArrayList\u003cTasks\u003e(size);","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"     * Adds a task into the list of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"     * @param task The task that is to be added","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"    public void addTask(Tasks task) {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"        list.add(task);","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"chongweiguan"},"content":"     * Returns the number of tasks in the list","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"chongweiguan"},"content":"     * @return Size of list","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"chongweiguan"},"content":"    public int getSize() {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"chongweiguan"},"content":"        return list.size();","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"chongweiguan"},"content":"     * Returns the task that is in the list of a certain index","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"chongweiguan"},"content":"     * @param index index of the arraylist","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"chongweiguan"},"content":"     * @return Task that is in the list at the certain index","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"chongweiguan"},"content":"    public Tasks getTask(int index) {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"chongweiguan"},"content":"        return list.get(index);","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"chongweiguan"},"content":"     * Removes this task from the list of a certain index","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"chongweiguan"},"content":"     * @param index index of the arraylist","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"chongweiguan"},"content":"    public Tasks removeTask(int index) {","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"chongweiguan"},"content":"        return list.remove(index);","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"chongweiguan":54}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":" * Todo is a task that inherits Tasks, it represents a task that","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":" * you are supposed to complete","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":"public class Todo extends Tasks {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"     * Returns a Todo object that inherits the Tasks Class it is a certain","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"     * task that is to be completed and it is first set to be undone","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"     * @param description the details of the todo task","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"     * Overrides the toString() method, it prints out the full description","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":"     * of the todo task","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"chongweiguan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"chongweiguan"},"content":"     * Saves the todo task into data/duke.txt","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"chongweiguan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"chongweiguan"},"content":"    public String log() {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"chongweiguan"},"content":"        return \"T\" + super.log() + \"\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"chongweiguan":34}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":" * UI deals with the interactions with the user, including starting the process,","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":" * adding tasks into the task list, removing the task from the task list,","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":" * marking and unmarking tasks, and exiting the process","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"public class UI {","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"     * Prints out the starting message when the Duke application begins","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"    public String start() {","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":"        return \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"chongweiguan"},"content":"     * Prints out the list of task from the TaskList","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"chongweiguan"},"content":"     * @param list Task List","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"    public String showList(TasksList list) {","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"        assert !list.equals(null);","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"        String output \u003d \"Here are the task(s) in your list:\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"        for (int i \u003d 1; i \u003c\u003d list.getSize(); i++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"chongweiguan"},"content":"            output \u003d output + i + \".\" + list.getTask(i - 1).toString() + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"chongweiguan"},"content":"        return output;","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"chongweiguan"},"content":"     * Prints out the list of tasks from the task list that contains a certain","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"chongweiguan"},"content":"     * keyword","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"chongweiguan"},"content":"    public String findTask(TasksList list, String keyword) {","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"chongweiguan"},"content":"        assert !list.equals(null) \u0026\u0026 keyword.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"chongweiguan"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"chongweiguan"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"chongweiguan"},"content":"        for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"chongweiguan"},"content":"            String[] taskDescription \u003d list.getTask(i).getDescription().split(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"chongweiguan"},"content":"            for (String word : taskDescription) {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"chongweiguan"},"content":"                if (keyword.equals(word)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"chongweiguan"},"content":"                    output \u003d output + counter + \".\" + list.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"chongweiguan"},"content":"                    counter++;","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"chongweiguan"},"content":"                    break;","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"chongweiguan"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"chongweiguan"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"chongweiguan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"chongweiguan"},"content":"        return output;","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"chongweiguan"},"content":"     * Mark the task in the certain index of the Task List as done","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"chongweiguan"},"content":"     * @param list Task List","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"chongweiguan"},"content":"     * @param index index of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"chongweiguan"},"content":"    public String mark(TasksList list, int index) {","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"chongweiguan"},"content":"        assert !list.equals(null) \u0026\u0026 index \u003e -1;","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"chongweiguan"},"content":"        list.getTask(index - 1).markAsDone();","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"chongweiguan"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + list.getTask(index - 1).toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"chongweiguan"},"content":"     * Mark the task in the certain index of the Task List as undone","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"chongweiguan"},"content":"     * @param list Task List","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"chongweiguan"},"content":"     * @param index index of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"chongweiguan"},"content":"    public String unmark(TasksList list, int index) {","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"chongweiguan"},"content":"        assert !list.equals(null) \u0026\u0026 index \u003e -1;","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"chongweiguan"},"content":"        list.getTask(index - 1).markAsUndone();","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"chongweiguan"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + list.getTask(index - 1).toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"chongweiguan"},"content":"     * Adds a Todo Object into the Task List","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"chongweiguan"},"content":"     * @param list Task List","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"chongweiguan"},"content":"     * @param name Description of the todo task","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"chongweiguan"},"content":"    public String addTodo(TasksList list, String name) {","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"chongweiguan"},"content":"        assert !list.equals(null) \u0026\u0026 name.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"chongweiguan"},"content":"        list.addTask(new Todo(name));","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"chongweiguan"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + list.getTask(list.getSize() - 1).toString()","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"chongweiguan"},"content":"            + \"\\n\" + \"Now you have \" + list.getSize() + \" task(s) in the list.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"chongweiguan"},"content":"     * Adds a Deadline Object into the Task List","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"chongweiguan"},"content":"     * @param list Task List","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"chongweiguan"},"content":"     * @param name Description of the Deadline task","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"chongweiguan"},"content":"     * @param deadline Date and Time of the deadline","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"chongweiguan"},"content":"    public String addDeadline(TasksList list, String name, String deadline) {","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"chongweiguan"},"content":"        assert !list.equals(null) \u0026\u0026 name.length() \u003e 0 \u0026\u0026 deadline.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"chongweiguan"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"chongweiguan"},"content":"        LocalDateTime formattedDeadline \u003d LocalDateTime.parse(deadline, dateTimeFormatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"chongweiguan"},"content":"        list.addTask(new Deadline(name, formattedDeadline));","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"chongweiguan"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + list.getTask(list.getSize() - 1).toString()","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"chongweiguan"},"content":"            + \"\\n\" + \"Now you have \" + list.getSize() + \" task(s) in the list.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"chongweiguan"},"content":"     * Adds an Event Object into the Task List","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"chongweiguan"},"content":"     * @param list Task List","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"chongweiguan"},"content":"     * @param name Description of the event task","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"chongweiguan"},"content":"     * @param start Date and time of the start of the event","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"chongweiguan"},"content":"     * @param end Date and time of the end of the event","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"chongweiguan"},"content":"    public String addEvent(TasksList list, String name, String start, String end) {","lastModifiedDate":"2023-02-10"},{"lineNumber":111,"author":{"gitId":"chongweiguan"},"content":"        assert !list.equals(null) \u0026\u0026 name.length() \u003e 0 \u0026\u0026 start.length() \u003e 0 \u0026\u0026 end.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"chongweiguan"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"chongweiguan"},"content":"        LocalDateTime formattedstartTime \u003d LocalDateTime.parse(start, dateTimeFormatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"chongweiguan"},"content":"        LocalDateTime formattedendTime \u003d LocalDateTime.parse(end, dateTimeFormatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"chongweiguan"},"content":"        list.addTask(new Event(name, formattedstartTime, formattedendTime));","lastModifiedDate":"2023-02-03"},{"lineNumber":116,"author":{"gitId":"chongweiguan"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + list.getTask(list.getSize() - 1).toString()","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"chongweiguan"},"content":"            + \"\\n\" + \"Now you have \" + list.getSize() + \" task(s) in the list.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":118,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":119,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":120,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"chongweiguan"},"content":"     * Removes a task from the Task List","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"chongweiguan"},"content":"     * @param list Task List","lastModifiedDate":"2023-02-03"},{"lineNumber":123,"author":{"gitId":"chongweiguan"},"content":"     * @param index Index of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"chongweiguan"},"content":"    public String removeTask(TasksList list, int index) {","lastModifiedDate":"2023-02-10"},{"lineNumber":126,"author":{"gitId":"chongweiguan"},"content":"        assert !list.equals(null) \u0026\u0026 index \u003e -1;","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"chongweiguan"},"content":"        return \"Noted. I\u0027ve removed this task :\\n  \" + list.removeTask(index - 1).toString()","lastModifiedDate":"2023-02-10"},{"lineNumber":128,"author":{"gitId":"chongweiguan"},"content":"            + \"Now you have \" + list.getSize() + \" task(s) in the list.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":129,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":130,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":132,"author":{"gitId":"chongweiguan"},"content":"     * Prints the exit message when the Duke Application closes","lastModifiedDate":"2023-02-03"},{"lineNumber":133,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"chongweiguan"},"content":"    public String showExit() {","lastModifiedDate":"2023-02-10"},{"lineNumber":135,"author":{"gitId":"chongweiguan"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":136,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":137,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"chongweiguan"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"chongweiguan"},"content":"     * Adds a period task into the data file","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"chongweiguan"},"content":"     * @param list list of tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"chongweiguan"},"content":"     * @param description describes the period task","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"chongweiguan"},"content":"     * @param start starting date and time","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"chongweiguan"},"content":"     * @param end ending date and time","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"chongweiguan"},"content":"     * @return String representation after adding the task into the data file","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"chongweiguan"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"chongweiguan"},"content":"    public String addPeriod(TasksList list, String description, String start, String end) {","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"chongweiguan"},"content":"        assert !list.equals(null) \u0026\u0026 description.length() \u003e 0 \u0026\u0026 start.length() \u003e 0 \u0026\u0026 end.length() \u003e 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"chongweiguan"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"chongweiguan"},"content":"        LocalDateTime formattedstartTime \u003d LocalDateTime.parse(start, dateTimeFormatter);","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"chongweiguan"},"content":"        LocalDateTime formattedendTime \u003d LocalDateTime.parse(end, dateTimeFormatter);","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"chongweiguan"},"content":"        list.addTask(new Period(description, formattedstartTime, formattedendTime));","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"chongweiguan"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + list.getTask(list.getSize() - 1).toString()","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"chongweiguan"},"content":"            + \"\\n\" + \"Now you have \" + list.getSize() + \" task(s) in the list.\";","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"chongweiguan":155}},{"path":"src/main/java/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"      \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"      \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"        \u003cFont name\u003d\"Consolas\" size\u003d\"12.0\"/\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":"      \u003c/font\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":"      \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"chongweiguan"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"chongweiguan"},"content":"      \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"    \u003c/ImageView\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"chongweiguan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"chongweiguan":28}},{"path":"src/main/java/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"60.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"chongweiguan":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"    public void createDeadline() {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"        Deadline deadline \u003d new Deadline(\"Content\", LocalDateTime.of(2023, 11, 13, 12, 00));","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"        assertNotNull(deadline);","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"        assertEquals(deadline.toString(), \"[D][ ] deadline Content (by: 13/11/2023, 12:00 PM)\");","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"    public void changeStatusOfTodo() {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":"        Deadline deadline \u003d new Deadline(\"Content\", LocalDateTime.of(2023, 11, 13, 12, 00));","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"chongweiguan"},"content":"        assertEquals(deadline.getStatusIcon(), \" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"chongweiguan"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"        assertEquals(deadline.getStatusIcon(), \"X\");","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"        deadline.markAsUndone();","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"        assertEquals(deadline.getStatusIcon(), \" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"chongweiguan":27}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"    public void creatingTodo() {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"        Todo todo \u003d new Todo(\"Content\");","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"chongweiguan"},"content":"        assertNotNull(todo);","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"chongweiguan"},"content":"        assertEquals(todo.getDescription(), \"Content\");","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"chongweiguan"},"content":"        assertEquals(todo.getStatusIcon(), \" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"chongweiguan"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"chongweiguan"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"chongweiguan"},"content":"    public void changeStatusOfTodo() {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"chongweiguan"},"content":"        Todo todo \u003d new Todo(\"Content\");","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"chongweiguan"},"content":"        assertEquals(todo.getStatusIcon(), \" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"chongweiguan"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"chongweiguan"},"content":"        assertEquals(todo.getStatusIcon(), \"X\");","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"chongweiguan"},"content":"        todo.markAsUndone();","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"chongweiguan"},"content":"        assertEquals(todo.getStatusIcon(), \" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"chongweiguan"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"chongweiguan"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"chongweiguan":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chongweiguan"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"chongweiguan"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"chongweiguan"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"chongweiguan"},"content":"todo join sports club","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"chongweiguan"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"chongweiguan"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"chongweiguan"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"chongweiguan"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"chongweiguan"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"chongweiguan"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"chongweiguan"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"chongweiguan"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"chongweiguan":12}}]
