[{"path":"src/main/java/ClippyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"public class ClippyException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"    String msg;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"    public ClippyException(String msg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"        super(msg);","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"        return \"\u003e\u003e\u003e Hold up! Clippy is confused - \" + this.msg;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":12}},{"path":"src/main/java/ClippyInvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"public class ClippyInvalidEventException extends ClippyException {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"    public ClippyInvalidEventException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"        super(\"cannot recognise event start and end time - please specify it as such: \\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"                \"event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":6}},{"path":"src/main/java/ClippyMissingDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"public class ClippyMissingDeadlineException extends ClippyException {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"    public ClippyMissingDeadlineException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"        super(\"deadline cannot be recognised - please specify the deadline as such: \\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"                \"deadline \u003cdescription\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":6}},{"path":"src/main/java/ClippyTodoEmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"public class ClippyTodoEmptyDescriptionException extends ClippyException {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"    public ClippyTodoEmptyDescriptionException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"        super(\"the description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":5}},{"path":"src/main/java/ClippyUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"public class ClippyUnknownCommandException extends ClippyException {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"    public ClippyUnknownCommandException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"        super(\"the command cannot be recognised.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"    private LocalDate by;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"        // only show day of the week + day of the month + month","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"        return \"[D]\" + super.toString() +","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"                \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"EEE dd MMM\")) + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    public String getCsvString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"        return String.format(\"D,%s,%s\", super.getCsvString(), this.by);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":23}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import java.util.List;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import java.io.File;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"    private static final String SAVE_FILE_PATH \u003d \"./data/\";","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    private static final String SAVE_FILE_NAME \u003d \"state.data\";","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    private static final File saveFile \u003d new File(SAVE_FILE_PATH + SAVE_FILE_NAME);","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    private static final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"        final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"        final String logo \u003d \"   _____  _  _                      \\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"                \"  / ____|| |(_)                     \\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"                \" | |     | | _  _ __   _ __   _   _ \\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"                \" | |     | || || \u0027_ \\\\ | \u0027_ \\\\ | | | |\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"                \" | |____ | || || |_) || |_) || |_| |\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"                \"  \\\\_____||_||_|| .__/ | .__/  \\\\__, |\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"                \"               | |    | |      __/ |\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"                \"               |_|    |_|     |___/ \";","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"        prettyPrint(\"Hello! I\u0027m Clippy, your lightweight personal assistant.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        loadState();","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"        prettyPrint(\"What can I do for you today?\");","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"        while (parseCommand(sc.nextLine().trim()));","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"        return;","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"     * Takes in a command and attempts to perform it, if valid.","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"     * Accepted commands: [add], delete, todo, deadline, event, mark, unmark, list, bye","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"     * [add] is invoked whenever any string that does not match other commands is entered.","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"     * @param   command a string containing the command entered by the user","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"     * @return          true if programme should continue accepting further commands, else false","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"    private static boolean parseCommand(String command) {","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"            String[] args \u003d command.split(\" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"            switch (args[0]) {","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"                case \"bye\":","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"                    systemPrint(\"Saving state, please wait...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"                    saveState();","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"                    systemPrint(\"State successfully saved.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(\"Hope I helped. Goodbye!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"                    return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"                    // todo: check if second argument is a valid number","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(\"Great job! I\u0027ve marked this task as done: \");","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"                    tasks.get(Integer.parseInt(args[1]) - 1).complete();","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(tasks.get(Integer.parseInt(args[1]) - 1).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"                    return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"                    // todo: check if second argument is a valid number","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(\"Aww... I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"                    tasks.get(Integer.parseInt(args[1]) - 1).uncomplete();","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(tasks.get(Integer.parseInt(args[1]) - 1).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"                    return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"                case \"event\":","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"                    if (args[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"                        if (args.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"                            throw new ClippyTodoEmptyDescriptionException();","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"                        tasks.add(new ToDo(String.join(\" \", Arrays.copyOfRange(args, 1, args.length))));","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"                    } else if (args[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"                        int byIndex \u003d command.indexOf(\"/by \");","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"                        if (byIndex \u003d\u003d -1 || command.length() \u003c byIndex + 4) {","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"                            throw new ClippyMissingDeadlineException();","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"                        // startIndex of command.substring() is 9 as \"deadline \" is 9 chars long","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"                        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"chunzkok"},"content":"                            LocalDate deadline \u003d LocalDate.parse(","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"                                    command.substring(byIndex + 4, command.length()).trim());","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"                            tasks.add(new Deadline(","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"chunzkok"},"content":"                                    command.substring(9, byIndex).trim(),","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"                                    deadline));","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"chunzkok"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"                            prettyPrint(\"Uh-oh, Clippy didn\u0027t quite understand the date provided.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"chunzkok"},"content":"                            prettyPrint(\"Deadline not saved. \" +","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"                                    \"Try again with dates in the following format:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"chunzkok"},"content":"                            prettyPrint(\"\u003d\u003d\u003d\u003e yyyy-mm-dd \u003c\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"                            return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"chunzkok"},"content":"                        }","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"                    } else if (args[0].equals(\"event\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"                        // todo: check if BOTH \u0027/from\u0027 and \u0027/to\u0027 exists","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"chunzkok"},"content":"                        int fromIndex \u003d command.indexOf(\"/from \");","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"                        int toIndex \u003d command.indexOf(\"/to \");","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"chunzkok"},"content":"                        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1 || toIndex - fromIndex \u003c 5 ||","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"chunzkok"},"content":"                                command.length() - toIndex \u003c 4) {","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"chunzkok"},"content":"                            throw new ClippyInvalidEventException();","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"chunzkok"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"chunzkok"},"content":"                        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"chunzkok"},"content":"                            // startIndex of command.substring() is 6 as \"event \" is 6 chars long","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"chunzkok"},"content":"                            tasks.add(new Event(","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"chunzkok"},"content":"                                    command.substring(6, fromIndex).trim(),","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"chunzkok"},"content":"                                    LocalDate.parse(command.substring(fromIndex + 6, toIndex).trim()),","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"chunzkok"},"content":"                                    LocalDate.parse(command.substring(toIndex + 4, command.length()).trim())));","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"chunzkok"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"chunzkok"},"content":"                            prettyPrint(\"Uh-oh, Clippy didn\u0027t quite understand the date provided.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"chunzkok"},"content":"                            prettyPrint(\"Deadline not saved. \" +","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"chunzkok"},"content":"                                    \"Try again with dates in the following format:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"chunzkok"},"content":"                            prettyPrint(\"\u003d\u003d\u003d\u003e yyyy-mm-dd \u003c\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"chunzkok"},"content":"                            return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"chunzkok"},"content":"                        }","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"chunzkok"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(\"Got it! I\u0027ve added this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"chunzkok"},"content":"                            tasks.size(), tasks.size() \u003d\u003d 1 ? \"\" : \"s\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"chunzkok"},"content":"                    return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"chunzkok"},"content":"                case \"list\":","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"chunzkok"},"content":"                    if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"chunzkok"},"content":"                        prettyPrint(\"No tasks found!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":124,"author":{"gitId":"chunzkok"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"chunzkok"},"content":"                    for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"chunzkok"},"content":"                        prettyPrint(String.format(\"%d. %s\", i, tasks.get(i - 1)));","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"chunzkok"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"chunzkok"},"content":"                    return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"chunzkok"},"content":"                case \"delete\":","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"chunzkok"},"content":"                    // todo: check for valid list index","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(\"Got it! I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(tasks.remove(Integer.parseInt(args[1]) - 1).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"chunzkok"},"content":"                            tasks.size(), tasks.size() \u003d\u003d 1 ? \"\" : \"s\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"chunzkok"},"content":"                    return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"chunzkok"},"content":"                default:","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"chunzkok"},"content":"                    throw new ClippyUnknownCommandException();","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"chunzkok"},"content":"        } catch (ClippyException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"chunzkok"},"content":"            // print error, but continue accepting inputs","lastModifiedDate":"2023-01-18"},{"lineNumber":141,"author":{"gitId":"chunzkok"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"chunzkok"},"content":"            return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"chunzkok"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"chunzkok"},"content":"            // show error and exit","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"chunzkok"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"chunzkok"},"content":"            return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":149,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":150,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":151,"author":{"gitId":"chunzkok"},"content":"     * Prints out the specified string with a prepended \"\u003e\u003e\u003e \".","lastModifiedDate":"2023-01-18"},{"lineNumber":152,"author":{"gitId":"chunzkok"},"content":"     * @param output the output to be printed","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"chunzkok"},"content":"    private static void prettyPrint(String output) {","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"chunzkok"},"content":"        System.out.println(\"\u003e\u003e\u003e \" + output);","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":157,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":158,"author":{"gitId":"chunzkok"},"content":"    private static void systemPrint(String output) {","lastModifiedDate":"2023-01-31"},{"lineNumber":159,"author":{"gitId":"chunzkok"},"content":"        System.out.println(\"... \" + output);","lastModifiedDate":"2023-01-31"},{"lineNumber":160,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":161,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":162,"author":{"gitId":"chunzkok"},"content":"    private static void loadState() {","lastModifiedDate":"2023-01-30"},{"lineNumber":163,"author":{"gitId":"chunzkok"},"content":"        systemPrint(\"Loading saved data...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":164,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":165,"author":{"gitId":"chunzkok"},"content":"        File dir \u003d new File(SAVE_FILE_PATH);","lastModifiedDate":"2023-01-30"},{"lineNumber":166,"author":{"gitId":"chunzkok"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":167,"author":{"gitId":"chunzkok"},"content":"            systemPrint(\"data directory not found! Creating it now...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":168,"author":{"gitId":"chunzkok"},"content":"            if (dir.mkdirs()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":169,"author":{"gitId":"chunzkok"},"content":"                systemPrint(\"Successfully created data directory!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":171,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":172,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":173,"author":{"gitId":"chunzkok"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":174,"author":{"gitId":"chunzkok"},"content":"            systemPrint(\"Save file not found! Creating it now...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":175,"author":{"gitId":"chunzkok"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":176,"author":{"gitId":"chunzkok"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":177,"author":{"gitId":"chunzkok"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":178,"author":{"gitId":"chunzkok"},"content":"                systemPrint(\"I/O failed: \" + e.toString() + \". Data will not be saved!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":179,"author":{"gitId":"chunzkok"},"content":"                return;","lastModifiedDate":"2023-01-30"},{"lineNumber":180,"author":{"gitId":"chunzkok"},"content":"            } catch (SecurityException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":181,"author":{"gitId":"chunzkok"},"content":"                systemPrint(\"Write access denied by security manager. Data will not be saved!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":182,"author":{"gitId":"chunzkok"},"content":"                return;","lastModifiedDate":"2023-01-30"},{"lineNumber":183,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":184,"author":{"gitId":"chunzkok"},"content":"            systemPrint(\"Successfully created save file!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":185,"author":{"gitId":"chunzkok"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":186,"author":{"gitId":"chunzkok"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":187,"author":{"gitId":"chunzkok"},"content":"                Scanner saveFileScanner \u003d new Scanner(saveFile);","lastModifiedDate":"2023-01-30"},{"lineNumber":188,"author":{"gitId":"chunzkok"},"content":"                while (saveFileScanner.hasNext()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":189,"author":{"gitId":"chunzkok"},"content":"                    tasks.add(Task.parseCsvString(saveFileScanner.nextLine()));","lastModifiedDate":"2023-01-30"},{"lineNumber":190,"author":{"gitId":"chunzkok"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":191,"author":{"gitId":"chunzkok"},"content":"                systemPrint(\"Save file loaded successfully!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":192,"author":{"gitId":"chunzkok"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":193,"author":{"gitId":"chunzkok"},"content":"                // should not happen since we checked for file existence beforehand","lastModifiedDate":"2023-01-30"},{"lineNumber":194,"author":{"gitId":"chunzkok"},"content":"                System.out.println(\"Unexpected error occurred - save file not found. Data will not be saved!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":195,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":196,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":197,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":198,"author":{"gitId":"chunzkok"},"content":"    private static void saveState() {","lastModifiedDate":"2023-01-30"},{"lineNumber":199,"author":{"gitId":"chunzkok"},"content":"        // will save entire `tasks` list for now, will make it more specific","lastModifiedDate":"2023-01-30"},{"lineNumber":200,"author":{"gitId":"chunzkok"},"content":"        // in later iterations","lastModifiedDate":"2023-01-30"},{"lineNumber":201,"author":{"gitId":"chunzkok"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":202,"author":{"gitId":"chunzkok"},"content":"            FileWriter saveFileWriter \u003d new FileWriter(saveFile, false);","lastModifiedDate":"2023-01-30"},{"lineNumber":203,"author":{"gitId":"chunzkok"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":204,"author":{"gitId":"chunzkok"},"content":"                saveFileWriter.write(tasks.get(i).getCsvString());","lastModifiedDate":"2023-01-30"},{"lineNumber":205,"author":{"gitId":"chunzkok"},"content":"                // add line separator if not last Task in `tasks`","lastModifiedDate":"2023-01-30"},{"lineNumber":206,"author":{"gitId":"chunzkok"},"content":"                if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":207,"author":{"gitId":"chunzkok"},"content":"                    saveFileWriter.write(System.lineSeparator());","lastModifiedDate":"2023-01-30"},{"lineNumber":208,"author":{"gitId":"chunzkok"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":209,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":210,"author":{"gitId":"chunzkok"},"content":"            saveFileWriter.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":211,"author":{"gitId":"chunzkok"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":212,"author":{"gitId":"chunzkok"},"content":"            prettyPrint(\"I/O failed: \" + e.toString() + \". Data will not be saved!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":213,"author":{"gitId":"chunzkok"},"content":"            return;","lastModifiedDate":"2023-01-30"},{"lineNumber":214,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"chunzkok":210,"-":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"    private LocalDate from;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"    private LocalDate to;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"        // only show day of the week + day of the month + month","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"                super.toString(),","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"EEE dd MMM\")),","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"EEE dd MMM\")));","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    public String getCsvString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"        return String.format(\"E,%s,%s,%s\", super.getCsvString(), this.from, this.to);","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":26}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"    private String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"    private boolean done;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"        // assumed to be not complete upon initialisation","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"        // would not make sense to add a finished task to the list","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    public void complete() {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    public void uncomplete() {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"        return (this.done ? \"[X] \" : \"[ ] \") + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    public String getCsvString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"        return String.format(\"%s,%b\", this.description, this.done);","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"    public static Task parseCsvString(String csvString) {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"        String[] arguments \u003d csvString.split(\",\");","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"        Task result \u003d null;","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"            switch (arguments[0]) {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"                case \"D\":","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"                    result \u003d new Deadline(arguments[1], LocalDate.parse(arguments[3]));","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"                case \"T\":","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"                    result \u003d new ToDo(arguments[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"                case \"E\":","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"                    result \u003d new Event(","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"                            arguments[1],","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"                            LocalDate.parse(arguments[3]),","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"                            LocalDate.parse(arguments[4]));","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"                default:","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"                    return null;","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"            System.out.println(\"\u003e\u003e\u003e Unable to parse date: \" + e.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"            return null;","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"        result.done \u003d Boolean.parseBoolean(arguments[2]);","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"        return result;","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":60}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"    public String getCsvString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"        return String.format(\"T,%s\", super.getCsvString());","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"todo read book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"todo join sports club","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"mark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":13}}]
