[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"# Clippy project template","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"3. After that, locate the `src/main/java/Clippy.java` file, right-click it, and choose `Run Clippy.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chunzkok":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"    mainClassName \u003d \"clippy.Clippy\"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"    archiveBaseName \u003d \"clippy\"","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"checkstyle {","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"chunzkok":22,"-":39}},{"path":"src/main/java/clippy/Clippy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import clippy.command.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import clippy.command.Parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import clippy.exception.ClippyException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import clippy.storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import clippy.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import clippy.ui.Gui;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import clippy.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":" * The friendly task manager, Clippy!","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"public class Clippy {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    private static final String logo \u003d \"   _____  _  _                      \\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"            + \"  / ____|| |(_)                     \\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"            + \" | |     | | _  _ __   _ __   _   _ \\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"            + \" | |     | || || \u0027_ \\\\ | \u0027_ \\\\ | | | |\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"            + \" | |____ | || || |_) || |_) || |_| |\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"            + \"  \\\\_____||_||_|| .__/ | .__/  \\\\__, |\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"            + \"               | |    | |      __/ |\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"            + \"               |_|    |_|     |___/ \";","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"     * Sets up the UI, storage and TaskList components for Clippy to run.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"    public Clippy() {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"        this.ui \u003d new Ui(\"\u003e\u003e\u003e\", \"###\");","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"        this.storage \u003d new Storage(this.ui);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"        this.taskList \u003d new TaskList(storage.loadState());","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"     * Accepts user input and handles them appropriately until the user exits.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"    public void run() {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"        boolean shouldContinue \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"        ui.prettyPrint(\"Hello! I\u0027m Clippy, your lightweight personal assistant.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"        ui.prettyPrint(\"What can I do for you today?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"        while (shouldContinue) {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"                String command \u003d ui.readCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"                Command c \u003d Parser.parse(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"                c.execute(ui, taskList, storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"                shouldContinue \u003d c.shouldContinue();","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"            } catch (ClippyException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"                ui.systemPrint(e.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"                ui.systemPrint(\"System error: \" + e.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"                shouldContinue \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"     * The main driver of the code.","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"        // System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"        //new Clippy().run();","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"        Application.launch(Gui.class, args);","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"    // TODO: update with proper parser response","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"        return \"Clippy heard: \" + input;","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"chunzkok":77,"-":2}},{"path":"src/main/java/clippy/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import clippy.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import clippy.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":" * An abstract class that encapsulates commands which add Tasks to TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"     * Prints nicely formatted text regarding the newly added task","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"     * that is at the back of the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"     * @param taskList The TaskList instance used for the current run","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"     * @param ui The Ui instance used for the current run","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    protected void printCreatedTaskStatus(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"        ui.prettyPrint(\"Got it! I\u0027ve added this task:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"        ui.prettyPrint(taskList.getLastTask().toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"        ui.prettyPrint(String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"                taskList.getSize(), taskList.getSize() \u003d\u003d 1 ? \"\" : \"s\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":26}},{"path":"src/main/java/clippy/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import clippy.storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import clippy.task.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import clippy.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import clippy.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":" * Command handler for the `deadline` command.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    private String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"    private LocalDate by;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"     * Creates a new AddDeadlineCommand instance.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"     * @param description A description of the task to be added.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"     * @param by The deadline for the task to be added.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    public AddDeadlineCommand(String description, LocalDate by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"     * Adds a new Deadline to the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"     * @param ui The Ui instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"     * @param taskList The TaskList instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"     * @param storage The Storage instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"        taskList.add(new Deadline(description, by));","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"        super.printCreatedTaskStatus(taskList, ui);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":42}},{"path":"src/main/java/clippy/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import clippy.storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import clippy.task.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import clippy.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import clippy.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":" * Command handler for the `event` command.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    private String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"    private LocalDate from;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    private LocalDate to;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"     * Creates a new AddEventCommand instance.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"     * @param description Description of the event to be added.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"    public AddEventCommand(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"     * Adds a new Event to the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"     * @param ui The Ui instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"     * @param taskList The TaskList instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"     * @param storage The Storage instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"        taskList.add(new Event(description, from, to));","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"        super.printCreatedTaskStatus(taskList, ui);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":45}},{"path":"src/main/java/clippy/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import clippy.storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import clippy.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import clippy.task.ToDo;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import clippy.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":" * Command handler for the `todo` command.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"public class AddToDoCommand extends AddCommand {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    private String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"     * Creates a new AddToDoCommand instance.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"     * @param description Description of the task to be added.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    public AddToDoCommand(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"     * Adds a new ToDo to the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"     * @param ui The Ui instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"     * @param taskList The TaskList instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"     * @param storage The Storage instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"        taskList.add(new ToDo(description));","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"        super.printCreatedTaskStatus(taskList, ui);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":37}},{"path":"src/main/java/clippy/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import clippy.storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import clippy.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import clippy.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":" * Command handler for the `bye` command.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"     * Saves program state and exits.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"     * @param ui The Ui instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"     * @param taskList The TaskList instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"     * @param storage The Storage instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"        ui.systemPrint(\"Saving state, please wait...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"        storage.saveState(taskList.getList());","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"        ui.systemPrint(\"State successfully saved.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"        ui.prettyPrint(\"Hope I helped. Goodbye!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"     * Returns false to indicate that the program should terminate.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"     * @return false","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"    public boolean shouldContinue() {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"        return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":38}},{"path":"src/main/java/clippy/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import clippy.storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import clippy.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import clippy.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":" * An abstraction over the possible commands that can be handled by Clippy.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"     * Returns true if the program should continue. Otherwise, it should terminate.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"     * @return True by default, false only if program should terminate","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    public boolean shouldContinue() {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"        return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"     * Executes the command handler for the specific Command.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"     * @param ui The Ui instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"     * @param taskList The TaskList instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"     * @param storage The Storage instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"    public abstract void execute(Ui ui, TaskList taskList, Storage storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":31}},{"path":"src/main/java/clippy/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":" * Contains the type of commands that Clippy can recognise.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"public enum CommandType {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"    TODO,","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"    DEADLINE,","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    EVENT,","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"    MARK,","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    UNMARK,","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"    LIST,","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    DELETE,","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    FIND,","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    BYE","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":16}},{"path":"src/main/java/clippy/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import clippy.storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import clippy.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import clippy.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":" * Command handler for the `delete` command.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    private int taskId;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"     * Creates a DeleteCommand instance.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"     * @param taskId The ID of the task to be deleted.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    public DeleteCommand(int taskId) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"     * Deletes the specified task ID from TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"     * @param ui The Ui instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"     * @param taskList The TaskList instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"     * @param storage The Storage instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"        ui.prettyPrint(\"Got it! I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"        ui.prettyPrint(taskList.remove(taskId).toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":35}},{"path":"src/main/java/clippy/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.util.List;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import clippy.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import clippy.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import clippy.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import clippy.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":" * Command handler for the `find` command.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    private String query;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"     * Creates a FindCommand instance.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"     * @param query The search query used to locate tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"        this.query \u003d query;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"        List\u003cTask\u003e tasks \u003d taskList.find(query);","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"            ui.prettyPrint(\"No tasks found!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"            ui.prettyPrint(\"Here are the matching tasks in your list!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"                ui.prettyPrint(String.format(\"%d. %s\", i + 1, tasks.get(i).toString()));","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"chunzkok":40}},{"path":"src/main/java/clippy/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import clippy.storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import clippy.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import clippy.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":" * Command handler for the `list` command.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"     * Lists all Tasks in the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"     * @param ui The Ui instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"     * @param taskList The TaskList instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"     * @param storage The Storage instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"            ui.prettyPrint(\"No tasks found!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"            ui.prettyPrint(String.format(\"%d. %s\", i, taskList.get(i)));","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":29}},{"path":"src/main/java/clippy/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import clippy.storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import clippy.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import clippy.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":" * Command handler for the `mark` command.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    private int taskIdToMark;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"     * Creates a MarkCommand instance.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"     * @param taskIdToMark The ID of the task to be marked as completed.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    public MarkCommand(int taskIdToMark) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"        this.taskIdToMark \u003d taskIdToMark;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"     * Marks the given task as completed.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"     * @param ui The Ui instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"     * @param taskList The TaskList instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"     * @param storage The Storage instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"        ui.prettyPrint(\"Great job! I\u0027ve marked this task as done: \");","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"        ui.prettyPrint(taskList.mark(taskIdToMark).toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":36}},{"path":"src/main/java/clippy/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import clippy.exception.ClippyException;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import clippy.exception.ClippyInvalidDateException;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import clippy.exception.ClippyInvalidEventException;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import clippy.exception.ClippyMissingDeadlineException;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import clippy.exception.ClippyTodoEmptyDescriptionException;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import clippy.exception.ClippyUnknownCommandException;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":" * Parser to parse all user commands.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    private static final String[] EMPTY_ARG_LIST \u003d new String[]{};","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"     * Identifies the correct Command handler to be invoked based on the user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"     * @param command The command given by the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"     * @return A Command instance containing the corresponding command handler.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"     * @throws ClippyException","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"    public static Command parse(String command) throws ClippyException {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        String[] args \u003d command.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"        switch (args[0]) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"            return dispatch(CommandType.BYE, EMPTY_ARG_LIST);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"            // todo: check if second argument is a valid number","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"            return dispatch(CommandType.MARK, new String[] { args[1] });","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"            // todo: check if second argument is a valid number","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"            return dispatch(CommandType.UNMARK, new String[] { args[1] });","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"            if (args.length \u003c 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"                throw new ClippyTodoEmptyDescriptionException();","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"            return dispatch(CommandType.TODO, new String[] { args[1] });","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"        case \"deadline\": {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"            int byIndex \u003d command.indexOf(\"/by \");","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"            if (byIndex \u003d\u003d -1 || command.length() \u003c byIndex + 4) {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"                throw new ClippyMissingDeadlineException();","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"            String description \u003d command.substring(9, byIndex).trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"            String byDateString \u003d command.substring(byIndex + 4).trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"                LocalDate byDate \u003d LocalDate.parse(byDateString);","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"                return dispatch(CommandType.DEADLINE, new String[] { description }, byDate);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"                throw new ClippyInvalidDateException();","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"        case \"event\": {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"            int fromIndex \u003d command.indexOf(\"/from \");","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"            int toIndex \u003d command.indexOf(\"/to \");","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"            if (fromIndex \u003d\u003d -1","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"                    || toIndex \u003d\u003d -1","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"                    || toIndex - fromIndex \u003c 5","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"                    || command.length() - toIndex \u003c 4) {","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"                throw new ClippyInvalidEventException();","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"            String description \u003d command.substring(6, fromIndex).trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"            String fromDateString \u003d command.substring(fromIndex + 6, toIndex).trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"            String toDateString \u003d command.substring(toIndex + 4).trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"                LocalDate fromDate \u003d LocalDate.parse(fromDateString);","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"                LocalDate toDate \u003d LocalDate.parse(toDateString);","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"                return dispatch(CommandType.EVENT, new String[] { description }, fromDate, toDate);","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"                throw new ClippyInvalidDateException();","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"        case \"list\":","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"            return dispatch(CommandType.LIST, EMPTY_ARG_LIST);","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"chunzkok"},"content":"        case \"find\":","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"            // todo: check if args[1] is valid input","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"            return dispatch(CommandType.FIND, new String[] { args[1].trim() });","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"chunzkok"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"            // todo: check for valid list index","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"chunzkok"},"content":"            return dispatch(CommandType.DELETE, new String[]{ args[1] });","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"        default:","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"chunzkok"},"content":"            throw new ClippyUnknownCommandException();","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"     * Instantiates the correct command handler object to be returned, assuming","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"     * inputs are all valid.","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"     * @param commandType The type of command given.","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"chunzkok"},"content":"     * @param args The arguments to the command.","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"chunzkok"},"content":"     * @param dates Dates, if any, to be used in the command.","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"chunzkok"},"content":"     * @return","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"chunzkok"},"content":"    private static Command dispatch(CommandType commandType, String[] args, LocalDate... dates) {","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"chunzkok"},"content":"        switch (commandType) {","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"chunzkok"},"content":"        case BYE:","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"chunzkok"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"chunzkok"},"content":"        case MARK:","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"chunzkok"},"content":"            return new MarkCommand(Integer.parseInt(args[0]));","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"chunzkok"},"content":"        case UNMARK:","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"chunzkok"},"content":"            return new UnmarkCommand(Integer.parseInt(args[0]));","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"chunzkok"},"content":"        case TODO:","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"chunzkok"},"content":"            return new AddToDoCommand(args[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"chunzkok"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"chunzkok"},"content":"            return new AddDeadlineCommand(args[0], dates[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"chunzkok"},"content":"        case EVENT:","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"chunzkok"},"content":"            return new AddEventCommand(args[0], dates[0], dates[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"chunzkok"},"content":"        case LIST:","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"chunzkok"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"chunzkok"},"content":"        case DELETE:","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"chunzkok"},"content":"            return new DeleteCommand(Integer.parseInt(args[0]));","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"chunzkok"},"content":"        case FIND:","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"chunzkok"},"content":"            return new FindCommand(args[0]);","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"chunzkok"},"content":"        default:","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"chunzkok"},"content":"            return null;","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":125}},{"path":"src/main/java/clippy/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import clippy.storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import clippy.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import clippy.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":" * Command handler for the `unmark` command.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    private int taskIdToUnmark;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"     * Creates an UnmarkCommand instance.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"     * @param taskIdToUnmark","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    public UnmarkCommand(int taskIdToUnmark) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"        this.taskIdToUnmark \u003d taskIdToUnmark;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"     * Marks the given task as incomplete.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"     * @param ui The Ui instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"     * @param taskList The TaskList instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"     * @param storage The Storage instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"    public void execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"        ui.prettyPrint(\"Aww... I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"        ui.prettyPrint(taskList.unmark(taskIdToUnmark).toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":36}},{"path":"src/main/java/clippy/exception/ClippyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.exception;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":" * An Exception signifying the complaints of Clippy.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"public class ClippyException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    private String msg;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"     * Creates a ClippyException instance.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"     * @param msg The message to be contained in this ClippyException.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    public ClippyException(String msg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"        super(msg);","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"     * Returns a String that voices out Clippy\u0027s complaints in its own voice.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"     * @return Clippy\u0027s complaint.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        return \"\u003e\u003e\u003e Hold up! Clippy is confused - \" + this.msg;","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":30}},{"path":"src/main/java/clippy/exception/ClippyInvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.exception;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":" * A complaint that the input date cannot be recognised.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"public class ClippyInvalidDateException extends ClippyException {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"     * Creates a ClippyInvalidDateException that contains a message","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"     * on how to specify the date correctly.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    public ClippyInvalidDateException() {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"        super(\"Uh-oh, Clippy didn\u0027t quite understand the date provided.\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"                + \"clippy.task.Task not saved. Try again with dates in the following format: \\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"                + \"\u003d\u003d\u003d\u003e yyyy-mm-dd \u003c\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":18}},{"path":"src/main/java/clippy/exception/ClippyInvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.exception;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":" * A complaint that the Event start/end times cannot be recognised.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"public class ClippyInvalidEventException extends ClippyException {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"     * Creates a ClippyInvalidEventException that contains a message","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"     * on how to specify the event start and end times correctly.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    public ClippyInvalidEventException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"        super(\"cannot recognise event start and end time - please specify it as such: \\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"                + \"event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":17}},{"path":"src/main/java/clippy/exception/ClippyMissingDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.exception;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":" * A complaint that the deadline cannot be recognised.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"public class ClippyMissingDeadlineException extends ClippyException {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"     * Creates a ClippyMissingDeadlineException that contains a message","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"     * on how to specify the date correctly.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    public ClippyMissingDeadlineException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"        super(\"deadline cannot be recognised - please specify the deadline as such: \\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"                + \"deadline \u003cdescription\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":17}},{"path":"src/main/java/clippy/exception/ClippyTodoEmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.exception;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":" * A complaint that the task description is empty.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"public class ClippyTodoEmptyDescriptionException extends ClippyException {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"     * Creates a ClippyTodoEmptyDescriptionException that contains a message","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"     * on the necessity of a descrption for a Todo task.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    public ClippyTodoEmptyDescriptionException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"        super(\"the description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":16}},{"path":"src/main/java/clippy/exception/ClippyUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.exception;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":" * A complaint that the command entered was invalid.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"public class ClippyUnknownCommandException extends ClippyException {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"     * Creates a ClippyUnknownCommandException that contains a message","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"     * informing the user that the command is invalid.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    public ClippyUnknownCommandException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"        super(\"the command cannot be recognised.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":16}},{"path":"src/main/java/clippy/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import java.util.List;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import clippy.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import clippy.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":" * The agent which helps to communicate with files used to store program data.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"public class Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    private static final String SAVE_FILE_PATH \u003d \"./data/\";","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    private static final String SAVE_FILE_NAME \u003d \"state.data\";","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    private static final File saveFile \u003d new File(SAVE_FILE_PATH + SAVE_FILE_NAME);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    // todo: raise exceptions on errors and handle in Duke to print error messages instead","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"     * Creates a new Storage instance.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"     * @param ui The Ui instance of the current run.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"    public Storage(Ui ui) {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"     * Reads data from the program\u0027s save file into a List of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"     * @return A list of Tasks obtained from parsing the save file.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"    public List\u003cTask\u003e loadState() {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"        this.ui.systemPrint(\"Loading saved data...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"        File dir \u003d new File(SAVE_FILE_PATH);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"            ui.systemPrint(\"data directory not found! Creating it now...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"            if (dir.mkdirs()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"                ui.systemPrint(\"Successfully created data directory!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"            ui.systemPrint(\"Save file not found! Creating it now...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"                ui.systemPrint(\"Successfully created save file!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"                ui.systemPrint(\"I/O failed: \" + e.toString() + \". Data will not be saved!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"            } catch (SecurityException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"                ui.systemPrint(\"Write access denied by security manager. Data will not be saved!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"                Scanner saveFileScanner \u003d new Scanner(saveFile);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"                List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"                while (saveFileScanner.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"                    result.add(Task.parseCsvString(saveFileScanner.nextLine()));","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"                ui.systemPrint(\"Save file loaded successfully!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"                return result;","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"                // should not happen since we checked for file existence beforehand","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"                System.out.println(\"Unexpected error occurred - save file not found. Data will not be saved!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"        return null;","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"     * Saves a list of Tasks into the program\u0027s save file.","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"     * @param tasks A list of Tasks to be saved.","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"chunzkok"},"content":"    public void saveState(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"        // will save entire `tasks` list for now, will make it more specific","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"chunzkok"},"content":"        // in later iterations","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"chunzkok"},"content":"            FileWriter saveFileWriter \u003d new FileWriter(saveFile, false);","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"chunzkok"},"content":"                saveFileWriter.write(tasks.get(i).getCsvString());","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"                // add line separator if not last clippy.task.Task in `tasks`","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"chunzkok"},"content":"                if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"                    saveFileWriter.write(System.lineSeparator());","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"            saveFileWriter.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"chunzkok"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"chunzkok"},"content":"            ui.prettyPrint(\"I/O failed: \" + e.toString() + \". Data will not be saved!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"chunzkok"},"content":"            return;","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":102}},{"path":"src/main/java/clippy/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":" * A task with a deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"    private LocalDate by;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"     * Creates a new Deadline instance.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"     * Returns a string representation of the Deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"     * @return A string representation of the Deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"        // only show day of the week + day of the month + month","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"                + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"EEE dd MMM\")) + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"     * Returns a string representation of the Deadline in CSV form.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"     * @return A string representation of the Deadline in CSV form.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"    public String getCsvString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"        return String.format(\"D,%s,%s\", super.getCsvString(), this.by);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":45}},{"path":"src/main/java/clippy/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":" * An Event with a start and end date.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"    private LocalDate from;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    private LocalDate to;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"     * Creates an Event instance.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"     * Returns a string representation of the Event.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"     * @return A string representation of the Event.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"        // only show day of the week + day of the month + month","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"                super.toString(),","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"EEE dd MMM\")),","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"EEE dd MMM\")));","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"     * Returns a string representation of the Event in CSV form.","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"     * @return A string representation of the Event in CSV form.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"    public String getCsvString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"        return String.format(\"E,%s,%s,%s\", super.getCsvString(), this.from, this.to);","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":49}},{"path":"src/main/java/clippy/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":" * An abstraction over all tasks tracked by this program.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"    private String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    private boolean done;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"     * Helps to create a subclass of Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"        // assumed to be not complete upon initialisation","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"        // would not make sense to add a finished task to the list","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"     * Marks the task as complete.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"    public void complete() {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"    public void uncomplete() {","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"     * Returns a string representation of the Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"     * @return A string representation of the Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"        return (this.done ? \"[X] \" : \"[ ] \") + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"     * Returns a string representation of the Task in CSV form.","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"     * @return A string representation of the Task in CSV form.","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"    public String getCsvString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"        return String.format(\"%s,%b\", this.description, this.done);","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"     * Identifies the appropriate subclass of Task to be instantiated based on a CSV line.","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"     * @param csvString A line of CSV values.","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"     * @return The corresponding Task represented by the CSV line.","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"    public static Task parseCsvString(String csvString) {","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"        String[] arguments \u003d csvString.split(\",\");","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"        Task result \u003d null;","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"            switch (arguments[0]) {","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"            case \"D\":","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"                result \u003d new Deadline(arguments[1], LocalDate.parse(arguments[3]));","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"                break;","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"            case \"T\":","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"                result \u003d new ToDo(arguments[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"                break;","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"            case \"E\":","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"                result \u003d new Event(","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"                        arguments[1],","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"                        LocalDate.parse(arguments[3]),","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"                        LocalDate.parse(arguments[4]));","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"                break;","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"chunzkok"},"content":"            default:","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"                return null;","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"chunzkok"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"            System.out.println(\"\u003e\u003e\u003e Unable to parse date: \" + e.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"chunzkok"},"content":"            return null;","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"chunzkok"},"content":"        result.done \u003d Boolean.parseBoolean(arguments[2]);","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"        return result;","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"     * Returns true if keyword is found in Task\u0027s description.","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"     * @param keyword The keyword to search for in the Task\u0027s description.","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"chunzkok"},"content":"     * @return True if keyword is found in Task\u0027s description.","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"chunzkok"},"content":"    public boolean hasKeywordInDescription(String keyword) {","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"chunzkok"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":100}},{"path":"src/main/java/clippy/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import java.util.List;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":" * A list that keeps track of all the Tasks in this program.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"public class TaskList {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"     * Creates an empty TaskList instance.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"     * Creates a TaskList instance populated with the given list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"     * @param tasks A list of Tasks to populate the TaskList with.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"     * Removes a task from the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"     * @param taskId The ID of the task to be removed.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"     * @return The Task that is removed.","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"    public Task remove(int taskId) {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"        return this.tasks.remove(taskId - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"     * Retrieves a Task from the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"     * @param taskId The ID of the task to be retrieved.","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"     * @return The Task that is retrieved.","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"    public Task get(int taskId) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"        return this.tasks.get(taskId - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"     * Retrieves the Task in the last position of the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"     * @return The Task in the last position of the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"    public Task getLastTask() {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"        return this.tasks.get(this.tasks.size() - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"     * Returns the size of the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"     * Returns true if the TaskList is empty.","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"     * @return True if the TaskList is empty.","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"     * Marks the specified Task as complete.","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"chunzkok"},"content":"     * @param taskId The ID of the task to be marked as complete.","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"     * @return The Task that was marked as complete.","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"    public Task mark(int taskId) {","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"chunzkok"},"content":"        Task taskToMark \u003d this.get(taskId);","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"        taskToMark.complete();","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"chunzkok"},"content":"        return taskToMark;","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"     * Marks the specified task as incomplete.","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"chunzkok"},"content":"     * @param taskId The ID of the task to be marked as incomplete.","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"     * @return The Task that was marked as incomplete.","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"chunzkok"},"content":"    public Task unmark(int taskId) {","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"chunzkok"},"content":"        Task taskToUnmark \u003d this.get(taskId);","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"chunzkok"},"content":"        taskToUnmark.uncomplete();","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"chunzkok"},"content":"        return taskToUnmark;","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"chunzkok"},"content":"     * Returns a list of Tasks that the TaskList is tracking.","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"chunzkok"},"content":"     * @return A list of Tasks that the TaskList is tracking.","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"chunzkok"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"chunzkok"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"chunzkok"},"content":"     * Returns a list of tasks that contain the search query in their descriptions.","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"chunzkok"},"content":"     * @param query Keyword(s) to be used to filter the Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"chunzkok"},"content":"     * @return A list of tasks that contain the search query in their descriptions.","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"chunzkok"},"content":"    public List\u003cTask\u003e find(String query) {","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"chunzkok"},"content":"        return this.tasks.stream()","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"chunzkok"},"content":"                .filter(x -\u003e x.hasKeywordInDescription(query))","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"chunzkok"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":122}},{"path":"src/main/java/clippy/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":" * Basically a Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"     * Creates a ToDo instance.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"     * Returns a string representation of the ToDo.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"     * @return A string representation of the ToDo.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"     * Returns a string representation of the ToDo in CSV form.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"     * @return A string representation of the ToDo in CSV form.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"    public String getCsvString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"        return String.format(\"T,%s\", super.getCsvString());","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":35}},{"path":"src/main/java/clippy/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"    private void flip() {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"     * Creates a DialogBox to represent a user\u0027s input text.","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"     * @param img The image of the user.","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"     * @return A DialogBox instance representing a user\u0027s speech box.","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"    public static DialogBox createUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"     * Creates a DialogBox to represent Clippy\u0027s output text.","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"     * @param img The image of Clippy.","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"     * @return A DialogBox instance representing Clippy\u0027s speech box.","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"    public static DialogBox createClippyDialog(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"        db.flip();","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"        return db;","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"chunzkok":73}},{"path":"src/main/java/clippy/ui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import clippy.Clippy;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":" * A \u0027linker\u0027 between the FXML controllers and the main Clippy program.","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"public class Gui extends Application {","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    private Clippy clippy;","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"            clippy \u003d new Clippy();","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Gui.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setClippy(clippy);","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"            stage.show();","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"chunzkok":33}},{"path":"src/main/java/clippy/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import clippy.Clippy;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    private Clippy clippy;","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserChadderson.jpeg\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"    private Image clippyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Clippy.png\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"    public void setClippy(Clippy c) {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"        clippy \u003d c;","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"        String response \u003d clippy.getResponse(input);","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"                DialogBox.createUserDialog(input, userImage),","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"                DialogBox.createClippyDialog(response, clippyImage)","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"        );","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"chunzkok":53}},{"path":"src/main/java/clippy/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":" * An abstraction encapsulating the user input/output interfaces.","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":" * @author chunzkok","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"public class Ui {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    private String userPrompt;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"    private String systemPrompt;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    private Scanner sc;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"     * Creates a Ui instance that is responsible for the user interface.","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"     * @param userPrompt A string that should be displayed at the start of any \u0027prettyPrint\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"     * @param systemPrompt A string that should be displayed at the start of any \u0027systemPrint\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    public Ui(String userPrompt, String systemPrompt) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"        this.userPrompt \u003d userPrompt;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"        this.systemPrompt \u003d systemPrompt;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"     * Prints a given string with a standardised prefix specified in the constructor.","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"     * @param output The string to be printed.","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"    public void prettyPrint(String output) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"        System.out.println(userPrompt + \" \" + output);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"     * Prints a given string with a standardised prefix specified in the constructor.","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"     * This is used to display system messages.","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"     * @param output The string to be printed.","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"    public void systemPrint(String output) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"        System.out.println(systemPrompt + \" \" + output);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"     * Reads a line from STDIN and returns it to the caller.","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"     * @return A string containing the next line entered into STDIN.","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":54}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"chunzkok":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"clippy.ui.MainWindow\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"chunzkok":19}},{"path":"src/test/java/clippy/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    Deadline createTestDeadline() {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"        return new Deadline(\"return books\", LocalDate.of(2023, 1, 12));","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    void toStringFormatTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"        Deadline deadline \u003d createTestDeadline();","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"        assertEquals(\"[D][ ] return books (by: Thu 12 Jan)\",deadline.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    void getCsvStringTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"        Deadline deadline \u003d createTestDeadline();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"        assertEquals(\"D,return books,false,2023-01-12\",deadline.getCsvString());","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":23}},{"path":"src/test/java/clippy/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"public class EventTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"    Event createTestEvent() {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"        return new Event(\"Lunar New Year\",","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"                LocalDate.of(2023, 1, 22),","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"                LocalDate.of(2023, 2, 6));","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    void toStringFormatTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"        Event event \u003d createTestEvent();","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"        assertEquals(\"[E][ ] Lunar New Year (from: Sun 22 Jan to: Mon 06 Feb)\", event.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    void getCsvStringTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"        Event event \u003d createTestEvent();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"        assertEquals(\"E,Lunar New Year,false,2023-01-22,2023-02-06\", event.getCsvString());","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":24}},{"path":"src/test/java/clippy/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"package clippy.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    ToDo createTestToDo() {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"        return new ToDo(\"read book\");","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"    void toStringFormatTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"        ToDo todo \u003d createTestToDo();","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"        assertEquals(\"[T][ ] read book\", todo.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    void getCsvStringTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"        ToDo todo \u003d createTestToDo();","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"        assertEquals(\"T,read book,false\",todo.getCsvString());","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"chunzkok":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"todo read book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"todo join sports club","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"mark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":13}}]
