[{"path":"src/main/java/ClippyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"public class ClippyException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"    String msg;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"    public ClippyException(String msg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"        super(msg);","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"        return \"\u003e\u003e\u003e Hold up! Clippy is confused - \" + this.msg;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":12}},{"path":"src/main/java/ClippyInvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"public class ClippyInvalidEventException extends ClippyException {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"    public ClippyInvalidEventException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"        super(\"cannot recognise event start and end time - please specify it as such: \\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"                \"event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":6}},{"path":"src/main/java/ClippyMissingDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"public class ClippyMissingDeadlineException extends ClippyException {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"    public ClippyMissingDeadlineException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"        super(\"deadline cannot be recognised - please specify the deadline as such: \\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"                \"deadline \u003cdescription\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":6}},{"path":"src/main/java/ClippyTodoEmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"public class ClippyTodoEmptyDescriptionException extends ClippyException {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"    public ClippyTodoEmptyDescriptionException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"        super(\"the description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":5}},{"path":"src/main/java/ClippyUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"public class ClippyUnknownCommandException extends ClippyException {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"    public ClippyUnknownCommandException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"        super(\"the command cannot be recognised.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"    private String by;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"import java.util.List;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"    private static final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"        final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"        final String logo \u003d \"   _____  _  _                      \\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"                \"  / ____|| |(_)                     \\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"                \" | |     | | _  _ __   _ __   _   _ \\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"                \" | |     | || || \u0027_ \\\\ | \u0027_ \\\\ | | | |\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"                \" | |____ | || || |_) || |_) || |_| |\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"                \"  \\\\_____||_||_|| .__/ | .__/  \\\\__, |\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"                \"               | |    | |      __/ |\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"                \"               |_|    |_|     |___/ \";","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"        prettyPrint(\"Hello! I\u0027m Clippy, your lightweight personal assistant.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"        prettyPrint(\"What can I do for you today?\");","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"        while (parseCommand(sc.nextLine().trim()));","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"        return;","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"chunzkok"},"content":"     * Takes in a command and attempts to perform it, if valid.","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"chunzkok"},"content":"     * Accepted commands: [add], delete, todo, deadline, event, mark, unmark, list, bye","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"chunzkok"},"content":"     * [add] is invoked whenever any string that does not match other commands is entered.","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"chunzkok"},"content":"     * @param   command a string containing the command entered by the user","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"chunzkok"},"content":"     * @return          true if programme should continue accepting further commands, else false","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"chunzkok"},"content":"    private static boolean parseCommand(String command) {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"chunzkok"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"chunzkok"},"content":"            String[] args \u003d command.split(\" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"chunzkok"},"content":"            switch (args[0]) {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"chunzkok"},"content":"                case \"bye\":","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(\"Hope I helped. Goodbye!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"chunzkok"},"content":"                    return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"chunzkok"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"chunzkok"},"content":"                    // todo: check if second argument is a valid number","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(\"Great job! I\u0027ve marked this task as done: \");","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"chunzkok"},"content":"                    tasks.get(Integer.parseInt(args[1]) - 1).complete();","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(tasks.get(Integer.parseInt(args[1]) - 1).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"chunzkok"},"content":"                    return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"chunzkok"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"chunzkok"},"content":"                    // todo: check if second argument is a valid number","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(\"Aww... I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"chunzkok"},"content":"                    tasks.get(Integer.parseInt(args[1]) - 1).uncomplete();","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(tasks.get(Integer.parseInt(args[1]) - 1).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"chunzkok"},"content":"                    return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"chunzkok"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"chunzkok"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"chunzkok"},"content":"                case \"event\":","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"chunzkok"},"content":"                    if (args[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"chunzkok"},"content":"                        if (args.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"chunzkok"},"content":"                            throw new ClippyTodoEmptyDescriptionException();","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"chunzkok"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"chunzkok"},"content":"                        tasks.add(new ToDo(String.join(\" \", Arrays.copyOfRange(args, 1, args.length))));","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"chunzkok"},"content":"                    } else if (args[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"chunzkok"},"content":"                        int byIndex \u003d command.indexOf(\"/by \");","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"chunzkok"},"content":"                        if (byIndex \u003d\u003d -1 || command.length() \u003c byIndex + 4) {","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"chunzkok"},"content":"                            throw new ClippyMissingDeadlineException();","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"chunzkok"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"chunzkok"},"content":"                        // startIndex of command.substring() is 9 as \"deadline \" is 9 chars long","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"chunzkok"},"content":"                        tasks.add(new Deadline(","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"chunzkok"},"content":"                                command.substring(9, byIndex).trim(),","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"chunzkok"},"content":"                                command.substring(byIndex + 4, command.length()).trim()));","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"chunzkok"},"content":"                    } else if (args[0].equals(\"event\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"chunzkok"},"content":"                        // todo: check if BOTH \u0027/from\u0027 and \u0027/to\u0027 exists","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"chunzkok"},"content":"                        int fromIndex \u003d command.indexOf(\"/from \");","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"chunzkok"},"content":"                        int toIndex \u003d command.indexOf(\"/to \");","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"chunzkok"},"content":"                        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1 || toIndex - fromIndex \u003c 5 ||","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"chunzkok"},"content":"                                command.length() - toIndex \u003c 4) {","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"chunzkok"},"content":"                            throw new ClippyInvalidEventException();","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"chunzkok"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"chunzkok"},"content":"                        // startIndex of command.substring() is 6 as \"event \" is 6 chars long","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"chunzkok"},"content":"                        tasks.add(new Event(","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"chunzkok"},"content":"                                command.substring(6, fromIndex).trim(),","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"chunzkok"},"content":"                                command.substring(fromIndex + 6, toIndex).trim(),","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"chunzkok"},"content":"                                command.substring(toIndex + 4, command.length()).trim()));","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"chunzkok"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(\"Got it! I\u0027ve added this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"chunzkok"},"content":"                            tasks.size(), tasks.size() \u003d\u003d 1 ? \"\" : \"s\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"chunzkok"},"content":"                    return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"chunzkok"},"content":"                case \"list\":","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"chunzkok"},"content":"                    for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"chunzkok"},"content":"                        prettyPrint(String.format(\"%d. %s\", i, tasks.get(i - 1)));","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"chunzkok"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"chunzkok"},"content":"                    return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"chunzkok"},"content":"                case \"delete\":","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"chunzkok"},"content":"                    // todo: check for valid list index","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(\"Got it! I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(tasks.remove(Integer.parseInt(args[1]) - 1).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"chunzkok"},"content":"                    prettyPrint(String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"chunzkok"},"content":"                            tasks.size(), tasks.size() \u003d\u003d 1 ? \"\" : \"s\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"chunzkok"},"content":"                    return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"chunzkok"},"content":"                default:","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"chunzkok"},"content":"                    throw new ClippyUnknownCommandException();","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"chunzkok"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"chunzkok"},"content":"        } catch (ClippyException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"chunzkok"},"content":"            // print error, but continue accepting inputs","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"chunzkok"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"chunzkok"},"content":"            return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"chunzkok"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"chunzkok"},"content":"            // show error and exit","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"chunzkok"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"chunzkok"},"content":"            return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"chunzkok"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"chunzkok"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"chunzkok"},"content":"     * Prints out the specified string with a prepended \"\u003e\u003e\u003e \".","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"chunzkok"},"content":"     * @param output the output to be printed","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"chunzkok"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"chunzkok"},"content":"    private static void prettyPrint(String output) {","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"chunzkok"},"content":"        System.out.println(\"\u003e\u003e\u003e \" + output);","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"chunzkok":117,"-":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"    private String from;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"    private String to;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.from, this.to);","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"    private String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"    private boolean done;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"        // assumed to be not complete upon initialisation","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"        // would not make sense to add a finished task to the list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"    public void complete() {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"chunzkok"},"content":"    public void uncomplete() {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"chunzkok"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"chunzkok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"chunzkok"},"content":"        return (this.done ? \"[X] \" : \"[ ] \") + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":24}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chunzkok"},"content":"todo read book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"chunzkok"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"chunzkok"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"chunzkok"},"content":"todo join sports club","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"chunzkok"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"chunzkok"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"chunzkok"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"chunzkok"},"content":"mark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"chunzkok"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"chunzkok"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"chunzkok"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"chunzkok"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"chunzkok"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"chunzkok":13}}]
