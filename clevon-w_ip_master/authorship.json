[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"checkstyle {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"clevon-w"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"clevon-w":20,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"T | 1 | gay","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"clevon-w":1}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"    private void flip() {","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"clevon-w"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"clevon-w"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"clevon-w"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"clevon-w"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"clevon-w"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"clevon-w"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"clevon-w"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"clevon-w"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"clevon-w"},"content":"        db.flip();","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"clevon-w"},"content":"        return db;","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"clevon-w":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import response.Response;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"import ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"import java.util.List;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":" * Represents the Duke class","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"     * Constructor for Duke","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"    public Duke() {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"        this.storage \u003d new Storage(); // Create a Storage object","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"        this.taskList \u003d storage.loadTaskList(); // Create a TaskList object based on saved list","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"        this.ui \u003d new Ui(); // Create Ui object to handle interactions with user","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"     * Gets a response from Duke based on the input of the user.","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"     * @param input the users input.","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"     * @return Duke\u0027s response to the user input as a String.","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"            return ui.getExtStr();","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"        System.out.println(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"        assert input.equals(\"\");","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"        // Parse the user input","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"        String out;","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"clevon-w"},"content":"            // Parsing the input returns a Response","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"clevon-w"},"content":"            Response res \u003d parser.parse();","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"clevon-w"},"content":"            // Execute the Response to do what needs to be done and get an output message","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"clevon-w"},"content":"            out \u003d res.exec(taskList);","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"clevon-w"},"content":"            // If the response is anything other than list, save the to do list","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"clevon-w"},"content":"            if (!parser.getInputType().equals(\"LIST\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"clevon-w"},"content":"                storage.saveTaskList(taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"clevon-w"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"clevon-w"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"clevon-w"},"content":"            return err.toString();","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"clevon-w"},"content":"        return out;","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"clevon-w"},"content":"    public List\u003cDialogBox\u003e getWelcomeMessages(Image dukeImage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"clevon-w"},"content":"        ArrayList\u003cDialogBox\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"clevon-w"},"content":"        DialogBox intro \u003d DialogBox.getDukeDialog(ui.getIntro(), dukeImage);","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"clevon-w"},"content":"        res.add(intro);","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"clevon-w"},"content":"        if (taskList.count() !\u003d 0) {","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"clevon-w"},"content":"            String nxtMsg \u003d ui.foundSomeTasks() + taskList.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"clevon-w"},"content":"            DialogBox nxtBox \u003d DialogBox.getDukeDialog(nxtMsg, dukeImage);","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"clevon-w"},"content":"            res.add(nxtBox);","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"clevon-w"},"content":"        return res;","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"clevon-w":68,"-":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"public class Launcher {","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"clevon-w":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"            stage.show();","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"clevon-w":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"import java.util.List;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"        List\u003cDialogBox\u003e welcomeMsgs \u003d duke.getWelcomeMessages(dukeImage);","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"        dialogContainer.getChildren().addAll(welcomeMsgs);","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"clevon-w"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"clevon-w"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"clevon-w"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"clevon-w"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"clevon-w"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"clevon-w"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"clevon-w"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"clevon-w"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"clevon-w"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"clevon-w"},"content":"        );","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"clevon-w"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"clevon-w"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(5));","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"clevon-w"},"content":"            delay.setOnFinished( event -\u003e Platform.exit());","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"clevon-w"},"content":"            delay.play();","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"clevon-w"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"clevon-w":63}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package exception;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":" * All custom exceptions used by Duke will extend this DukeException","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"    public DukeException(String errMsg) {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"        super(errMsg);","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"     * Customised string for the error message","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"     * @return error message","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"        return \"OOPS!!! \" + super.getMessage();","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"clevon-w":19}},{"path":"src/main/java/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package exception;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":" * Exception to handle the case where the user input is invalid","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"    public InvalidArgumentException(String errMsg) {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"        super(errMsg);","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"clevon-w":10}},{"path":"src/main/java/exception/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package exception;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":" * Exception to handle the case where the user input is missing arguments","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"public class MissingArgumentException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"    public MissingArgumentException(String err) {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"        super(err);","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"clevon-w":10}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package parser;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import exception.InvalidArgumentException;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import exception.MissingArgumentException;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"import response.CreateResponse;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"import response.DeadlineResponse;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"import response.DeleteResponse;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"import response.EventResponse;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"import response.FindResponse;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"import response.ListResponse;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"import response.MarkResponse;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"import response.Response;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"import response.UnMarkResponse;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":" * Represents the parser for the user input","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"public class Parser {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"    private enum Types { LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"     * Represents the user input","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"    private String input;","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"    private String inputType;","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"    private String inputContent;","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"     * Creates a parser for the specified user input","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"     * @param input User input","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"    public Parser(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"     * Parses the user input","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"     * @return Response returned, depending on the user input parsed","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"    public Response parse() throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"        categorisation();","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"clevon-w"},"content":"        switch (this.inputType) {","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"clevon-w"},"content":"        case \"LIST\":","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"clevon-w"},"content":"            return new ListResponse();","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"clevon-w"},"content":"        case \"MARK\":","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"clevon-w"},"content":"            return new MarkResponse(this.inputContent);","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"clevon-w"},"content":"        case \"UNMARK\":","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"clevon-w"},"content":"            return new UnMarkResponse(this.inputContent);","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"clevon-w"},"content":"        case \"TODO\":","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"clevon-w"},"content":"            return new CreateResponse(this.inputContent);","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"clevon-w"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"clevon-w"},"content":"            return new DeadlineResponse(this.inputContent);","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"clevon-w"},"content":"        case \"EVENT\":","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"clevon-w"},"content":"            return new EventResponse(this.inputContent);","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"clevon-w"},"content":"        case \"DELETE\":","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"clevon-w"},"content":"            return new DeleteResponse(this.inputContent);","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"clevon-w"},"content":"        case \"FIND\":","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"clevon-w"},"content":"            return new FindResponse(this.inputContent);","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"clevon-w"},"content":"        default:","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"clevon-w"},"content":"            throw new MissingArgumentException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"clevon-w"},"content":"     * Normalises all the whitespaces in a string","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"clevon-w"},"content":"     * @param s Input string to normalise","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"clevon-w"},"content":"     * @return The normalised string","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"clevon-w"},"content":"    public String normaliseAllWhitespaces(String s) {","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"clevon-w"},"content":"        int l \u003d s.length();","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"clevon-w"},"content":"        StringBuilder sb \u003d new StringBuilder(l);","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"clevon-w"},"content":"        boolean lastWasWhite \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"clevon-w"},"content":"        boolean modified \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"clevon-w"},"content":"        for (int i \u003d 0; i \u003c l; i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"clevon-w"},"content":"            int c \u003d s.codePointAt(i);","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"clevon-w"},"content":"            if (Character.isWhitespace(c)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"clevon-w"},"content":"                if (lastWasWhite || (c \u003d\u003d \u0027 \u0027 \u0026\u0026 i \u003d\u003d 0)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"clevon-w"},"content":"                    modified \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"clevon-w"},"content":"                    lastWasWhite \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"clevon-w"},"content":"                    continue;","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"clevon-w"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"clevon-w"},"content":"                if (c !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"clevon-w"},"content":"                    modified \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"clevon-w"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":91,"author":{"gitId":"clevon-w"},"content":"                sb.append(\u0027 \u0027);","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"clevon-w"},"content":"                lastWasWhite \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"clevon-w"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"clevon-w"},"content":"                sb.appendCodePoint(c);","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"clevon-w"},"content":"                lastWasWhite \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"clevon-w"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"clevon-w"},"content":"        return modified ? sb.toString() : s;","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"clevon-w"},"content":"     * Some preprocessing to categorise what type of request the user is inputting","lastModifiedDate":"2023-01-17"},{"lineNumber":103,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"clevon-w"},"content":"    public void categorisation() throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"clevon-w"},"content":"        String normalisedInput \u003d normaliseAllWhitespaces(input);","lastModifiedDate":"2023-01-17"},{"lineNumber":106,"author":{"gitId":"clevon-w"},"content":"        String[] arrStr \u003d normalisedInput.split(\" \", 2);","lastModifiedDate":"2023-01-17"},{"lineNumber":107,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":108,"author":{"gitId":"clevon-w"},"content":"        if (arrStr.length \u003d\u003d 2) { // user input is more than one word","lastModifiedDate":"2023-01-17"},{"lineNumber":109,"author":{"gitId":"clevon-w"},"content":"            try {","lastModifiedDate":"2023-01-17"},{"lineNumber":110,"author":{"gitId":"clevon-w"},"content":"                String currType \u003d arrStr[0].toUpperCase();","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"clevon-w"},"content":"                Types.valueOf(currType); // checking if currType exists in Types","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"clevon-w"},"content":"                this.inputType \u003d currType;","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"clevon-w"},"content":"                this.inputContent \u003d arrStr[1];","lastModifiedDate":"2023-01-17"},{"lineNumber":114,"author":{"gitId":"clevon-w"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"clevon-w"},"content":"                throw new InvalidArgumentException(\"Remember to specify the type of request in your input!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"clevon-w"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":117,"author":{"gitId":"clevon-w"},"content":"        } else if (arrStr.length \u003d\u003d 1) { // user input is only one word","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"clevon-w"},"content":"            this.inputType \u003d arrStr[0].toUpperCase();","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"clevon-w"},"content":"            this.inputContent \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"clevon-w"},"content":"        } else if (arrStr.length \u003d\u003d 0) { // for the edge cases where user input \" \" or \"\"","lastModifiedDate":"2023-01-17"},{"lineNumber":121,"author":{"gitId":"clevon-w"},"content":"            throw new MissingArgumentException(\"Please enter something for me to parse!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":122,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":123,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":124,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"clevon-w"},"content":"    public String getInputType() {","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"clevon-w"},"content":"        return this.inputType;","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"clevon-w":128}},{"path":"src/main/java/response/CreateResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package response;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import exception.MissingArgumentException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"import storage.Todo;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":" * Represents a response to create a new task in the to do list","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"public class CreateResponse extends Response {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"     * Represents the new task to be created","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"    private String todo;","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"     * Creates a response with the specified new task","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"     * @param todo New task","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"    public CreateResponse(String todo) {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"     * Creates a new task in the to do list","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"     * @param taskList The to do list to create a new task in","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"     * @return String to indicate that a new task was created successfully","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"    public String exec(TaskList taskList) throws MissingArgumentException {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"        if (this.todo.equals(\"\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"            throw new MissingArgumentException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"        Todo newTodo \u003d new Todo(this.todo);","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"        taskList.createToDo(newTodo);","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"        return String.format(","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"                \"Alright! This task has been added into the list:\"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"                        + \"\\n\\t%s\"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"                        + \"\\nNow you have %d task(s) in the list.\",","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"                newTodo,","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"                taskList.count());","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"clevon-w"},"content":"     * Custom equals operator to compare CreateResponse objects","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"clevon-w"},"content":"     * @param obj The other CreateResponse object to compare to","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"clevon-w"},"content":"     * @return boolean if the two are the same CreateResponse","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"clevon-w"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"clevon-w"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"clevon-w"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"clevon-w"},"content":"        if (!(obj instanceof CreateResponse)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"clevon-w"},"content":"            return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"clevon-w"},"content":"        CreateResponse that \u003d (CreateResponse) obj;","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"clevon-w"},"content":"        return this.todo.equals(that.todo);","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"clevon-w":60}},{"path":"src/main/java/response/DeadlineResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package response;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"import exception.InvalidArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"import exception.MissingArgumentException;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"import storage.Deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":" * Represents a response to a deadline input","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"public class DeadlineResponse extends Response {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"     * Represents the new deadline to be created","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"    private String deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"     * Creates a response with the specified new deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"     * @param deadline New deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"    public DeadlineResponse(String deadline) {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"     * Creates a new deadline in the to do list","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"     * @param taskList The to do list to create a new deadline in","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"     * @return String to indicate that a new deadline was created successfully","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"    public String exec(TaskList taskList) throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"        // Parsing the String to get the task description and deadline","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"        String[] splitBy \u003d deadline.split(\"/by\", 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"        String des \u003d splitBy[0].trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"        if (des.equals(\"\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"            throw new MissingArgumentException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"        } else if (splitBy.length !\u003d 2","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"                || splitBy[1].trim().equals(\"\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"            throw new MissingArgumentException(\"The deadline cannot be empty.\"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"clevon-w"},"content":"                    + \" Deadline has to be in the format of YYYY-MM-DD (e.g. 2007-12-03)\");","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"clevon-w"},"content":"        String by \u003d splitBy[1].trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"clevon-w"},"content":"        // Try to create LocalDate object from String","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"clevon-w"},"content":"        LocalDate byDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"clevon-w"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"clevon-w"},"content":"            byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"clevon-w"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"clevon-w"},"content":"            throw new InvalidArgumentException(\"Deadline date format should be in the format \"","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"clevon-w"},"content":"                    + \"YYYY-MM-DD (e.g. 2007-12-03)\");","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"clevon-w"},"content":"        // Create Deadline object, add to list and print","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"clevon-w"},"content":"        Deadline newD \u003d new Deadline(des, byDate);","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"clevon-w"},"content":"        taskList.createToDo(newD);","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"clevon-w"},"content":"        return String.format(","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"clevon-w"},"content":"                \"Alright! This task has been added into the list:\"","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"clevon-w"},"content":"                        + \"\\n\\t%s\"","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"clevon-w"},"content":"                        + \"\\nNow you have %d task(s) in the list.\",","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"clevon-w"},"content":"                newD,","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"clevon-w"},"content":"                taskList.count());","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"clevon-w"},"content":"     * Custom equals operator to compare DeadlineResponse objects","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"clevon-w"},"content":"     * @param obj The other DeadlineResponse object to compare to","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"clevon-w"},"content":"     * @return boolean if the two are the same DeadlineResponse","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"clevon-w"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"clevon-w"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"clevon-w"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"clevon-w"},"content":"        if (!(obj instanceof DeadlineResponse)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"clevon-w"},"content":"            return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"clevon-w"},"content":"        DeadlineResponse that \u003d (DeadlineResponse) obj;","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"clevon-w"},"content":"        return this.deadline.equals(that.deadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"clevon-w":84}},{"path":"src/main/java/response/DeleteResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package response;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import exception.InvalidArgumentException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import storage.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":" * Represents a response to delete a task in the to do list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"public class DeleteResponse extends Response {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"     * Represents the index of the task to be deleted","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"    private Integer idxToDelete;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"     * Constructor for the DeleteResponse class","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"     * @param inputContent String containing the index to delete","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"     * @throws InvalidArgumentException when a user inputs anything other than an integer","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"    public DeleteResponse(String inputContent) throws InvalidArgumentException {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"            this.idxToDelete \u003d Integer.parseInt(inputContent);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"            throw new InvalidArgumentException(\"Enter a number after delete!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"     * Deletes a task in the to do list specified","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"     * @param taskList The to do list specified","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"     * @return String to print to the console later","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"    public String exec(TaskList taskList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"        Task removedTask \u003d taskList.delete(idxToDelete);","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"        return String.format(","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"                \"Noted. I\u0027ve removed this task:\"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"                        + \"\\n\\t%s\"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"                        + \"\\nNow you have %d task(s) in the list.\",","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"                removedTask,","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"                taskList.count());","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"clevon-w"},"content":"     * Custom equals operator to compare DeleteResponse objects","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"clevon-w"},"content":"     * @param obj The other DeleteResponse object to compare to","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"clevon-w"},"content":"     * @return boolean if the two are the same DeleteResponse","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"clevon-w"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"clevon-w"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"clevon-w"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"clevon-w"},"content":"        if (!(obj instanceof DeleteResponse)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"clevon-w"},"content":"            return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"clevon-w"},"content":"        DeleteResponse that \u003d (DeleteResponse) obj;","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"clevon-w"},"content":"        return idxToDelete \u003d\u003d that.idxToDelete;","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"clevon-w":61}},{"path":"src/main/java/response/EventResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package response;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"import exception.InvalidArgumentException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"import exception.MissingArgumentException;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"import storage.Event;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":" * Represents the response for the event task","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"public class EventResponse extends Response {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"     * Represents the new event to be created","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"    private final String event;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"     * Creates a response with the specified new event","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"     * @param event New event","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"    public EventResponse(String event) {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"     * Creates a new event in the to do list","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"     * @param taskList The to do list to create a new event in","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"     * @return String to indicate that a new event was created successfully","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"    public String exec(TaskList taskList) throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"        String[] parsed \u003d parseArguments();","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"        String des \u003d parsed[0];","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"        String from \u003d parsed[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"        String to \u003d parsed[2];","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"        // Try to create LocalDate objects from String","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"        LocalDate fromDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"        LocalDate toDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"clevon-w"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"clevon-w"},"content":"            fromDate \u003d LocalDate.parse(from);","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"clevon-w"},"content":"            toDate \u003d LocalDate.parse(to);","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"clevon-w"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"clevon-w"},"content":"            throw new InvalidArgumentException(\"Start and end date format should be in the format \"","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"clevon-w"},"content":"                    + \"YYYY-MM-DD (e.g. 2007-12-03)\");","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"clevon-w"},"content":"        // Create Event object, add to list and print","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"clevon-w"},"content":"        Event newEvent \u003d new Event(des, fromDate, toDate);","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"clevon-w"},"content":"        taskList.createToDo(newEvent);","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"clevon-w"},"content":"        return String.format(","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"clevon-w"},"content":"                \"Alright! This task has been added into the list:\"","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"clevon-w"},"content":"                    + \"\\n\\t%s\"","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"clevon-w"},"content":"                    + \"\\nNow you have %d task(s) in the list.\",","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"clevon-w"},"content":"                newEvent,","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"clevon-w"},"content":"                taskList.count());","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"clevon-w"},"content":"     * Function to parse the arguments and check for errors before creating a new event","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"clevon-w"},"content":"     * @return a String[] of the parsed arguments","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"clevon-w"},"content":"    public String[] parseArguments() {","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"clevon-w"},"content":"        String[] splitFrom \u003d event.split(\"/from\", 2);","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"clevon-w"},"content":"        String des \u003d splitFrom[0].trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"clevon-w"},"content":"        if (des.equals(\"\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"clevon-w"},"content":"            throw new MissingArgumentException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"clevon-w"},"content":"        } else if (splitFrom.length !\u003d 2) {","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"clevon-w"},"content":"            throw new MissingArgumentException(\"The start date cannot be empty.\"","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"clevon-w"},"content":"                    + \" Date has to be in the format of YYYY-MM-DD (e.g. 2007-12-03)\");","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"clevon-w"},"content":"        String[] splitTo \u003d splitFrom[1].split(\"/to\", 2);","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"clevon-w"},"content":"        String from \u003d splitTo[0].trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"clevon-w"},"content":"        if (from.equals(\"\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"clevon-w"},"content":"            throw new MissingArgumentException(\"The start date cannot be empty.\"","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"clevon-w"},"content":"                    + \" Date has to be in the format of YYYY-MM-DD (e.g. 2007-12-03)\");","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"clevon-w"},"content":"        } else if (splitTo.length !\u003d 2","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"clevon-w"},"content":"                || splitTo[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"clevon-w"},"content":"            throw new MissingArgumentException(\"The end date cannot be empty.\"","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"clevon-w"},"content":"                    + \" Date has to be in the format of YYYY-MM-DD (e.g. 2007-12-03)\");","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"clevon-w"},"content":"        String to \u003d splitTo[1].trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"clevon-w"},"content":"        return new String[] {des, from, to};","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"clevon-w"},"content":"     * Custom equals operator to compare EventResponse objects","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"clevon-w"},"content":"     * @param obj The other EventResponse object to compare to","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"clevon-w"},"content":"     * @return boolean if the two are the same EventResponse","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"clevon-w"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"clevon-w"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"clevon-w"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"clevon-w"},"content":"        if (!(obj instanceof EventResponse)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"clevon-w"},"content":"            return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"clevon-w"},"content":"        EventResponse that \u003d (EventResponse) obj;","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"clevon-w"},"content":"        return this.event.equals(that.event);","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"clevon-w":107}},{"path":"src/main/java/response/FindResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package response;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":" * Represents the response to a FIND input from user","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"public class FindResponse extends Response {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"    private String keyword;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"    public FindResponse(String inputContent) {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"        this.keyword \u003d inputContent;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"     * Function to execute the find response","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"     * @param taskList The task list to find the tasks from","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"     * @return The string response after execution","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"    public String exec(TaskList taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"        // Find tasks using keyword from given task list","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"        String found \u003d taskList.findMatchingTasks(keyword);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"        return found;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"     * Custom equals method to determine the equality of FindResponse objects","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"     * @param obj the object to compare to","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"     * @return boolean if the 2 FindResponse objects are equal","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"        if (!(obj instanceof FindResponse)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"            return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"        FindResponse that \u003d (FindResponse) obj;","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"        return this.keyword.equals(that.keyword);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"clevon-w":43}},{"path":"src/main/java/response/ListResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package response;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":" * Represents a response to list everything in the to do list","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"public class ListResponse extends Response {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"     * List everything in the to do list","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"     * @param taskList The to do list to be printed","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"     * @return Customised string representation of the to do list","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"    public String exec(TaskList taskList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"        return taskList.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"     * Custom equals operator to compare ListResponse objects","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"     * @param obj The other ListResponse object to compare to","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"     * @return boolean if the two are the same ListResponse","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"        if (!(obj instanceof ListResponse)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"            return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"        return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"clevon-w":34}},{"path":"src/main/java/response/MarkResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package response;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import exception.InvalidArgumentException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import storage.Task;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":" * Represents a response to mark a task in the to do list","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"public class MarkResponse extends Response {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"     * Represents the index of the task to be marked","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"    private Integer idxToMark;","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"     * Constructor for the MarkResponse class","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"     * @param inputContent String that contains the index to mark","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"     * @throws InvalidArgumentException when a user inputs anything other than an integer","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"    public MarkResponse(String inputContent) throws InvalidArgumentException {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"            this.idxToMark \u003d Integer.parseInt(inputContent);","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"            throw new InvalidArgumentException(\"Enter a number after mark!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"     * Marks a task in the to do list specified","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"     * @param taskList The to do list specified","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"     * @return String to print to the console later","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"    public String exec(TaskList taskList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"        Task currTask \u003d taskList.mark(idxToMark);","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n\\t%s\", currTask.toString());","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"     * Custom equals operator to compare MarkResponse objects","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"     * @param obj The other MarkResponse object to compare to","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"clevon-w"},"content":"     * @return boolean if the two are the same MarkResponse","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"clevon-w"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"clevon-w"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"clevon-w"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"clevon-w"},"content":"        if (!(obj instanceof MarkResponse)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"clevon-w"},"content":"            return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"clevon-w"},"content":"        MarkResponse that \u003d (MarkResponse) obj;","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"clevon-w"},"content":"        return idxToMark \u003d\u003d that.idxToMark;","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"clevon-w":57}},{"path":"src/main/java/response/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package response;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":" * Abstract class containing the methods that a Response should have","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"public abstract class Response {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"    public abstract String exec(TaskList taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"clevon-w":10}},{"path":"src/main/java/response/UnMarkResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package response;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import exception.InvalidArgumentException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import storage.Task;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":" * Represents a response to unmark a task in the to do list","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"public class UnMarkResponse extends Response {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"     * Represents the index of the task to be unmarked","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"    private Integer idxToUnMark;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"     * Constructor for the UnMarkResponse class","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"     * @param inputContent String that contains the index to unmark","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"     * @throws InvalidArgumentException when the user enters anything other than an integer","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"    public UnMarkResponse(String inputContent) throws InvalidArgumentException {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"            this.idxToUnMark \u003d Integer.parseInt(inputContent);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"            throw new InvalidArgumentException(\"Enter a number after unmark!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"     * Unmarks a task in the to do list specified","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"     * @param taskList The to do list specified","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"     * @return String to print to the console later","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"    public String exec(TaskList taskList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"        Task currTask \u003d taskList.unmark(idxToUnMark);","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"        return String.format(\"OK, I\u0027ve marked this task as not done yet:\\n\\t%s\", currTask.toString());","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"     * Custom equals operator to compare UnMarkResponse objects","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"     * @param obj The other UnMarkResponse object to compare to","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"     * @return boolean if the two are the same UnMarkResponse","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"clevon-w"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"clevon-w"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"clevon-w"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"clevon-w"},"content":"        if (!(obj instanceof UnMarkResponse)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"clevon-w"},"content":"            return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"clevon-w"},"content":"        UnMarkResponse that \u003d (UnMarkResponse) obj;","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"clevon-w"},"content":"        return idxToUnMark \u003d\u003d that.idxToUnMark;","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"clevon-w":56}},{"path":"src/main/java/storage/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package storage;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":" * Represents the Deadline task","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"     * Creates a new deadline with the specified description","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"     * @param description The specified description","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"     * Custom string to represent a deadline for printing","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"     * @return Custom string","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"     * Custom string to represent a deadline data to be saved","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"     * @return Custom string","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"    public String toData() {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"        return String.format(\"D | %s | %s\", super.toData(), by);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"clevon-w":39}},{"path":"src/main/java/storage/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package storage;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":" * Represents the Event task","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"     * Creates a new Event with the specified description","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"     * @param description The specified description","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"     * Custom string to represent an event for printing","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"     * @return Custom string","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"                from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")),","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"                to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"     * Custom string to represent an event data to be saved","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"     * @return Custom string","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"    public String toData() {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"        return String.format(\"E | %s | %s - %s\", super.toData(), from, to);","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"clevon-w":43}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"import exception.InvalidArgumentException;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":" * Represents the Storage class that handles saving and loading the task list","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"public class Storage {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"    private Path path;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"    public Storage() {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"        this.path \u003d Paths.get(\"./data/duke.txt\");","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"     * Handles saving the task list to local storage","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"     * @param todoList The task list to be saved","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"    public void saveTaskList(TaskList todoList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"        // Convert TaskList into ArrayList\u003cString\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"        ArrayList\u003cString\u003e todoStringList \u003d todoList.getDataList();","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"        if (Files.notExists(this.path)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"            // Create file in filepath","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"                Files.createFile(this.path);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"                throw new DukeException(\"Oh no! Something went wrong when creating a save file\");","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"clevon-w"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"clevon-w"},"content":"            Files.write(this.path, todoStringList);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"clevon-w"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"clevon-w"},"content":"            throw new DukeException(\"Oh no! Something happened while saving this the to do list\");","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"clevon-w"},"content":"     * Handles loading the task list to local storage","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"clevon-w"},"content":"    public TaskList loadTaskList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"clevon-w"},"content":"        List\u003cString\u003e lines \u003d readFile();","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"clevon-w"},"content":"        TaskList res \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"clevon-w"},"content":"        if (!lines.isEmpty()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"clevon-w"},"content":"            lines.forEach((String line) -\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"clevon-w"},"content":"                String[] lineArr \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"clevon-w"},"content":"                String type \u003d lineArr[0].trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"clevon-w"},"content":"                String status \u003d lineArr[1].trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"clevon-w"},"content":"                String content \u003d lineArr[2].trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"clevon-w"},"content":"                Task task;","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"clevon-w"},"content":"                switch (type) {","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"clevon-w"},"content":"                case \"T\":","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"clevon-w"},"content":"                    task \u003d new Todo(content);","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"clevon-w"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"clevon-w"},"content":"                case \"D\":","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"clevon-w"},"content":"                    task \u003d parseAndCreateDeadline(lineArr, content);","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"clevon-w"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"clevon-w"},"content":"                case \"E\":","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"clevon-w"},"content":"                    task \u003d parseAndCreateEvent(lineArr, content);","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"clevon-w"},"content":"                    break;","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"clevon-w"},"content":"                default:","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"clevon-w"},"content":"                    task \u003d new Task(content);","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"clevon-w"},"content":"                    break;","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"clevon-w"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"clevon-w"},"content":"                if (status.equals(\"1\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"clevon-w"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"clevon-w"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"clevon-w"},"content":"                res.createToDo(task);","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"clevon-w"},"content":"            });","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"clevon-w"},"content":"        return res;","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"clevon-w"},"content":"     * Parses the strings to create a new Event","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"clevon-w"},"content":"     * @param lineArr the input line","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"clevon-w"},"content":"     * @param content the contents of the event description","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"clevon-w"},"content":"     * @return a newly created event","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"clevon-w"},"content":"     * @throws InvalidArgumentException thrown if the format of the dates are wrong","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"clevon-w"},"content":"    public Event parseAndCreateEvent(String[] lineArr, String content) throws InvalidArgumentException {","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"clevon-w"},"content":"        String fromTo \u003d lineArr[3].trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"clevon-w"},"content":"        String[] fromToArr \u003d fromTo.split(\"-\");","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"clevon-w"},"content":"        String from \u003d fromToArr[0].trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"clevon-w"},"content":"        String to \u003d fromToArr[1].trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"clevon-w"},"content":"        // Try to create LocalDate object from String","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"clevon-w"},"content":"        LocalDate fromDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"clevon-w"},"content":"        LocalDate toDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"clevon-w"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"clevon-w"},"content":"            fromDate \u003d LocalDate.parse(from);","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"clevon-w"},"content":"            toDate \u003d LocalDate.parse(to);","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"clevon-w"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"clevon-w"},"content":"            throw new InvalidArgumentException(\"Date format should be in the format \"","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"clevon-w"},"content":"                    + \"YYYY-MM-DD (e.g. 2007-12-03)\");","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"clevon-w"},"content":"        return new Event(content, fromDate, toDate);","lastModifiedDate":"2023-02-10"},{"lineNumber":112,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":115,"author":{"gitId":"clevon-w"},"content":"     * Parses the strings to create a new Deadline","lastModifiedDate":"2023-02-10"},{"lineNumber":116,"author":{"gitId":"clevon-w"},"content":"     * @param lineArr the input line","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"clevon-w"},"content":"     * @param content the contents of the deadline description","lastModifiedDate":"2023-02-10"},{"lineNumber":118,"author":{"gitId":"clevon-w"},"content":"     * @return a newly created deadline","lastModifiedDate":"2023-02-10"},{"lineNumber":119,"author":{"gitId":"clevon-w"},"content":"     * @throws InvalidArgumentException thrown if the format of the dates are wrong","lastModifiedDate":"2023-02-10"},{"lineNumber":120,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":121,"author":{"gitId":"clevon-w"},"content":"    public Deadline parseAndCreateDeadline(String[] lineArr, String content) {","lastModifiedDate":"2023-02-10"},{"lineNumber":122,"author":{"gitId":"clevon-w"},"content":"        String by \u003d lineArr[3].trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":123,"author":{"gitId":"clevon-w"},"content":"        // Try to create LocalDate object from String","lastModifiedDate":"2023-02-10"},{"lineNumber":124,"author":{"gitId":"clevon-w"},"content":"        LocalDate byDate;","lastModifiedDate":"2023-02-10"},{"lineNumber":125,"author":{"gitId":"clevon-w"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":126,"author":{"gitId":"clevon-w"},"content":"            byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2023-02-10"},{"lineNumber":127,"author":{"gitId":"clevon-w"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":128,"author":{"gitId":"clevon-w"},"content":"            throw new InvalidArgumentException(\"Date format should be in the format \"","lastModifiedDate":"2023-02-10"},{"lineNumber":129,"author":{"gitId":"clevon-w"},"content":"                    + \"YYYY-MM-DD (e.g. 2007-12-03)\");","lastModifiedDate":"2023-02-10"},{"lineNumber":130,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"clevon-w"},"content":"        return new Deadline(content, byDate);","lastModifiedDate":"2023-02-10"},{"lineNumber":132,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":134,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":135,"author":{"gitId":"clevon-w"},"content":"     * Function to read file","lastModifiedDate":"2023-02-10"},{"lineNumber":136,"author":{"gitId":"clevon-w"},"content":"     * @return returns a list of Strings from the file to be read","lastModifiedDate":"2023-02-10"},{"lineNumber":137,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":138,"author":{"gitId":"clevon-w"},"content":"    public List\u003cString\u003e readFile() {","lastModifiedDate":"2023-02-10"},{"lineNumber":139,"author":{"gitId":"clevon-w"},"content":"        List\u003cString\u003e lines \u003d Collections.emptyList();","lastModifiedDate":"2023-02-10"},{"lineNumber":140,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":141,"author":{"gitId":"clevon-w"},"content":"        if (Files.exists(this.path)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":142,"author":{"gitId":"clevon-w"},"content":"            try {","lastModifiedDate":"2023-02-10"},{"lineNumber":143,"author":{"gitId":"clevon-w"},"content":"                lines \u003d Files.readAllLines(this.path, StandardCharsets.UTF_8);","lastModifiedDate":"2023-02-10"},{"lineNumber":144,"author":{"gitId":"clevon-w"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":145,"author":{"gitId":"clevon-w"},"content":"                throw new DukeException(\"Oh no! Something happened while loading the to do list\");","lastModifiedDate":"2023-02-10"},{"lineNumber":146,"author":{"gitId":"clevon-w"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":147,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":148,"author":{"gitId":"clevon-w"},"content":"        return lines;","lastModifiedDate":"2023-02-10"},{"lineNumber":149,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":150,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"clevon-w":150}},{"path":"src/main/java/storage/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package storage;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":" * Represents a single task","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":" * Consists of a description, and it\u0027s status (if it\u0027s done or not)","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"     * Creates a new task with the specified description","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"     * @param description The specified description","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"     * Gets the status icon of the task","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"     * @return Status icon as a string","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"     * Marks the task as done","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"     * Unmarks the task as done","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"     * Customised string representation of a task","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"clevon-w"},"content":"     * @return Task as custom string","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"clevon-w"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"clevon-w"},"content":"        String status \u003d this.getStatusIcon();","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"clevon-w"},"content":"        return String.format(\"[%s] %s\", status, this.description);","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"clevon-w"},"content":"     * Converts each task into a String in the data format to be saved","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"clevon-w"},"content":"     * @return String formatted into data to be saved","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"clevon-w"},"content":"    public String toData() {","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"clevon-w"},"content":"        int status \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"clevon-w"},"content":"        return String.format(\"%d | %s\", status, this.description);","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"clevon-w":60}},{"path":"src/main/java/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package storage;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"import exception.InvalidArgumentException;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":" * Represents the to do list","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":" * @author clevon-w","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"public class TaskList {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"     * Represents the to do list","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"     * Creates an empty ArrayList of Strings as an empty to do list","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"     * Adds a task into the to do list","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"     * @param newToDo The new task to be added","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"    public void createToDo(Task newToDo) {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"        this.taskList.add(newToDo);","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"     * Custom String representation of the to do list","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"     * @return Custom string representation","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"        StringBuilder res \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"            return \"There are currently no tasks in your to do list,\\ncreate one now!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"            res.append(String.format(\"\\t%d.%s\\n\", i + 1, taskList.get(i).toString()));","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"clevon-w"},"content":"        return res.toString().trim();","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"clevon-w"},"content":"     * Function to mark a task in the to do list","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"clevon-w"},"content":"     * @param i The index of the task to mark","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"clevon-w"},"content":"     * @return Returns the marked task for printing","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"clevon-w"},"content":"    public Task mark(Integer i) throws InvalidArgumentException {","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"clevon-w"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"clevon-w"},"content":"            Task curr \u003d this.taskList.get(i - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"clevon-w"},"content":"            curr.markAsDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"clevon-w"},"content":"            return curr;","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"clevon-w"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"clevon-w"},"content":"            throw new InvalidArgumentException(\"Make sure you enter an index of a task that exists in the list!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"clevon-w"},"content":"     * Function to unmark a task in the to do list","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"clevon-w"},"content":"     * @param i The index of the task to unmark","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"clevon-w"},"content":"     * @return Returns the unmarked task for printing","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"clevon-w"},"content":"    public Task unmark(Integer i) throws InvalidArgumentException {","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"clevon-w"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"clevon-w"},"content":"            Task curr \u003d this.taskList.get(i - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"clevon-w"},"content":"            curr.unmarkAsDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"clevon-w"},"content":"            return curr;","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"clevon-w"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"clevon-w"},"content":"            throw new InvalidArgumentException(\"Make sure you enter an index of a task that exists in the list!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"clevon-w"},"content":"     * Determine the number of tasks in the to do list","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"clevon-w"},"content":"     * @return Count of the tasks","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"clevon-w"},"content":"    public int count() {","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"clevon-w"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"clevon-w"},"content":"     * Function to delete a task in the to do list","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"clevon-w"},"content":"     * @param i The index of the task to delete","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"clevon-w"},"content":"     * @return Returns the deleted task for printing","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"clevon-w"},"content":"    public Task delete(Integer i) throws InvalidArgumentException {","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"clevon-w"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"clevon-w"},"content":"            Task curr \u003d this.taskList.get(i - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"clevon-w"},"content":"            this.taskList.remove(curr);","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"clevon-w"},"content":"            return curr;","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"clevon-w"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"clevon-w"},"content":"            throw new InvalidArgumentException(\"Make sure you enter an index of a task that exists in the list!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"clevon-w"},"content":"     * Function to get all the data string representations of the tasks in the taskList","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"clevon-w"},"content":"     * @return An array list of all the data string representations","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"clevon-w"},"content":"    public ArrayList\u003cString\u003e getDataList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"clevon-w"},"content":"        ArrayList\u003cString\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"clevon-w"},"content":"        this.taskList.forEach(task -\u003e res.add(task.toData()));","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"clevon-w"},"content":"        return res;","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"clevon-w"},"content":"     * Function to find matching task descriptions from this taskList using a keyword","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"clevon-w"},"content":"     * @param keyword String to find from the descriptions of the tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"clevon-w"},"content":"     * @return A new TaskList containing all the tasks which description contains the keyword","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"clevon-w"},"content":"    public String findMatchingTasks(String keyword) {","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"clevon-w"},"content":"        TaskList found \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"clevon-w"},"content":"        taskList.forEach(task -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"clevon-w"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"clevon-w"},"content":"                found.createToDo(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"clevon-w"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"clevon-w"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"clevon-w"},"content":"        StringBuilder res \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"clevon-w"},"content":"        if (found.taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"clevon-w"},"content":"            return \"There are currently no tasks in your to do list matching the keyword!\";","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"clevon-w"},"content":"        for (int i \u003d 0; i \u003c found.taskList.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"clevon-w"},"content":"            res.append(String.format(\"\\t%d.%s\\n\", i + 1, found.taskList.get(i).toString()));","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"clevon-w"},"content":"        return res.toString().trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"clevon-w":132}},{"path":"src/main/java/storage/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package storage;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":" * Represents the Todo class","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"     * Creates a new to do with the specified description","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"     * @param description The specified description","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"     * Custom string to represent a to do for printing","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"     * @return Custom string","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"     * Custom string to represent a to do as data to be saved","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"     * @return Custom string","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"    public String toData() {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"        return \"T | \" + super.toData();","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"clevon-w":32}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":" * Represents the Ui class that handles user interactions","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"public class Ui {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"    private final String hello \u003d \"Hello! I\u0027m Duke\";","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"    private final String capabilities \u003d \"Some things I can do include:\"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"            + \"\\n\\t1. create a new todo, using \u0027todo\u0027,\"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"            + \"\\n\\t2. create a new event, using \u0027event\u0027,\"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"            + \"\\n\\t3. create a new deadline, using \u0027deadline\u0027,\"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"            + \"\\n\\t4. list all tasks, using \u0027list\u0027,\"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"            + \"\\n\\t5. mark a task, using \u0027mark\u0027,\"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"            + \"\\n\\t6. unmark a task, using \u0027unmark\u0027,\"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"            + \"\\n\\t7. exit the program, using \u0027bye\u0027!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"    private final String question \u003d \"What can I do for you?\";","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"    private final String extStr \u003d \"Bye! Hope to see you again soon!\"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"            + \"\\nThis program will exit automatically in 5 seconds.\";","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"    private final String loadedTasks \u003d \"I noticed that some tasks were saved from your last session \"","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"            + \"and loaded them up for you.\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"    public String getExtStr() {","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"        return extStr;","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"    public String getIntro() {","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"        String intro \u003d String.format(\"%s \\n %s \\n %s\", hello, capabilities, question);","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"        return intro;","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"    public String foundSomeTasks() {","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"        return loadedTasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"     * Prints formatted response to the console.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"     * @param strings strings that will be printed","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"    public void printResponse(String... strings) {","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"        String line \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"        res +\u003d line;","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"        for (String s : strings) {","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"clevon-w"},"content":"            res +\u003d String.format(\"\\t %s\\n\", s);","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"clevon-w"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"clevon-w"},"content":"        res +\u003d line;","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"clevon-w"},"content":"        System.out.println(res);","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"clevon-w":49}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"clevon-w":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"clevon-w":19}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"import response.CreateResponse;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"import response.DeadlineResponse;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"import response.DeleteResponse;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"import response.EventResponse;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"import response.FindResponse;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"import response.ListResponse;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"import response.MarkResponse;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"import response.Response;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"import response.UnMarkResponse;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":" * Class to test all parsing returns the correct response to be executed","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"    public void testListParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"list\");","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"        Response expected \u003d new ListResponse();","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"    public void testMarkParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"mark 1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"        Response expected \u003d new MarkResponse(\"1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"    public void testUnMarkParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"unmark 1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"        Response expected \u003d new UnMarkResponse(\"1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"clevon-w"},"content":"    public void testDeleteParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"delete 1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"clevon-w"},"content":"        Response expected \u003d new DeleteResponse(\"1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"clevon-w"},"content":"    public void testTodoParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"todo test1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"clevon-w"},"content":"        Response expected \u003d new CreateResponse(\"test1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"clevon-w"},"content":"    public void testDeadlineParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"deadline test2 /by 2023-01-01\");","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"clevon-w"},"content":"        Response expected \u003d new DeadlineResponse(\"test2 /by 2023-01-01\");","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"clevon-w"},"content":"    public void testEventParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"event test3 /from 2023-01-01 /to 2023-01-02\");","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"clevon-w"},"content":"        Response expected \u003d new EventResponse(\"test3 /from 2023-01-01 /to 2023-01-02\");","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"clevon-w"},"content":"    public void testFindParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"find something\");","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"clevon-w"},"content":"        Response expected \u003d new FindResponse(\"something\");","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"clevon-w"},"content":"    public void testErrorParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"hello\");","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"clevon-w"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"clevon-w"},"content":"            parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"clevon-w"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"clevon-w"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"clevon-w"},"content":"        String expectedMessage \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\"","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"clevon-w"},"content":"                + \"\\n\\t  To create a new todo, use \u0027todo ...\u0027,\"","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"clevon-w"},"content":"                + \"\\n\\t  To create a new event, use \u0027event ... /from ... /to ...\u0027,\"","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"clevon-w"},"content":"                + \"\\n\\t  To create a new deadline, use \u0027deadline ... /by ...\u0027,\"","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"clevon-w"},"content":"                + \"\\n\\t  To list all tasks, use \u0027list\u0027,\"","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"clevon-w"},"content":"                + \"\\n\\t  To mark a task, use \u0027mark \u0027 with a number,\"","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"clevon-w"},"content":"                + \"\\n\\t  To unmark a task, use \u0027unmark \u0027 with a number,\"","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"clevon-w"},"content":"                + \"\\n\\t  Finally to exit the program, use \u0027bye\u0027!\";","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"clevon-w":96}},{"path":"src/test/java/response/CreateResponseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package response;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"public class CreateResponseTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"    private TaskList taskList1;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"    private TaskList taskList2;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"    public void init() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"        this.taskList1 \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"        this.taskList2 \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"    public void testCreateParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"todo test1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"        Response expected \u003d new CreateResponse(\"test1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expected.exec(taskList1), actual.exec(taskList2));","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"    public void testCreateErrorParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"todo\");","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"            actual.exec(taskList1);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"        String expectedMessage \u003d \"The description of a todo cannot be empty.\";","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"clevon-w":39}},{"path":"src/test/java/response/DeadlineResponseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package response;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"public class DeadlineResponseTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"    private TaskList taskList1;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"    private TaskList taskList2;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"    public void init() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"        this.taskList1 \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"        this.taskList2 \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"    public void testDeadlineParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"deadline test1 /by 2023-01-01\");","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"        Response expected \u003d new DeadlineResponse(\"test1 /by 2023-01-01\");","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expected.exec(taskList1), actual.exec(taskList2));","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"    public void testDeadlineNoDesErrorParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"deadline /by 2023-01-01\");","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"            actual.exec(taskList1);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"        String expectedMessage \u003d \"The description of a deadline cannot be empty.\";","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"    public void testDeadlineNoByErrorParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"deadline test1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"clevon-w"},"content":"            actual.exec(taskList1);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"clevon-w"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"clevon-w"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"clevon-w"},"content":"        String expectedMessage \u003d \"The deadline cannot be empty.\"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"clevon-w"},"content":"                + \"Deadline has to be in the format of YYYY-MM-DD (e.g. 2007-12-03)\";","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"clevon-w"},"content":"    public void testDeadlineWrongByErrorParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"deadline test1 /by tonight\");","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"clevon-w"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"clevon-w"},"content":"            actual.exec(taskList1);","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"clevon-w"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"clevon-w"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"clevon-w"},"content":"        String expectedMessage \u003d \"Deadline date format should be in the format \"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"clevon-w"},"content":"                + \"YYYY-MM-DD (e.g. 2007-12-03)\";","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"clevon-w":63}},{"path":"src/test/java/response/DeleteResponseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package response;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"import storage.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"public class DeleteResponseTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"    private TaskList taskList1;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"    private TaskList taskList2;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"    public void init() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"        this.taskList1 \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"        this.taskList1.createToDo(new Todo(\"test1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"        this.taskList2 \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"        this.taskList2.createToDo(new Todo(\"test1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"    public void testDeleteParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"delete 1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"        Response expected \u003d new DeleteResponse(\"1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expected.exec(taskList1), actual.exec(taskList2));","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"    public void testDeleteErrorParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"delete something\");","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"            parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"        String expectedMessage \u003d \"Enter a number after delete!\";","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"clevon-w":41}},{"path":"src/test/java/response/EventResponseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package response;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"public class EventResponseTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"    private TaskList taskList1;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"    private TaskList taskList2;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"    public void init() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"        this.taskList1 \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"        this.taskList2 \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"    public void testEventParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"event test1 /from 2023-01-01 /to 2023-01-02\");","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"        Response expected \u003d new EventResponse(\"test1 /from 2023-01-01 /to 2023-01-02\");","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expected.exec(taskList1), actual.exec(taskList2));","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"    public void testEventNoDesErrorParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"event /from 2023-01-01 /to 2023-01-02\");","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"            actual.exec(taskList1);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"        String expectedMessage \u003d \"The description of an event cannot be empty.\";","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"    public void testEventNoFromErrorParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"event test1 /to 2023-01-02\");","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"clevon-w"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"clevon-w"},"content":"            actual.exec(taskList1);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"clevon-w"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"clevon-w"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"clevon-w"},"content":"        String expectedMessage \u003d \"The start date cannot be empty.\"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"clevon-w"},"content":"                + \"Date has to be in the format of YYYY-MM-DD (e.g. 2007-12-03)\";","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"clevon-w"},"content":"    public void testEventNoToErrorParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"event test1 /from 2023-01-01\");","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"clevon-w"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"clevon-w"},"content":"            actual.exec(taskList1);","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"clevon-w"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"clevon-w"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"clevon-w"},"content":"        String expectedMessage \u003d \"The end date cannot be empty.\"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"clevon-w"},"content":"                + \"Date has to be in the format of YYYY-MM-DD (e.g. 2007-12-03)\";","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"clevon-w"},"content":"    public void testEventWrongDateErrorParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"event test1 /from today /to tonight\");","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"clevon-w"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"clevon-w"},"content":"            actual.exec(taskList1);","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"clevon-w"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"clevon-w"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"clevon-w"},"content":"        String expectedMessage \u003d \"Start and end date format should be in the format \"","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"clevon-w"},"content":"                + \"YYYY-MM-DD (e.g. 2007-12-03)\";","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"clevon-w":75}},{"path":"src/test/java/response/FindResponseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package response;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"import storage.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"public class FindResponseTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"    public void init() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"        taskList.createToDo(new Todo(\"test1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"    public void testFindTrue() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"find test1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"        Response expected \u003d new FindResponse(\"test1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expected.exec(taskList), actual.exec(taskList));","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"    public void testFindFalse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"find something\");","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"        Response expected \u003d new FindResponse(\"something\");","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expected.exec(taskList), actual.exec(taskList));","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"clevon-w":33}},{"path":"src/test/java/response/ListResponseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package response;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"import storage.Deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"import storage.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"import storage.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"public class ListResponseTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"    public void init() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"        this.taskList.createToDo(new Todo(\"test1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"        this.taskList.createToDo(new Deadline(\"test2\", LocalDate.parse(\"2023-01-01\")));","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"        this.taskList.createToDo(new Event(\"test3\", LocalDate.parse(\"2023-01-01\"), LocalDate.parse(\"2023-01-02\")));","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"    public void testListParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"list\");","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"        Response expected \u003d new ListResponse();","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expected.exec(taskList), actual.exec(taskList));","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"clevon-w":33}},{"path":"src/test/java/response/MarkResponseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package response;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"import storage.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"public class MarkResponseTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"    private TaskList taskList1;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"    private TaskList taskList2;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"    public void init() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"        this.taskList1 \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"        this.taskList1.createToDo(new Todo(\"test1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"        this.taskList2 \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"        this.taskList2.createToDo(new Todo(\"test1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"    public void testMarkParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"mark 1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"        Response expected \u003d new MarkResponse(\"1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expected.exec(taskList1), actual.exec(taskList2));","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"    public void testMarkErrorParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"mark something\");","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"            parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"        String expectedMessage \u003d \"Enter a number after mark!\";","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"clevon-w":41}},{"path":"src/test/java/response/UnMarkResponseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"package response;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"import storage.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"import storage.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"public class UnMarkResponseTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"    private TaskList taskList1;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"    private TaskList taskList2;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"    public void init() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"        this.taskList1 \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"        this.taskList1.createToDo(new Todo(\"test1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"        this.taskList2 \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"        this.taskList2.createToDo(new Todo(\"test1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"    public void testUnMarkParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"unmark 1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"        Response actual \u003d parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"        Response expected \u003d new UnMarkResponse(\"1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expected.exec(taskList1), actual.exec(taskList2));","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"clevon-w"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"clevon-w"},"content":"    public void testUnMarkErrorParse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"clevon-w"},"content":"        Parser parser \u003d new Parser(\"unmark something\");","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"clevon-w"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"clevon-w"},"content":"            parser.parse();","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"clevon-w"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"clevon-w"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"clevon-w"},"content":"        String expectedMessage \u003d \"Enter a number after unmark!\";","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"clevon-w"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"clevon-w"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"clevon-w"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"clevon-w":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"clevon-w"},"content":"hello","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"clevon-w"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"clevon-w"},"content":"todo","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"clevon-w"},"content":"todo test todo","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"clevon-w"},"content":"event","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"clevon-w"},"content":"event test event","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"clevon-w"},"content":"event test event /from today","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"clevon-w"},"content":"event test event /to tmr","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"clevon-w"},"content":"event test event /from today /to tmr","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"clevon-w"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"clevon-w"},"content":"deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"clevon-w"},"content":"deadline test deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"clevon-w"},"content":"deadline test deadline /by today","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"clevon-w"},"content":"mark","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"clevon-w"},"content":"mark something","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"clevon-w"},"content":"mark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"clevon-w"},"content":"mark 75","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"clevon-w"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"clevon-w"},"content":"unmark","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"clevon-w"},"content":"unmark something","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"clevon-w"},"content":"unmark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"clevon-w"},"content":"unmark 75","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"clevon-w"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"clevon-w"},"content":"delete","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"clevon-w"},"content":"delete something","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"clevon-w"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"clevon-w"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"clevon-w"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"clevon-w":28}}]
