[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"clydelhui":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"    archiveBaseName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"checkstyle{","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"-":39,"clydelhui":23}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"# Duke User Guide","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"Duke is a chatbot that helps you to track your tasks via a **Command Line Interface (CLI)**. ","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"Duke allows you to quickly perform tasks by typing commands into the chatbox.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"- [X] Track Deadlines, Todos and Events","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"- [X] Mark tasks as done","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"- [X] Store data on your local device","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"- [X] Sort your task list for easy management","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"- [X] Search for relevant tasks","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"## Installation Guide","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"1. Ensure that you have Java 11 installed on your computer. If you don\u0027t have it installed, you can get it ","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"[here](https://www.oracle.com/java/technologies/downloads/#java11).","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"4. Download the latest release of Duke from [here](https://github.com/clydelhui/ip/releases)","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"5. Open a terminal in the directory which contains the `duke.Launcher.jar` file that you downloaded","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"6. Run the command `java -jar .\\duke.Launcher.jar`","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"## Usage","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"### Listing items currently in the list: `list`","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"Lists all the items currently stored by Duke in the order it is stored.","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e Format: `list`","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"Adds a todo to Duke\u0027s task list.\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"Format: `todo [task]`\u003cbr /\u003e\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"Examples:","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"- `todo buy eggs`","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"- `todo feed cat`","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"### Adding a deadline: `deadline`","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"Adds a deadline to Duke\u0027s task list.\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"Format: `deadline [task] /[YYYY-MM-DD]`\u003cbr /\u003e\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"Examples:","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"- `deadline file taxes /2023-03-15`","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"- `deadline buy presents /2023-04-13`","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"### Adding an event: `event`","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"Adds an event to Duke\u0027s task list.\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"Format: `event [task] /[YYYY-MM-DD]/[YYYY-MM-DD]`\u003cbr /\u003e\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"- The first date is the start date of the event and the second is the end date","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"Examples:","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"- `event food fair /2018-03-10/2018-03-11`","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"- `event project showcase /2018-05-23/2018-05-26`","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"### Marking a task: `mark`","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"Marks an existing task as done.\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"Format: `mark [task number]`\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"- Marks the task as done","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"- The `task number` refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"- The index must be a positive integer starting from 1.\u003cbr /\u003e\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"  Examples:","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"clydelhui"},"content":"- `mark 1`","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"clydelhui"},"content":"- `mark 3`","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"clydelhui"},"content":"### Un-marking a task: `unmark`","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"clydelhui"},"content":"Un-marks an existing task as not done.\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"clydelhui"},"content":"Format: `unmark [task number]`\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"clydelhui"},"content":"- Un-marks the task","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"clydelhui"},"content":"- The `task number` refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"clydelhui"},"content":"- The index must be a positive integer starting from 1.\u003cbr /\u003e\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"clydelhui"},"content":"  Examples:","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"clydelhui"},"content":"- `unmark 1`","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"clydelhui"},"content":"- `unmark 3`","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"clydelhui"},"content":"### Locating a task: `find`","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"clydelhui"},"content":"Find tasks whose description contain the given keyword.\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"clydelhui"},"content":"Format: `find [keyword]`\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"clydelhui"},"content":"- The search is case-sensitive.\u003cbr /\u003e\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"clydelhui"},"content":"  Examples:","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"clydelhui"},"content":"- `find assignment` returns `[T][X]todo math assignment`","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"clydelhui"},"content":"- `find science` returns `[D][X]deadline science homework /2023-03-15`","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"clydelhui"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"clydelhui"},"content":"Deletes the task at the specified task number from the task list.\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"clydelhui"},"content":"Format: `delete [task number]`\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"clydelhui"},"content":"- Deletes the task","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"clydelhui"},"content":"- The `task number` refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"clydelhui"},"content":"- The index must be a positive integer starting from 1.\u003cbr /\u003e\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"clydelhui"},"content":"  Examples:","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"clydelhui"},"content":"- `delete 1`","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"clydelhui"},"content":"- `delete 2`","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"clydelhui"},"content":"### Sorting the task list: `sort`","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"clydelhui"},"content":"Sorts the items in the task list by description.\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"clydelhui"},"content":"Format: `sort`","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"clydelhui"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"clydelhui"},"content":"Exits the program after saving the data in the task list.\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"clydelhui"},"content":"Format: `bye`","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"clydelhui"},"content":"### Exiting the program forcefully: `forcequit`","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"clydelhui"},"content":"Exits the program even if the data cannot be saved.\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"clydelhui"},"content":"Format: `forcequit`","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":125,"author":{"gitId":"clydelhui"},"content":"### Saving the data","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"clydelhui"},"content":"Duke\u0027s data is saved in the hard disk automatically in your local directory where your `duke.Launcher.jar` file ","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"clydelhui"},"content":"is saved in after any command that changes the data. You do not need to save the data manually.","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"clydelhui"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"clydelhui"},"content":"***","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"-":14,"clydelhui":116}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package commands;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.IllegalCommandException;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.IllegalInputException;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"import elems.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"import elems.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"import elems.Ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"import items.Deadline;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"import items.Event;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"import items.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"import items.ToDo;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":" * Represents a command which adds a \u003ccode\u003eTask\u003c/code\u003e to a given \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"    enum TaskType {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"        TODO,","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"        DEADLINE,","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"        EVENT","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"    private final TaskType taskType;","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"     * Constructor that creates an \u003ccode\u003eAddCommand\u003c/code\u003e object given a keyword and","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"     * an \u003ccode\u003eArrayList\u003c/code\u003e of strings of parameters","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"     * @param keyword The keyword for the \u003ccode\u003eAddCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"     * @param params An \u003ccode\u003eArrayList\u003c/code\u003e containing the parameters of the command","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"     *               in \u003ccode\u003eString\u003c/code\u003e type","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"     * @throws IllegalCommandException If the given keyword does not match any valid keywords","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"    public AddCommand(String keyword, ArrayList\u003cString\u003e params) throws IllegalCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"        super(keyword, params);","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"        switch (keyword) {","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"            this.taskType \u003d TaskType.TODO;","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"            this.taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"        case \"event\":","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"            this.taskType \u003d TaskType.EVENT;","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"        default:","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalCommandException(\"Invalid keyword for AddCommand\");","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e to be acted on by the \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e to be acted on by the \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e to be acted on by the \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"     * @throws DukeException When the \u003ccode\u003eTask\u003c/code\u003e is unable to be successfully added to the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"clydelhui"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"clydelhui"},"content":"        if (this.params.size() \u003d\u003d 0 || this.params.size() \u003e 3) {","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalInputException(\"Wrong number of arguments to make a task!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"clydelhui"},"content":"        Task addedTask;","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"clydelhui"},"content":"        switch (this.taskType) {","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"clydelhui"},"content":"        case TODO:","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"clydelhui"},"content":"            addedTask \u003d makeTodo();","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"clydelhui"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"clydelhui"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"clydelhui"},"content":"            addedTask \u003d makeDeadline();","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"clydelhui"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"clydelhui"},"content":"        case EVENT:","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"clydelhui"},"content":"            addedTask \u003d makeEvent();","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"clydelhui"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"clydelhui"},"content":"        default:","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalCommandException(\"Unable to add task\");","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"clydelhui"},"content":"            tasks.addTask(addedTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"clydelhui"},"content":"            storage.refreshStorage(tasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"clydelhui"},"content":"            ui.dukeDisplay(\"I have successfully added the following task for you! \\n\" + addedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"clydelhui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"clydelhui"},"content":"            ui.dukeDisplay(\"Seems like there is something wrong with the storage file \\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"clydelhui"},"content":"                    + \"Any updates will not be saved!\");","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"clydelhui"},"content":"            ui.errorDisplay(e);","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"clydelhui"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"clydelhui"},"content":"    private Task makeTodo() throws IllegalInputException {","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"clydelhui"},"content":"        if (this.params.size() !\u003d 1) {","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalInputException(\"Too many arguments for a todo!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"clydelhui"},"content":"        } else if (this.params.get(0).isEmpty()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalInputException(\"Cannot make a todo without a description!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"clydelhui"},"content":"        return new ToDo(this.params.get(0));","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"clydelhui"},"content":"    private Task makeDeadline() throws IllegalInputException {","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"clydelhui"},"content":"        if (this.params.size() !\u003d 2) {","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalInputException(\"Wrong number of arguments for a deadline!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"clydelhui"},"content":"            return new Deadline(this.params.get(0), LocalDate.parse(this.params.get(1)));","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"clydelhui"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalInputException(\"You have keyed in an invalid date\");","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"clydelhui"},"content":"    private Task makeEvent() throws IllegalInputException {","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"clydelhui"},"content":"        if (this.params.size() !\u003d 3) {","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalInputException(\"Wrong number of arguments for an Event!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"clydelhui"},"content":"            return new Event(this.params.get(0),","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"clydelhui"},"content":"                    LocalDate.parse(this.params.get(1)), LocalDate.parse(this.params.get(2)));","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"clydelhui"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalInputException(\"You have keyed in an invalid date\");","lastModifiedDate":"2023-02-19"},{"lineNumber":127,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"clydelhui":129}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package commands;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"import elems.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import elems.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import elems.Ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":" * Represents a command to be executed","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"    protected ArrayList\u003cString\u003e params;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"    private final String keyword;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"     * Creates a command with the given keyword and parameters","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"     * @param keyword The keyword for the intended command","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"     * @param params An \u003ccode\u003eArrayList\u003c/code\u003e of strings containing the parameters for the command","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"    public Command(String keyword, ArrayList\u003cString\u003e params) {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"        this.params \u003d params;","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"     * Executes the \u003ccode\u003eCommand\u003c/code\u003e with the given \u003ccode\u003eTaskList\u003c/code\u003e,","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"     *         \u003ccode\u003eUi\u003c/code\u003e and \u003ccode\u003eStorage\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e to be acted on by the \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e to be acted on by the \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e to be acted on by the \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"     * @throws DukeException when the \u003ccode\u003eCommand\u003c/code\u003e is unable to be executed","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"clydelhui":37}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package commands;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.IllegalCommandException;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.IllegalInputException;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.TaskListIndexOutOfBoundsException;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"import elems.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"import elems.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"import elems.Ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"import items.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":" * Represents a \u003ccode\u003eCommand\u003c/code\u003e that deletes a task from the given \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"     * Constructor that creates a \u003ccode\u003eDeleteCommand\u003c/code\u003e object given a keyword and","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"     *      an \u003ccode\u003eArrayList\u003c/code\u003e of strings of parameters","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"     * @param keyword The keyword for the \u003ccode\u003eDeleteCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"     * @param params An \u003ccode\u003eArrayList\u003c/code\u003e containing the parameters of the command","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"     *               in \u003ccode\u003eString\u003c/code\u003e type","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"     * @throws IllegalCommandException If the given keyword does not match any valid keywords","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"    public DeleteCommand(String keyword, ArrayList\u003cString\u003e params) throws IllegalCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"        super(keyword, params);","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"        if (!\"delete\".equals(keyword)) {","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalCommandException(\"Invalid DeleteCommand\");","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e to be acted on by the \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e to be acted on by the \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e to be acted on by the \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"     * @throws DukeException when the \u003ccode\u003eTask\u003c/code\u003e cannot be successfully deleted from the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"        if (this.params.size() !\u003d 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalInputException(\"Wrong number of arguments for this command!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"            int deleteIndex \u003d Integer.parseInt(this.params.get(0));","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"            Task deleted \u003d tasks.delete(deleteIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"            storage.refreshStorage(tasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"            ui.dukeDisplay(\"Successfully deleted the following task! \\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"                    + deleted.toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalInputException(\"Seems like you didn\u0027t key in an integer?\");","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"        } catch (TaskListIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"            ui.errorDisplay(e);","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"            ui.dukeDisplay(\"Seems like there is something wrong with the storage file \\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"                    + \"Any updates will not be saved!\");","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"            ui.errorDisplay(e);","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"clydelhui":65}},{"path":"src/main/java/commands/ListModifyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package commands;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.EmptyTaskListException;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.IllegalCommandException;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.IllegalInputException;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"import elems.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"import elems.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"import elems.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":" * Represents a Command that modifies a \u003ccode\u003eTaskList\u003c/code\u003e without changing any of the \u003ccode\u003eTasks\u003c/code\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":" * within the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"public class ListModifyCommand extends Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"     * Creates a new ListModifyCommand","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"     * @param keyword The keyword for the command","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"     * @param params The parameters for the command","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"     * @throws IllegalCommandException when the command is not recognised as valid","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"    public ListModifyCommand(String keyword, ArrayList\u003cString\u003e params) throws IllegalCommandException {","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"        super(keyword, params);","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"        if (!\"sort\".equals(keyword)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalCommandException(\"Invalid ListModifyCommand\");","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"     * Executes the \u003ccode\u003eListModifyCommand\u003c/code\u003e with the given \u003ccode\u003eTaskList\u003c/code\u003e,","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"     * \u003ccode\u003eUi\u003c/code\u003e and \u003ccode\u003eStorage\u003c/code\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"     * @param tasks   The \u003ccode\u003eTaskList\u003c/code\u003e to be acted on by the \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"     * @param ui      The \u003ccode\u003eUi\u003c/code\u003e to be acted on by the \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e to be acted on by the \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"     * @throws dukeexceptions.DukeException when the \u003ccode\u003eCommand\u003c/code\u003e is unable to be executed","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"        if (this.params.size() !\u003d 1 \u0026\u0026 !this.params.get(0).equals(\"\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalInputException(\"Wrong number of arguments!\");","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"            throw new EmptyTaskListException(\"Trying to sort an empty task list\");","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"            tasks.sortByDescription();","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"            storage.refreshStorage(tasks);","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"            ui.dukeDisplay(\"I have sorted the list by description!\\nTry using the \\\"list\\\"\"","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"                    + \"command to see the new ordering of the list\");","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"            ui.dukeDisplay(\"Seems like there is something wrong with the storage file \\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"                    + \"Any updates will not be saved!\");","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"            ui.errorDisplay(e);","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"clydelhui":63}},{"path":"src/main/java/commands/ModifyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package commands;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.IllegalCommandException;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.IllegalInputException;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.TaskListIndexOutOfBoundsException;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"import elems.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"import elems.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"import elems.Ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":" * Represents a command which modifies a \u003ccode\u003eTask\u003c/code\u003e in a given \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"public class ModifyCommand extends Command {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"    enum ModifyType {","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"        MARK,","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"        UNMARK","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"    private final ModifyType modifyType;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"     * Constructor that creates an \u003ccode\u003eAddCommand\u003c/code\u003e object given a keyword and","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"     * an \u003ccode\u003eArrayList\u003c/code\u003e of strings of parameters","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"     * @param keyword The keyword for the \u003ccode\u003eAddCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"     * @param params An \u003ccode\u003eArrayList\u003c/code\u003e containing the parameters of the command","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"     *               in \u003ccode\u003eString\u003c/code\u003e type","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"     * @throws IllegalCommandException If the given keyword does not match any valid keywords","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"    public ModifyCommand(String keyword, ArrayList\u003cString\u003e params) throws IllegalCommandException {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"        super(keyword, params);","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"        switch (keyword) {","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"            this.modifyType \u003d ModifyType.MARK;","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"            this.modifyType \u003d ModifyType.UNMARK;","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"        default:","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalCommandException(\"Invalid keyword for ModifyCommand\");","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"        if (this.params.size() !\u003d 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalInputException(\"Wrong number of parameters for this command!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"            int taskIndex \u003d Integer.parseInt(this.params.get(0));","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"            switch (this.modifyType) {","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"            case MARK:","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"                tasks.markTask(taskIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"            case UNMARK:","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"                tasks.unmarkTask(taskIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"            default:","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"                throw new IllegalCommandException(\"Invalid type of ModifyCommand\");","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"clydelhui"},"content":"            storage.refreshStorage(tasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"clydelhui"},"content":"            ui.dukeDisplay(\"Task successfully modified! \\n\" + tasks.getTaskString(taskIndex));","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"clydelhui"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalInputException(\"Invalid task item selected!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"clydelhui"},"content":"        } catch (TaskListIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"clydelhui"},"content":"            ui.errorDisplay(e);","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"clydelhui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"clydelhui"},"content":"            ui.dukeDisplay(\"Seems like there is something wrong with the storage file \\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"clydelhui"},"content":"                    + \"Any updates will not be saved!\");","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"clydelhui"},"content":"            ui.errorDisplay(e);","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"clydelhui"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"clydelhui":79}},{"path":"src/main/java/commands/VoidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package commands;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.EmptyTaskListException;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.IllegalCommandException;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.IllegalInputException;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"import elems.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"import elems.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"import elems.Ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":" * Represents a \u003ccode\u003eCommand\u003c/code\u003e that does not influence the state of the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"public class VoidCommand extends Command {","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"    enum VoidType {","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"        BYE,","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"        FIND,","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"        FORCEQUIT,","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"        LIST","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"    private final VoidType voidType;","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"     * Constructor to produce a new \u003ccode\u003eVoidCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"     * @param keyword The keyword for the given \u003ccode\u003eVoidCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"     * @param params The parameters associated with the given \u003ccode\u003eVoidCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"     * @throws IllegalCommandException When the given keyword is not valid","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"    public VoidCommand(String keyword, ArrayList\u003cString\u003e params) throws IllegalCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"        super(keyword, params);","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"        switch (keyword) {","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"        case \"list\":","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"            this.voidType \u003d VoidType.LIST;","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"        case \"find\":","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"            this.voidType \u003d VoidType.FIND;","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"            break;","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"            this.voidType \u003d VoidType.BYE;","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"        case \"forcequit\":","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"            this.voidType \u003d VoidType.FORCEQUIT;","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"        default:","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalCommandException(\"Invalid keyword for VoidCommand\");","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e to be acted on by the \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e to be acted on by the \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e to be acted on by the \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"     * @throws DukeException when unable to execute Command","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"clydelhui"},"content":"        switch (voidType) {","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"clydelhui"},"content":"        case LIST:","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"clydelhui"},"content":"            if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"clydelhui"},"content":"                throw new EmptyTaskListException(\"Trying to list an empty task list\");","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"clydelhui"},"content":"            String[] taskStringList \u003d tasks.enumerate();","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"clydelhui"},"content":"            int listSize \u003d taskStringList.length;","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"clydelhui"},"content":"            StringBuilder listOutput \u003d new StringBuilder();","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"clydelhui"},"content":"            for (int i \u003d 0; i \u003c listSize; i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"clydelhui"},"content":"                listOutput.append(i + 1).append(\":\").append(taskStringList[i]).append(\"\\n\");","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"clydelhui"},"content":"            ui.dukeDisplay(listOutput.toString());","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"clydelhui"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"clydelhui"},"content":"        case FIND:","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"clydelhui"},"content":"            if (this.params.size() \u003e 2) {","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"clydelhui"},"content":"                throw new IllegalInputException(\"Only 1 word can be searched at a time\");","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"clydelhui"},"content":"            if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"clydelhui"},"content":"                throw new EmptyTaskListException(\"Trying to find something in an empty list\");","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"clydelhui"},"content":"            String[] foundTasks \u003d tasks.searchTaskDescription(this.params.get(0));","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"clydelhui"},"content":"            if (foundTasks.length \u003d\u003d 0) {","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"clydelhui"},"content":"                ui.dukeDisplay(\"Sorry, no tasks match the given search term :(\");","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"clydelhui"},"content":"            } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"clydelhui"},"content":"                StringBuilder findOutput \u003d new StringBuilder(\"I have found the following tasks!\\n\");","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"clydelhui"},"content":"                for (int i \u003d 0; i \u003c foundTasks.length; i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"clydelhui"},"content":"                    findOutput.append(i + 1).append(\":\").append(foundTasks[i]).append(\"\\n\");","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"clydelhui"},"content":"                }","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"clydelhui"},"content":"                ui.dukeDisplay(findOutput.toString());","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"clydelhui"},"content":"            break;","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"clydelhui"},"content":"        case BYE:","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"clydelhui"},"content":"            try {","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"clydelhui"},"content":"                storage.refreshStorage(tasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"clydelhui"},"content":"                System.exit(0);","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"clydelhui"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"clydelhui"},"content":"                ui.errorDisplay(e);","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"clydelhui"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"clydelhui"},"content":"                ui.dukeDisplay(\"Tasks were unable to be saved, if you still wish to quit without\"","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"clydelhui"},"content":"                        + \"saving, try using \\\"forcequit\\\" \");","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"clydelhui"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"clydelhui"},"content":"        case FORCEQUIT:","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"clydelhui"},"content":"            try {","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"clydelhui"},"content":"                storage.refreshStorage(tasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"clydelhui"},"content":"                System.exit(0);","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"clydelhui"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"clydelhui"},"content":"                ui.errorDisplay(e);","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"clydelhui"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"clydelhui"},"content":"                System.exit(0);","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"clydelhui"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"clydelhui"},"content":"        default:","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalCommandException(\"No defined action to execute\");","lastModifiedDate":"2023-02-16"},{"lineNumber":120,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"clydelhui":122}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":" * Represents a Dialog Box in the Duke Ui","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"    private Label text;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"     * Creates a new dialog box","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"     * @param l The given label for the dialog box","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"     * @param iv The given image view for the dialog box","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"    private void flip() {","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"        db.flip();","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"        return db;","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"clydelhui":53}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import commands.Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import elems.Parser;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"import elems.Storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import elems.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import elems.Ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":" * The main program that runs the task list chatbot Duke","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"        stage.show();","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"clydelhui"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"clydelhui"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"clydelhui"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"clydelhui"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"clydelhui"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"clydelhui"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"clydelhui"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"clydelhui"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"clydelhui"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"clydelhui"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"clydelhui"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"clydelhui"},"content":"        Ui ui \u003d new Ui(dialogContainer, user, duke, userInput);","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"clydelhui"},"content":"        ui.welcome();","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"clydelhui"},"content":"        Storage storage \u003d new Storage(\"data.txt\", ui);","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"clydelhui"},"content":"        TaskList taskList \u003d new TaskList(storage, ui);","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"clydelhui"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"clydelhui"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"clydelhui"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"clydelhui"},"content":"            handleUserInput(ui, storage, taskList, parser);","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"clydelhui"},"content":"        });","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"clydelhui"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"clydelhui"},"content":"            handleUserInput(ui, storage, taskList, parser);","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"clydelhui"},"content":"        });","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"clydelhui"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"clydelhui"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"clydelhui"},"content":"     * Iteration 2:","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"clydelhui"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"clydelhui"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"clydelhui"},"content":"    private void handleUserInput(Ui ui, Storage storage, TaskList taskList, Parser parser) {","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"clydelhui"},"content":"        String input \u003d ui.getInput();","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"clydelhui"},"content":"            Command command \u003d parser.parse(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"clydelhui"},"content":"            command.execute(taskList, ui, storage);","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"clydelhui"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"clydelhui"},"content":"            ui.errorDisplay(e);","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"clydelhui":118}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"public class Launcher {","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"clydelhui":12}},{"path":"src/main/java/dukeexceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package dukeexceptions;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":" * An exception related to Duke","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"        super(message);","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"clydelhui":11}},{"path":"src/main/java/dukeexceptions/EmptyTaskListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package dukeexceptions;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":" * An exception thrown when operations are performed on an empty \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"public class EmptyTaskListException extends DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"    public EmptyTaskListException(String s) {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"        super(s);","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"    public String toString() {","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"        return \"The Task List is currently empty!\" + getMessage();","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"clydelhui":15}},{"path":"src/main/java/dukeexceptions/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package dukeexceptions;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":" * An exception thrown when an invalid command is created or issued by the user","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"public class IllegalCommandException extends DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"    public IllegalCommandException(String errorMessage) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"        return \"Sorry, I do not understand your command.\" + getMessage();","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"clydelhui":16}},{"path":"src/main/java/dukeexceptions/IllegalInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package dukeexceptions;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":" * An exception that is thrown when an Illegal input is keyed in by the user","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"public class IllegalInputException extends DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"    public IllegalInputException(String s) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"        super(s);","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"        return \"Sorry, your input for the command is invalid:\" + getMessage();","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"clydelhui":16}},{"path":"src/main/java/dukeexceptions/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package dukeexceptions;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":" * An exception that is thrown when there is an issue with a \u003ccode\u003eStorage\u003c/code\u003e object.","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"public class StorageException extends DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"    public StorageException(String message) {","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"        super(message);","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"    public String toString() {","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"        return \"There seems to be a problem with the Storage file...\" + getMessage();","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"clydelhui":16}},{"path":"src/main/java/dukeexceptions/TaskListIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package dukeexceptions;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":" * An exception thrown when a \u003ccode\u003eTask\u003c/code\u003e outside the bounds of a \u003ccode\u003eTaskList\u003c/code\u003e is being accessed","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"public class TaskListIndexOutOfBoundsException extends DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"    public TaskListIndexOutOfBoundsException(String s) {","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"        super(s);","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"    public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"        return \"Sorry, the requested index is out of bounds of the TaskList\" + getMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"clydelhui":15}},{"path":"src/main/java/elems/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package elems;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import commands.AddCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"import commands.ListModifyCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"import commands.ModifyCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"import commands.VoidCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.IllegalCommandException;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":" * A Pasrser that parses String input from the user and","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":" * generates an appropriate \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"public class Parser {","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"    private static final HashSet\u003cString\u003e addKeywords \u003d new HashSet\u003c\u003e(Arrays.asList(\"todo\",","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"            \"deadline\", \"event\"));","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"    private static final HashSet\u003cString\u003e deleteKeywords \u003d new HashSet\u003c\u003e(Arrays.asList(\"delete\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"    private static final HashSet\u003cString\u003e voidKeywords \u003d new HashSet\u003c\u003e(Arrays.asList(\"list\",","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"            \"bye\", \"forcequit\", \"find\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"    private static final HashSet\u003cString\u003e modifyKeywords \u003d new HashSet\u003c\u003e(Arrays.asList(\"mark\", \"unmark\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"    private static final HashSet\u003cString\u003e listModifyKeywords \u003d new HashSet\u003c\u003e(Arrays.asList(\"sort\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"    private static final String COMMAND_SEPARATOR \u003d \" \";","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"    private static final String PARAM_SEPARATOR \u003d \"/\";","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"     * Returns an appropriate \u003ccode\u003eCommand\u003c/code\u003e given the user\u0027s \u003ccode\u003eString\u003c/code\u003e input","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"     * @param input The String input from the user","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"     * @return The \u003ccode\u003eCommand\u003c/code\u003e associated with the given String input","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"     * @throws IllegalCommandException when an invalid input has been given","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"    public Command parse(String input) throws IllegalCommandException {","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"        String[] commandSplit \u003d input.split(COMMAND_SEPARATOR, 2);","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"        String keyword \u003d commandSplit[0];","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"        String paramChain \u003d commandSplit.length \u003d\u003d 1 ? \"\" : commandSplit[1];","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"        String[] parsedParams \u003d paramChain.split(PARAM_SEPARATOR);","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"        ArrayList\u003cString\u003e params \u003d new ArrayList\u003c\u003e(Arrays.asList(parsedParams));","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"        Command parsedCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"        if (addKeywords.contains(keyword)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"            parsedCommand \u003d new AddCommand(keyword, params);","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"        } else if (deleteKeywords.contains(keyword)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"            parsedCommand \u003d new DeleteCommand(keyword, params);","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"        } else if (voidKeywords.contains(keyword)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"            parsedCommand \u003d new VoidCommand(keyword, params);","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"        } else if (modifyKeywords.contains(keyword)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"            parsedCommand \u003d new ModifyCommand(keyword, params);","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"        } else if (listModifyKeywords.contains(keyword)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"            parsedCommand \u003d new ListModifyCommand(keyword, params);","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"        } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"            throw new IllegalCommandException(\"You have entered an invalid command\");","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"        return parsedCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"clydelhui":66}},{"path":"src/main/java/elems/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package elems;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import java.io.File;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":" * Represents the object that stores information in a data file","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"public class Storage {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"    private final File dataFile;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"     * Generates a \u003ccode\u003eStorage\u003c/code\u003e given the path to a data file.","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"     * If the file does not exist, a new file will be created.","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"     * @param filePathName The path to the data file","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"     * @param ui A \u003ccode\u003eUi\u003c/code\u003e object to display the messages depending on the status","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"     *           of the data file after construction","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"    public Storage(String filePathName, Ui ui) {","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"        this.dataFile \u003d new File(filePathName);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"            boolean createdFile \u003d dataFile.createNewFile();","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"            if (createdFile) {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"                ui.dukeDisplay(\"Data file successfully created!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"            } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"                ui.dukeDisplay(\"Data file already exists!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"            ui.errorDisplay(e);","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"     * Stores the \u003ccode\u003eTaskList\u003c/code\u003e into the \u003ccode\u003eStorage\u003c/code\u003e file","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"     * @param taskList The \u003ccode\u003eTaskList\u003c/code\u003e that contains the tasks to store","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"     * @throws IOException when there is a problem with reading or writing to the file","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"    public void refreshStorage(TaskList taskList) throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"        FileWriter clearFile \u003d new FileWriter(this.dataFile, false);","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"        clearFile.close();","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"        FileWriter writer \u003d new FileWriter(this.dataFile);","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"        writer.write(taskList.getListStorageText());","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"        writer.close();","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"     * Generates an \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003eString\u003c/code\u003e with the elements being the text storage format","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"     * of the tasks in the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"     * @return An \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003eString\u003c/code\u003e with the elements being the text storage format","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"     *      * of the tasks in the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"     * @throws FileNotFoundException when the file to load the text from is not found","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"    public ArrayList\u003cString\u003e load() throws FileNotFoundException {","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"        ArrayList\u003cString\u003e taskText \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"        Scanner scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"            taskText.add(scanner.nextLine());","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"        scanner.close();","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"clydelhui"},"content":"        return taskText;","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"clydelhui":69}},{"path":"src/main/java/elems/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package elems;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.StorageException;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.TaskListIndexOutOfBoundsException;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"import items.Deadline;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"import items.Event;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"import items.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"import items.ToDo;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":" * Represents the object that stores the Tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"public class TaskList {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"     * Generates a new TaskList object which loads from the given \u003ccode\u003eStorage\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"     * @param storage The storage to load the data from","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e to display error messages with","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"    public TaskList(Storage storage, Ui ui) {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"            loadFromStorageText(storage.load());","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"        } catch (FileNotFoundException | StorageException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"            ui.errorDisplay(e);","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"            ui.dukeDisplay(\"Issue with the storage file, generating empty list!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"            this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"     * Deletes the \u003ccode\u003eTask\u003c/code\u003e at a given index (1 based indexing) from the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"     * @param index The index of the \u003ccode\u003eTask\u003c/code\u003e to be deleted","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"     * @return The deleted \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"     * @throws TaskListIndexOutOfBoundsException if the index given is out of bounds of the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"    public Task delete(int index) throws TaskListIndexOutOfBoundsException {","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"            return this.taskList.remove(index - 1);","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"            throw new TaskListIndexOutOfBoundsException(\"Tried to delete a task that is out of task list bounds\");","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"     * Generates a string array containing the String representation of","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"     * all the \u003ccode\u003eTasks\u003c/code\u003e in the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"     * @return A string array containing the String representation of","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"     *      * all the \u003ccode\u003eTasks\u003c/code\u003e in the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"    public String[] enumerate() {","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"        int length \u003d this.taskList.size();","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"        String[] taskStringList \u003d new String[length];","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"            taskStringList[i] \u003d taskList.get(i).toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"clydelhui"},"content":"        return taskStringList;","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"clydelhui"},"content":"     * Adds a new \u003ccode\u003eTask\u003c/code\u003e to the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"clydelhui"},"content":"     * @param newTask The \u003ccode\u003eTask\u003c/code\u003e to be added.","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"clydelhui"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"clydelhui"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"clydelhui"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"clydelhui"},"content":"     * Marks the \u003ccode\u003eTask\u003c/code\u003e at a given index (1 based indexing)","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"clydelhui"},"content":"     * @param index The index of the \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"clydelhui"},"content":"     * @throws TaskListIndexOutOfBoundsException when the index is out of bounds of the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"clydelhui"},"content":"    public void markTask(int index) throws TaskListIndexOutOfBoundsException {","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"clydelhui"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"clydelhui"},"content":"            Task mark \u003d this.taskList.get(index - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"clydelhui"},"content":"            mark.setDone();","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"clydelhui"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"clydelhui"},"content":"            throw new TaskListIndexOutOfBoundsException(\"Tried to mark task that is out of task list bounds\");","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"clydelhui"},"content":"     * Unmarks the \u003ccode\u003eTask\u003c/code\u003e at a given index(1 based indexing)","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"clydelhui"},"content":"     * @param index The index of the \u003ccode\u003eTask\u003c/code\u003e to be unmarked","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"clydelhui"},"content":"     * @throws TaskListIndexOutOfBoundsException when an index is out of bounds of the given \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"clydelhui"},"content":"    public void unmarkTask(int index) throws TaskListIndexOutOfBoundsException {","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"clydelhui"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"clydelhui"},"content":"            Task unmark \u003d this.taskList.get(index - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"clydelhui"},"content":"            unmark.setNotDone();","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"clydelhui"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"clydelhui"},"content":"            throw new TaskListIndexOutOfBoundsException(\"Tried to unmark task that is out of task list bounds\");","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"clydelhui"},"content":"    public String getListStorageText() {","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"clydelhui"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"clydelhui"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"clydelhui"},"content":"            String taskText \u003d task.generateStorageForm() + System.lineSeparator();","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"clydelhui"},"content":"            output.append(taskText);","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"clydelhui"},"content":"        return output.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"clydelhui"},"content":"    public String getTaskString(int index) {","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"clydelhui"},"content":"        Task task \u003d this.taskList.get(index - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"clydelhui"},"content":"        return task.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"clydelhui"},"content":"     * Returns a String array which contains the String representations of the Tasks in the TaskList","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"clydelhui"},"content":"     * with descriptions that contain the given String search term","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"clydelhui"},"content":"     * @param searchTerm The search term to find in the descriptions of the Tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"clydelhui"},"content":"     * @return A String array which contains the String representations of the Tasks in the TaskList","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"clydelhui"},"content":"     *     with descriptions that contain the given String search term","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"clydelhui"},"content":"    public String[] searchTaskDescription(String searchTerm) {","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"clydelhui"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"clydelhui"},"content":"        ArrayList\u003cString\u003e matchingItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"clydelhui"},"content":"        for (Task current : this.taskList) {","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"clydelhui"},"content":"            String currentDescription \u003d current.getDescription();","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"clydelhui"},"content":"            String[] parsedDescription \u003d currentDescription.split(\" \");","lastModifiedDate":"2023-02-16"},{"lineNumber":135,"author":{"gitId":"clydelhui"},"content":"            for (String word : parsedDescription) {","lastModifiedDate":"2023-02-16"},{"lineNumber":136,"author":{"gitId":"clydelhui"},"content":"                if (word.equals(searchTerm)) {","lastModifiedDate":"2023-02-16"},{"lineNumber":137,"author":{"gitId":"clydelhui"},"content":"                    matchingItems.add(current.toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":138,"author":{"gitId":"clydelhui"},"content":"                }","lastModifiedDate":"2023-02-16"},{"lineNumber":139,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":140,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":141,"author":{"gitId":"clydelhui"},"content":"        String[] result \u003d new String[matchingItems.size()];","lastModifiedDate":"2023-02-16"},{"lineNumber":142,"author":{"gitId":"clydelhui"},"content":"        matchingItems.toArray(result);","lastModifiedDate":"2023-02-16"},{"lineNumber":143,"author":{"gitId":"clydelhui"},"content":"        return result;","lastModifiedDate":"2023-02-16"},{"lineNumber":144,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":145,"author":{"gitId":"clydelhui"},"content":"    private void loadFromStorageText(ArrayList\u003cString\u003e storageText) throws StorageException {","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"clydelhui"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":147,"author":{"gitId":"clydelhui"},"content":"        String[] taskStringArray \u003d storageText.toArray(new String[0]);","lastModifiedDate":"2023-02-09"},{"lineNumber":148,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":149,"author":{"gitId":"clydelhui"},"content":"        for (String taskText : taskStringArray) {","lastModifiedDate":"2023-02-09"},{"lineNumber":150,"author":{"gitId":"clydelhui"},"content":"            String[] parsedInput \u003d taskText.split(\"@\");","lastModifiedDate":"2023-02-09"},{"lineNumber":151,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":152,"author":{"gitId":"clydelhui"},"content":"            boolean isDone \u003d parsedInput[2].equals(\"X\");","lastModifiedDate":"2023-02-09"},{"lineNumber":153,"author":{"gitId":"clydelhui"},"content":"            switch (parsedInput[0]) {","lastModifiedDate":"2023-02-09"},{"lineNumber":154,"author":{"gitId":"clydelhui"},"content":"            case \"T\":","lastModifiedDate":"2023-02-09"},{"lineNumber":155,"author":{"gitId":"clydelhui"},"content":"                this.taskList.add(new ToDo(parsedInput[1], isDone));","lastModifiedDate":"2023-02-09"},{"lineNumber":156,"author":{"gitId":"clydelhui"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":157,"author":{"gitId":"clydelhui"},"content":"            case \"D\":","lastModifiedDate":"2023-02-09"},{"lineNumber":158,"author":{"gitId":"clydelhui"},"content":"                this.taskList.add(new Deadline(parsedInput[1], isDone, LocalDate.parse(parsedInput[3])));","lastModifiedDate":"2023-02-09"},{"lineNumber":159,"author":{"gitId":"clydelhui"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":160,"author":{"gitId":"clydelhui"},"content":"            case \"E\":","lastModifiedDate":"2023-02-09"},{"lineNumber":161,"author":{"gitId":"clydelhui"},"content":"                this.taskList.add(new Event(parsedInput[1], isDone, LocalDate.parse(parsedInput[3]),","lastModifiedDate":"2023-02-16"},{"lineNumber":162,"author":{"gitId":"clydelhui"},"content":"                        LocalDate.parse(parsedInput[4])));","lastModifiedDate":"2023-02-16"},{"lineNumber":163,"author":{"gitId":"clydelhui"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":164,"author":{"gitId":"clydelhui"},"content":"            default:","lastModifiedDate":"2023-02-16"},{"lineNumber":165,"author":{"gitId":"clydelhui"},"content":"                throw new StorageException(\"Corrupted data file!\");","lastModifiedDate":"2023-02-16"},{"lineNumber":166,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":167,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":168,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":169,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":170,"author":{"gitId":"clydelhui"},"content":"    public void sortByDescription() {","lastModifiedDate":"2023-02-20"},{"lineNumber":171,"author":{"gitId":"clydelhui"},"content":"        this.taskList.sort(null);","lastModifiedDate":"2023-02-20"},{"lineNumber":172,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":173,"author":{"gitId":"clydelhui"},"content":"    public int getSize() {","lastModifiedDate":"2023-02-20"},{"lineNumber":174,"author":{"gitId":"clydelhui"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-02-20"},{"lineNumber":175,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":176,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"clydelhui":176}},{"path":"src/main/java/elems/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package elems;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import duke.DialogBox;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":" * Represents the User Interface that takes in input and displays output to the user","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"public class Ui {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"    private static final String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"                              + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"                              + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"                              + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"                              + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"    private final VBox dialogContainer;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"    private final Image userImage;","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"    private final Image dukeImage;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"    private final TextField userInput;","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"     * Creates a new Ui given the JavaFX elements","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"     * @param dialogContainer A container to store the dialog elements","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"     * @param userImage The image that represents the User\u0027s avatar","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"     * @param dukeImage The image that represents Duke\u0027s avatar","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"     * @param userInput The text box which the user uses to key in text to the program","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"    public Ui(VBox dialogContainer, Image userImage, Image dukeImage, TextField userInput) {","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"        this.dialogContainer \u003d dialogContainer;","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"        this.userImage \u003d userImage;","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"        this.dukeImage \u003d dukeImage;","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"     * Displays the given text as a message from Duke","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"     * @param displayText The text to be displayed","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"    public void dukeDisplay(String displayText) {","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"        Label dukeText \u003d new Label(displayText);","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(dukeImage))","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"        );","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"    public String getInput() {","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"        Label userText \u003d new Label(input);","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"                DialogBox.getUserDialog(userText, new ImageView(userImage))","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"        );","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"        return input;","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"    public void welcome() {","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"        dukeDisplay(\"Hello from\\n\" + Ui.logo);","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"clydelhui"},"content":"    public void errorDisplay(Exception exception) {","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"clydelhui"},"content":"        dukeDisplay(exception.getMessage());","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"clydelhui":70}},{"path":"src/main/java/items/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package items;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":" * Represents a Deadline task","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"     * Creates a \u003ccode\u003eDeadline\u003c/code\u003e with the given description and end date","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"     * @param description The description of the \u003ccode\u003eDeadline\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"     * @param endDate the end date of the \u003ccode\u003eDeadline\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"    public Deadline(String description, LocalDate endDate) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"        super(description, \"D\");","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"     * Creates a \u003ccode\u003eDeadline\u003c/code\u003e with the given description, status and end date","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"     * @param description The description of the \u003ccode\u003eDeadline\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"     * @param isDone A boolean which indicates if the \u003ccode\u003eDeadline\u003c/code\u003e is done","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"     * @param endDate","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"    public Deadline(String description, boolean isDone, LocalDate endDate) {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"        super(description, \"D\", isDone);","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"    public String generateStorageForm() {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"        return this.getTaskType() + \"@\" + this.getDescription() + \"@\"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"                + this.getStatusIcon() + \"@\" + this.endDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"        return \"[\" + this.getTaskType() + \"]\" + \"[\" + this.getStatusIcon() + \"]\"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"                + this.description + \"/\" + this.endDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"clydelhui":44}},{"path":"src/main/java/items/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package items;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":" * Represents an Event task","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"     * Creates a new \u003ccode\u003eEvent\u003c/code\u003e with the given description, start date and end date","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"     * @param description The description of the \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"     * @param startDate The start date of the \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"     * @param endDate The end date of the \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"    public Event(String description, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"        super(description, \"E\");","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"     * Creates a new \u003ccode\u003eEvent\u003c/code\u003e with the given description, status, start date and end date","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"     * @param description The description of the \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"     * @param isDone A boolean indicating the status of the \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"     * @param startDate The start date of the \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"     * @param endDate The end date of the \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"    public Event(String description, boolean isDone, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"        super(description, \"E\", isDone);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"    public String generateStorageForm() {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"        return this.getTaskType() + \"@\" + this.getDescription() + \"@\" + this.getStatusIcon() + \"@\"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"                + this.startDate + \"@\" + this.endDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"        return \"[\" + this.getTaskType() + \"]\" + \"[\" + this.getStatusIcon() + \"]\"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"                + this.description + \"/\" + this.startDate + \"/\" + this.endDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"clydelhui":49}},{"path":"src/main/java/items/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package items;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":" * An abstract class the represents the types of tasks that can be added to the list","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"    protected String description;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"    protected String taskType;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"     * Creates a \u003ccode\u003eTask\u003c/code\u003e with the given description and type of task","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"     * @param description The description of the \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"     * @param taskType A string representing the type of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"     *                 it is included in the String representation of the \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"    public Task(String description, String taskType) {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"     * Creates a \u003ccode\u003eTask\u003c/code\u003e with the given description, status and type of task","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"     * @param description The description of the \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"     * @param isDone A boolean indicating if the \u003ccode\u003eTask\u003c/code\u003e is done","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"     * @param taskType A string representing the type of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"     *                 it is included in the String representation of the \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"    public Task(String description, String taskType, boolean isDone) {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"        return this.taskType;","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"    public void setDone() {","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"    public void setNotDone() {","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"        return this.description;","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"    public abstract String generateStorageForm();","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"    public abstract String toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"    public int compareTo(Task o) {","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"        return this.description.compareTo(o.getDescription());","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"clydelhui":66}},{"path":"src/main/java/items/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package items;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":" * Represents a to do task","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":" * @author clydelhui","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"        super(description, \"T\");","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"        super(description, \"T\", isDone);","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"    public String generateStorageForm() {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"        return this.getTaskType() + \"@\" + this.getDescription() + \"@\" + this.getStatusIcon();","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"        return \"[\" + this.getTaskType() + \"]\" + \"[\" + this.getStatusIcon() + \"]\" + this.description;","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"clydelhui":25}},{"path":"src/test/java/commands/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package commands;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.IllegalCommandException;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"    public void invalidKeywordTest() {","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"            AddCommand addCommand \u003d new AddCommand(\"bob\", new ArrayList\u003c\u003e());","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"            assertEquals(\"Invalid keyword for AddCommand\", e.getMessage());","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"clydelhui":21}},{"path":"src/test/java/elems/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package elems;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import dukeexceptions.IllegalCommandException;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"    public void invalidKeywordTest() {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"        String testInput \u003d \"what 1 2 3\";","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"            parser.parse(testInput);","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"            assertEquals(\"You have entered an invalid command\", e.getMessage());","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"clydelhui":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"todo buy vegetables","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"todo watch football","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"mark 2","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"deadline some homework / tomorrow","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"event some other homework / today / tomorrow","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"mark 3","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"unmark 2","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"bye","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"clydelhui":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"javac  -cp ..\\src\\main\\java\\items -Xlint:none -d ..\\bin ..\\src\\main\\java\\items\\*.java","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"javac  -cp ..\\src\\main\\java\\dukeexceptions -Xlint:none -d ..\\bin ..\\src\\main\\java\\dukeexceptions\\*.java","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"clydelhui":3}}]
