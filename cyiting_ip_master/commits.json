{"authorDailyContributionsMap":{"cyiting":[{"date":"2023-01-18","commitResults":[{"hash":"c11ec9e02cfeb3588b986be825fe638c496f8b79","messageTitle":"created simple duke","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":6}}},{"hash":"865489787bd640635ea324c9fc39af2200927402","messageTitle":"added ability to save tasks in list","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":4}}}]},{"date":"2023-01-19","commitResults":[{"hash":"65f557e2eba17fb55859b0f2af3aac13c6df7bb8","messageTitle":"implemented TaskList and Task as classes added functionality of marking and unmarking tasks","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":29}}},{"hash":"511d6504e925f5949084025d7bc207a188356316","messageTitle":"added Deadline, Event, ToDo as subclasses of Task converted Task to abstract class","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":4}}},{"hash":"cf02433d0df80a914bb36b3dee6827c1a07d4443","messageTitle":"included automated text ui testing updated tab to 3 spaces when printing added/marked tasks","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0},"java":{"insertions":3,"deletions":3}}}]},{"date":"2023-01-20","commitResults":[{"hash":"77dfb61123371a0402cb17ad0e95a3342e821d43","messageTitle":"Modified Duke to handle exceptions Added DukeException class and two subclasses EmptyTaskDescriptionException and InvalidCommandException","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":67,"deletions":24}}},{"hash":"b06ce6df9bddefc4d113a7e39eeb503066ca19a3","messageTitle":"Added support for deleting task from list","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":3}}}]},{"date":"2023-01-27","commitResults":[{"hash":"2cf5aa26d2fd9a7c2d738ef737576ee9e1e9e20c","messageTitle":"Add ability to save task in local device in the directory data","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":132,"deletions":44}}},{"hash":"eaf6d811573a5f47f0e8812dcdf6266e9d75b33a","messageTitle":"Change Dates and Times Features","messageBody":"Task classes recognise datetime as Strings\n","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":17}}}]},{"date":"2023-01-29","commitResults":[{"hash":"1968c1ff10d758b9649ee620cae319c655cff66c","messageTitle":"create classes for Parser, Storage and Ui","messageBody":"Dealing with interactions with user, parsing information and sorting files occur in Duke.\n\nLet\u0027s extract methods to separate classes and OOP Duke.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":201,"deletions":141}}},{"hash":"fe9760349fe6717140778980d8b4829c2ad3620c","messageTitle":"Organise classes into packages","messageBody":"Create 3 packages, duke, duke.exception, duke.task\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":25}}},{"hash":"eacaa96ad28eb39b3a611c901c9eed4bd5196227","messageTitle":"Set up gradle to run Duke using gradle","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"58390e7d8735118ccd4ce39f4f05f5e92c4f30ed","messageTitle":"Add JUnit tests to test behaviour of code","messageBody":"Include 3 test classes for ToDo, Deadline, Event\n","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":0}}}]},{"date":"2023-01-30","commitResults":[{"hash":"67ee82eae956dac14335f7e302f3533e9cc8b990","messageTitle":"Add JavaDoc comments to all public methods.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":111,"deletions":0}}},{"hash":"61cfc6b495483209403155bc45a2eba14ecd9194","messageTitle":"Tweak code to comply with coding standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":3}}},{"hash":"f8ec6a846954e2ac379d88f0d370b5dde8837e64","messageTitle":"Change code to comply with coding standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":16}}},{"hash":"380b0bd9393fba88fe8fca1bdf7585cf8e45d483","messageTitle":"Add functionality to find tasks using a keyword","messageBody":"User types \"find\" followed by a keyword and a list of tasks containing the\nkeyword is shown.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}}]},{"date":"2023-02-03","commitResults":[{"hash":"2fa470a662fc04881362dbafa8e71094cab359b5","messageTitle":"Add a GUI to Duke","messageBody":"Create a GUI using JavaFX that takes in user input and responds. Duke lacks\nfunctionality to print greetings message when application is first launched.\n","tags":["Level-10","A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":21,"deletions":1},"fxml":{"insertions":39,"deletions":0},"txt":{"insertions":0,"deletions":1},"java":{"insertions":204,"deletions":62},"sh":{"insertions":1,"deletions":1}}}]},{"date":"2023-02-05","commitResults":[{"hash":"6a1a35fb830fd7ed6221839f195a298e87f26f86","messageTitle":"Make minor changes to Duke","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":7}}}]},{"date":"2023-02-06","commitResults":[{"hash":"be9942ddd5461fa89c46ebaa057d6ad60f287649","messageTitle":"Include JavaDoc comments for all classes and InvalidTaskNumberException","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":2},"java":{"insertions":73,"deletions":34}}},{"hash":"f1686f363f411a3ed06d34c83d821c85f8ad83c4","messageTitle":"Make changes to GUI layout","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":1,"deletions":0}}},{"hash":"38402863a7b18a17d4175b7ba008b1b80d55e3d4","messageTitle":"Update GUI to display greetings message whenever launched","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":3}}}]},{"date":"2023-02-07","commitResults":[{"hash":"406d1f47cded28fdf9ab93e90eef6603a0a701ee","messageTitle":"Add Command classes for all types of commands from user.","messageBody":"Include JavaDoc commands for classes and public methods.\n","fileTypesAndContributionMap":{"java":{"insertions":406,"deletions":70}}}]},{"date":"2023-02-08","commitResults":[{"hash":"6c80aa74292b5c3b85772eb818f0b59a08190a4f","messageTitle":"Convert for loops into Streams","messageBody":"There are several methods that contain for loops.\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":11}}}]},{"date":"2023-02-09","commitResults":[{"hash":"a22a6e7a2cfc60ea3a642481c564ffd309c03304","messageTitle":"Add assertions to test code","messageBody":"No checks are done to ensure that a response is formed when user enters input or that\na file path exists\n\nAsserting that file path exists ensures that creating a File object with the file path will not\nthrow an error. Asserting that the response is not an empty String ensures that there is no\nerror in parsing user commands and having Duke respond to the command.\n\nUsing assertions is desirable because it can indicate any errors made by the coder.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"java":{"insertions":3,"deletions":1}}},{"hash":"7a6eaeccabffc90170f2806adeb1a8cb301a87b0","messageTitle":"TaskList class: extract a method checkTaskNumValidity","messageBody":"TaskList methods (e.g. markTask, unmarkTask, deleteTask) have some common\nbehaviours.\n\nThe common behaviors across taskList methods cause code duplication.\n\nExtracting the common behavior into a method allows us to use the same\nmethod for checking the validity of a task number when new commands are added.\n\nLet\u0027s pull up behaviors common to all methods into a new private method called\ncheckTaskNumValidity.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":11}}},{"hash":"3c08fa82f27320afbe57d712cb8766d01dd35c4f","messageTitle":"Change Duke to deal with exceptions concerning date-time","messageBody":"AddDeadlineCommand, AddEventCommand, AddTodoCommand is unable to deal with exceptions\nregarding date-time.\n\nCreate an InvalidDateTimeException and InvalidTaskDescription Exception. All methods that involve\ncreating Deadlines and Events now check if the date-time input by the user is in the correct format,\nverify that the start date is before the end date and that there are no missing date or time inputs.\n\nNow Duke will feedback to the user if there is a date-time related exception.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":114,"deletions":36}}}]},{"date":"2023-02-10","commitResults":[{"hash":"4d5c3db6d492705a5d2dd71ce52badfdedc3ec4b","messageTitle":"Create Tag, EmptyTag, TagList classes to allow users to tag their tasks","messageBody":"Implementation of tagging is not done.\n","fileTypesAndContributionMap":{"java":{"insertions":85,"deletions":0}}}]},{"date":"2023-02-12","commitResults":[{"hash":"7323400c890a77a0f82b403f2c478381d28f1abc","messageTitle":"Add functionality for the user to add a tag to a task when creating it","messageBody":"The tasks in the task list cannot be categorised. This functionality allows users to categorise their\ntasks by the tag name.\n\nAdding an attribute of type Tag to the abstract class Task allows the tag to be displayed when the\ntasks are listed and the users are now able to get a list of all the tasks under the same tag.\n","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":187,"deletions":41}}}]}]},"authorFileTypeContributionMap":{"cyiting":{"java":1469,"md":0,"fxml":39,"sh":1,"bat":0,"gradle":22,"txt":10}},"authorContributionVariance":{"cyiting":18459.084},"authorDisplayNameMap":{"cyiting":"CS2103-F10-1 CHU ..TING"}}
