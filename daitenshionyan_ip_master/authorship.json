[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"## Acknowledgements","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"Font Consolas - [](https://freefontsfamily.com/consolas-font-free-download/)","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"Character - [](https://hololive.hololivepro.com/en/talents/minato-aqua/)","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"daitenshionyan":5,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-swing\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-swing\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-swing\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"checkstyle {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    mainClassName \u003d \"aqua.Aqua\"","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    archiveBaseName \u003d \"aqua\"","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"daitenshionyan":26,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"### Task management","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"Aqua remembers and manages your day to day tasks so that you can plan your time with ease.","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"### View weekly schedule","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"Aqua will draw out your weekly schedule so that you know when you can roll in be more.","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"## Syntax","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"Command inputs will have the following syntax.","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"{command} [/MAIN_INPUT]{parameter} /{parameter name} {parameter} ...","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"- `command` is a single word","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"- `parameter` may contain spaces","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"- Whitespaces between `/` and `parameter name` is allowed","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"### Types","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"Command parameters will be presented in the following format:","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"`\u003ctype:name\u003e`","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"- `type` - the type of the parameter","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"- `name` - name of the parameter","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"#### `boolean`","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"Booleans can only take the value `true` or `false`.","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"#### `date`","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"The supported date formats are:","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"- `yyyy-mm-ddThh:mm`","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"- `yyyy-m-d hhmm` - single and double digit day and months are supported.","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"- `yyyy-m-d` - time is assumed to be 0000.","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"#### `integer`","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"An integer value.","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"#### `string`","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"Strings can take any character sequence that does not contain `/`.","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"### `todo` - Adds a todo","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"Syntax:","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"todo \u003cstring:taskName\u003e [/completed \u003cboolean:isCompleted\u003e]","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"Outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"A todo will be added and saved.","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"### `deadline` - Adds a deadline","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"Syntax:","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"deadline \u003cstring:taskName\u003e /by \u003cdate:dueDate\u003e [/completed \u003cboolean:isCompleted\u003e]","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"Outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"A deadline will be added and saved.","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"### `event` - Adds an event","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"Syntax:","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"event \u003cstring:taskName\u003e /from \u003cdate:startDate\u003e /to \u003cdate:endDate\u003e [/completed \u003cboolean:isCompleted\u003e]","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"Outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"An event will be added and saved.","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"### `delete` - Deletes a task","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"Syntax:","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"delete \u003cinteger:taskNumber\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"Outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"Task tied to the specified task number will be deleted.","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"### `mark` - Marks a task as complete","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"Syntax:","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"mark \u003cinteger:taskNumber\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"Outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"Task tied to the specified task number will be marked completed.","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"### `unmark` - Marks a task as incomplete","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"Syntax:","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-02-14"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"unmark \u003cinteger:taskNumber\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"Outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"Task tied to the specified task number will be marked incompleted.","lastModifiedDate":"2023-02-14"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"### `list` - Lists all tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"Syntax:","lastModifiedDate":"2023-02-14"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-02-14"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"list","lastModifiedDate":"2023-02-14"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"Outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"A numbered list of tasks. The number corresponds to the task number that task is tied to.","lastModifiedDate":"2023-02-14"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"### `find` - Finds tasks by keyword","lastModifiedDate":"2023-02-14"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"Syntax:","lastModifiedDate":"2023-02-14"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-02-14"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"find \u003cstring:taskNameKeyword\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"Outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"A numbered list of tasks. The number corresponds to the task number that task is tied to.","lastModifiedDate":"2023-02-14"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"### `view` - Displays your schedule","lastModifiedDate":"2023-02-14"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"Syntax:","lastModifiedDate":"2023-02-14"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-02-14"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"view [\u003cdate:dayOfWeekToShow\u003e]","lastModifiedDate":"2023-02-14"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"Outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"A popup showing your schedule.","lastModifiedDate":"2023-02-14"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"![example](schedule.png)","lastModifiedDate":"2023-02-14"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"-- _Cursor not included_ --","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"daitenshionyan":146,"-":18}},{"path":"src/main/java/aqua/Aqua.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"/** Application main class (entry point). */","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"public class Aqua {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"daitenshionyan":10}},{"path":"src/main/java/aqua/MainApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import aqua.graphic.MainWindow;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.LogicManager;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"/** Main application class. */","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"public class MainApp extends Application {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    public static final Image ICON \u003d","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"            new Image(MainApp.class.getResource(\"/icon/murasaki_tamanegi.png\").toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    private static final String STAGE_TITLE \u003d \"Aqua\";","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private static final double MIN_WIDTH \u003d 616.0;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final double MIN_HEIGHT \u003d 439.0;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        MainWindow window \u003d new MainWindow(new LogicManager());","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        Scene scene \u003d new Scene(window.getRoot());","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        primaryStage.setScene(scene);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        primaryStage.setTitle(STAGE_TITLE);","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        primaryStage.getIcons().add(ICON);","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        primaryStage.setMinWidth(MIN_WIDTH);","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        primaryStage.setMinHeight(MIN_HEIGHT);","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        primaryStage.show();","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        window.start();","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"daitenshionyan":33}},{"path":"src/main/java/aqua/exception/LoadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.exception;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"/** Signals that a loading error has occured. */","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"public class LoadException extends Exception {","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"    /** Constructs a {@code LoadException} without any message or cause. */","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"    public LoadException() {}","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code LoadException} with the specified message.","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"     * @param msg - the message of the exception.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    public LoadException(String msg) {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"        super(msg);","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code LoadException} with the specified cause.","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * @param cause - the cause of the exception.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public LoadException(Throwable cause) {","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        super(cause);","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code LoadException} with the specified message and cause.","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * @param msg - the message of the exception.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * @param cause - the cause of the exception.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public LoadException(String msg, Throwable cause) {","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        super(msg, cause);","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":35}},{"path":"src/main/java/aqua/exception/ProcedureException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.exception;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"/** Signals that an error has occured while executing a set procedure. */","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"public class ProcedureException extends Exception {","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ProcedureException} without any message or cause.","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"    public ProcedureException() {}","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ProcedureException} with the specified message.","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"     * @param msg - the message of the exception.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    public ProcedureException(String msg) {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"        super(msg);","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ProcedureException} with the specified cause.","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * @param cause - the cause of the exception.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    public ProcedureException(Throwable cause) {","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        super(cause);","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ProcedureException} with the specified message and","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * cause.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * @param msg - the message of the exception.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     * @param cause - the cause of the exception.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    public ProcedureException(String msg, Throwable cause) {","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        super(msg, cause);","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":38}},{"path":"src/main/java/aqua/exception/SyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.exception;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"/** Signals that the the a syntax is invalid. */","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"public class SyntaxException extends Exception {","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"    /** Constructs an {@code SyntaxException} without any message or cause. */","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"    public SyntaxException() {}","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code SyntaxException} with the specified message.","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"     * @param description - the message of the exception.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    public SyntaxException(String description) {","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code SyntaxException} with the given message and cause.","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * @param description - the message of the exception.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     * @param cause - the cause of the exception.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    public SyntaxException(String description, Throwable cause) {","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        super(description, cause);","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code SyntaxException} with the given cause.","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * @param cause - the cause of the exception.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public SyntaxException(Throwable cause) {","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        super(cause);","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":35}},{"path":"src/main/java/aqua/graphic/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.graphic;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.AppManager;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.IoManager;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.LogicManager;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"/** The main window of the application. */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"public class MainWindow extends UiComponent\u003cVBox\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final String PATH_FXML_FILE \u003d \"MainWindow.fxml\";","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private static final int MESSAGE_LIMIT \u003d 100;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private final AppManager manager;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private ScrollPane textScrollPane;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox textDisplayArea;","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private TextField inputField;","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code MainWindow} from the given LogicManager.","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * @param logicManager - the LogicManager to handle logical processes.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public MainWindow(LogicManager logicManager) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        super(PATH_FXML_FILE);","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        this.manager \u003d initialiseAppManager(logicManager);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        initialiseTextDisplayArea();","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        initialiseScrollPane();","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    private void initialiseTextDisplayArea() {","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        // add listener to auto scroll to bottom","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        textDisplayArea.heightProperty().addListener((ob, o, n) -\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            textScrollPane.setVvalue(1D);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        });","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    private void initialiseScrollPane() {","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        // add listener to sync display area size to view port","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        textScrollPane.viewportBoundsProperty().addListener((ob, o, n) -\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"            double width \u003d n.getWidth();","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"            double height \u003d n.getHeight();","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"            // force width of display area to be view port width","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"            textDisplayArea.setMinWidth(width);","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"            textDisplayArea.setPrefWidth(width);","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"            textDisplayArea.setMaxWidth(width);","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"            textDisplayArea.setMinHeight(height);","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        });","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"     * Initialises an AppManager with the specified LogicManager that has its","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"     * I/O functions binded to this window.","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"     * @param logicManager - the LogicManager to handle logical processes.","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"     * @return the AppManager to run the app.","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    private AppManager initialiseAppManager(LogicManager logicManager) {","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        IoManager ioManager \u003d new IoManager(","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"                this::getInput,","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"                this::displayReply);","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        return new AppManager(logicManager, ioManager);","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"    /** Executes the starting processes. */","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    public void start() {","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        manager.start();","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"    private String getInput() {","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        String input \u003d inputField.getText();","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"        inputField.setText(\"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        SpeechBubble bubble \u003d new SpeechBubble(true);","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"        bubble.setText(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        displaySpeechBubble(bubble);","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"        return input;","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"    private void displayReply(String reply) {","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        SpeechBubble bubble \u003d new SpeechBubble(false);","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"        bubble.setText(reply);","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"        Platform.runLater(() -\u003e displaySpeechBubble(bubble));","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"    private void displaySpeechBubble(SpeechBubble bubble) {","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"        textDisplayArea.getChildren().add(bubble.getRoot());","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"        if (textDisplayArea.getChildren().size() \u003e MESSAGE_LIMIT) {","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"            textDisplayArea.getChildren().remove(0);","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"    private void handleSend(ActionEvent event) {","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"        manager.processInput();","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"    private void handleKeyRelease(KeyEvent event) {","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"        if (KeyCode.ENTER.equals(event.getCode())) {","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"            handleSend(null);","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"daitenshionyan":124}},{"path":"src/main/java/aqua/graphic/SpeechBubble.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.graphic;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"/** A speech bubble to display messages. */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class SpeechBubble extends UiComponent\u003cRegion\u003e {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private static final String PATH_FXML_LEFT_SIDE \u003d \"SpeechBubbleLeft.fxml\";","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    private static final String PATH_FXML_RIGHT_SIDE \u003d \"SpeechBubbleRight.fxml\";","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private final Region root;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private ImageView iconView;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox bubbleDisplayArea;","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code SpeechBubble} from the specified parameters.","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * @param isUser - {@code true} if the bubble is for the user and","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code false} otherwise.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    public SpeechBubble(boolean isUser) {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        super(getPath(isUser));","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        this.root \u003d initialiseRoot(isUser);","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        iconView.setClip(new Circle(","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"                iconView.getFitWidth() / 2,","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"                iconView.getFitHeight() / 2,","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"                iconView.getFitHeight() / 2));","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    private static String getPath(boolean isUser) {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        return (isUser) ? PATH_FXML_RIGHT_SIDE : PATH_FXML_LEFT_SIDE;","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    private Region initialiseRoot(boolean isUser) {","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        Region bubble \u003d super.getRoot();","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        HBox box \u003d new HBox(bubble);","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        box.setAlignment((isUser) ? Pos.CENTER_RIGHT : Pos.CENTER_LEFT);","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        return box;","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"     * Sets the text being displayed on the speech bubble.","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"     * @param text - the text to display.","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    public void setText(String text) {","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        Label label \u003d new Label(text);","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        label.setWrapText(true);","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        label.setMaxWidth(bubbleDisplayArea.getMaxWidth());","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        bubbleDisplayArea.getChildren().setAll(label);","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    public Region getRoot() {","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        return root;","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"daitenshionyan":70}},{"path":"src/main/java/aqua/graphic/TaskView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.graphic;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import aqua.graphic.schedule.SchedulePeriod;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import aqua.graphic.schedule.WeekSchedule;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.TaskFilterReport;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import aqua.usertask.UserTask;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import javafx.css.PseudoClass;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"/** A {@code UiComponent} to display a view of tasks as a schedule. */","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"public class TaskView extends UiComponent\u003cVBox\u003e {","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private static final String PATH_FXML_FILE \u003d \"TaskView.fxml\";","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private static final String STYLECLASS_DEADLINE \u003d \"deadline-box\";","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private static final String STYLECLASS_EVENT \u003d \"event-box\";","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    private static final String STYLECLASS_TODO \u003d \"todo-label\";","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    private static final PseudoClass PSEUDO_CLASS_COMPLETE \u003d PseudoClass.getPseudoClass(\"complete\");","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox scheduleDisplayArea;","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox todoDisplayArea;","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code TaskView} from the given parameters.","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"     * @param startTime - the start time.","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"     * @param report - the filter of tasks to display.","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    public TaskView(LocalDateTime startTime, TaskFilterReport report) {","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        super(PATH_FXML_FILE);","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        initialiseSchedule(startTime, report.filtered);","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        initialiseTodoView(report.unknown);","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    private void initialiseSchedule(LocalDateTime startTime, List\u003cUserTask\u003e tasks) {","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cSchedulePeriod\u003e periods \u003d tasks.stream()","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"                .map(task -\u003e new TimedTask(task))","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        scheduleDisplayArea.getChildren().add(new WeekSchedule(startTime, periods));","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    private void initialiseTodoView(List\u003cUserTask\u003e tasks) {","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        for (UserTask task : tasks) {","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"            todoDisplayArea.getChildren().add(new UntimedTaskDisplay(task));","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"     * A {@code SchedulePeriod} of a {@code UserTask} that has minimally","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"     * an end time.","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    private static class TimedTask extends SchedulePeriod {","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        private final UserTask task;","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        TimedTask(UserTask task) {","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"            this.task \u003d task;","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        public LocalDateTime getStart() {","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"            return task.getStart().orElseGet(this::getEnd);","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        public LocalDateTime getEnd() {","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"            return task.getEnd().orElseThrow();","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"        public List\u003cString\u003e getStyleClass() {","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"            if (getStart().isEqual(getEnd())) {","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"                return List.of(STYLECLASS_DEADLINE);","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"            return List.of(STYLECLASS_EVENT);","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        public List\u003cPseudoClass\u003e getPseudoClass() {","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"            if (task.isComplete()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"                return List.of(PSEUDO_CLASS_COMPLETE);","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"            return List.of();","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"        public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"            return task.toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"     * Graphical representation of a task that does not have start and end","lastModifiedDate":"2023-02-06"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"     * times.","lastModifiedDate":"2023-02-06"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"    private static class UntimedTaskDisplay extends VBox {","lastModifiedDate":"2023-02-06"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"        private static final double MAX_WIDTH \u003d 600;","lastModifiedDate":"2023-02-05"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        private static final Insets MARGIN \u003d new Insets(10, 10, 10, 10);","lastModifiedDate":"2023-02-05"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"        UntimedTaskDisplay(UserTask task) {","lastModifiedDate":"2023-02-06"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"            setMaxWidth(MAX_WIDTH);","lastModifiedDate":"2023-02-05"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"            getStyleClass().add(STYLECLASS_TODO);","lastModifiedDate":"2023-02-08"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"            if (task.isComplete()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"                pseudoClassStateChanged(PSEUDO_CLASS_COMPLETE, true);","lastModifiedDate":"2023-02-05"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"            } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"                pseudoClassStateChanged(PSEUDO_CLASS_COMPLETE, false);","lastModifiedDate":"2023-02-08"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"            initialiseLabel(task.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"        private void initialiseLabel(String name) {","lastModifiedDate":"2023-02-05"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"            Label label \u003d new Label(name);","lastModifiedDate":"2023-02-05"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"            label.setMaxWidth(MAX_WIDTH);","lastModifiedDate":"2023-02-05"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"            label.setWrapText(true);","lastModifiedDate":"2023-02-05"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"            label.setTextAlignment(TextAlignment.CENTER);","lastModifiedDate":"2023-02-05"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"            VBox.setMargin(label, MARGIN);","lastModifiedDate":"2023-02-05"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"            getChildren().add(label);","lastModifiedDate":"2023-02-05"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"daitenshionyan":146}},{"path":"src/main/java/aqua/graphic/UiComponent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.graphic;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.util.FileUtils;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" * A custom JavaFx node created from an FXML file.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" * \u003cp\u003eStructure adapted from","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" * https://github.com/se-edu/addressbook-level3/blob/master/src/main/java/seedu/address/ui/UiPart.java","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cT\u003e the type of the root node.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"public abstract class UiComponent\u003cT extends Node\u003e {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    /** FXML directory path relative to the resource folder. */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private static final String PATH_FXML_DIR \u003d \"/graphic/\";","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    /** The root node of this component. */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private final T root;","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a UiComponent by loading the FXML file in the specified","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * location.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * @param filePath - the String path of the FXML file to load in the","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     *      resource folder relative to the fxml directory.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public UiComponent(String filePath) {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        this.root \u003d initialiseRoot(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        assert root !\u003d null : \"Root is not initialised\";","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     * Loads the FXML file in the specified path String, setting the controller","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * as this object.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     * @param filePath - the path String to the FXML file relative to the FXML","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     *      directory folder.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     * @throws RuntimeException if an error occurs while loading the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    private T initialiseRoot(String filePath) {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"            FXMLLoader loader \u003d new FXMLLoader(FileUtils.getResourceUrl(PATH_FXML_DIR + filePath));","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"            loader.setController(this);","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            loader.setRoot(null);","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"            return loader.load();","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IOException ioEx) {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"            throw new RuntimeException(\"Failed to load component fxml\", ioEx);","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the root node of this component.","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"     * @return the root node of this component.","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    public T getRoot() {","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        return root;","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"daitenshionyan":67}},{"path":"src/main/java/aqua/graphic/schedule/DaySchedule.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.graphic.schedule;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import aqua.util.DateUtils;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import aqua.util.Period;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import javafx.css.PseudoClass;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.canvas.Canvas;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.canvas.GraphicsContext;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.Tooltip;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"/** A graphical display of a day\u0027s schedule. */","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"public class DaySchedule extends HBox {","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private static final double ROW_HEIGHT \u003d 20;","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private static final double HOURS_IN_A_DAY \u003d 24;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    private static final double MINUTES_IN_A_DAY \u003d 1440;","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    private static final double MIN_BLOCK_WIDTH \u003d 7;","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    private static final double TOOLTIP_SHOW_DELAY \u003d 0;","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    private static final double TOOLTIP_HIDE_DELAY \u003d 0;","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    private static final PseudoClass PSEUDO_CLASS_HOVER \u003d PseudoClass.getPseudoClass(\"hover\");","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    private final VBox rowDisplayArea \u003d new VBox();","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    private final double rowWidth;","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code DaySchedule} from the given parameters.","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     * @param startTime - the start time of the day.","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * @param periods - the list of {@code SchedulePeriod} to display.","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    public DaySchedule(LocalDateTime startTime, List\u003cSchedulePeriod\u003e periods, double rowWidth) {","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        this.rowWidth \u003d rowWidth;","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        getChildren().addAll(rowDisplayArea);","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        List\u003c? extends List\u003cSchedulePeriod\u003e\u003e sepPeriods \u003d separateConflicting(periods);","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        for (List\u003cSchedulePeriod\u003e row : sepPeriods) {","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"            rowDisplayArea.getChildren().add(createRow(startTime, row));","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        if (sepPeriods.isEmpty()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            rowDisplayArea.getChildren().add(createRow());","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"     * Separates a list of {@code SchedulePeriod} such that none of them are","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"     * conflicting. The return type is in the structure of a list of a list of","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"     * unconflicting {@code SchedulePeriod}.","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"     * @param periods - the list of {@code SchedulePeriod} to separate.","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"     * @return a list of a list of unconflicting {@code SchedulePeriod}.","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    private List\u003c? extends List\u003cSchedulePeriod\u003e\u003e separateConflicting(List\u003cSchedulePeriod\u003e periods) {","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        double threshold \u003d (MIN_BLOCK_WIDTH / rowWidth) * MINUTES_IN_A_DAY;","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cArrayList\u003cSchedulePeriod\u003e\u003e sepPeriods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        for (SchedulePeriod period : periods) {","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"            boolean isAdded \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"            for (List\u003cSchedulePeriod\u003e periodSet : sepPeriods) {","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"                if (!hasConflict(period, periodSet, threshold)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"                    periodSet.add(period);","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"                    isAdded \u003d true;","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"                    break;","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"                }","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"            if (!isAdded) {","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"                sepPeriods.add(new ArrayList\u003c\u003e(List.of(period)));","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        return sepPeriods;","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"    private boolean hasConflict(Period period, List\u003c? extends Period\u003e periods, double threshold) {","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        for (Period storedPeriod : periods) {","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"            if (DateUtils.isIntersecting(","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"                        period.getStart(), period.getEnd(),","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"                        storedPeriod.getStart(), storedPeriod.getEnd(),","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"                        threshold)) {","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"                return true;","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"     * Creates an empty row.","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"     * @return the graphical representation of a row of","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code SchedulePeriod}.","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"    private Pane createRow() {","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"        Pane pane \u003d new Pane();","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"        pane.setMinWidth(rowWidth);","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"        pane.setMaxHeight(ROW_HEIGHT);","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"        pane.getChildren().add(createMarkings());","lastModifiedDate":"2023-02-06"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"        return pane;","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"     * Creates a row populated with blocks of {@code SchedulePeriod} as","lastModifiedDate":"2023-02-08"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"     * specified.","lastModifiedDate":"2023-02-06"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"     * @param startTime - the start time of the day.","lastModifiedDate":"2023-02-06"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"     * @param periods - the list of {@code SchedulePeriod} to display.","lastModifiedDate":"2023-02-08"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"     * @return the graphical representation of a row of","lastModifiedDate":"2023-02-06"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code SchedulePeriod}.","lastModifiedDate":"2023-02-08"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"    private Pane createRow(LocalDateTime startTime, List\u003cSchedulePeriod\u003e periods) {","lastModifiedDate":"2023-02-08"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        Pane rowPane \u003d createRow();","lastModifiedDate":"2023-02-05"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"        for (SchedulePeriod period : periods) {","lastModifiedDate":"2023-02-08"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"            double startOffset \u003d startTime.until(period.getStart(), ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-08"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"            double startX \u003d convertMinsToRowPix(startOffset);","lastModifiedDate":"2023-02-05"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"            double endOffset \u003d startTime.until(period.getEnd(), ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-08"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"            double endX \u003d convertMinsToRowPix(endOffset);","lastModifiedDate":"2023-02-08"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"            double width \u003d endX - startX;","lastModifiedDate":"2023-02-08"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"            if (width \u003c\u003d MIN_BLOCK_WIDTH) {","lastModifiedDate":"2023-02-05"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"                startX -\u003d MIN_BLOCK_WIDTH / 2;","lastModifiedDate":"2023-02-05"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"                startX \u003d Math.max(0D, startX);","lastModifiedDate":"2023-02-08"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"                startX \u003d Math.min(rowWidth - MIN_BLOCK_WIDTH, startX);","lastModifiedDate":"2023-02-08"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"                width \u003d MIN_BLOCK_WIDTH;","lastModifiedDate":"2023-02-05"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"            Pane block \u003d createDisplayBlock(period, width);","lastModifiedDate":"2023-02-08"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"            rowPane.getChildren().add(block);","lastModifiedDate":"2023-02-05"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"            block.setLayoutX(startX);","lastModifiedDate":"2023-02-05"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"        return rowPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"     * Creates the marking display for a row.","lastModifiedDate":"2023-02-06"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"     * @return the marking display for a row.","lastModifiedDate":"2023-02-06"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"    private Canvas createMarkings() {","lastModifiedDate":"2023-02-06"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"        Canvas canvas \u003d new Canvas(rowWidth, ROW_HEIGHT);","lastModifiedDate":"2023-02-05"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"        GraphicsContext context \u003d canvas.getGraphicsContext2D();","lastModifiedDate":"2023-02-04"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c\u003d HOURS_IN_A_DAY; i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"            double xMark \u003d ((int) ((i / HOURS_IN_A_DAY) * rowWidth)) + 0.5;","lastModifiedDate":"2023-02-05"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"            context.strokeLine(xMark, 0, xMark, ROW_HEIGHT);","lastModifiedDate":"2023-02-04"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"        return canvas;","lastModifiedDate":"2023-02-04"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"    private double convertMinsToRowPix(double mins) {","lastModifiedDate":"2023-02-05"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"        double dayFrac \u003d mins / MINUTES_IN_A_DAY;","lastModifiedDate":"2023-02-05"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"        dayFrac \u003d Math.min(Math.max(0D, dayFrac), 1D);","lastModifiedDate":"2023-02-05"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"        return dayFrac * rowWidth;","lastModifiedDate":"2023-02-05"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"     * Creates a block to represent a {@code SchedulePeriod} graphically.","lastModifiedDate":"2023-02-08"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"     * @param period - the {@code SchedulePeriod} to display.","lastModifiedDate":"2023-02-08"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"     * @param width - the width of the block.","lastModifiedDate":"2023-02-06"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"     * @return a {@code Pane} that represents the {@code SchedulePeriod}","lastModifiedDate":"2023-02-08"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"     *      graphically.","lastModifiedDate":"2023-02-06"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"    private Pane createDisplayBlock(SchedulePeriod period, double width) {","lastModifiedDate":"2023-02-08"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"        Pane block \u003d new Pane();","lastModifiedDate":"2023-02-05"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"        block.setMinHeight(ROW_HEIGHT);","lastModifiedDate":"2023-02-05"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"        block.setMinWidth(width);","lastModifiedDate":"2023-02-05"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"        block.getStyleClass().setAll(period.getStyleClass());","lastModifiedDate":"2023-02-08"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"        Tooltip.install(block, createTooltip(period));","lastModifiedDate":"2023-02-08"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"        for (PseudoClass pseudoClass : period.getPseudoClass()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"            block.pseudoClassStateChanged(pseudoClass, true);","lastModifiedDate":"2023-02-05"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"        block.setOnMouseEntered(e -\u003e setBlockHoverState(period, true));","lastModifiedDate":"2023-02-08"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"        block.setOnMouseExited(e -\u003e setBlockHoverState(period, false));","lastModifiedDate":"2023-02-08"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"        period.addLink(block);","lastModifiedDate":"2023-02-08"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"        return block;","lastModifiedDate":"2023-02-05"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":198,"author":{"gitId":"daitenshionyan"},"content":"    private void setBlockHoverState(SchedulePeriod period, boolean isHover) {","lastModifiedDate":"2023-02-08"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"        for (Node block : period.getLinks()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"            block.pseudoClassStateChanged(PSEUDO_CLASS_HOVER, isHover);","lastModifiedDate":"2023-02-08"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":202,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":203,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":204,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":205,"author":{"gitId":"daitenshionyan"},"content":"    private Tooltip createTooltip(SchedulePeriod period) {","lastModifiedDate":"2023-02-08"},{"lineNumber":206,"author":{"gitId":"daitenshionyan"},"content":"        Tooltip tooltip \u003d new Tooltip(period.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":207,"author":{"gitId":"daitenshionyan"},"content":"        tooltip.setShowDelay(Duration.seconds(TOOLTIP_SHOW_DELAY));","lastModifiedDate":"2023-02-05"},{"lineNumber":208,"author":{"gitId":"daitenshionyan"},"content":"        tooltip.setHideDelay(Duration.seconds(TOOLTIP_HIDE_DELAY));","lastModifiedDate":"2023-02-05"},{"lineNumber":209,"author":{"gitId":"daitenshionyan"},"content":"        tooltip.setShowDuration(Duration.seconds(Double.MAX_VALUE));","lastModifiedDate":"2023-02-05"},{"lineNumber":210,"author":{"gitId":"daitenshionyan"},"content":"        return tooltip;","lastModifiedDate":"2023-02-05"},{"lineNumber":211,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":212,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"daitenshionyan":212}},{"path":"src/main/java/aqua/graphic/schedule/ScheduleHeader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.graphic.schedule;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"/** The graphical display of the schedule\u0027s header. */","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"public class ScheduleHeader extends AnchorPane {","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"    private static final double HOURS_IN_A_DAY \u003d 24;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    private static final double HEADER_HEIGHT \u003d 20;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    private static final double LABEL_WIDTH \u003d 30;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ScheduleHeader} from the given parameters.","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * @param offsetWidth - the width offset in pixel before the start of the","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     *      header.","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * @param width - the width of the header in pixels.","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public ScheduleHeader(double offsetWidth, double width) {","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        setMinSize(offsetWidth + width, HEADER_HEIGHT);","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c HOURS_IN_A_DAY; i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"            Label label \u003d new Label(String.format(\"%02d00\", i));","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"            label.setMinWidth(LABEL_WIDTH);","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"            label.setAlignment(Pos.CENTER);","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"            getChildren().add(label);","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            double leftAnchor \u003d offsetWidth;","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            leftAnchor +\u003d ((width / HOURS_IN_A_DAY) * i);","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            leftAnchor -\u003d LABEL_WIDTH / 2D;","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"            setLeftAnchor(label, leftAnchor);","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            setBottomAnchor(label, 0D);","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"daitenshionyan":39}},{"path":"src/main/java/aqua/graphic/schedule/SchedulePeriod.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.graphic.schedule;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.util.Period;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.css.PseudoClass;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"/** A {@code Period} that can be displayed. */","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"public abstract class SchedulePeriod extends Period {","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    private final ArrayList\u003cNode\u003e linkedNodes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     * Links a {@code Node} to this period.","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     * @param node - the node to link.","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public void addLink(Node node) {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        linkedNodes.add(node);","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * Returns an immutable list view of {@code Node} linked to this period.","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * @return an immutable list view of {@code Node} linked to this period.","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    public List\u003cNode\u003e getLinks() {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        return List.copyOf(linkedNodes);","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the list of CSS styleclasses that should be added to this","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     * {@code Period}.","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     * @return a list of CSS styleclasses.","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    public abstract List\u003cString\u003e getStyleClass();","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     * Return a list of CSS pseudo classes to add to this {@code Period}.","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"     * @return a list of CSS pseudoclasses.","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    public abstract List\u003cPseudoClass\u003e getPseudoClass();","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"daitenshionyan":51}},{"path":"src/main/java/aqua/graphic/schedule/WeekSchedule.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.graphic.schedule;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import javafx.css.PseudoClass;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"/** A graphical display of a week\u0027s schedule. */","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"public class WeekSchedule extends VBox {","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private static final double LABEL_WIDTH \u003d 100;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private static final double ROW_WIDTH \u003d 1000;","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private static final String STYLECLASS_SCHEDULE_BOX \u003d \"schedule-date-box\";","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private static final PseudoClass PSEUDO_CLASS_ODD \u003d PseudoClass.getPseudoClass(\"odd\");","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private static final PseudoClass PSEUDO_CLASS_EVEN \u003d PseudoClass.getPseudoClass(\"even\");","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    private static final int DAYS_IN_WEEK \u003d 7;","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code WeekSchedule} from the given parameters.","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * @param startTime - the start time of the week.","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     * @param periods - the list of {@code SchedulePeriod} to display.","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    public WeekSchedule(LocalDateTime startTime, List\u003c? extends SchedulePeriod\u003e periods) {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        List\u003c? extends List\u003cSchedulePeriod\u003e\u003e rows \u003d split(startTime, periods);","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        getChildren().add(new ScheduleHeader(LABEL_WIDTH, ROW_WIDTH));","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c rows.size(); i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            addRow(startTime.plusDays(i), rows.get(i), i);","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     * Splits a list of {@code SchedulePeriod} into their day in the week.","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     * The return type is a list of 7 lists of {@code SchedulePeriod}.","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"     * @param startTime - the time of the start of the week.","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"     * @param periods - the list of {@code SchedulePeriod} to split.","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    private List\u003c? extends List\u003cSchedulePeriod\u003e\u003e split(","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"                LocalDateTime startTime, List\u003c? extends SchedulePeriod\u003e periods) {","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cArrayList\u003cSchedulePeriod\u003e\u003e sepPeriods \u003d new ArrayList\u003c\u003e(DAYS_IN_WEEK);","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c DAYS_IN_WEEK; i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"            sepPeriods.add(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        for (SchedulePeriod period : periods) {","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"            // periods might span multiple days.","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"            // thus need to determine start and end days.","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"            int startDay \u003d (int) startTime.until(period.getStart(), ChronoUnit.DAYS);","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"            startDay \u003d Math.max(0, startDay);","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"            int endDay \u003d (int) startTime.until(period.getEnd(), ChronoUnit.DAYS);","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"            endDay \u003d Math.min(DAYS_IN_WEEK - 1, endDay);","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"            for (int i \u003d startDay; i \u003c\u003d endDay; i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"                sepPeriods.get(i).add(period);","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        return sepPeriods;","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"     * Creates and adds a {@code DaySchedule}.","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"     * @param startTime - the time of the start of the day to create.","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"     * @param periods - the list {@code SchedulePeriod} to include in the","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"     *      day.","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"     * @param index - the index of the day.","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"    private void addRow(LocalDateTime startTime, List\u003cSchedulePeriod\u003e periods, int index) {","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"        HBox box \u003d createDayBox(index);","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        Label dateLabel \u003d createDateLabel(startTime);","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        // wrap in VBox to center component","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        VBox scheduleContainer \u003d new VBox(new DaySchedule(startTime, periods, ROW_WIDTH));","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        scheduleContainer.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"        box.getChildren().addAll(dateLabel, scheduleContainer);","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        getChildren().add(box);","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    private HBox createDayBox(int index) {","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"        HBox box \u003d new HBox();","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        box.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"        box.setMaxWidth(ROW_WIDTH);","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        box.getStyleClass().add(STYLECLASS_SCHEDULE_BOX);","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"        if (index % 2 \u003d\u003d 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"            box.pseudoClassStateChanged(PSEUDO_CLASS_EVEN, true);","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"        } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"            box.pseudoClassStateChanged(PSEUDO_CLASS_ODD, true);","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"        return box;","lastModifiedDate":"2023-02-06"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"    private Label createDateLabel(LocalDateTime startTime) {","lastModifiedDate":"2023-02-06"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"        Label dateLabel \u003d new Label();","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"        dateLabel.setMinWidth(LABEL_WIDTH);","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"        dateLabel.setMaxWidth(LABEL_WIDTH);","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"        dateLabel.setPrefWidth(LABEL_WIDTH);","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"        dateLabel.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2023-02-05"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"        dateLabel.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2023-02-05"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"        dateLabel.setText(startTime.format(DateTimeFormatter.ofPattern(\"LLL d (EEE)\")));","lastModifiedDate":"2023-02-04"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"        return dateLabel;","lastModifiedDate":"2023-02-06"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"daitenshionyan":118}},{"path":"src/main/java/aqua/logic/ArgumentMap.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":" * An encapsulation of a {@code HashMap\u003cString, String\u003e} to store argument tags","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":" * and their associated value.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"public class ArgumentMap {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    /** The tag of the main input. */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    public static final String TAG_MAIN_INPUT \u003d \"MAIN_INPUT\";","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private final HashMap\u003cString, String\u003e inputMap;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code ArgumentMap}.","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     * @param inputMap - the hash map to construct the argument map from.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    public ArgumentMap(HashMap\u003cString, String\u003e inputMap) {","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        this.inputMap \u003d new HashMap\u003c\u003e(inputMap);","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the argument\u0027s main input value wrapped in an {@code Optional}.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * If there are no mappings to this tag, {@code Optional.empty} is","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     * returned.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     * @return the main input value wrapped in an {@code Optional}.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    public Optional\u003cString\u003e getMainInput() {","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        return get(TAG_MAIN_INPUT);","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the value that is mapped to the specified tag wrapped in an","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     * {@code Optional}. If there are no mappings to the tag,","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     * {@code Optional.empty} is returned.","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     * @param tag - the tag of the value to return.","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     * @return the associated value of the tag specified wrapped in an","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code Optional}.","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    public Optional\u003cString\u003e get(String tag) {","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.ofNullable(inputMap.get(tag));","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":52}},{"path":"src/main/java/aqua/logic/CommandLineInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.command.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.IoManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.LogicManager;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"/** Represents the user\u0027s command line input. */","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"public class CommandLineInput {","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"    private final Command command;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    private final ArgumentMap args;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code CommandLineInput}.","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     * @param command - the command.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * @param args - the argument map.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public CommandLineInput(Command command, ArgumentMap args) {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the {@code ExecutionService} to execute the command. The service","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * returned does not display its results.","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * @param manager - the {@code LogicManager} for the command to work on.","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     * @return the {@code ExecutionService} of the command.","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(LogicManager manager) {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        return command.getService(args, manager);","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the {@code ExecutionService} to execute the command. The service","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     * returned may display its results.","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     * @param logicManager - the {@code LogicManager} for the command to work","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     *      on.","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     * @param ioManager - the {@code IoManager} to display through.","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     * @return the {@code ExecutionService} of the command.","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(LogicManager logicManager, IoManager ioManager) {","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        return command.getService(args, logicManager, ioManager);","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":50}},{"path":"src/main/java/aqua/logic/ExecutionDisplayerTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.ProcedureException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.IoManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.LogicManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" * An {@code ExecutionTask} that will display the result of the execution.","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cT\u003e the return type of the result after execution.","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public abstract class ExecutionDisplayerTask\u003cT\u003e extends ExecutionTask\u003cT\u003e {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private final IoManager ioManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code ExecutionDisplayerTask} from the given parameters.","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     * @param args - the arguments to work on.","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * @param logicManager - the logic manager to work on.","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * @param ioManager - the {@code IoManager} to display through.","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionDisplayerTask(ArgumentMap args, LogicManager logicManager, IoManager ioManager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        super(args, logicManager);","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        this.ioManager \u003d ioManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * Displays the result of the execution.","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     * @param data - the result of the execution.","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"     * @param manager - the {@code IoManager} to display through.","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    protected abstract void display(T data, IoManager manager);","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    protected Void call() throws SyntaxException, ProcedureException {","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        T data \u003d process();","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        display(data, ioManager);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        return null;","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"daitenshionyan":46}},{"path":"src/main/java/aqua/logic/ExecutionService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.ProcedureException;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.concurrent.Service;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" * Implementation of {@link Service} to handle the execution of its","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" * encapsulated {@link ExecutionTask}.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public abstract class ExecutionService extends Service\u003cVoid\u003e {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private final ExecutionTask\u003c?\u003e task;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private ExecutionService(ExecutionTask\u003c?\u003e task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * Creates a {@code ExecutionService}.","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     * @param task - the task to execute.","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * @return a service to execute the given task.","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public static ExecutionService of(ExecutionTask\u003c?\u003e task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        return new ExecutionService(task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            public Optional\u003cExecutionService\u003e getNextService() {","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"                return Optional.empty();","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        };","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the follow up service, that should be started if the task","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * of this service is started and executed successfully. Return result is","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     * wrapped in an {@code Optinoal}. If there are no follow services,","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     * {@code Optional.empty} is returned.","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     * @return the follow up service wrapped in an {@code Optional}.","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    public abstract Optional\u003cExecutionService\u003e getNextService();","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"     * Executes the encapsulated task process.","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"     * @throws SyntaxException if there are syntax errors.","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ProcedureExecutionExecution if the task fail to execute","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"     *      completely.","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    public void process() throws SyntaxException, ProcedureException {","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        task.process();","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    protected ExecutionTask\u003c?\u003e createTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        return task;","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"     * Sets the follow up service.","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"     * @param service - the follow up service to set to.","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"     * @return this service when its follow up service is set as specified.","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService setFollowUp(ExecutionService service) {","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        return new ExecutionService(this.task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"            @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"            public Optional\u003cExecutionService\u003e getNextService() {","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"                return Optional.ofNullable(service);","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        };","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":82}},{"path":"src/main/java/aqua/logic/ExecutionTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.ProcedureException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.LogicManager;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.concurrent.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" * An implementation of {@link Task} that defines the task of a command.","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cT\u003e the return type of the result after execution.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public abstract class ExecutionTask\u003cT\u003e extends Task\u003cVoid\u003e {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private final ArgumentMap args;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    private final LogicManager manager;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code ExecutionTask} with the given parameters.","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * @param args - the argument map to work on.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * @param manager - the AppManager to work on.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionTask(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        this.manager \u003d manager;","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * Processes the arguments and execute the task to produce a result.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     * @param args - the argument to process.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"     * @param manager - the AppManager to work on.","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"     * @return the result of the execution.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"     * @throws SyntaxException if the argument given contains invalid","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     *      syntax.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ProcedureException - if the task failed to execute","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     *      completely.","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    protected abstract T process(ArgumentMap args, LogicManager manager)","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            throws SyntaxException, ProcedureException;","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     * Executes the task process.","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"     * @return the output of the execution.","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"     * @throws SyntaxException if the argument given contains invalid","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"     *      syntax.","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ProcedureException if the task failed to execute","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"     *      completely.","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    public T process() throws SyntaxException, ProcedureException {","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        return process(args, manager);","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"     * @return {@code null} value.","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"     * @throws SyntaxException if the argument given contains invalid","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"     *      syntax.","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ProcedureException if the task failed to execute","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"     *      completely.","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    protected Void call() throws SyntaxException, ProcedureException {","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        process();","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        return null;","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":74}},{"path":"src/main/java/aqua/logic/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic.command;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ArgumentMap;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import aqua.usertask.UserDeadline;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import aqua.util.DateUtils;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"/** An {@code AddTaskCommand} to add {@code UserDeadline}. */","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"public class AddDeadlineCommand extends AddTaskCommand {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    protected UserDeadline createTask(ArgumentMap args) throws SyntaxException {","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"        // get name","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"        String name \u003d args.getMainInput()","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"                .filter(n -\u003e !n.isBlank())","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"                .orElseThrow(() -\u003e new SyntaxException(\"Name disappeared!\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"        // get due time","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"        String dueString \u003d args.get(UserDeadline.TAG_DUE_TIME)","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"                .orElseThrow(() -\u003e new SyntaxException(\"[by] disappeared!\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime dueTime \u003d DateUtils.parse(dueString);","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        // get is complete","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        boolean isCompleted \u003d args.get(UserDeadline.TAG_IS_COMPLETE)","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"                .map(isComp -\u003e Boolean.parseBoolean(isComp))","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(false);","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        return new UserDeadline(name, isCompleted, dueTime);","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":32}},{"path":"src/main/java/aqua/logic/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic.command;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.ProcedureException;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ArgumentMap;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import aqua.usertask.UserEvent;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import aqua.util.DateUtils;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"/** An {@code AddTaskCommand} to add {@code UserEvent}. */","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"public class AddEventCommand extends AddTaskCommand {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    protected UserEvent createTask(ArgumentMap args) throws SyntaxException, ProcedureException {","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"        // get name","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"        String name \u003d args.getMainInput().filter(n -\u003e !n.isBlank())","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"                .orElseThrow(() -\u003e new SyntaxException(\"Name disappeared!\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"        // get start time","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"        String startString \u003d args.get(UserEvent.TAG_START_TIME)","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"                .orElseThrow(() -\u003e new SyntaxException(\"[from] disappeared!\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime startTime \u003d DateUtils.parse(startString);","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        // get end time","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        String endString \u003d args.get(UserEvent.TAG_END_TIME)","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"                .orElseThrow(() -\u003e new SyntaxException(\"[to] disappeared!\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime endTime \u003d DateUtils.parse(endString);","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        if (startTime.isAfter(endTime)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            throw new ProcedureException(\"Start time after end time!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        // get is complete","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        boolean isCompleted \u003d args.get(UserEvent.TAG_IS_COMPLETE)","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"                .map(isComp -\u003e Boolean.parseBoolean(isComp))","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(false);","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        return new UserEvent(name, isCompleted, startTime, endTime);","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":41}},{"path":"src/main/java/aqua/logic/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic.command;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.ProcedureException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ArgumentMap;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionDisplayerTask;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionService;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionTask;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.IoManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.LogicManager;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.TaskChangeReport;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import aqua.usertask.UserTask;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import aqua.util.Kaomoji;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"/** A {@code CommandController} to add {@code UserTask}. */","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"public abstract class AddTaskCommand extends CommandController {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     * Creates an {@code AquaTask} from the given argument map.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     * @param args - the argument map.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * @return the task created from the given arguments.","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * @throws SyntaxException if the arguments are of invalid syntax.","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    protected abstract UserTask createTask(ArgumentMap args) throws SyntaxException, ProcedureException;","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        return ExecutionService.of(new AddTask(args, manager));","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(ArgumentMap args, LogicManager logicManager, IoManager ioManager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        return ExecutionService.of(new AddDisplayerTask(args, logicManager, ioManager))","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"                .setFollowUp(new WriteTaskCommand().getService(args, logicManager, ioManager));","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    private TaskChangeReport addProcess(ArgumentMap args, LogicManager manager)","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"                throws SyntaxException, ProcedureException {","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        UserTask task \u003d createTask(args);","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        return manager.getTaskManager().add(task);","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    private class AddTask extends ExecutionTask\u003cTaskChangeReport\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        AddTask(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"            super(args, manager);","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        protected TaskChangeReport process(ArgumentMap args, LogicManager manager)","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"                    throws SyntaxException, ProcedureException {","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"            return addProcess(args, manager);","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    private class AddDisplayerTask extends ExecutionDisplayerTask\u003cTaskChangeReport\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        AddDisplayerTask(ArgumentMap args, LogicManager logicManager, IoManager ioManager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"            super(args, logicManager, ioManager);","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        protected TaskChangeReport process(ArgumentMap args, LogicManager manager)","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"                    throws SyntaxException, ProcedureException {","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"            return addProcess(args, manager);","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        protected void display(TaskChangeReport report, IoManager manager) {","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"            manager.reply(String.format(String.join(\"\\n\",","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"                            \"Hai okay desu! I have added the task:\",","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"                            Kaomoji.WAVE_UP,","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"                            \"%s\",","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"                            Kaomoji.WAVE_DOWN),","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"                    report.task.toString()));","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"            manager.reply(String.format(","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"                \"You now have %d tasks.\",","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"                report.numTask));","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":94}},{"path":"src/main/java/aqua/logic/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic.command;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ArgumentMap;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.usertask.UserTodo;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"/** An {@code AddTaskCommand} to add {@code UserTodo}. */","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"public class AddTodoCommand extends AddTaskCommand {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    protected UserTodo createTask(ArgumentMap args) throws SyntaxException {","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"        // get name","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"        String name \u003d args.getMainInput()","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"                .filter(n -\u003e !n.isBlank())","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"                .orElseThrow(() -\u003e new SyntaxException(\"Name disappeared!\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"        // get is complete","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"        boolean isComplete \u003d args.get(UserTodo.TAG_IS_COMPLETE)","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"                    .map(isComp -\u003e Boolean.parseBoolean(isComp))","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"                    .orElse(false);","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        return new UserTodo(name, isComplete);","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":24}},{"path":"src/main/java/aqua/logic/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ArgumentMap;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionService;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.IoManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.LogicManager;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"/** Enumeration of commands. */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"public enum Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    LIST(new ListCommand()),","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    MARK(new MarkTaskCommand(true)),","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    UNMARK(new MarkTaskCommand(false)),","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    TODO(new AddTodoCommand()),","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    DEADLINE(new AddDeadlineCommand()),","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    EVENT(new AddEventCommand()),","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    DELETE(new DeleteCommand()),","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    FIND(new FilterCommand()),","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    VIEW(new ViewScheduleCommand());","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private final CommandController controller;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    Command(CommandController controller) {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        this.controller \u003d controller;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the {@code ExecutionService} of the command. {@code isLoading}","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * parameter is set to {@code false}.","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     * @param args - the arguments for the command to work on.","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"     * @param manager - the {@code LogicManager} for the command to work on.","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"     * @return the {@code ExecutionService} to execute.","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        return controller.getService(args, manager);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the {@code ExecutionService} of the command.","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     * @param args - the arguments for the command to work on.","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     * @param logicManager - the {@code LogicManager} for the command to work on.","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"     * @param ioManager - the {@code IoManager} to display results through.","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"     * @return the {@code ExecutionService} to execute.","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(ArgumentMap args, LogicManager logicManager, IoManager ioManager) {","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        return controller.getService(args, logicManager, ioManager);","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"daitenshionyan":54}},{"path":"src/main/java/aqua/logic/command/CommandController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic.command;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ArgumentMap;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionService;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.IoManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.LogicManager;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"/** The controller of a command. */","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"public abstract class CommandController {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"     * Creates an {@code ExecutionService} that will not display its results.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"     * @param args - the argument map to work on.","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     * @param manager - the LogicManager to work on.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public abstract ExecutionService getService(ArgumentMap args, LogicManager manager);","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     * Creates an {@code ExecutionService} that may display its results.","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * @param args - the argument map to work on.","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * @param logicManager - the {@code LogicManager} to work on.","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * @param ioManager - the {@code IoManager} to display through","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public abstract ExecutionService getService(","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"            ArgumentMap args, LogicManager logicManager, IoManager ioManager);","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":29}},{"path":"src/main/java/aqua/logic/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic.command;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.ProcedureException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ArgumentMap;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionDisplayerTask;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionService;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionTask;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.IoManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.LogicManager;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.TaskChangeReport;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import aqua.util.Kaomoji;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"/** A {@code CommandController} to delete {@code UserTask}. */","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"public class DeleteCommand extends CommandController {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        return ExecutionService.of(new DeleteTask(args, manager));","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(ArgumentMap args, LogicManager logicManager, IoManager ioManager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        return ExecutionService.of(new DeleteDisplayerTask(args, logicManager, ioManager))","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"                .setFollowUp(new WriteTaskCommand().getService(args, logicManager, ioManager));","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    private TaskChangeReport deleteTask(ArgumentMap args, LogicManager manager)","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"                throws SyntaxException, ProcedureException {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            // get task index","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            String indexString \u003d args.getMainInput().filter(num -\u003e !num.isBlank())","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"                    .orElseThrow(() -\u003e new SyntaxException(\"Task number disappered!\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            int index \u003d Integer.parseInt(indexString) - 1;","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            return manager.getTaskManager().delete(index);","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        } catch (NumberFormatException numEx) {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            throw new SyntaxException(\"Task number given was not an integer\");","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IndexOutOfBoundsException oobEx) {","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"            throw new ProcedureException(","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"                    \"The task number given is out of bounds of my task counting capabilities\");","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    private class DeleteTask extends ExecutionTask\u003cTaskChangeReport\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        DeleteTask(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"            super(args, manager);","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        protected TaskChangeReport process(ArgumentMap args, LogicManager manager)","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"                    throws SyntaxException, ProcedureException {","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"            return deleteTask(args, manager);","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    private class DeleteDisplayerTask extends ExecutionDisplayerTask\u003cTaskChangeReport\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        DeleteDisplayerTask(ArgumentMap args, LogicManager logicManager, IoManager ioManager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"            super(args, logicManager, ioManager);","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        protected TaskChangeReport process(ArgumentMap args, LogicManager manager)","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"                    throws SyntaxException, ProcedureException {","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"            return deleteTask(args, manager);","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        protected void display(TaskChangeReport report, IoManager manager) {","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"            manager.reply(String.format(String.join(\"\\n\",","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"                            \"I have deleted the task:\",","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"                            \"%s\"),","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"                    report.task.toString()));","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"            if (report.numTask \u003e 0) {","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"                manager.reply(String.format(","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"                        \"You have %d task(s) left, all the best \" + Kaomoji.CHEER_ENCOURAGE,","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"                        report.numTask));","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"            } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"                manager.reply(String.format(","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"                        Kaomoji.CHEER_EXCITED + \" You have no task left~ \" + Kaomoji.STAR_WHITE,","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"                        report.numTask));","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"daitenshionyan":98}},{"path":"src/main/java/aqua/logic/command/FilterCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ArgumentMap;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionDisplayerTask;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionService;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionTask;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.IoManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.LogicManager;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import aqua.usertask.UserTask;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"/** A {@code CommandController} to filter {@code UserTask}. */","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"public class FilterCommand extends CommandController {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"        return ExecutionService.of(new FilterTask(args, manager));","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(ArgumentMap args, LogicManager logicManager, IoManager ioManager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        return ExecutionService.of(new FilterDisplayerTask(args, logicManager, ioManager));","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    private static String formatMap(LinkedHashMap\u003cInteger, UserTask\u003e map) {","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        if (map.isEmpty()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"            return \"Nothing!!\";","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        for (Map.Entry\u003cInteger, UserTask\u003e entry : map.entrySet()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            builder.append(String.format(\"%d. %s\\n\", entry.getKey(), entry.getValue()));","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        return builder.toString().strip();","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    private class FilterTask extends ExecutionTask\u003cLinkedHashMap\u003cInteger, UserTask\u003e\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        FilterTask(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            super(args, manager);","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        public LinkedHashMap\u003cInteger, UserTask\u003e process(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            return manager.getTaskManager().filter(args.getMainInput().orElse(\"\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    private class FilterDisplayerTask extends ExecutionDisplayerTask\u003cLinkedHashMap\u003cInteger, UserTask\u003e\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        FilterDisplayerTask(ArgumentMap args, LogicManager logicManager, IoManager ioManager) {","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"            super(args, logicManager, ioManager);","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        protected LinkedHashMap\u003cInteger, UserTask\u003e process(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            return manager.getTaskManager().filter(args.getMainInput().orElse(\"\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        protected void display(LinkedHashMap\u003cInteger, UserTask\u003e map, IoManager manager) {","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"            manager.reply(String.format(\"Here are your matching tasks:\\n%s\",","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"                    formatMap(map)));","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"daitenshionyan":77}},{"path":"src/main/java/aqua/logic/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic.command;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ArgumentMap;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionDisplayerTask;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionService;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionTask;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.IoManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.LogicManager;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.TaskManager;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import aqua.util.Kaomoji;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"/** A {@code CommandController} to list {@code UserTask}. */","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class ListCommand extends CommandController {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"        return ExecutionService.of(new ExecutionTask\u003cTaskManager\u003e(args, manager) {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"            @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"            public TaskManager process(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"                return manager.getTaskManager();","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        });","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(ArgumentMap args, LogicManager logicManager, IoManager ioManager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        return ExecutionService.of(new ExecutionDisplayerTask\u003cTaskManager\u003e(args, logicManager, ioManager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"            @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"            protected TaskManager process(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"                return manager.getTaskManager();","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"            protected void display(TaskManager taskManager, IoManager manager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"                manager.reply(String.format(String.join(\"\\n\",","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"                                \"Here is your task list \" + Kaomoji.PLACING_DOWN,","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"                                \"%s\"),","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"                        getListMessage(taskManager)));","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        });","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    private String getListMessage(TaskManager manager) {","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        if (manager.size() \u003e 0) {","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"            return manager.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        return \"Nothing!! \" + Kaomoji.BLUSH;","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":51}},{"path":"src/main/java/aqua/logic/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic.command;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.ProcedureException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ArgumentMap;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionDisplayerTask;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionService;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionTask;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.IoManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.LogicManager;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import aqua.usertask.UserTask;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import aqua.util.Kaomoji;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"/** A {@code CommandController} to mark {@code UserTask} as complete. */","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"public class MarkTaskCommand extends CommandController {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    /** Value to pass {@link UserTask#mark(boolean)} when marking a task. */","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private boolean isCompletedMarker;","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code MarkTaskCommand}.","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * @param isCompleteMarker - {@code true} to mark task as complete and","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code false} as incomplete.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public MarkTaskCommand(boolean isCompletedMarker) {","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        this.isCompletedMarker \u003d isCompletedMarker;","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        return ExecutionService.of(new MarkTask(args, manager));","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(ArgumentMap args, LogicManager logicManager, IoManager ioManager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        return ExecutionService.of(new MarkDisplayerTask(args, logicManager, ioManager))","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"                .setFollowUp(new WriteTaskCommand().getService(args, logicManager, ioManager));","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    private UserTask markTask(ArgumentMap args, LogicManager manager)","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"                throws SyntaxException, ProcedureException {","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"            // get task index","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"            String indexString \u003d args.getMainInput().filter(num -\u003e !num.isBlank())","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"                    .orElseThrow(() -\u003e new SyntaxException(\"Task number disappered!\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"            int index \u003d Integer.parseInt(indexString) - 1;","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"            return manager.getTaskManager().mark(index, isCompletedMarker);","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        } catch (NumberFormatException numEx) {","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"            throw new SyntaxException(\"Task number given was not an integer\");","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IndexOutOfBoundsException oobEx) {","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"            throw new ProcedureException(","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"                    \"The task number given is out of bounds of my task counting capabilities\");","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    private class MarkTask extends ExecutionTask\u003cUserTask\u003e {","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        MarkTask(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            super(args, manager);","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        protected UserTask process(ArgumentMap args, LogicManager manager)","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"                    throws SyntaxException, ProcedureException {","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"            return markTask(args, manager);","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    private class MarkDisplayerTask extends ExecutionDisplayerTask\u003cUserTask\u003e {","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        MarkDisplayerTask(ArgumentMap args, LogicManager logicManager, IoManager ioManager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"            super(args, logicManager, ioManager);","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"        protected UserTask process(ArgumentMap args, LogicManager manager)","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"                    throws SyntaxException, ProcedureException {","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"            return markTask(args, manager);","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        protected void display(UserTask task, IoManager manager) {","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"            String message;","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"            if (isCompletedMarker) {","lastModifiedDate":"2023-01-21"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"                message \u003d String.format(String.join(\"\\n\",","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"                                \"I have marked this task:\",","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"                                \"%s\"),","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"                        task.toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"            } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"                message \u003d String.format(String.join(\"\\n\",","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"                                \"Uah \" + Kaomoji.OH_NO + \" Okay I have unmarked the task:\",","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"                                \"%s\"),","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"                        task.toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"            manager.reply(message);","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":112}},{"path":"src/main/java/aqua/logic/command/ViewScheduleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic.command;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.graphic.TaskView;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ArgumentMap;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionDisplayerTask;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionService;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionTask;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.IoManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.LogicManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.TaskFilterReport;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import aqua.util.DateUtils;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.Parent;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"/** A {@code CommandController} to view schedule. */","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"public class ViewScheduleCommand extends CommandController {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private static final String POPUP_TITLE \u003d \"Task Schedule\";","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private static final int DAYS_IN_WEEK \u003d 7;","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        return ExecutionService.of(new ExecutionTask\u003cDisplayData\u003e(args, manager) {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"            @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"            protected DisplayData process(ArgumentMap args, LogicManager manager) throws SyntaxException {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"                return filterTasks(args, manager);","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        });","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(ArgumentMap args, LogicManager logicManager, IoManager ioManager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        return ExecutionService.of(new ExecutionDisplayerTask\u003cDisplayData\u003e(args, logicManager, ioManager) {","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            protected DisplayData process(ArgumentMap args, LogicManager manager) throws SyntaxException {","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"                return filterTasks(args, manager);","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"            protected void display(DisplayData data, IoManager manager) {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"                Parent root \u003d new TaskView(data.startTime, data.report).getRoot();","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"                manager.popup(root, POPUP_TITLE);","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        });","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    private DisplayData filterTasks(ArgumentMap args, LogicManager manager) throws SyntaxException {","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime start \u003d DateUtils.toStartOfWeek(LocalDateTime.now());","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        if (args.getMainInput().isPresent()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"            LocalDateTime time \u003d DateUtils.parse(args.getMainInput().get());","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"            start \u003d DateUtils.toStartOfWeek(time);","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime end \u003d start.plusDays(DAYS_IN_WEEK);","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        TaskFilterReport report \u003d manager.getTaskManager().filterWithin(start, end);","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        return new DisplayData(report, start);","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    private class DisplayData {","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        final TaskFilterReport report;","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        final LocalDateTime startTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        DisplayData(TaskFilterReport report, LocalDateTime startTime) {","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"            this.report \u003d report;","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"            this.startTime \u003d startTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"daitenshionyan":77}},{"path":"src/main/java/aqua/logic/command/WriteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic.command;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.ProcedureException;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ArgumentMap;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionDisplayerTask;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionService;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionTask;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.IoManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import aqua.manager.LogicManager;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import aqua.util.Kaomoji;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"/** A {@code CommandController} to save {@code UserTask} state. */","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"public class WriteTaskCommand extends CommandController {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        return ExecutionService.of(new WriteTask(args, manager));","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    public ExecutionService getService(ArgumentMap args, LogicManager logicManager, IoManager ioManager) {","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        return ExecutionService.of(new WriteDisplayerTask(args, logicManager, ioManager));","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    private class WriteTask extends ExecutionTask\u003cVoid\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        WriteTask(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            super(args, manager);","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        protected Void process(ArgumentMap args, LogicManager manager) throws ProcedureException {","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            try {","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"                manager.getTaskManager().saveToFile();","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"            } catch (IOException ioEx) {","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"                throw new ProcedureException(\"Failed to save data\", ioEx);","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            return null;","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    private class WriteDisplayerTask extends ExecutionDisplayerTask\u003cString\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        WriteDisplayerTask(ArgumentMap args, LogicManager logicManager, IoManager ioManager) {","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"            super(args, logicManager, ioManager);","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        protected String process(ArgumentMap args, LogicManager manager) {","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"            try {","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"                manager.getTaskManager().saveToFile();","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"            } catch (IOException ioEx) {","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"                return String.format(String.join(\"\\n\",","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"                                \"I could not put your tasks into the special place to remember things!\",","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"                                \"Please help me with this:\",","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"                                \"  %s\",","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"                                \"If you leave me I might forget everything!!\"),","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"                        ioEx.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"            return \"Safely stored hehe \" + Kaomoji.SMUG;","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        protected void display(String message, IoManager manager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"            manager.reply(message);","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":80}},{"path":"src/main/java/aqua/logic/parser/ArgumentParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic.parser;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ArgumentMap;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"/** A parser to parse a String into a {@code ArgumentMap}. */","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"public class ArgumentParser implements Parser\u003cArgumentMap\u003e {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    private static final String DELIMITER_PATTERN \u003d \"[\\\\s]*/\";","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public ArgumentMap parse(String input) throws SyntaxException {","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"        HashMap\u003cString, String\u003e inputMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"            return new ArgumentMap(inputMap);","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        // add main input tag if not present","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        input \u003d input.strip() + \" \";","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        if (!input.startsWith(\"/\" + ArgumentMap.TAG_MAIN_INPUT)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"            input \u003d String.format(\"/%s %s\", ArgumentMap.TAG_MAIN_INPUT, input);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        try (Scanner scanner \u003d new Scanner(input)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            scanner.useDelimiter(DELIMITER_PATTERN);","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"                addInput(scanner.next(), inputMap);","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        return new ArgumentMap(inputMap);","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    private static void addInput(String token, HashMap\u003cString, String\u003e inputMap)","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"                throws SyntaxException {","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        try (Scanner scanner \u003d new Scanner(token)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"            String key \u003d scanner.next();","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"            String value \u003d \"\";","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"            if (scanner.hasNext()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"                value \u003d scanner.nextLine().strip();","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            if (inputMap.containsKey(key)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"                throw new SyntaxException(\"Duplicate parameters\");","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"            if (!value.isBlank()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"                inputMap.put(key, value);","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        } catch (NoSuchElementException noElmEx) {","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"            throw new SyntaxException(\"Empty parameter!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":62}},{"path":"src/main/java/aqua/logic/parser/CommandLineInputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic.parser;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.CommandLineInput;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.command.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"/** A parser to parse a String into a {@code CommandLineInput}. */","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"public class CommandLineInputParser implements Parser\u003cCommandLineInput\u003e {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    private final ArgumentParser argumentParser;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code CommandLineInputParser} that uses the given","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     * {@code ArgumentParser} to parse arguments.","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * @param argumentParser - the {@code ArgumentParser} to use.","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public CommandLineInputParser(ArgumentParser argumentParser) {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"        this.argumentParser \u003d argumentParser;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public CommandLineInput parse(String input) throws SyntaxException {","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        String argString \u003d \"\";","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        Command command;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        try (Scanner scanner \u003d new Scanner(input)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            if (scanner.hasNext()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"                command \u003d Command.valueOf(scanner.next().toUpperCase());","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"                if (scanner.hasNext()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"                    argString \u003d scanner.nextLine().strip();","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"            } else {","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"                throw new SyntaxException(\"Empty input\");","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalArgumentException illArgEx) {","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"            throw new SyntaxException(\"I do not know what that command is suppose to do\");","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        return new CommandLineInput(command, argumentParser.parse(argString));","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":46}},{"path":"src/main/java/aqua/logic/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic.parser;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":" * A parser to parse a String into its object representation.","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cR\u003e the return object type.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"@FunctionalInterface","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"public interface Parser\u003cR\u003e {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"     * Parses the data in the given String into its object representation.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     * @param input - the String to parse.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     * @return the object representation of the data in the given String.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * @throws SyntaxException if the String cannot be parsed due to","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     *      syntax errors.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public R parse(String input) throws SyntaxException;","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":22}},{"path":"src/main/java/aqua/logic/parser/ParserService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic.parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import javafx.concurrent.Service;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import javafx.concurrent.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"/** A {@code Service} to parse a String */","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"public class ParserService\u003cT\u003e extends Service\u003cT\u003e {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"    private final Parser\u003cT\u003e parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    private final String input;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ParserService}.","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     * @param parser - the parser to use.","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * @param input - the String to parse.","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public ParserService(Parser\u003cT\u003e parser, String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    protected Task\u003cT\u003e createTask() {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        return new Task\u003c\u003e() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"            @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"            public T call() throws SyntaxException {","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"                return parser.parse(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        };","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"daitenshionyan":35}},{"path":"src/main/java/aqua/manager/AppManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.manager;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.LoadException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.CommandLineInput;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ExecutionService;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.command.ListCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.parser.ParserService;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import javafx.concurrent.Service;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"/** Manager of the application\u0027s processes. */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class AppManager {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private final LogicManager logicManager;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    private final IoManager ioManager;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private final ArrayDeque\u003cParserService\u003cCommandLineInput\u003e\u003e executionQueue \u003d new ArrayDeque\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private Service\u003c?\u003e runningService \u003d null;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code AppManager} from the given parameter.","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     * @param logicManager - the {@code LogicManager} to use.","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * @param ioManager - the {@code IoManager} to use.","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public AppManager(LogicManager logicManager, IoManager ioManager) {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        this.logicManager \u003d logicManager;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        this.ioManager \u003d ioManager;","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    /** Performs the starting processes. */","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    public void start() {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        ioManager.greet();","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            logicManager.load();","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            ioManager.replyLoadSuccess();","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"            startExecution(new ListCommand().getService(null, logicManager));","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        } catch (LoadException loadException) {","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            ioManager.replyException(loadException);","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    /** Queues the user\u0027s input for execution. */","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    public synchronized void processInput() {","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        String userInput \u003d ioManager.readLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        executionQueue.add(new ParserService\u003c\u003e(logicManager.getInputParser(), userInput));","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        executeNext();","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    private synchronized void executeNext() {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        if (runningService !\u003d null || executionQueue.isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        startParser(executionQueue.poll());","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    private void startParser(ParserService\u003cCommandLineInput\u003e service) {","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        service.setOnSucceeded(s -\u003e startExecution(service.getValue().getService(logicManager, ioManager)));","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        service.setOnFailed(f -\u003e handleExecutionFailure(service));","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        service.start();","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    private void startExecution(ExecutionService service) {","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        runningService \u003d service;","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        service.setOnSucceeded(s -\u003e handleExecutionSuccess(service));","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        service.setOnFailed(f -\u003e handleExecutionFailure(service));","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        service.start();","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    private void handleExecutionSuccess(ExecutionService service) {","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        service.getNextService().ifPresentOrElse(","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"                this::startExecution,","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"                this::completeService);","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"    private void handleExecutionFailure(Service\u003c?\u003e service) {","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        ioManager.replyException(service.getException());","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        completeService();","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"    private void completeService() {","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"        runningService \u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"        executeNext();","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"daitenshionyan":96}},{"path":"src/main/java/aqua/manager/IoManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.manager;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import aqua.MainApp;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.LoadException;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.ProcedureException;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import aqua.util.Kaomoji;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.Parent;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"/** Manager of inputs and outputs. */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"public class IoManager {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private static final String PATH_CSS \u003d \"/graphic/style.css\";","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    /** Greeting message. */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private static final String MESSAGE_GREETING \u003d String.join(\"\\n\",","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"            \"Konaqua~~\",","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"            Kaomoji.CUTE_TOSS + \" Perfect idol gamer nekomimi super maid Minato Aqua desu!\");","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    /** Load success message. */","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    private static final String MESSAGE_LOAD_SUCCESS \u003d","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"            \"I remembered all your previous tasks! Praise me \" + Kaomoji.HEART_PASS;","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    /** Syntax exception message format. */","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    private static final String EXCEPTION_FORMAT_SYNTAX \u003d String.join(\"\\n\",","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            \"Hanya??\",","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            \"I do not understand because:\",","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"            \"%s\",","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            \"Gomennasai!! \" + Kaomoji.CRY);","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    /** Execution exception message format. */","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    private static final String EXCEPTION_FORMAT_EXECUTION \u003d String.join(\"\\n\",","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            \"Hanya??\",","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            \"I was doing what you told me to do half way but messed up because:\",","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"            \"%s\",","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"            \"Gomennasai!! \" + Kaomoji.CRY);","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    /** Load exception message format. */","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    private static final String EXCEPTION_FORMAT_LOAD \u003d String.join(\"\\n\",","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            \"Hanya??\",","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"            \"I was looking through my notes and could not remember your previous tasks because:\",","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"            \"%s\",","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"            \"Gomennasai!! But you did not touch it right? \" + Kaomoji.THINKING);","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    /** All other exception message format. */","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    private static final String EXCEPTION_FORMAT_DEATH \u003d String.join(\"\\n\",","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            \"UWAWAWA!!\",","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"            \"I messed up big time...\",","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"            \"%s\");","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    private final Supplier\u003cString\u003e inputSupplier;","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    private final Consumer\u003cString\u003e outputConsumer;","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    private final HashMap\u003cString, Stage\u003e stageMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code IoManager}.","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"     * @param inputSupplier - the supplier to get user input from.","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"     * @param outputConsumer - the consumer to display messages to the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    public IoManager(Supplier\u003cString\u003e inputSupplier, Consumer\u003cString\u003e outputConsumer) {","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        this.inputSupplier \u003d inputSupplier;","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        this.outputConsumer \u003d outputConsumer;","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"     * Reads a line.","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"     * @return the contents the next line.","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"    public String readLine() {","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        String msg \u003d inputSupplier.get();","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.ofNullable(msg).orElse(\"\");","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"     * Displays information about the given exception.","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"     * @param ex - the exception to display.","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"    public void replyException(Throwable ex) {","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        String[] messages \u003d getExceptionReply(ex).split(\"\\n\");","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"        for (String message : messages) {","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"            reply(message);","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"     * Gets the formatted information String of the given exception.","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"     * @param ex - the exception whose information is to be formed.","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"    private String getExceptionReply(Throwable ex) {","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"            throw ex;","lastModifiedDate":"2023-01-21"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"        } catch (SyntaxException syntaxEx) {","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"            return String.format(EXCEPTION_FORMAT_SYNTAX, ex.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"        } catch (ProcedureException cmdExeEx) {","lastModifiedDate":"2023-02-05"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"            return String.format(EXCEPTION_FORMAT_EXECUTION, ex.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"        } catch (LoadException loadEx) {","lastModifiedDate":"2023-01-21"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"            return String.format(EXCEPTION_FORMAT_LOAD, ex.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"        } catch (Throwable deathEx) {","lastModifiedDate":"2023-01-21"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"            deathEx.printStackTrace();","lastModifiedDate":"2023-01-21"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"            return String.format(EXCEPTION_FORMAT_DEATH, ex.getMessage());","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"    /** Displays the greeting message. */","lastModifiedDate":"2023-02-07"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"    public void greet() {","lastModifiedDate":"2023-01-23"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"        reply(MESSAGE_GREETING);","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"     * Displays the message to signal that tasks have successfully been loaded.","lastModifiedDate":"2023-02-07"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"    public void replyLoadSuccess() {","lastModifiedDate":"2023-01-23"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"        reply(MESSAGE_LOAD_SUCCESS);","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"     * Displays a message.","lastModifiedDate":"2023-02-07"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"     * @param msg - the message to display.","lastModifiedDate":"2023-02-07"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"    public void reply(String msg) {","lastModifiedDate":"2023-01-23"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"        outputConsumer.accept(msg);","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"     * Shows a popup window.","lastModifiedDate":"2023-02-07"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"     * @param root - the root node to show.","lastModifiedDate":"2023-02-07"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"    public void popup(Parent root, String stageId) {","lastModifiedDate":"2023-02-10"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"        Platform.runLater(() -\u003e showPopup(root, stageId));","lastModifiedDate":"2023-02-10"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"    private void showPopup(Parent root, String stageId) {","lastModifiedDate":"2023-02-10"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"        closeStage(stageId);","lastModifiedDate":"2023-02-10"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"        createStage(root, stageId).show();","lastModifiedDate":"2023-02-10"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"    private void closeStage(String stageId) {","lastModifiedDate":"2023-02-10"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"        if (stageMap.containsKey(stageId)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"            stageMap.remove(stageId).close();","lastModifiedDate":"2023-02-10"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"    private Stage createStage(Parent root, String stageId) {","lastModifiedDate":"2023-02-10"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"        Stage stage \u003d new Stage();","lastModifiedDate":"2023-02-04"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"        Scene scene \u003d new Scene(root);","lastModifiedDate":"2023-02-04"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"        scene.getStylesheets().add(this.getClass().getResource(PATH_CSS).toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-04"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"        stage.setTitle(stageId);","lastModifiedDate":"2023-02-10"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"        stage.getIcons().add(MainApp.ICON);","lastModifiedDate":"2023-02-11"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-11"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"        stageMap.put(stageId, stage);","lastModifiedDate":"2023-02-10"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"        return stage;","lastModifiedDate":"2023-02-10"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":176}},{"path":"src/main/java/aqua/manager/LogicManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.manager;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.LoadException;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.ProcedureException;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.CommandLineInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.parser.ArgumentParser;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.parser.CommandLineInputParser;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.parser.Parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import aqua.storage.Loadable;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"/** Manager of the application\u0027s logical processes. */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"public class LogicManager implements Loadable {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private final Parser\u003cCommandLineInput\u003e inputParser;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code LogicManager} that uses the default","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * {@code CommandLineInputParser}.","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public LogicManager() {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        this(new CommandLineInputParser(new ArgumentParser()));","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     * Construcs a {@code LogicManager}.","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"     * @param inputParser - the {@code CommandLineInputParser} to use.","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    public LogicManager(Parser\u003cCommandLineInput\u003e inputParser) {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        this.inputParser \u003d inputParser;","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        taskManager \u003d new TaskManager();","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     * Loades the state of the previous run.","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     * @throws LoadException {@inheritDoc}","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    public void load() throws LoadException {","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        Path path \u003d taskManager.getSavePath();","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        try (Scanner scanner \u003d new Scanner(path.toFile())) {","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"            CommandLineInputParser parser \u003d new CommandLineInputParser(new ArgumentParser());","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"                parser.parse(line).getService(this).process();","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        } catch (SyntaxException | ProcedureException ex) {","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"            throw new LoadException(ex.getMessage(), ex);","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        } catch (FileNotFoundException fnfEx) {","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"            // no save data just return","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the input parser.","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"     * @return the input parser.","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    public Parser\u003cCommandLineInput\u003e getInputParser() {","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        return inputParser;","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the task manager.","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"     * @return the task manager.","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"    public TaskManager getTaskManager() {","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        return taskManager;","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"daitenshionyan":84}},{"path":"src/main/java/aqua/manager/TaskChangeReport.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.manager;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import aqua.usertask.UserTask;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":" * A data class to store information about a size change in","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":" * {@code TaskManager}.","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"public class TaskChangeReport {","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    /** Task that changed. */","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    public final UserTask task;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    /** New size of {@code TaskManager}. */","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    public final int numTask;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code TaskChangeReport}.","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * @param task - the task that changed.","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     * @param numTask - the number of tasks.","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    public TaskChangeReport(UserTask task, int numTask) {","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        this.numTask \u003d numTask;","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"daitenshionyan":27}},{"path":"src/main/java/aqua/manager/TaskFilterReport.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.manager;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import aqua.usertask.UserTask;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"/** A data class to stored filter data from filter operations in {@code TaskManager} */","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"public class TaskFilterReport {","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"    /** The filtered list of tasks. */","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    public final List\u003cUserTask\u003e filtered;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    /** Tasks that cannot be filtered correctly. */","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    public final List\u003cUserTask\u003e unknown;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code TaskFilterReport} from the given parameters.","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     * @param filtered - list of filtered tasks","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * @param unknow - list of tasks that cannot be filtered.","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public TaskFilterReport(List\u003cUserTask\u003e filtered, List\u003cUserTask\u003e unknown) {","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        this.filtered \u003d List.copyOf(filtered);","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        this.unknown \u003d List.copyOf(unknown);","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"daitenshionyan":26}},{"path":"src/main/java/aqua/manager/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.manager;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import aqua.storage.Reloadable;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import aqua.usertask.UserTask;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import aqua.util.DateUtils;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import aqua.util.FileUtils;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"/** Manager of tasks. */","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"public class TaskManager implements Reloadable {","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final String SAVE_DIRECTORY \u003d \"SAVE_DATA\";","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private static final String SAVE_FILE \u003d \"Goshujin-sama you promised to never touch this.txt\";","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private final ArrayList\u003cUserTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * Adds the specified task.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * @param task - the task to add.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * @return the task change report.","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    public TaskChangeReport add(UserTask task) {","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        return new TaskChangeReport(task, tasks.size());","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"     * Marks task in the at the given index as specified.","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     * @param taskNum - the index of the task to mark.","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     * @param isComplete - {@code true} to mark the task as complete and","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code false} as incomplete.","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     * @return the modified task.","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IndexOutOfBoundsException if taskNum is out of range.","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    public UserTask mark(int taskNum, boolean isComplete) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        tasks.set(taskNum, tasks.get(taskNum).mark(isComplete));","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        return tasks.get(taskNum);","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"     * Deletes the task at the given index.","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"     * @param taskNum - the index of the task to delete.","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"     * @return the task change report.","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IndexOutOfBoundsException if taskNum is out of range.","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    public TaskChangeReport delete(int taskNum) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        UserTask task \u003d tasks.remove(taskNum);","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        return new TaskChangeReport(task, tasks.size());","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"     * Filters tasks that are within the time range specified. Tasks that do","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"     * not have a start date are classified under unknown.","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"     * @param start - the starting time of tasks to include.","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"     * @param end - the ending time of the tasks to include.","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"     * @return a {@code TaskFilterReport} containing data of the tasks","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"     *      filtered.","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    public TaskFilterReport filterWithin(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cUserTask\u003e filtered \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cUserTask\u003e unknown \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        for (UserTask task : tasks) {","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"            if (!task.getEnd().isPresent()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"                unknown.add(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"                continue;","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"            LocalDateTime taskEnd \u003d task.getEnd().get();","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"            LocalDateTime taskStart \u003d taskEnd;","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"            if (task.getStart().isPresent()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"                taskStart \u003d task.getStart().get();","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"            if (DateUtils.isIntersecting(taskStart, taskEnd, start, end)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"                filtered.add(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        return new TaskFilterReport(filtered, unknown);","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"     * Returns a filtered LinkedHashMap of task number - task pair of the tasks","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"     * with names matching the specified patteren. Task number in the returned","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"     * hash map is 1 based and the iteration order is sorted according to the","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"     * task\u0027s task number within this task manager.","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"     * @param pattern - the String character sequence of the task\u0027s name to","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"     *      include.","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"     * @return a LinkedHashMap of task number - task pair containing the","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"     *      filtered tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"    public LinkedHashMap\u003cInteger, UserTask\u003e filter(String pattern) {","lastModifiedDate":"2023-02-06"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"        LinkedHashMap\u003cInteger, UserTask\u003e taskMap \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2023-02-06"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"        Stream.iterate(0, i -\u003e i + 1)","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"                .limit(size())","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"                .filter(i -\u003e tasks.get(i).getName().contains(pattern))","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"                .forEach(i -\u003e taskMap.put(i + 1, tasks.get(i)));","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"        return taskMap;","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the number of tasks stored.","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"     * @return the number of tasks stored.","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"    public int size() {","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"     * Saves the state of this task manager to hard disk.","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"    public void saveToFile() throws IOException {","lastModifiedDate":"2023-01-21"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"        Path dirPath \u003d Paths.get(SAVE_DIRECTORY);","lastModifiedDate":"2023-01-21"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"        if (!FileUtils.mkdirs(dirPath)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"            throw new IOException(\"Failed to create save directory\");","lastModifiedDate":"2023-01-21"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"        FileUtils.writeFile(dirPath.resolve(SAVE_FILE), getReloadString());","lastModifiedDate":"2023-01-21"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the path of the file where the state is saved.","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"     * @return the path of the file where the state is saved.","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"    public Path getSavePath() {","lastModifiedDate":"2023-01-21"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"        return Paths.get(SAVE_DIRECTORY, SAVE_FILE);","lastModifiedDate":"2023-01-21"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"    public String getReloadString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-01-21"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"        for (UserTask task : tasks) {","lastModifiedDate":"2023-02-06"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"            builder.append(task.getReloadString());","lastModifiedDate":"2023-01-21"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"            builder.append(\"\\n\");","lastModifiedDate":"2023-01-21"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"        return builder.toString().strip();","lastModifiedDate":"2023-01-21"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-01-17"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"            builder.append(String.format(\"%d. %s\\n\",","lastModifiedDate":"2023-01-24"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"                    i + 1,","lastModifiedDate":"2023-01-17"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"                    tasks.get(i).toString()));","lastModifiedDate":"2023-01-24"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"        return builder.toString().strip();","lastModifiedDate":"2023-01-23"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"daitenshionyan":170}},{"path":"src/main/java/aqua/storage/Loadable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.LoadException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"/** Represents an object whose state can be loaded. */","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"public interface Loadable {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"     * Loads the the state of this object from a data stored in hard disk.","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"     * @throws LoadException if an error occured while loading.","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    public void load() throws LoadException;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"daitenshionyan":14}},{"path":"src/main/java/aqua/storage/Reloadable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.storage;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":" * Represents an object whose state can be reloaded by executing a command","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":" * String.","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"public interface Reloadable {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the a command that will reload the state of this object when","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"     * executed.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"     * @return the command String to reload the state of the object.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    public String getReloadString();","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":15}},{"path":"src/main/java/aqua/usertask/UserDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.usertask;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.util.DateUtils;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"/** A {@code UserTask} to represent a deadline. */","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"public class UserDeadline extends UserTask {","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    /** Tag of {@code dueTime} parameter when parsing. */","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    public static final String TAG_DUE_TIME \u003d \"by\";","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    private final boolean isComplete;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private final LocalDateTime dueTime;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code UserDeadline} from the given parameters while","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * setting the task completion to {@code false}.","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - the name of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * @param dueTime - the time the task is due.","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public UserDeadline(String name, LocalDateTime dueTime) {","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        this(name, false, dueTime);","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code UserDeadline} from the given parameters.","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - the name of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     * @param isComplete - if the task is completed.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     * @param dueTime - the time the task is due.","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    public UserDeadline(String name, boolean isComplete, LocalDateTime dueTime) {","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        super(name);","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        this.dueTime \u003d dueTime;","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    public UserDeadline mark(boolean isComplete) {","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        return new UserDeadline(getName(), isComplete, dueTime);","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    public boolean isComplete() {","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        return isComplete;","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    public Optional\u003cLocalDateTime\u003e getEnd() {","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.ofNullable(dueTime);","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    public String getReloadString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        return String.format(\"deadline %s /%s %s /%s %s\",","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"                getName(),","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"                TAG_DUE_TIME, dueTime,","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"                TAG_IS_COMPLETE, isComplete);","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"                super.toString(),","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"                DateUtils.formatNice(dueTime));","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":76}},{"path":"src/main/java/aqua/usertask/UserEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.usertask;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.util.DateUtils;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"/** A {@code UserTask} to represent an event */","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"public class UserEvent extends UserTask {","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    /** Tag of {@code startTime} argument when parsing. */","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    public static final String TAG_START_TIME \u003d \"from\";","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    /** Tag of {@code endTime} argument when parsing. */","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    public static final String TAG_END_TIME \u003d \"to\";","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    private final boolean isComplete;","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code UserEvent} from the given parameters while setting","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * the event\u0027s completion status to {@code false}.","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - the name of the event.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     * @param startTime - the time the event starts.","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * @param endTime - the time the event ends.","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public UserEvent(String name, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        this(name, false, startTime, endTime);","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code UserEvent} from the given parameters.","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - the name of the event.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"     * @param isCompelte - if the event is completed.","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     * @param startTime - the time the event starts.","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     * @param endTime - the time the event ends.","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    public UserEvent(String name, boolean isComplete, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        super(name);","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    public UserEvent mark(boolean isComplete) {","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        return new UserEvent(getName(), isComplete, startTime, endTime);","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    public boolean isComplete() {","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        return isComplete;","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    public Optional\u003cLocalDateTime\u003e getStart() {","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.ofNullable(startTime);","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    public Optional\u003cLocalDateTime\u003e getEnd() {","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.ofNullable(endTime);","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    public String getReloadString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        return String.format(\"event %s /%s %s /%s %s /%s %s\",","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"                getName(),","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"                TAG_START_TIME, startTime,","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"                TAG_END_TIME, endTime,","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"                TAG_IS_COMPLETE, isComplete);","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"                super.toString(),","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"                DateUtils.formatNice(startTime),","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"                DateUtils.formatNice(endTime));","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":90}},{"path":"src/main/java/aqua/usertask/UserTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.usertask;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import aqua.storage.Reloadable;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"/** Represents a user created task. */","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"public abstract class UserTask implements Reloadable {","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    /** Tag of {@code isCompleted} argument when parsing. */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    public static final String TAG_IS_COMPLETE \u003d \"completed\";","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    private final String name;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code UserTask} with the specified name.","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - the name of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public UserTask(String name) {","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code UserTask} that is a copy of the given task.","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * @param task - the reference task.","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public UserTask(UserTask task) {","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        this(task.name);","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     * Sets the task\u0027s completion status as specified.","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     * @param isComplete - if the task is completed.","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * @return a task of this task with its completion status set as specified.","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    public abstract UserTask mark(boolean isComplete);","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     * Returns if the task is completed.","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"     * @return {@code true} if the task is completed and {@code false}","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"     *      otherwise.","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    public abstract boolean isComplete();","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the name of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"     * @return the name of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"    public String getName() {","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        return name;","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the starting time of the task wrapped in an {@code Optional}. If","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"     * the task has no starting time, {@code Optional.empty} is returned.","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"     * @return the starting time of the task wrapped in an {@code Optional}.","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    public Optional\u003cLocalDateTime\u003e getStart() {","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.empty();","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the ending time of the task wrapped in an {@code Optional}. If","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"     * the task has no ending time, {@code Optional.empty} is returned.","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"     * @return the ending time of the task wrapped in an {@code Optional}.","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    public Optional\u003cLocalDateTime\u003e getEnd() {","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.empty();","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"        return String.format(\"%s %s\",","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"                isComplete() ? \"[X]\" : \"[ ]\",","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"                name);","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":93}},{"path":"src/main/java/aqua/usertask/UserTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.usertask;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"/** A {@code UserTask} to represent a todo. */","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"public class UserTodo extends UserTask {","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"    private final boolean isComplete;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code UserTask} with the given name while setting the","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"     * task completion status to {@code false}.","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - the name of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    public UserTodo(String name) {","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"        this(name, false);","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code UserTask} with the given parameters.","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - the name of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * @param isCompleted - if the task is completed.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public UserTodo(String name, boolean isComplete) {","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        super(name);","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public UserTodo mark(boolean isComplete) {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        return new UserTodo(getName(), isComplete);","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    public boolean isComplete() {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        return isComplete;","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    public String getReloadString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        return String.format(\"todo %s /%s %s\",","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"                getName(),","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"                TAG_IS_COMPLETE, isComplete);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daitenshionyan":56}},{"path":"src/main/java/aqua/util/DateUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.util;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"/** Utility class for dates and time. */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"public class DateUtils {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    public static final DayOfWeek DEFAULT_START_OF_WEEK \u003d DayOfWeek.SUNDAY;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     * Parses String of the following format to a LocalDateTime.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * \u003cul\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     * \u003cli\u003e {@code yyyy-MM-ddThh:mm}","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * \u003cli\u003e {@code yyyy-MM-dd hhmm}","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     * \u003cli\u003e {@code yyyy-MM-dd} (assume time to be 0000)","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * @param dateString - the date String to parse.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * @return the parsed LocalDateTime.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     * @throws SyntaxException if the given String cannot be parsed.","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    public static LocalDateTime parse(String dateString) throws SyntaxException {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"            // yyyy-MM-ddThh:mm default format","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            return LocalDateTime.parse(dateString);","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        } catch (DateTimeParseException parseEx) {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"                if (dateString.matches(\"\\\\d{4}-\\\\d{1,2}-\\\\d{1,2} \\\\d{4}\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"                    // yyyy-MM-dd hhmm format","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"                    return LocalDateTime.parse(","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"                            dateString,","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"                            DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"                } else if (dateString.matches(\"\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"                    // yyyy-MM-dd format","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"                    return LocalDateTime.parse(","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"                        dateString + \" 0000\",","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"                        DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\")","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"                    );","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"                // random numbers eg. 0000-00-00","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"                throw new SyntaxException(","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"                    String.format(\"I do not understand when this is [%s]\", dateString)","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"                );","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        throw new SyntaxException(","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"            String.format(\"I do not understand when this is [%s]\", dateString)","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        );","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"     * Formats the date to a the format {@code d LLL yyyy HHmm}.","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"     * @param time - the time to format.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"     * @return the formatted date.","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    public static String formatNice(LocalDateTime time) {","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"d LLL yyyy HHmm\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"     * Returns if two time ranges are intersecting.","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"     * @param s1 - start time of the first time range.","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"     * @param e1 - end time of the first time range.","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"     * @param s2 - start time of the second time range.","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"     * @param e2 - end time of the second time range.","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"     * @return {@code true} if the given time ranges are intersecting and","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code false} otherwise.","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"    public static boolean isIntersecting(","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"                LocalDateTime s1, LocalDateTime e1, LocalDateTime s2, LocalDateTime e2) {","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        boolean isStartEndIntersecting \u003d s1.isEqual(s2) || e1.isEqual(e2);","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        return !(s1.isEqual(e2) || e1.isEqual(s2) || s1.isAfter(e2) || e1.isBefore(s2)) || isStartEndIntersecting;","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"     * Returns two time ranges are intersecting. The time ranges are considered","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"     * to be intersecting if they overlap each other or if the start or end of","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"     * one time range is close enough to the other as specified by the","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"     * {@code threshold} parameter.","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"     * @param s1 - start time of the first time range.","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"     * @param e1 - end time of the first time range.","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"     * @param s2 - start time of the second time range.","lastModifiedDate":"2023-02-05"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"     * @param e2 - end time of the second time range.","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"     * @param threshold - threshold in minutes of the difference in start and","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"     *      end times of one range to the other respectively for them to be","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"     *      considered intersecting.","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"     * @return {@code true} if the given time ranges are intersecting and","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code false} otherwise.","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"    public static boolean isIntersecting(LocalDateTime s1, LocalDateTime e1, LocalDateTime s2, LocalDateTime e2,","lastModifiedDate":"2023-02-05"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"                double threshold) {","lastModifiedDate":"2023-02-05"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"        boolean isStartIntersecting \u003d Math.abs(s1.until(s2, ChronoUnit.MINUTES)) \u003c\u003d threshold;","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"        boolean isEndIntersecting \u003d Math.abs(e1.until(e2, ChronoUnit.MINUTES)) \u003c\u003d threshold;","lastModifiedDate":"2023-02-05"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"        boolean isStartEndIntersecting \u003d isStartIntersecting || isEndIntersecting;","lastModifiedDate":"2023-02-05"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"        return !(s1.isEqual(e2) || e1.isEqual(s2) || s1.isAfter(e2) || e1.isBefore(s2)) || isStartEndIntersecting;","lastModifiedDate":"2023-02-10"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the time that is the start of the week of the given time. The","lastModifiedDate":"2023-02-05"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"     * start of the week is considered as {@link #DEFAULT_START_OF_WEEK}.","lastModifiedDate":"2023-02-05"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"     * @param time - a time.","lastModifiedDate":"2023-02-05"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"     * @return the time that is the start of the week of the given time.","lastModifiedDate":"2023-02-05"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"    public static LocalDateTime toStartOfWeek(LocalDateTime time) {","lastModifiedDate":"2023-02-10"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"        return toStartOfWeek(time, DEFAULT_START_OF_WEEK);","lastModifiedDate":"2023-02-04"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the time that is the start of the week of the given time.","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"     * @param time - a time.","lastModifiedDate":"2023-02-05"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"     * @param weekStart - the {@code DayOfWeek} that is the start of the week.","lastModifiedDate":"2023-02-05"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"     * @return the time that is the start of the week of the given time.","lastModifiedDate":"2023-02-05"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"    public static LocalDateTime toStartOfWeek(LocalDateTime time, DayOfWeek weekStart) {","lastModifiedDate":"2023-02-04"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"        int offset \u003d time.getDayOfWeek().getValue() - weekStart.getValue();","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"        if (offset \u003c 0) {","lastModifiedDate":"2023-02-04"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"            offset +\u003d DayOfWeek.SUNDAY.getValue();","lastModifiedDate":"2023-02-04"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"        return toStartOfDay(time.minus(offset, ChronoUnit.DAYS));","lastModifiedDate":"2023-02-04"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the time that is the start of the day of the given time.","lastModifiedDate":"2023-02-05"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"     * @param time - a time.","lastModifiedDate":"2023-02-05"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"     * @return the time that is the start of the day of the given time.","lastModifiedDate":"2023-02-05"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"    public static LocalDateTime toStartOfDay(LocalDateTime time) {","lastModifiedDate":"2023-02-04"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"        return LocalDateTime.of(","lastModifiedDate":"2023-02-04"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"                time.getYear(),","lastModifiedDate":"2023-02-04"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"                time.getMonthValue(),","lastModifiedDate":"2023-02-04"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"                time.getDayOfMonth(),","lastModifiedDate":"2023-02-04"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"                0, 0);","lastModifiedDate":"2023-02-04"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"daitenshionyan":153}},{"path":"src/main/java/aqua/util/FileUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.util;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.io.BufferedInputStream;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.io.BufferedOutputStream;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import java.io.OutputStream;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import java.net.URL;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"/** A utility class for file reading and writing functions. */","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"public class FileUtils {","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    // magic number adapted from https://stackoverflow.com/a/35544601","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private static final int READ_LIMIT \u003d 2097152;","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the contents in the file in the specified path. Contents are","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * decoded in the default charset.","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * @param path - the path of the file to read","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * @return the contents in the file in the specified path","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    public static String readFile(Path path) throws IOException {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        try (InputStream inputStream \u003d getInputStream(path)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            byte[] arr \u003d new byte[READ_LIMIT];","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"            while (inputStream.read(arr) \u003e 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"                builder.append(new String(arr));","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        return builder.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the input stream of the file in the given path.","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     * @return the input stream of the file in the given path.","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    public static BufferedInputStream getInputStream(Path path) throws IOException {","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        return new BufferedInputStream(new FileInputStream(path.toFile()));","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"     * Writes the given content to the file in the specified path. Content is","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"     * encoded in the default charset.","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"     * @param path - the path of the file to write to","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"     * @param content - the contents to write","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    public static void writeFile(Path path, String content) throws IOException {","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        try (OutputStream outStream \u003d new BufferedOutputStream(new FileOutputStream(path.toFile()))) {","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"            outStream.write(content.getBytes());","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"     * Creates the directory of the specified path including any parent","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"     * directories.","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"     * @param path - the path of the directory to create","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"     * @return {@code true} if the directory exists after execution and","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code false} otherwise","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    public static boolean mkdirs(Path path) {","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        if (path.toFile().exists()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"            return true;","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"        return path.toFile().mkdirs();","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"     * Converts the given String path to a {@code Path}.","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"     * @param path - the String path to convert","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"     * @return the {@code Path} object of the specified String path","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    public static Path getFilePath(String path) {","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        return Paths.get(path);","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the URL of the specified String path of the file in the resource","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"     * folder.","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"     * @param pathString - the String path to the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"     * @return the URL of the specified String path of the file in the resource","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"     *      folder.","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"     * @throws FileNotFoundException if the file cannot be found.","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if {@code pathString} is {@code null}.","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"    public static URL getResourceUrl(String pathString) throws FileNotFoundException {","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.ofNullable(FileUtils.class.getResource(pathString))","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"                .orElseThrow(() -\u003e new FileNotFoundException(","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"                        String.format(\"Resource file %s not found\", pathString)));","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"daitenshionyan":111}},{"path":"src/main/java/aqua/util/Kaomoji.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.util;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"/** Data class for kaomoji Strings */","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"public class Kaomoji {","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"    /** Crying kaomoji. */","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CRY \u003d \"(\\u2565\\ufe4f\\u2565)\";","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"    /** Passing heart kaomoji. */","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"    public static final String HEART_PASS \u003d \"(\\u22c8\\u25cd\\uff1e\\u25e1\\uff1c\\u22c8)\\u3002\\u2727\";","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"    /** Tossing cutely kaomoji. */","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CUTE_TOSS \u003d \"(*\\u309d\\u03c9\\uff65*)\\uff89\";","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    /** Thinking kaomoji, */","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    public static final String THINKING \u003d \"( \\uff65-\\uff65)\";","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    /** Top part of wave. */","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    public static final String WAVE_UP \u003d \"/\\uff0f\";","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    /** Bottom part of wave. */","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public static final String WAVE_DOWN \u003d \"\\\\\\uff3c\";","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    /** A white star. */","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    public static final String STAR_WHITE \u003d \"\\u2606\";","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    /** Cheering in excitement kaomoji. */","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CHEER_EXCITED \u003d \"\\u0669 (\\u02ca\\u03c9\\u02cb *) \\u0648\";","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    /** Cheering in encouragement kaomoji. */","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CHEER_ENCOURAGE \u003d \"( \\u0e07*`\\ua4b3\\u00b4*)\\u0e27\";","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    /** Placing something down kaomoji. */","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public static final String PLACING_DOWN \u003d \"(  \u0027\\u1d55\u0027 )\";","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    /** Blushing kaomoji. */","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public static final String BLUSH \u003d \"( \\u02f6\u0027\\u1d55\u0027\\u02f6)\";","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    /** Oh no reaction kaomoji. */","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public static final String OH_NO \u003d \"(\\\"\\u2022\\ufe4f\\u2022)\";","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    /** Smug kaomoji. */","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    public static final String SMUG \u003d \"(  \\u2022\\u0340\\u058a\\u2022\\u0341 )\";","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"daitenshionyan":32}},{"path":"src/main/java/aqua/util/Period.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.util;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"/** Represents a time range. */","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"public abstract class Period {","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"    public abstract LocalDateTime getStart();","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"    public abstract LocalDateTime getEnd();","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    public long duration() {","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"        return getStart().until(getEnd(), ChronoUnit.MICROS);","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"daitenshionyan":16}},{"path":"src/main/resources/graphic/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"\u003cVBox maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" spacing\u003d\"5.0\" stylesheets\u003d\"@style.css\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"      \u003cScrollPane fx:id\u003d\"textScrollPane\" hbarPolicy\u003d\"NEVER\" minHeight\u003d\"360.0\" minWidth\u003d\"590.0\" styleClass\u003d\"text-scroll-pane\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"            \u003cVBox fx:id\u003d\"textDisplayArea\" spacing\u003d\"5.0\" styleClass\u003d\"text-display-area\"\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/content\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5.0\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"            \u003cTextField fx:id\u003d\"inputField\" maxWidth\u003d\"1.7976931348623157E308\" onKeyReleased\u003d\"#handleKeyRelease\" promptText\u003d\"Message\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"            \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#handleSend\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"      \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"daitenshionyan":30}},{"path":"src/main/resources/graphic/SpeechBubbleLeft.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"\u003cHBox alignment\u003d\"BOTTOM_LEFT\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"      \u003cImageView fx:id\u003d\"iconView\" fitHeight\u003d\"40.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"         \u003cimage\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"            \u003cImage url\u003d\"@../icon/aqua.jpg\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/image\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"      \u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" styleClass\u003d\"speech-bubble\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"            \u003cPane layoutX\u003d\"7.0\" layoutY\u003d\"200.0\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"16.0\" prefWidth\u003d\"12.0\" styleClass\u003d\"speech-bubble-pointer-left\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"            \u003cAnchorPane layoutX\u003d\"16.0\" layoutY\u003d\"28.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"600.0\" minHeight\u003d\"40.0\" minWidth\u003d\"30.0\" styleClass\u003d\"main-speech-bubble-left\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"12.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cVBox fx:id\u003d\"bubbleDisplayArea\" alignment\u003d\"CENTER\" layoutX\u003d\"242.0\" layoutY\u003d\"100.0\" maxWidth\u003d\"280.0\" minHeight\u003d\"20.0\" minWidth\u003d\"20.0\" AnchorPane.bottomAnchor\u003d\"10.0\" AnchorPane.leftAnchor\u003d\"10.0\" AnchorPane.rightAnchor\u003d\"10.0\" AnchorPane.topAnchor\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"            \u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"daitenshionyan":29}},{"path":"src/main/resources/graphic/SpeechBubbleRight.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"\u003cHBox alignment\u003d\"BOTTOM_RIGHT\" spacing\u003d\"5.0\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"      \u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" styleClass\u003d\"speech-bubble\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"            \u003cPane layoutX\u003d\"7.0\" layoutY\u003d\"200.0\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"16.0\" prefWidth\u003d\"12.0\" styleClass\u003d\"speech-bubble-pointer-right\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"            \u003cAnchorPane layoutX\u003d\"16.0\" layoutY\u003d\"28.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"600.0\" minHeight\u003d\"40.0\" minWidth\u003d\"30.0\" styleClass\u003d\"main-speech-bubble-right\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"12.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cVBox fx:id\u003d\"bubbleDisplayArea\" alignment\u003d\"CENTER\" layoutX\u003d\"242.0\" layoutY\u003d\"100.0\" maxWidth\u003d\"280.0\" minHeight\u003d\"20.0\" minWidth\u003d\"20.0\" AnchorPane.bottomAnchor\u003d\"10.0\" AnchorPane.leftAnchor\u003d\"10.0\" AnchorPane.rightAnchor\u003d\"10.0\" AnchorPane.topAnchor\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"            \u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"      \u003cImageView fx:id\u003d\"iconView\" fitHeight\u003d\"40.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"         \u003cimage\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"            \u003cImage url\u003d\"@../icon/neko.jpg\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/image\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"daitenshionyan":29}},{"path":"src/main/resources/graphic/TaskView.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"\u003cScrollPane maxHeight\u003d\"400.0\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"1150.0\" vbarPolicy\u003d\"ALWAYS\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"   \u003ccontent\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"      \u003cVBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" spacing\u003d\"5.0\" styleClass\u003d\"task-view\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"            \u003cVBox VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cLabel styleClass\u003d\"title\" text\u003d\"Schedule\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cVBox fx:id\u003d\"scheduleDisplayArea\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"            \u003cVBox VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cLabel styleClass\u003d\"title\" text\u003d\"Todo\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cVBox fx:id\u003d\"todoDisplayArea\" fillWidth\u003d\"false\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"25.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/content\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"daitenshionyan":30}},{"path":"src/test/java/aqua/logic/parser/ArgumentParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.logic.parser;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import aqua.logic.ArgumentMap;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class ArgumentParserTest {","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private static ArgumentMap expected;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    @BeforeAll","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    public static void initialiseExpected() {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"        HashMap\u003cString, String\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"        map.put(ArgumentMap.TAG_MAIN_INPUT, \"1234\");","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        map.put(\"tag1\", \"1234\");","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        expected \u003d new ArgumentMap(map);","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    public void parse_validInput_argumentParsed() throws SyntaxException {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentParser parser \u003d new ArgumentParser();","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        String input \u003d \"1234 / tag1 1234\";","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMap actual \u003d parser.parse(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(expected.getMainInput().get(), actual.getMainInput().get());","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(expected.get(\"tag1\").get(), actual.get(\"tag1\").get());","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    public void parse_invalidInput_exceptionThrown() {","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentParser parser \u003d new ArgumentParser();","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        String input \u003d \"1234 /\";","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"            parser.parse(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        } catch (SyntaxException synEx) {","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        fail(\"Exception not thrown\");","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"daitenshionyan":48}},{"path":"src/test/java/aqua/manager/TaskManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.manager;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import aqua.usertask.UserTask;","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"public class TaskManagerTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    public void addTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        TaskManager manager \u003d new TaskManager();","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        manager.add(new MarkedTask());","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"            \"1. +\",","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"            manager.toString()","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        );","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public void markTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        TaskManager manager \u003d new TaskManager();","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        manager.add(new MarkedTask());","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        UserTask task \u003d manager.mark(0, false);","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(\"-\", task.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            \"1. -\",","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"            manager.toString()","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        );","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    public void deleteTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        TaskManager manager \u003d new TaskManager();","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        manager.add(new MarkedTask());","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        UserTask task \u003d manager.delete(0).task;","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(\"+\", task.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"            \"\",","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"            manager.toString()","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        );","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"    public void saveToFileTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        TaskManager manager \u003d new TaskManager();","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        manager.add(new MarkedTask());","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        Path path \u003d manager.getSavePath();","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        // delete previous save file","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        if (path.toFile().exists()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"            if (!path.toFile().delete()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"                fail(\"Failed to delete previously saved file\");","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        // save","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"            manager.saveToFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IOException ioEx) {","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"            fail(ioEx);","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        // check contents","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        try (InputStream inStream \u003d new FileInputStream(path.toFile())) {","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"            String actual \u003d new String(inStream.readAllBytes());","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"            String expected \u003d \"+\";","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"        } catch (FileNotFoundException fnfEx) {","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"            fail(\"Save file not created\", fnfEx);","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IOException ioEx) {","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"            fail(ioEx);","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    public void filter_zeroMatch_emptyMap() {","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"        TaskManager manager \u003d new TaskManager();","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        manager.add(new MarkedTask());","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"        manager.add(new MarkedTask());","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"        manager.add(new UnMarkedTask());","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"        manager.add(new UnMarkedTask());","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        manager.add(new UnMarkedTask());","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"        manager.add(new MarkedTask());","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        manager.add(new MarkedTask());","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"        manager.add(new UnMarkedTask());","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"        LinkedHashMap\u003cInteger, UserTask\u003e map \u003d manager.filter(\"44.5\");","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(map.isEmpty());","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"    public void filter_someMatch_filteredMap() {","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"        TaskManager manager \u003d new TaskManager();","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"        /* 1 */ manager.add(new MarkedTask());","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"        /* 2 */ manager.add(new MarkedTask());","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"        /* 3 */ manager.add(new UnMarkedTask());","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"        /* 4 */ manager.add(new UnMarkedTask());","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"        /* 5 */ manager.add(new UnMarkedTask());","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"        /* 6 */ manager.add(new MarkedTask());","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"        /* 7 */ manager.add(new MarkedTask());","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"        /* 8 */ manager.add(new UnMarkedTask());","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"        LinkedHashMap\u003cInteger, UserTask\u003e map \u003d manager.filter(\"+\");","lastModifiedDate":"2023-02-06"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cInteger\u003e numList \u003d List.of(1, 2, 6, 7);","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(4, map.size());","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"        // check for order as well","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"        for (Map.Entry\u003cInteger, UserTask\u003e entry : map.entrySet()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(numList.get(i), entry.getKey());","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(\"+\", entry.getValue().getName());","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"            i++;","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"    private static class MarkedTask extends UserTask {","lastModifiedDate":"2023-02-06"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"        MarkedTask() {","lastModifiedDate":"2023-01-23"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"            super(\"+\");","lastModifiedDate":"2023-01-23"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"        public UserTask mark(boolean isComplete) {","lastModifiedDate":"2023-02-06"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"            if (isComplete) {","lastModifiedDate":"2023-01-23"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"                return new MarkedTask();","lastModifiedDate":"2023-01-23"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"            return new UnMarkedTask();","lastModifiedDate":"2023-01-23"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"        public boolean isComplete() {","lastModifiedDate":"2023-01-23"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"            return true;","lastModifiedDate":"2023-01-23"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"        public String getReloadString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"            return \"+\";","lastModifiedDate":"2023-01-23"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"        public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"            return \"+\";","lastModifiedDate":"2023-01-23"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"    private static class UnMarkedTask extends UserTask {","lastModifiedDate":"2023-02-06"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"        UnMarkedTask() {","lastModifiedDate":"2023-01-23"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"            super(\"-\");","lastModifiedDate":"2023-01-23"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"        public UserTask mark(boolean isComplete) {","lastModifiedDate":"2023-02-06"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"            if (isComplete) {","lastModifiedDate":"2023-01-23"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"                return new MarkedTask();","lastModifiedDate":"2023-01-23"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"            return new UnMarkedTask();","lastModifiedDate":"2023-01-23"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"        public boolean isComplete() {","lastModifiedDate":"2023-01-23"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"            return false;","lastModifiedDate":"2023-01-23"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"        public String getReloadString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"            return \"-\";","lastModifiedDate":"2023-01-23"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"        public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":198,"author":{"gitId":"daitenshionyan"},"content":"            return \"-\";","lastModifiedDate":"2023-01-23"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"daitenshionyan":201}},{"path":"src/test/java/aqua/util/DateUtilsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package aqua.util;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import aqua.exception.SyntaxException;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class DateUtilsTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    public void parse_defaultFormat_goodDate() {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"            LocalDateTime actual \u003d DateUtils.parse(\"2023-03-05T04:55\");","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"            LocalDateTime expected \u003d LocalDateTime.parse(\"2023-03-05T04:55\");","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"        } catch (SyntaxException syntaxEx) {","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"            fail(syntaxEx);","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    public void parse_simplifiedFormat_goodDate() {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"            LocalDateTime actual \u003d DateUtils.parse(\"2023-03-05 0455\");","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            LocalDateTime expected \u003d LocalDateTime.parse(\"2023-03-05T04:55\");","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        } catch (SyntaxException syntaxEx) {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            fail(syntaxEx);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    public void parse_simplifiedFormatNoTime_goodDate() {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"            LocalDateTime actual \u003d DateUtils.parse(\"2023-03-05\");","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            LocalDateTime expected \u003d LocalDateTime.parse(\"2023-03-05T00:00\");","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        } catch (SyntaxException syntaxEx) {","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"            fail(syntaxEx);","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    public void parse_invalidFormat_exceptionThrown() {","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"            DateUtils.parse(\"random day\");","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"            fail(\"No exception thrown\");","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        } catch (SyntaxException syntaxEx) {","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(\"I do not understand when this is [random day]\", syntaxEx.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    public void parse_invalidNumbers_exceptionThrown() {","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"            DateUtils.parse(\"0000-00-00 0000\");","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"            fail(\"No exception thrown\");","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        } catch (SyntaxException syntaxEx) {","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(\"I do not understand when this is [0000-00-00 0000]\", syntaxEx.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    public void isIntersectingNormal_sameTime_true() {","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s1 \u003d LocalDateTime.of(2023, 3, 5, 4, 55);","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e1 \u003d s1.plus(1, ChronoUnit.HOURS);","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s2 \u003d s1;","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e2 \u003d e1;","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(true, DateUtils.isIntersecting(s1, e1, s2, e2));","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"    public void isIntersectingNormal_portionBack_true() {","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s1 \u003d LocalDateTime.of(2023, 3, 5, 4, 55);","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e1 \u003d s1.plus(1, ChronoUnit.HOURS);","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s2 \u003d s1.plus(30, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e2 \u003d e1.plus(30, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(true, DateUtils.isIntersecting(s1, e1, s2, e2));","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    public void isIntersectingNormal_portionFront_true() {","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s1 \u003d LocalDateTime.of(2023, 3, 5, 4, 55);","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e1 \u003d s1.plus(1, ChronoUnit.HOURS);","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s2 \u003d s1.minus(30, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e2 \u003d e1.minus(30, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(true, DateUtils.isIntersecting(s1, e1, s2, e2));","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"    public void isIntersectingNormal_cover_true() {","lastModifiedDate":"2023-02-10"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s1 \u003d LocalDateTime.of(2023, 3, 5, 4, 55);","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e1 \u003d s1.plus(1, ChronoUnit.HOURS);","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s2 \u003d s1.minus(30, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e2 \u003d e1.plus(30, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(true, DateUtils.isIntersecting(s1, e1, s2, e2));","lastModifiedDate":"2023-02-10"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"    void isIntersectingNormal_separate_false() {","lastModifiedDate":"2023-02-10"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s1 \u003d LocalDateTime.of(2023, 3, 5, 4, 55);","lastModifiedDate":"2023-02-10"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e1 \u003d s1.plus(1, ChronoUnit.HOURS);","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s2 \u003d s1.plus(120, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e2 \u003d e1.plus(120, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(false, DateUtils.isIntersecting(s1, e1, s2, e2));","lastModifiedDate":"2023-02-10"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"    void isIntersectingNormal_backToBack_false() {","lastModifiedDate":"2023-02-10"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s1 \u003d LocalDateTime.of(2023, 3, 5, 4, 55);","lastModifiedDate":"2023-02-10"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e1 \u003d s1.plus(1, ChronoUnit.HOURS);","lastModifiedDate":"2023-02-10"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s2 \u003d e1;","lastModifiedDate":"2023-02-10"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e2 \u003d e1.plus(120, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(false, DateUtils.isIntersecting(s1, e1, s2, e2));","lastModifiedDate":"2023-02-10"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"    public void isIntersectingThreshold_sameTime_true() {","lastModifiedDate":"2023-02-10"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"        double threshold \u003d 30;","lastModifiedDate":"2023-02-10"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s1 \u003d LocalDateTime.of(2023, 3, 5, 4, 55);","lastModifiedDate":"2023-02-10"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e1 \u003d s1.plus(1, ChronoUnit.HOURS);","lastModifiedDate":"2023-02-10"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s2 \u003d s1;","lastModifiedDate":"2023-02-10"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e2 \u003d e1;","lastModifiedDate":"2023-02-10"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(true, DateUtils.isIntersecting(s1, e1, s2, e2, threshold));","lastModifiedDate":"2023-02-10"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"    public void isIntersectingThreshold_portionBack_true() {","lastModifiedDate":"2023-02-10"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"        double threshold \u003d 30;","lastModifiedDate":"2023-02-10"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s1 \u003d LocalDateTime.of(2023, 3, 5, 4, 55);","lastModifiedDate":"2023-02-10"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e1 \u003d s1.plus(1, ChronoUnit.HOURS);","lastModifiedDate":"2023-02-10"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s2 \u003d s1.plus(30, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e2 \u003d e1.plus(30, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(true, DateUtils.isIntersecting(s1, e1, s2, e2, threshold));","lastModifiedDate":"2023-02-10"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"    public void isIntersectingThreshold_portionFront_true() {","lastModifiedDate":"2023-02-10"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"        double threshold \u003d 30;","lastModifiedDate":"2023-02-10"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s1 \u003d LocalDateTime.of(2023, 3, 5, 4, 55);","lastModifiedDate":"2023-02-10"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e1 \u003d s1.plus(1, ChronoUnit.HOURS);","lastModifiedDate":"2023-02-10"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s2 \u003d s1.minus(30, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e2 \u003d e1.minus(30, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(true, DateUtils.isIntersecting(s1, e1, s2, e2, threshold));","lastModifiedDate":"2023-02-10"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"    public void isIntersectingThreshold_cover_true() {","lastModifiedDate":"2023-02-10"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"        double threshold \u003d 30;","lastModifiedDate":"2023-02-10"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s1 \u003d LocalDateTime.of(2023, 3, 5, 4, 55);","lastModifiedDate":"2023-02-10"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e1 \u003d s1.plus(1, ChronoUnit.HOURS);","lastModifiedDate":"2023-02-10"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s2 \u003d s1.minus(30, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e2 \u003d e1.plus(30, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(true, DateUtils.isIntersecting(s1, e1, s2, e2, threshold));","lastModifiedDate":"2023-02-10"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"    public void isIntersectingThreshold_separateThreshold_true() {","lastModifiedDate":"2023-02-10"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"        double threshold \u003d 30;","lastModifiedDate":"2023-02-10"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s1 \u003d LocalDateTime.of(2023, 3, 5, 4, 55);","lastModifiedDate":"2023-02-10"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e1 \u003d s1.plus(1, ChronoUnit.HOURS);","lastModifiedDate":"2023-02-10"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s2 \u003d e1.plus(5, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e2 \u003d e1.plus(10, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(true, DateUtils.isIntersecting(s1, e1, s2, e2, threshold));","lastModifiedDate":"2023-02-10"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"    public void isIntersectingThreshold_backToBackThreshold_true() {","lastModifiedDate":"2023-02-10"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"        double threshold \u003d 30;","lastModifiedDate":"2023-02-10"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s1 \u003d LocalDateTime.of(2023, 3, 5, 4, 55);","lastModifiedDate":"2023-02-10"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e1 \u003d s1.plus(1, ChronoUnit.HOURS);","lastModifiedDate":"2023-02-10"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s2 \u003d e1;","lastModifiedDate":"2023-02-10"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e2 \u003d e1.plus(10, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(true, DateUtils.isIntersecting(s1, e1, s2, e2, threshold));","lastModifiedDate":"2023-02-10"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":198,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"    public void isIntersectingThreshold_separate_false() {","lastModifiedDate":"2023-02-10"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"        double threshold \u003d 30;","lastModifiedDate":"2023-02-10"},{"lineNumber":202,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s1 \u003d LocalDateTime.of(2023, 3, 5, 4, 55);","lastModifiedDate":"2023-02-10"},{"lineNumber":203,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e1 \u003d s1.plus(1, ChronoUnit.HOURS);","lastModifiedDate":"2023-02-10"},{"lineNumber":204,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s2 \u003d s1.plus(120, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":205,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e2 \u003d e1.plus(120, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":206,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(false, DateUtils.isIntersecting(s1, e1, s2, e2, threshold));","lastModifiedDate":"2023-02-10"},{"lineNumber":207,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":208,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":209,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":210,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":211,"author":{"gitId":"daitenshionyan"},"content":"    public void isIntersectingThreshold_backToBack_false() {","lastModifiedDate":"2023-02-10"},{"lineNumber":212,"author":{"gitId":"daitenshionyan"},"content":"        double threshold \u003d 30;","lastModifiedDate":"2023-02-10"},{"lineNumber":213,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s1 \u003d LocalDateTime.of(2023, 3, 5, 4, 55);","lastModifiedDate":"2023-02-10"},{"lineNumber":214,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e1 \u003d s1.plus(1, ChronoUnit.HOURS);","lastModifiedDate":"2023-02-10"},{"lineNumber":215,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime s2 \u003d e1;","lastModifiedDate":"2023-02-10"},{"lineNumber":216,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime e2 \u003d e1.plus(120, ChronoUnit.MINUTES);","lastModifiedDate":"2023-02-10"},{"lineNumber":217,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(false, DateUtils.isIntersecting(s1, e1, s2, e2, threshold));","lastModifiedDate":"2023-02-10"},{"lineNumber":218,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":219,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":220,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":221,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":222,"author":{"gitId":"daitenshionyan"},"content":"    public void toStartOfWeek_startOfWeek_startOfWeek() {","lastModifiedDate":"2023-02-10"},{"lineNumber":223,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2023, 2, 6, 0, 0);","lastModifiedDate":"2023-02-10"},{"lineNumber":224,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime given \u003d expected;","lastModifiedDate":"2023-02-10"},{"lineNumber":225,"author":{"gitId":"daitenshionyan"},"content":"        DayOfWeek weekStart \u003d DayOfWeek.MONDAY;","lastModifiedDate":"2023-02-10"},{"lineNumber":226,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime actual \u003d DateUtils.toStartOfWeek(given, weekStart);","lastModifiedDate":"2023-02-10"},{"lineNumber":227,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-10"},{"lineNumber":228,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":229,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":230,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":231,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":232,"author":{"gitId":"daitenshionyan"},"content":"    public void toStartOfWeek_midWeek_startOfWeek() {","lastModifiedDate":"2023-02-10"},{"lineNumber":233,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2023, 2, 6, 0, 0);","lastModifiedDate":"2023-02-10"},{"lineNumber":234,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime given \u003d expected.plus(3, ChronoUnit.DAYS);","lastModifiedDate":"2023-02-10"},{"lineNumber":235,"author":{"gitId":"daitenshionyan"},"content":"        DayOfWeek weekStart \u003d DayOfWeek.MONDAY;","lastModifiedDate":"2023-02-10"},{"lineNumber":236,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime actual \u003d DateUtils.toStartOfWeek(given, weekStart);","lastModifiedDate":"2023-02-10"},{"lineNumber":237,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-10"},{"lineNumber":238,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":239,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":240,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":241,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":242,"author":{"gitId":"daitenshionyan"},"content":"    public void toStartOfDay_startOfDay_startOfDay() {","lastModifiedDate":"2023-02-10"},{"lineNumber":243,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2023, 2, 6, 0, 0);","lastModifiedDate":"2023-02-10"},{"lineNumber":244,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime given \u003d expected;","lastModifiedDate":"2023-02-10"},{"lineNumber":245,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime actual \u003d DateUtils.toStartOfDay(given);","lastModifiedDate":"2023-02-10"},{"lineNumber":246,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-10"},{"lineNumber":247,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":248,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":249,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":250,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-10"},{"lineNumber":251,"author":{"gitId":"daitenshionyan"},"content":"    public void toStartOfDay_midDay_startOfDay() {","lastModifiedDate":"2023-02-10"},{"lineNumber":252,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2023, 2, 6, 0, 0);","lastModifiedDate":"2023-02-10"},{"lineNumber":253,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime given \u003d expected.plus(12, ChronoUnit.HOURS);","lastModifiedDate":"2023-02-10"},{"lineNumber":254,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime actual \u003d DateUtils.toStartOfDay(given);","lastModifiedDate":"2023-02-10"},{"lineNumber":255,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-10"},{"lineNumber":256,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":257,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"daitenshionyan":257}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"todo read book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"deadline return book /by 4450-10-10","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"event life /from 0001-01-01 /to 4450-10-10","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"todo wake up tmr","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"mark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"mark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"unmark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"some-random-command-that-shouldnt-be-there-smash-keyboard-qriowgbjue","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"todo","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"todo /","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"todo /abc","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"todo ////////////////////////////////////////","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"todo /abc/","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"todo /dupe/dupe","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"todo /MAIN_INPUT NO_HANYA_TASK_01","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"todo NO_HANYA_TASK_02 /sth sth","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"todo NO_HANYA_TASK_03 /sth","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"todo NO_HANYA_TASK_04 /sth/sthelse","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"deadline bleh /abc /efg","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"deadline bleh /by 0000-00-00 0000","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"deadline bleh /by 0001-01-99 0000","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"deadline NO_HANYA_TASK_05 /by 0001-01-01","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"deadline NO_HANYA_TASK_06 /!@#$%^\u0026*()_+ QWERTYUIO /by 4450-10-10 1234","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"event NO_HANYA_TASK_07/from 3350-3-5 /to 4450-10-10 1234","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"delete 10","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"delete 4","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"delete 4","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"delete 5","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"delete -1","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"delete 44.5","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"delete qopwiehf","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"delete -1","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"delete 44.5","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"delete qopwiehf","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"todo eat","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"todo return book","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"todo sleep","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"todo buy book","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"todo something to do about book","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"find eat","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"find book","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"find no match","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"daitenshionyan":64}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"if exist SAVE_DATA rmdir /S /Q SAVE_DATA","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\aqua\\*.java","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"java -classpath ..\\bin aqua.Aqua \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"daitenshionyan":3,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"if [ -e \"./SAVE_DATA\" ]","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"then","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    rm -r SAVE_DATA","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"fi","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/aqua/*.java","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"java -classpath ../bin aqua.Aqua \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"daitenshionyan":7,"-":36}}]
