[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"# BrotherBot","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"\u003e \"We must live together as brothers or perish together like fools.\" - Martin Luther King Jr.","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"We all need a brother out there who\u0027s got our back all the time. Introducing BrotherBot, your one-stop task planner with a \"Brother\" personality. ","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"Bro! It is:","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"- ~~Hard~~ Easy to use","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"- *Friendly* ","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"- Treats u like a real **bro** :star_struck:","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"## Wanna gain real bro?","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"1. Download it [here]()","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"## Bro features","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"- [X] Tracks tasks","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"- [ ] Eat supper with you *(coming soon)*","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"   Adapted from","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":12,"daniellingzy":18}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"    gradlePluginPortal()","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"daniellingzy"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"daniellingzy"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"daniellingzy"},"content":"    mainClassName \u003d \"brotherbot.Launcher\"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"daniellingzy"},"content":"    archiveBaseName \u003d \"Launcher\"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"daniellingzy":20}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"1. [T] [ ] study","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"3. [D] [ ] eat By: Nov 11 2022 1111","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"5. [T] [ ] 1","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"daniellingzy":3}},{"path":"src/main/java/brotherbot/BrotherBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.commands.Command;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.exceptions.BroException;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.parser.Parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.storage.Storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.storage.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.ui.Ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"import static java.util.Objects.*;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"public class BrotherBot extends Application {","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"daniellingzy"},"content":"    private final Storage storage;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"daniellingzy"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"daniellingzy"},"content":"    private final Ui ui;","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"daniellingzy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"daniellingzy"},"content":"    private TextField userInput;","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"daniellingzy"},"content":"    private final Image user \u003d new Image(requireNonNull(this.getClass().getResourceAsStream(\"/images/user.png\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"daniellingzy"},"content":"    private final Image brother \u003d new Image(requireNonNull(this.getClass().getResourceAsStream(\"/images/brother.png\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"daniellingzy"},"content":"    public BrotherBot() {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"daniellingzy"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"daniellingzy"},"content":"        this.storage \u003d new Storage(\"data.txt\");","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"daniellingzy"},"content":"        this.tasks \u003d storage.getTasks();","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"daniellingzy"},"content":"     * Runs the BrotherBot application.","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"daniellingzy"},"content":"    public void run() {","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daniellingzy"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"daniellingzy"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"daniellingzy"},"content":"        while (!isExit) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"daniellingzy"},"content":"            try {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"daniellingzy"},"content":"                Command c \u003d Parser.parse(fullCommand, this.tasks);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"daniellingzy"},"content":"                c.execute(this.tasks);","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"daniellingzy"},"content":"                isExit \u003d c.isExit;","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"daniellingzy"},"content":"                storage.save(c);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"daniellingzy"},"content":"            } catch (BroException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"daniellingzy"},"content":"                ui.showError(e);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"daniellingzy"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"daniellingzy"},"content":"     * Launches the BrotherBot application.","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"daniellingzy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"daniellingzy"},"content":"        new BrotherBot(\"data.txt\").run();","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"daniellingzy"},"content":"**/","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"daniellingzy"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"daniellingzy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"daniellingzy"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"daniellingzy"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"daniellingzy"},"content":"        ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"daniellingzy"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"daniellingzy"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"daniellingzy"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"daniellingzy"},"content":"        Button sendButton \u003d new Button(\"SEND\");","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"daniellingzy"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"daniellingzy"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"daniellingzy"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"daniellingzy"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"daniellingzy"},"content":"        stage.setTitle(\"BrotherBot\");","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"daniellingzy"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"daniellingzy"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"daniellingzy"},"content":"        stage.setMinWidth(700.0);","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"daniellingzy"},"content":"        mainLayout.setPrefSize(700.0, 600.0);","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"daniellingzy"},"content":"        scrollPane.setPrefSize(700, 565);","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"daniellingzy"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"daniellingzy"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"daniellingzy"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"daniellingzy"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"daniellingzy"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"daniellingzy"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"daniellingzy"},"content":"        userInput.setPrefWidth(640.0);","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"daniellingzy"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"daniellingzy"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"daniellingzy"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"daniellingzy"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"daniellingzy"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"daniellingzy"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"daniellingzy"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"daniellingzy"},"content":"        Image backgroundImage \u003d new Image(\"/images/background.png\");","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"daniellingzy"},"content":"        // Create a BackgroundImage object from the Image object","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"daniellingzy"},"content":"        BackgroundImage background \u003d new BackgroundImage(backgroundImage,","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"daniellingzy"},"content":"                BackgroundRepeat.REPEAT, BackgroundRepeat.REPEAT,","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"daniellingzy"},"content":"                BackgroundPosition.DEFAULT, BackgroundSize.DEFAULT);","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"daniellingzy"},"content":"        // Set the background of the VBox container to the BackgroundImage","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"daniellingzy"},"content":"        dialogContainer.setBackground(new Background(background));","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"daniellingzy"},"content":"**/","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"daniellingzy"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"daniellingzy"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"daniellingzy"},"content":"            handleUserInput();","lastModifiedDate":"2023-03-22"},{"lineNumber":134,"author":{"gitId":"daniellingzy"},"content":"        });","lastModifiedDate":"2023-03-22"},{"lineNumber":135,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"daniellingzy"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"daniellingzy"},"content":"            handleUserInput();","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"daniellingzy"},"content":"        });","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"daniellingzy"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"daniellingzy"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"daniellingzy"},"content":"        // more code to be added here later","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"daniellingzy"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"daniellingzy"},"content":"        stage.show();","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"daniellingzy"},"content":"        // load Welcome message","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"daniellingzy"},"content":"        Label load \u003d new Label(\"Welcome to Brother Bot - your one-stop Personal Task Planner with a very \u0027bro\u0027 personality!\\nHello my brother, what can I do for you mi amigo...\\n\" + storage.load());","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"daniellingzy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"daniellingzy"},"content":"                DialogBox.getBrotherDialog(load, new ImageView(brother))","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"daniellingzy"},"content":"        );","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":154,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":155,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":156,"author":{"gitId":"daniellingzy"},"content":"     * Iteration 2:","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"daniellingzy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"daniellingzy"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-03-22"},{"lineNumber":159,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":160,"author":{"gitId":"daniellingzy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-03-22"},{"lineNumber":161,"author":{"gitId":"daniellingzy"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-03-22"},{"lineNumber":162,"author":{"gitId":"daniellingzy"},"content":"        String output \u003d getResponse(userInput.getText());","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"daniellingzy"},"content":"        Label broText \u003d new Label(output);","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"daniellingzy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-03-22"},{"lineNumber":165,"author":{"gitId":"daniellingzy"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-03-22"},{"lineNumber":166,"author":{"gitId":"daniellingzy"},"content":"                DialogBox.getBrotherDialog(broText, new ImageView(brother))","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"daniellingzy"},"content":"        );","lastModifiedDate":"2023-03-22"},{"lineNumber":168,"author":{"gitId":"daniellingzy"},"content":"        userInput.clear();","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"daniellingzy"},"content":"        if (Objects.equals(output, \"ok see you brother all love no cringe!\")) {","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"daniellingzy"},"content":"            Platform.exit();","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"daniellingzy"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-03-22"},{"lineNumber":175,"author":{"gitId":"daniellingzy"},"content":"        String output;","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"daniellingzy"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":177,"author":{"gitId":"daniellingzy"},"content":"            Command c \u003d Parser.parse(input, this.tasks);","lastModifiedDate":"2023-03-22"},{"lineNumber":178,"author":{"gitId":"daniellingzy"},"content":"            output \u003d c.execute(this.tasks);","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"daniellingzy"},"content":"            storage.save(c);","lastModifiedDate":"2023-03-22"},{"lineNumber":180,"author":{"gitId":"daniellingzy"},"content":"            return output;","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"daniellingzy"},"content":"        } catch (BroException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":182,"author":{"gitId":"daniellingzy"},"content":"            output \u003d e.getMessage();","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"daniellingzy"},"content":"            return output;","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":185,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":186,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":187,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"-":1,"daniellingzy":186}},{"path":"src/main/java/brotherbot/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"        l.setWrapText(true);","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"        iv.setFitWidth(100.0);","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"        iv.setFitHeight(100.0);","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"        this.getChildren().addAll(l, iv);","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"daniellingzy"},"content":"    private void flip() {","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"daniellingzy"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"daniellingzy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"daniellingzy"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"daniellingzy"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"daniellingzy"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"daniellingzy"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"daniellingzy"},"content":"    public static DialogBox getBrotherDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"daniellingzy"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"daniellingzy"},"content":"        db.flip();","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"daniellingzy"},"content":"        return db;","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"daniellingzy":45}},{"path":"src/main/java/brotherbot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"public class Launcher {","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"        Application.launch(BrotherBot.class, args);","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"daniellingzy":9}},{"path":"src/main/java/brotherbot/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.storage.*;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"     * Constructor to create an AddTaskCommand object.","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"     * @param input Input string required for command execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"    public AddTaskCommand(String input) {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"        super(input);","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"     * Executes command.","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"     * @param storage Existing TaskList object required for command execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"    public String execute(TaskList storage) {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"        String output;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"daniellingzy"},"content":"        if (super.input.substring(0, 4).equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"daniellingzy"},"content":"            storage.add(new Todo(input.substring(5)));","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"daniellingzy"},"content":"        } else if (super.input.substring(0, 5).equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"daniellingzy"},"content":"            int startIndex \u003d input.indexOf(\"/from \");","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"daniellingzy"},"content":"            int x \u003d input.indexOf(\"/to \");","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"daniellingzy"},"content":"            int endIndex \u003d x + 4;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"daniellingzy"},"content":"            String description \u003d input.substring(6, startIndex - 1);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"daniellingzy"},"content":"            String start \u003d input.substring(startIndex + 6, x - 1);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"daniellingzy"},"content":"            String end \u003d input.substring(endIndex);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"daniellingzy"},"content":"            try {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"daniellingzy"},"content":"                storage.add(new Event(description, start, end));","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"daniellingzy"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"daniellingzy"},"content":"                output \u003d  \"Invalid Date and Time input brother. Here\u0027s the correct format:\\ndd/MM/yyyy HHmm\";","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"daniellingzy"},"content":"                return output;","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"daniellingzy"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"daniellingzy"},"content":"        } else if (super.input.substring(0, 8).equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"daniellingzy"},"content":"            int startIndex \u003d input.indexOf(\"/by \"); // exception","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"daniellingzy"},"content":"            String description \u003d input.substring(9, startIndex - 1);","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"daniellingzy"},"content":"            String deadline \u003d input.substring(startIndex + 4);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"daniellingzy"},"content":"            try {","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"daniellingzy"},"content":"                storage.add(new Deadline(description, deadline));","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"daniellingzy"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"daniellingzy"},"content":"                output \u003d \"Invalid Date and Time input brother. Here\u0027s the correct format:\\ndd/MM/yyyy HHmm\";","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"daniellingzy"},"content":"                return output;","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"daniellingzy"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"daniellingzy"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"daniellingzy"},"content":"            storage.add(new Task(input));","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"daniellingzy"},"content":"        int x \u003d storage.size();","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"daniellingzy"},"content":"        output \u003d \"added to list my brother: \\n\" + x + \".\" + storage.get(x - 1).toString() + \"\\nNow you have \" + x + \" tasks!\";","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"daniellingzy"},"content":"        return output;","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daniellingzy":61}},{"path":"src/main/java/brotherbot/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.storage.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":" * Represents a command input by user.","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"    protected String input;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"     * Constructor to create a Command object.","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"     * @param input Input string with task information required for command execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"    public Command(String input) {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"     * Executes command.","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"     * @param storage Existing TaskList object required for command execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"    public abstract String execute(TaskList storage);","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daniellingzy":26}},{"path":"src/main/java/brotherbot/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.storage.Task;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.storage.TaskList;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"     * Constructor to create an DeleteCommand object.","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"     * @param input Input string required for command execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"        super(input);","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"     * Executes command.","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"     * @param storage Existing TaskList object required for command execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"     * @param ui Ui object required for command execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"    public String execute(TaskList storage) {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"        int i \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"        Task removed \u003d storage.get(i);","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daniellingzy"},"content":"        storage.remove(i);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"daniellingzy"},"content":"        String output \u003d \"Deleted this task for you my brother:\\n\" + removed.toString()+ \"\\nNow you have \" + storage.size() + \" tasks left\";","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"daniellingzy"},"content":"        return output;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daniellingzy":31}},{"path":"src/main/java/brotherbot/commands/DisplayCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.storage.TaskList;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"public class DisplayCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"     * Constructor to create an DisplayCommand object.","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"     * @param input Input string required for command execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"    public DisplayCommand(String input) {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"        super(input);","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"     * Executes command.","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"     * @param storage Existing TaskList object required for command execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"    public String execute(TaskList storage) {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"        String output;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"        output \u003d (\"Here are your existing tasks my brother!\" ) + storage.display();","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"        output \u003d output + \"\\nAnything else I can do for you top G\";","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"        return output;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daniellingzy":27}},{"path":"src/main/java/brotherbot/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.storage.TaskList;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"     * Constructor to create an ExitCommand object.","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"     * @param input Input string required for command execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"    public ExitCommand(String input) {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"        super(input);","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"     * Executes command.","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"     * @param storage Existing TaskList object required for command execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"    public String execute(TaskList storage) {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"        String output \u003d \"ok see you brother all love no cringe!\";","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"        return output;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daniellingzy":25}},{"path":"src/main/java/brotherbot/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.storage.TaskList;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"     * Constructor to create an FindCommand object.","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"     * @param input Input string required for command execution.","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"        super(input);","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"     * Executes command.","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"     * @param storage Existing TaskList object required for command execution.","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"    public String execute(TaskList storage) {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"        String keyword \u003d this.input.substring(5);","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"        String output \u003d \"Here are the matching task my brother!\";","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"        ArrayList\u003cInteger\u003e results \u003d storage.search(keyword);","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"daniellingzy"},"content":"        for (Integer i : results) {","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"daniellingzy"},"content":"            output \u003d output + \"\\n\" + (i + 1) + \". \" + storage.get(i).toString();","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"daniellingzy"},"content":"        output \u003d output + \"\\nAnything else I can do for you top G\";","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"daniellingzy"},"content":"        return output;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"daniellingzy":34}},{"path":"src/main/java/brotherbot/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.storage.TaskList;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"     * Constructor to create an AddTaskCommand object.","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"     * @param input Input string required for command execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"    public MarkTaskCommand(String input) {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"        super(input);","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"     * Executes command.","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"     * @param storage Existing TaskList object required for command execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"    public String execute(TaskList storage) {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"        int i \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"        storage.mark(i);","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"        String output \u003d \"Marked as you wish my brother:\\n\" + ((i + 1) + \". \" + storage.getPrintFormat(i));","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"        return output;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daniellingzy":27}},{"path":"src/main/java/brotherbot/exceptions/BroException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":" * Represents an exception specific to features in BrotherBot.","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"public class BroException extends Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"     * Constructor for BroException.","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"     * @param message Error message for BroException object.","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"    public BroException(String message) {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"        super(message);","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daniellingzy":18}},{"path":"src/main/java/brotherbot/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.commands.*;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.exceptions.BroException;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.storage.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"public class Parser {","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"     * Constructor to create a Parser object.","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"    public Parser() {","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"     * Parse valid user input into corresponding Command objects.","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"     * @return Command object to be executed.","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"     * @throws BroException if invalid inputs are parsed.","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"    public static Command parse(String input, TaskList storage) throws BroException {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"        validateInput(input, storage);","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"        Command command;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"            command \u003d new ExitCommand(input);","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daniellingzy"},"content":"        } else if (input.equalsIgnoreCase(\"display\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"daniellingzy"},"content":"            command \u003d new DisplayCommand(input);","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"daniellingzy"},"content":"        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"daniellingzy"},"content":"            command \u003d new MarkTaskCommand(input);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"daniellingzy"},"content":"        } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 6).equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"daniellingzy"},"content":"            command \u003d new DeleteCommand(input);","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"daniellingzy"},"content":"        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"daniellingzy"},"content":"            command \u003d new FindCommand(input);","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"daniellingzy"},"content":"        } else if (input.length() \u003e 4 \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"daniellingzy"},"content":"            command \u003d new AddTaskCommand(input);","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"daniellingzy"},"content":"        } else if (input.length() \u003e 5 \u0026\u0026 input.substring(0, 5).equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"daniellingzy"},"content":"            command \u003d new AddTaskCommand(input);","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"daniellingzy"},"content":"        } else if (input.length() \u003e 8 \u0026\u0026 input.substring(0, 8).equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"daniellingzy"},"content":"            command \u003d new AddTaskCommand(input);","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"daniellingzy"},"content":"        } else {","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"daniellingzy"},"content":"            throw new BroException(\"OOPS! invalid command la bro\");","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"daniellingzy"},"content":"        return command;","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"daniellingzy"},"content":"     * Checks if inputs are valid.","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"daniellingzy"},"content":"    private static void validateInput(String input, TaskList storage) throws BroException {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"daniellingzy"},"content":"        /**","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"daniellingzy"},"content":"        if (!input.contains(\"todo\") \u0026\u0026 !input.contains(\"event\") \u0026\u0026 !input.contains(\"display\") \u0026\u0026 !input.contains(\"deadline\") \u0026\u0026 !input.contains(\"mark\") \u0026\u0026 !input.contains(\"bye\") \u0026\u0026 !input.contains(\"delete\") \u0026\u0026 !input.contains(\"find\")) {","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"daniellingzy"},"content":"            throw new BroException(\"OOPS! invalid command la bro\");","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"daniellingzy"},"content":"         **/","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"daniellingzy"},"content":"        if (input.length() \u003e 4 \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(\"todo\") \u0026\u0026 input.length() \u003c\u003d 5) {","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"daniellingzy"},"content":"            throw new BroException(\"OOPS wrong format my brother! consider this format: \\ntodo xxx\");","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"daniellingzy"},"content":"        if (input.length() \u003e 5 \u0026\u0026 input.substring(0, 5).equalsIgnoreCase(\"event\") \u0026\u0026 (!input.contains(\"/from\") || input.indexOf(\"/from\") \u003d\u003d 6 || !input.contains(\"/to\") || input.indexOf(\"/from\") \u003e input.indexOf(\"/to\"))) {","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"daniellingzy"},"content":"            throw new BroException(\"OOPS wrong format my brother! consider this format: \\nevent xxxx /from xxx /to xxx\");","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"daniellingzy"},"content":"        if (input.length() \u003e 4 \u0026\u0026 input.substring(0, 3).equalsIgnoreCase(\"find\") \u0026\u0026 input.length() \u003c\u003d 5) {","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"daniellingzy"},"content":"            throw new BroException(\"what do you want me to find bro... here\u0027s the correct format:\\nfind XXX\");","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"daniellingzy"},"content":"        if (input.length() \u003e 6 \u0026\u0026 input.substring(0, 6).equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"daniellingzy"},"content":"            try {","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"daniellingzy"},"content":"                Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"daniellingzy"},"content":"            } catch(NumberFormatException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"daniellingzy"},"content":"                throw new BroException(\"OOPS wrong format my brother! consider this format: \\ndelete INSERT_NUMBER\");","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"daniellingzy"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"daniellingzy"},"content":"            if (Integer.parseInt(input.substring(7)) \u003e storage.size()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"daniellingzy"},"content":"                throw new BroException(\"OOPS inserted number is invalid\");","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"daniellingzy"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"daniellingzy"},"content":"        if (input.length() \u003e 4 \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"daniellingzy"},"content":"            try {","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"daniellingzy"},"content":"                Integer.parseInt(input.substring(5));","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"daniellingzy"},"content":"            } catch(NumberFormatException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"daniellingzy"},"content":"                throw new BroException(\"OOPS wrong format my brother! consider this format: \\ndelete INSERT_NUMBER\");","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"daniellingzy"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"daniellingzy"},"content":"            if (Integer.parseInt(input.substring(5)) \u003e storage.size()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"daniellingzy"},"content":"                throw new BroException(\"OOPS inserted number is invalid\");","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"daniellingzy"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"daniellingzy"},"content":"        if (input.length() \u003e 8 \u0026\u0026 input.substring(0, 8).equalsIgnoreCase(\"deadline\") \u0026\u0026 (!input.contains(\"/by\") || input.indexOf(\"/by\") \u003d\u003d 9)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"daniellingzy"},"content":"            throw new BroException(\"OOPS wrong format my brother! consider this format: \\nevent xxxx /from xxx /to xxx\");","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"daniellingzy":93}},{"path":"src/main/java/brotherbot/storage/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"     * Constructor to create a Deadline object.","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"     * @param deadline Deadline of the task.","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"        super(description);","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"     * Prints type, status, description and deadline of Task.","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"     * @return String representation of Deadline object.","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"daniellingzy"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"daniellingzy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"daniellingzy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"daniellingzy"},"content":"        return \"[D] \" + \"[\" + this.getStatusIcon() + \"] \" + this.description + \" By: \" + this.deadline.format(formatter);","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"daniellingzy":33}},{"path":"src/main/java/brotherbot/storage/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"     * Constructor to create an Event object.","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"     * @param start Start date and time of the task.","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"     * @param end End date and time of the task.","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"        super(description);","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"        this.start \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"        this.end \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"     * Prints type, status, description, start and end of Task.","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"daniellingzy"},"content":"     * @return String representation of Event object.","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"daniellingzy"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"daniellingzy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"daniellingzy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"daniellingzy"},"content":"        return \"[E] \" + \"[\" + this.getStatusIcon() + \"] \" + this.description + \" From: \" + this.start.format(formatter) + \" To: \" + this.end.format(formatter);","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"daniellingzy":35}},{"path":"src/main/java/brotherbot/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.commands.Command;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.commands.DisplayCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.commands.ExitCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"import java.io.File;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"public class Storage {","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"    private File hardDisk;","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"    private TaskList taskStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"     * Constructor for creating a Storage object.","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"     * @param filePath The path where the Tasks are stored.","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"        this.hardDisk \u003d new File(filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"        this.taskStorage \u003d new TaskList();","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"daniellingzy"},"content":"     * Load existing data into taskList if existing data file exists.","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"daniellingzy"},"content":"     * Creates new data file if no existing data file exist.","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"daniellingzy"},"content":"    public String load() {","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"daniellingzy"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"daniellingzy"},"content":"            String output;","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"daniellingzy"},"content":"            boolean created \u003d hardDisk.createNewFile();","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"daniellingzy"},"content":"            // load existing data.txt file","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"daniellingzy"},"content":"            if (!created) {","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"daniellingzy"},"content":"                Scanner scanner \u003d new Scanner(hardDisk);","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"daniellingzy"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"daniellingzy"},"content":"                    String input \u003d scanner.nextLine();","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"daniellingzy"},"content":"                    if (input \u003d\u003d \"\") {","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"daniellingzy"},"content":"                        continue;","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"daniellingzy"},"content":"                    }","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"daniellingzy"},"content":"                    boolean isDone \u003d Character.isLetter(input.charAt(8));","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"daniellingzy"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"daniellingzy"},"content":"                    DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"daniellingzy"},"content":"                    Task x;","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"daniellingzy"},"content":"                    if (input.contains(\"From:\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"daniellingzy"},"content":"                        int endDescription \u003d input.indexOf(\"From:\") - 1;","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"daniellingzy"},"content":"                        int endStart \u003d input.indexOf(\"To:\") - 1;","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"daniellingzy"},"content":"                        String start \u003d LocalDateTime.parse(input.substring(endDescription + 7, endStart), formatter).format(formatter2);","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"daniellingzy"},"content":"                        String end \u003d LocalDateTime.parse(input.substring(endStart + 5), formatter).format(formatter2);","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"daniellingzy"},"content":"                        x \u003d new Event(input.substring(11, endDescription), start, end);","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"daniellingzy"},"content":"                    } else if (input.contains(\"By:\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"daniellingzy"},"content":"                        int endDescription \u003d input.indexOf(\"By:\") - 1;","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"daniellingzy"},"content":"                        String deadline \u003d LocalDateTime.parse(input.substring(endDescription + 5), formatter).format(formatter2);","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"daniellingzy"},"content":"                        x \u003d new Deadline(input.substring(11, endDescription), deadline);","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"daniellingzy"},"content":"                    } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"daniellingzy"},"content":"                        x \u003d new Todo(input.substring(11));","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"daniellingzy"},"content":"                    }","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"daniellingzy"},"content":"                    if (isDone) {","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"daniellingzy"},"content":"                        x.markAsDone();","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"daniellingzy"},"content":"                    }","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"daniellingzy"},"content":"                    this.taskStorage.add(x);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"daniellingzy"},"content":"                    // Printout existing brotherbot.storage database","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"daniellingzy"},"content":"                }","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"daniellingzy"},"content":"                output \u003d this.taskStorage.display();","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"daniellingzy"},"content":"                scanner.close();","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"daniellingzy"},"content":"            } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"daniellingzy"},"content":"                output \u003d \"New file created: data.txt\";","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"daniellingzy"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"daniellingzy"},"content":"            return output;","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"daniellingzy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"daniellingzy"},"content":"            String output \u003d \"An error occurred while creating the new file: data.txt\";","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"daniellingzy"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"daniellingzy"},"content":"            return output;","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"daniellingzy"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"daniellingzy"},"content":"        return this.taskStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"daniellingzy"},"content":"     * Saves existing tasks in taskList into a data file.","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"daniellingzy"},"content":"     * @param command Executed command to determine if save action to update data file is required.","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"daniellingzy"},"content":"    public void save(Command command) {","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"daniellingzy"},"content":"        if (!(command instanceof ExitCommand || command instanceof DisplayCommand)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"daniellingzy"},"content":"            try {","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"daniellingzy"},"content":"                FileWriter writer \u003d new FileWriter(hardDisk, false);","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"daniellingzy"},"content":"                PrintWriter printWriter \u003d new PrintWriter(writer);","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"daniellingzy"},"content":"                this.taskStorage.write(printWriter);","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"daniellingzy"},"content":"                printWriter.close();","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"daniellingzy"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"daniellingzy"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"daniellingzy"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"daniellingzy":107}},{"path":"src/main/java/brotherbot/storage/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"public class Task {","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"    protected String description;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"     * Constructor to create a Task object.","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"     * Marks task as done.","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"daniellingzy"},"content":"     * Prints type, status and description of Task.","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"daniellingzy"},"content":"     * @return String representation of Task object.","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"daniellingzy"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"daniellingzy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"daniellingzy"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"daniellingzy":39}},{"path":"src/main/java/brotherbot/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"public class TaskList {","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"    private ArrayList\u003cTask\u003e taskStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"     * Constructor for creating a TaskList object containing Tasks.","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"        this.taskStorage \u003d  new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"        return this.taskStorage.get(i);","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"     * Adds Task into the list of Tasks.","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"        this.taskStorage.add(task);","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"daniellingzy"},"content":"     * Removes Task from the list of Tasks.","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"daniellingzy"},"content":"     * @param i Index of Task to be removed.","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"daniellingzy"},"content":"    public void remove(int i) {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"daniellingzy"},"content":"        this.taskStorage.remove(i);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"daniellingzy"},"content":"     * Marks Task as done from the list of Tasks.","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"daniellingzy"},"content":"     * @param i Index of Task to be marked as done.","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"daniellingzy"},"content":"    public void mark(int i) {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"daniellingzy"},"content":"        taskStorage.get(i).markAsDone();","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"daniellingzy"},"content":"     * Returns number of tasks in list of tasks.","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"daniellingzy"},"content":"     * @return Size of taskList.","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"daniellingzy"},"content":"    public int size() {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"daniellingzy"},"content":"        return this.taskStorage.size();","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"daniellingzy"},"content":"     * Displays the list of Tasks.","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"daniellingzy"},"content":"    public String display() {","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"daniellingzy"},"content":"        String output \u003d \"\\nHere are your existing tasks!\";","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"daniellingzy"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"daniellingzy"},"content":"        for(Task task: this.taskStorage) {","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"daniellingzy"},"content":"            output \u003d  output + \"\\n\" +  (i + 1) + \". \" + task.toString();","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"daniellingzy"},"content":"            i++;","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"daniellingzy"},"content":"        if (this.taskStorage.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"daniellingzy"},"content":"            output \u003d \"You have 0 Existing Tasks.. cannot la brother, start adding now! Faster!\";","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"daniellingzy"},"content":"        return output;","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"daniellingzy"},"content":"     * Writes the list of Tasks into existing data file.","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"daniellingzy"},"content":"     * @param x PrintWriter object to write the list of Tasks object.","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"daniellingzy"},"content":"    public void write(PrintWriter x) {","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"daniellingzy"},"content":"        for (int i \u003d 0; i \u003c this.taskStorage.size(); i++) {","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"daniellingzy"},"content":"            x.println((i + 1) + \". \" + this.taskStorage.get(i));","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"daniellingzy"},"content":"            i++;","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"daniellingzy"},"content":"     * Search for tasks with relevant keyword.","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"daniellingzy"},"content":"     * @param keyword Keyword used for search.","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"daniellingzy"},"content":"     * @return An array of indexes of relevant tasks.","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"daniellingzy"},"content":"    public ArrayList\u003cInteger\u003e search(String keyword) {","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"daniellingzy"},"content":"        ArrayList\u003cInteger\u003e relevantTaskIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"daniellingzy"},"content":"        for (int i \u003d 0; i \u003c this.taskStorage.size(); i++) {","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"daniellingzy"},"content":"            if (this.taskStorage.get(i).description.contains(keyword)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"daniellingzy"},"content":"                relevantTaskIndexes.add(i);","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"daniellingzy"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"daniellingzy"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"daniellingzy"},"content":"        return relevantTaskIndexes;","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"daniellingzy"},"content":"    public String getPrintFormat(int index) {","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"daniellingzy"},"content":"        return this.taskStorage.get(index).toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"daniellingzy":105}},{"path":"src/main/java/brotherbot/storage/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"     * Constructor to create a Todo object.","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"        super(description);","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"     * Prints type, status and description of Task.","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"     * @return String representation of Todo object.","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"        return \"[T] \" + \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"daniellingzy":24}},{"path":"src/main/java/brotherbot/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.DialogBox;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.exceptions.BroException;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"public class Ui {","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"    private final Image brother \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/brother.png\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"     * Constructor for Ui object.","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"    public Ui() {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"         dialogContainer \u003d new VBox();","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"daniellingzy"},"content":"     * Displays output string to user.","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"daniellingzy"},"content":"     * @param output Output to be displayed to user.","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"daniellingzy"},"content":"    public void toUser(String output) {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"daniellingzy"},"content":"        Label broText \u003d new Label(output);","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"daniellingzy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"daniellingzy"},"content":"                DialogBox.getBrotherDialog(broText, new ImageView(brother))","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"daniellingzy"},"content":"        );","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"daniellingzy"},"content":"     * Displays welcome message to user.","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"daniellingzy"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"daniellingzy"},"content":"        Label broText \u003d new Label(\"Hello Brother\\nWelcome to Brother Bot\\nWhats up what can I do for you mi amigo\");","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"daniellingzy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"daniellingzy"},"content":"                DialogBox.getBrotherDialog(broText, new ImageView(brother))","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"daniellingzy"},"content":"        );","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"daniellingzy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"daniellingzy"},"content":"     * Displays BroException error message to user.","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"daniellingzy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"daniellingzy"},"content":"     * @param x BroException to be conveyed to user.","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"daniellingzy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"daniellingzy"},"content":"    public void showError(BroException x) {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"daniellingzy"},"content":"        Label broText \u003d new Label(x.getMessage());","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"daniellingzy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"daniellingzy"},"content":"                DialogBox.getBrotherDialog(broText, new ImageView(brother))","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"daniellingzy"},"content":"        );","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"daniellingzy":63}},{"path":"src/test/java/brotherbot/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.exceptions.BroException;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"import brotherbot.storage.TaskList;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"public class ParserTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"    public void parseInvalidInputsTest() throws BroException {","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"        /**","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"        // valid inputs test","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"        dummy.add(new Todo(\"eat\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"        // AddTaskCommand Testcases","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"        String validTest1 \u003d \"todo eat\";","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"        String validTest2 \u003d \"deadline eat /by 11/11/2023 1111\";","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"        String validTest3 \u003d \"event eat /from 11/11/2023 1111 /to 11/11/2023 1112\";","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"        String validTest4 \u003d \"display\";","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"        String validTest5 \u003d \"bye\";","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"        String validTest6 \u003d \"mark 1\";","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"        String validTest7 \u003d \"delete 1\";","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"        Command x \u003d new AddTaskCommand(validTest1);","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"        assertEquals(new AddTaskCommand(validTest1), Parser.parse(validTest1,dummy));","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"daniellingzy"},"content":"        assertEquals(new AddTaskCommand(validTest2), Parser.parse(validTest2,dummy));","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"daniellingzy"},"content":"        assertEquals(new AddTaskCommand(validTest3), Parser.parse(validTest3,dummy));","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"daniellingzy"},"content":"        assertEquals(new DisplayCommand(validTest4), Parser.parse(validTest4,dummy));","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"daniellingzy"},"content":"        assertEquals(new ExitCommand(validTest5), Parser.parse(validTest5, dummy));","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"daniellingzy"},"content":"        assertEquals(new MarkTaskCommand(validTest6), Parser.parse(validTest6, dummy));","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"daniellingzy"},"content":"        assertEquals(new DeleteCommand(validTest7), Parser.parse(validTest7, dummy));","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"daniellingzy"},"content":"        **/","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"daniellingzy"},"content":"        TaskList dummy \u003d new TaskList();","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"daniellingzy"},"content":"        String invalidInput \u003d \"deadline eat\"; // wrong format","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"daniellingzy"},"content":"        String typoInput \u003d \"tod eat\";","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"daniellingzy"},"content":"        String invalidDeleteInput \u003d \"delete 1\"; // invalid delete","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"daniellingzy"},"content":"        String invalidMarkInput \u003d \"mark 1\"; // invalid mark","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"daniellingzy"},"content":"        assertThrows(BroException.class, () -\u003e {Parser.parse(invalidInput, dummy);});","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"daniellingzy"},"content":"        assertThrows(BroException.class, () -\u003e {Parser.parse(typoInput, dummy);});","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"daniellingzy"},"content":"        assertThrows(BroException.class, () -\u003e {Parser.parse(invalidDeleteInput, dummy);});","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"daniellingzy"},"content":"        assertThrows(BroException.class, () -\u003e {Parser.parse(invalidMarkInput, dummy);});","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"daniellingzy":47}},{"path":"src/test/java/brotherbot/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"package brotherbot.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"daniellingzy"},"content":"public class StorageTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"daniellingzy"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"daniellingzy"},"content":"    public void taskToStringTest(){","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"daniellingzy"},"content":"        Task test1 \u003d new Todo(\"eat\");","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"daniellingzy"},"content":"        Task test2 \u003d new Deadline(\"eat\", \"11/11/2022 1111\");","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"daniellingzy"},"content":"        Task test3 \u003d new Event(\"eat\", \"11/11/2022 1111\", \"11/11/2022 2222\");","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"daniellingzy"},"content":"        assertEquals(\"[T] [ ] eat\",test1.toString());","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"daniellingzy"},"content":"        assertEquals(\"[D] [ ] eat By: Nov 11 2022 1111\", test2.toString());","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"daniellingzy"},"content":"        assertEquals(\"[E] [ ] eat From: Nov 11 2022 1111 To: Nov 11 2022 2222\", test3.toString());","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"daniellingzy"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"daniellingzy"},"content":"    public void markTaskAsDoneTest(){","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"daniellingzy"},"content":"        Task test1 \u003d new Todo(\"eat\");","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"daniellingzy"},"content":"        Task test2 \u003d new Deadline(\"eat\", \"11/11/2022 1111\");","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"daniellingzy"},"content":"        Task test3 \u003d new Event(\"eat\", \"11/11/2022 1111\", \"11/11/2022 2222\");","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"daniellingzy"},"content":"        test1.markAsDone();","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"daniellingzy"},"content":"        test2.markAsDone();","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"daniellingzy"},"content":"        test3.markAsDone();","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"daniellingzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"daniellingzy"},"content":"        assertEquals(\"[T] [X] eat\",test1.toString());","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"daniellingzy"},"content":"        assertEquals(\"[D] [X] eat By: Nov 11 2022 1111\", test2.toString());","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"daniellingzy"},"content":"        assertEquals(\"[E] [X] eat From: Nov 11 2022 1111 To: Nov 11 2022 2222\", test3.toString());","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"daniellingzy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"daniellingzy"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"daniellingzy":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"daniellingzy"},"content":"deadline bball /by today","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"daniellingzy"},"content":"event bball /from today /to tmr","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"daniellingzy"},"content":"display","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"daniellingzy"},"content":"mark 1","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"daniellingzy"},"content":"display","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"daniellingzy":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"daniellingzy"},"content":"if ! javac -cp /Users/danielling/Desktop/CS2103T/ip/src/main/java -Xlint:none -d ../bin /Users/danielling/Desktop/CS2103T/ip/src/main/java/*.java","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"daniellingzy"},"content":"# shellcheck disable\u003dSC2181","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"daniellingzy":2}}]
