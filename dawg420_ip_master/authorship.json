[{"path":"src/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"1. [D][X] memes (by: Mar 15, 2023 19:00)","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"2. [E][ ] smd (from: monday to: tuesday)","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"3. [D][ ] sdfsf (by: May 24, 2022 14:45)","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dawg420":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":" * The Duke program implements a \u0027to-do\u0027 list","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":" * where users can add, mark and delete tasks ","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"    enum Type {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"        TODO,","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"        DEADLINE,","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"        EVENT,","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"        MARK,","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"        UNMARK,","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"        LIST,","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"        DELETE,","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"        BYE,","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"        ERR","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"    public static class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"        protected String description;","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"        protected boolean isDone;","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"        public Task(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"            this.description \u003d description;","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"            return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"        public void markDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"        public void markUndone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"            return (\"[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"dawg420"},"content":"    public static class Todo extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"dawg420"},"content":"        public Todo(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"dawg420"},"content":"            super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"dawg420"},"content":"        public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"dawg420"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":68,"author":{"gitId":"dawg420"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"dawg420"},"content":"        protected LocalDate by;","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"dawg420"},"content":"        protected LocalTime when;","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"dawg420"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd, yyyy\");","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"dawg420"},"content":"        public Deadline(String description, LocalDate by, LocalTime when) {","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"dawg420"},"content":"            super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"dawg420"},"content":"            this.by \u003d by;","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"dawg420"},"content":"            this.when \u003d when;","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"dawg420"},"content":"        public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"dawg420"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + formatter.format(by) + \" \" + when + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"dawg420"},"content":"    public static class Event extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":86,"author":{"gitId":"dawg420"},"content":"        protected String from;","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"dawg420"},"content":"        protected String to;","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":89,"author":{"gitId":"dawg420"},"content":"        public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-21"},{"lineNumber":90,"author":{"gitId":"dawg420"},"content":"            super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":91,"author":{"gitId":"dawg420"},"content":"            this.from \u003d from;","lastModifiedDate":"2023-01-21"},{"lineNumber":92,"author":{"gitId":"dawg420"},"content":"            this.to \u003d to;","lastModifiedDate":"2023-01-21"},{"lineNumber":93,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"dawg420"},"content":"        public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":97,"author":{"gitId":"dawg420"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-21"},{"lineNumber":98,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":99,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":100,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":101,"author":{"gitId":"dawg420"},"content":"    public static class DukeException extends RuntimeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":102,"author":{"gitId":"dawg420"},"content":"        public DukeException(String errorMessage, Throwable err) {","lastModifiedDate":"2023-01-21"},{"lineNumber":103,"author":{"gitId":"dawg420"},"content":"            super(errorMessage, err);","lastModifiedDate":"2023-01-21"},{"lineNumber":104,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":105,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":106,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":107,"author":{"gitId":"dawg420"},"content":"    public static ArrayList\u003cTask\u003e readSave() {","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"dawg420"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"dawg420"},"content":"            ArrayList\u003cTask\u003e listOfThings \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"dawg420"},"content":"            File saveFile \u003d new File(\"src/duke.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"dawg420"},"content":"            Scanner fileReader \u003d new Scanner(saveFile);","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"dawg420"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"dawg420"},"content":"                String data \u003d fileReader.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"dawg420"},"content":"                char taskType \u003d data.charAt(4);","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"dawg420"},"content":"                boolean taskDone \u003d (data.charAt(7) \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"dawg420"},"content":"                String taskName \u003d \"\";","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"dawg420"},"content":"                ","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"dawg420"},"content":"                switch(taskType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"dawg420"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"dawg420"},"content":"                    taskName \u003d data.substring(10, data.length());","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"dawg420"},"content":"                    Todo newTodo \u003d new Todo(taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"dawg420"},"content":"                    if (taskDone) {","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"dawg420"},"content":"                        newTodo.markDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"dawg420"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"dawg420"},"content":"                    listOfThings.add(newTodo);","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"dawg420"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"dawg420"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"dawg420"},"content":"                    taskName \u003d data.substring(10, data.indexOf(\"(by:\") - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"dawg420"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd, yyyy\");","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"dawg420"},"content":"                    String byWhen \u003d data.substring(data.indexOf(\"by:\") + 4, data.length() - 7);","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"dawg420"},"content":"                    LocalDate date \u003d LocalDate.parse(byWhen, formatter);","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"dawg420"},"content":"                    String byTime \u003d data.substring(data.length() - 6, data.length() - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"dawg420"},"content":"                    LocalTime time \u003d LocalTime.parse(byTime);","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"dawg420"},"content":"                    Deadline newDeadline \u003d new Deadline(taskName, date, time);","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"dawg420"},"content":"                    if (taskDone) {","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"dawg420"},"content":"                        newDeadline.markDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"dawg420"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"dawg420"},"content":"                    listOfThings.add(newDeadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"dawg420"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"dawg420"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"dawg420"},"content":"                    taskName \u003d data.substring(10, data.indexOf(\"(from:\") - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"dawg420"},"content":"                    String fromWhen \u003d data.substring(data.indexOf(\"from:\") + 6, data.indexOf(\"to:\") - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"dawg420"},"content":"                    String toWhen \u003d data.substring(data.indexOf(\"to:\") + 4, data.length() - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"dawg420"},"content":"                    Event newEvent \u003d new Event(taskName, fromWhen, toWhen);","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"dawg420"},"content":"                    if (taskDone) {","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"dawg420"},"content":"                        newEvent.markDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"dawg420"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"dawg420"},"content":"                    listOfThings.add(newEvent);","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"dawg420"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"dawg420"},"content":"                default:","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"dawg420"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"dawg420"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"dawg420"},"content":"            fileReader.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"dawg420"},"content":"            return listOfThings;","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"dawg420"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"dawg420"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"dawg420"},"content":"            return null;","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"dawg420"},"content":"    private static void appendToFile(String filePath, ArrayList\u003cTask\u003e listOfThings) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"dawg420"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"dawg420"},"content":"        fw.write(\"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"dawg420"},"content":"        fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"dawg420"},"content":"        fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"dawg420"},"content":"        for (int i \u003d 0; i \u003c listOfThings.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"dawg420"},"content":"           fw.write(i + 1 + \". \" + listOfThings.get(i) + System.lineSeparator());","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"dawg420"},"content":"        fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":177,"author":{"gitId":"dawg420"},"content":"        ArrayList\u003cTask\u003e listOfThings \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"dawg420"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":179,"author":{"gitId":"dawg420"},"content":"            File saveFile \u003d new File(\"src/duke.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":180,"author":{"gitId":"dawg420"},"content":"            if (saveFile.createNewFile()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":181,"author":{"gitId":"dawg420"},"content":"                System.out.println(\"Save file created: \" + saveFile.getName());","lastModifiedDate":"2023-01-26"},{"lineNumber":182,"author":{"gitId":"dawg420"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":183,"author":{"gitId":"dawg420"},"content":"                listOfThings \u003d Duke.readSave();","lastModifiedDate":"2023-01-26"},{"lineNumber":184,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":185,"author":{"gitId":"dawg420"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":186,"author":{"gitId":"dawg420"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":187,"author":{"gitId":"dawg420"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":188,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":189,"author":{"gitId":"dawg420"},"content":"        ","lastModifiedDate":"2023-01-26"},{"lineNumber":190,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":197,"author":{"gitId":"dawg420"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-20"},{"lineNumber":198,"author":{"gitId":"dawg420"},"content":"        boolean loop \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":199,"author":{"gitId":"dawg420"},"content":"        while (loop) {","lastModifiedDate":"2023-01-20"},{"lineNumber":200,"author":{"gitId":"dawg420"},"content":"            Scanner echoScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-20"},{"lineNumber":201,"author":{"gitId":"dawg420"},"content":"            String msg \u003d echoScanner.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":202,"author":{"gitId":"dawg420"},"content":"            String firstWord \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":203,"author":{"gitId":"dawg420"},"content":"            if (msg.contains(\" \")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":204,"author":{"gitId":"dawg420"},"content":"                firstWord \u003d msg.substring(0, msg.indexOf(\" \"));","lastModifiedDate":"2023-01-26"},{"lineNumber":205,"author":{"gitId":"dawg420"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":206,"author":{"gitId":"dawg420"},"content":"                firstWord \u003d msg;","lastModifiedDate":"2023-01-26"},{"lineNumber":207,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":208,"author":{"gitId":"dawg420"},"content":"            ","lastModifiedDate":"2023-01-26"},{"lineNumber":209,"author":{"gitId":"dawg420"},"content":"            Type cmdType \u003d Type.ERR;","lastModifiedDate":"2023-01-26"},{"lineNumber":210,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":211,"author":{"gitId":"dawg420"},"content":"            try { ","lastModifiedDate":"2023-01-26"},{"lineNumber":212,"author":{"gitId":"dawg420"},"content":"                cmdType \u003d Type.valueOf(firstWord.toUpperCase());","lastModifiedDate":"2023-01-26"},{"lineNumber":213,"author":{"gitId":"dawg420"},"content":"            } catch (Exception ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":214,"author":{"gitId":"dawg420"},"content":"                System.err.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-26"},{"lineNumber":215,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":216,"author":{"gitId":"dawg420"},"content":"            ","lastModifiedDate":"2023-01-26"},{"lineNumber":217,"author":{"gitId":"dawg420"},"content":"            Integer secondInt \u003d 0;","lastModifiedDate":"2023-01-20"},{"lineNumber":218,"author":{"gitId":"dawg420"},"content":"            String byDate \u003d \"\";","lastModifiedDate":"2023-01-28"},{"lineNumber":219,"author":{"gitId":"dawg420"},"content":"            String byTime \u003d \"\";","lastModifiedDate":"2023-01-28"},{"lineNumber":220,"author":{"gitId":"dawg420"},"content":"            String fromWhen \u003d \"\";","lastModifiedDate":"2023-01-21"},{"lineNumber":221,"author":{"gitId":"dawg420"},"content":"            String toWhen \u003d \"\";","lastModifiedDate":"2023-01-21"},{"lineNumber":222,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":223,"author":{"gitId":"dawg420"},"content":"            switch (cmdType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":224,"author":{"gitId":"dawg420"},"content":"            case MARK:","lastModifiedDate":"2023-01-26"},{"lineNumber":225,"author":{"gitId":"dawg420"},"content":"                try {","lastModifiedDate":"2023-01-21"},{"lineNumber":226,"author":{"gitId":"dawg420"},"content":"                    firstWord \u003d msg.substring(0, msg.indexOf(\" \"));","lastModifiedDate":"2023-01-20"},{"lineNumber":227,"author":{"gitId":"dawg420"},"content":"                    secondInt \u003d Integer","lastModifiedDate":"2023-01-21"},{"lineNumber":228,"author":{"gitId":"dawg420"},"content":"                            .parseInt(msg.substring(msg.indexOf(\" \") + 1, msg.length()));","lastModifiedDate":"2023-01-21"},{"lineNumber":229,"author":{"gitId":"dawg420"},"content":"                    Task thisTask \u003d listOfThings.get(secondInt - 1);","lastModifiedDate":"2023-01-21"},{"lineNumber":230,"author":{"gitId":"dawg420"},"content":"                    thisTask.markDone();","lastModifiedDate":"2023-01-21"},{"lineNumber":231,"author":{"gitId":"dawg420"},"content":"                    listOfThings.set(secondInt - 1, thisTask);","lastModifiedDate":"2023-01-21"},{"lineNumber":232,"author":{"gitId":"dawg420"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":233,"author":{"gitId":"dawg420"},"content":"                    System.out.println(thisTask);","lastModifiedDate":"2023-01-21"},{"lineNumber":234,"author":{"gitId":"dawg420"},"content":"                    try {","lastModifiedDate":"2023-01-26"},{"lineNumber":235,"author":{"gitId":"dawg420"},"content":"                        appendToFile(\"src/duke.txt\", listOfThings);","lastModifiedDate":"2023-01-26"},{"lineNumber":236,"author":{"gitId":"dawg420"},"content":"                    } catch (Exception ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":237,"author":{"gitId":"dawg420"},"content":"                        System.err.println(\"Error! There is no save file!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":238,"author":{"gitId":"dawg420"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":239,"author":{"gitId":"dawg420"},"content":"                } catch (Exception ex) {","lastModifiedDate":"2023-01-21"},{"lineNumber":240,"author":{"gitId":"dawg420"},"content":"                    System.err.println(\"Please indicate a valid task!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":241,"author":{"gitId":"dawg420"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":242,"author":{"gitId":"dawg420"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":243,"author":{"gitId":"dawg420"},"content":"            case UNMARK:","lastModifiedDate":"2023-01-26"},{"lineNumber":244,"author":{"gitId":"dawg420"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":245,"author":{"gitId":"dawg420"},"content":"                    firstWord \u003d msg.substring(0, msg.indexOf(\" \"));","lastModifiedDate":"2023-01-21"},{"lineNumber":246,"author":{"gitId":"dawg420"},"content":"                    secondInt \u003d Integer","lastModifiedDate":"2023-01-20"},{"lineNumber":247,"author":{"gitId":"dawg420"},"content":"                            .parseInt(msg.substring(msg.indexOf(\" \") + 1, msg.length()));","lastModifiedDate":"2023-01-20"},{"lineNumber":248,"author":{"gitId":"dawg420"},"content":"                    Task thisTask \u003d listOfThings.get(secondInt - 1);","lastModifiedDate":"2023-01-21"},{"lineNumber":249,"author":{"gitId":"dawg420"},"content":"                    thisTask.markUndone();","lastModifiedDate":"2023-01-21"},{"lineNumber":250,"author":{"gitId":"dawg420"},"content":"                    listOfThings.set(secondInt - 1, thisTask);","lastModifiedDate":"2023-01-21"},{"lineNumber":251,"author":{"gitId":"dawg420"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":252,"author":{"gitId":"dawg420"},"content":"                    System.out.println(thisTask);","lastModifiedDate":"2023-01-21"},{"lineNumber":253,"author":{"gitId":"dawg420"},"content":"                    try {","lastModifiedDate":"2023-01-26"},{"lineNumber":254,"author":{"gitId":"dawg420"},"content":"                        appendToFile(\"src/duke.txt\", listOfThings);","lastModifiedDate":"2023-01-26"},{"lineNumber":255,"author":{"gitId":"dawg420"},"content":"                    } catch (Exception ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":256,"author":{"gitId":"dawg420"},"content":"                        System.err.println(\"Error! There is no save file!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":257,"author":{"gitId":"dawg420"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":258,"author":{"gitId":"dawg420"},"content":"                } catch (Exception ex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":259,"author":{"gitId":"dawg420"},"content":"                    System.err.println(\"Please indicate a valid task!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":260,"author":{"gitId":"dawg420"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":261,"author":{"gitId":"dawg420"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":262,"author":{"gitId":"dawg420"},"content":"            case DELETE:","lastModifiedDate":"2023-01-26"},{"lineNumber":263,"author":{"gitId":"dawg420"},"content":"                try {","lastModifiedDate":"2023-01-21"},{"lineNumber":264,"author":{"gitId":"dawg420"},"content":"                    secondInt \u003d Integer.parseInt(msg.substring(msg.indexOf(\" \") + 1, msg.length()));","lastModifiedDate":"2023-01-21"},{"lineNumber":265,"author":{"gitId":"dawg420"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":266,"author":{"gitId":"dawg420"},"content":"                    System.out.println(listOfThings.get(secondInt - 1));","lastModifiedDate":"2023-01-21"},{"lineNumber":267,"author":{"gitId":"dawg420"},"content":"                    listOfThings.remove(secondInt - 1);","lastModifiedDate":"2023-01-21"},{"lineNumber":268,"author":{"gitId":"dawg420"},"content":"                    System.out.println(\"Now you have \" + listOfThings.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":269,"author":{"gitId":"dawg420"},"content":"                    try {","lastModifiedDate":"2023-01-26"},{"lineNumber":270,"author":{"gitId":"dawg420"},"content":"                        appendToFile(\"src/duke.txt\", listOfThings);","lastModifiedDate":"2023-01-26"},{"lineNumber":271,"author":{"gitId":"dawg420"},"content":"                    } catch (Exception ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":272,"author":{"gitId":"dawg420"},"content":"                        System.err.println(\"Error! There is no save file!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":273,"author":{"gitId":"dawg420"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":274,"author":{"gitId":"dawg420"},"content":"                } catch (Exception ex) {","lastModifiedDate":"2023-01-21"},{"lineNumber":275,"author":{"gitId":"dawg420"},"content":"                    System.err.println(\"Please indicate a valid task to delete!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":276,"author":{"gitId":"dawg420"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":277,"author":{"gitId":"dawg420"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":278,"author":{"gitId":"dawg420"},"content":"            case TODO:","lastModifiedDate":"2023-01-26"},{"lineNumber":279,"author":{"gitId":"dawg420"},"content":"                try {","lastModifiedDate":"2023-01-21"},{"lineNumber":280,"author":{"gitId":"dawg420"},"content":"                    firstWord \u003d msg.substring(msg.indexOf(\" \") + 1, msg.length());","lastModifiedDate":"2023-01-21"},{"lineNumber":281,"author":{"gitId":"dawg420"},"content":"                    Todo newTodo \u003d new Todo(firstWord);","lastModifiedDate":"2023-01-21"},{"lineNumber":282,"author":{"gitId":"dawg420"},"content":"                    listOfThings.add(newTodo);","lastModifiedDate":"2023-01-21"},{"lineNumber":283,"author":{"gitId":"dawg420"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":284,"author":{"gitId":"dawg420"},"content":"                    System.out.println(newTodo);","lastModifiedDate":"2023-01-21"},{"lineNumber":285,"author":{"gitId":"dawg420"},"content":"                    System.out.println(\"Now you have \" + listOfThings.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":286,"author":{"gitId":"dawg420"},"content":"                    try {","lastModifiedDate":"2023-01-26"},{"lineNumber":287,"author":{"gitId":"dawg420"},"content":"                        appendToFile(\"src/duke.txt\", listOfThings);","lastModifiedDate":"2023-01-26"},{"lineNumber":288,"author":{"gitId":"dawg420"},"content":"                    } catch (Exception ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":289,"author":{"gitId":"dawg420"},"content":"                        System.err.println(\"Error! There is no save file!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":290,"author":{"gitId":"dawg420"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":291,"author":{"gitId":"dawg420"},"content":"                } catch (Exception ex) {","lastModifiedDate":"2023-01-21"},{"lineNumber":292,"author":{"gitId":"dawg420"},"content":"                    System.err.println(\"Whoops! The description of a todo cannot be empty!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":293,"author":{"gitId":"dawg420"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":294,"author":{"gitId":"dawg420"},"content":"                ","lastModifiedDate":"2023-01-26"},{"lineNumber":295,"author":{"gitId":"dawg420"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":296,"author":{"gitId":"dawg420"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-26"},{"lineNumber":297,"author":{"gitId":"dawg420"},"content":"                try {","lastModifiedDate":"2023-01-26"},{"lineNumber":298,"author":{"gitId":"dawg420"},"content":"                    String[] splitted \u003d msg.split(\"\\\\s+\");","lastModifiedDate":"2023-01-28"},{"lineNumber":299,"author":{"gitId":"dawg420"},"content":"                    firstWord \u003d splitted[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":300,"author":{"gitId":"dawg420"},"content":"                    byDate \u003d splitted[3];","lastModifiedDate":"2023-01-28"},{"lineNumber":301,"author":{"gitId":"dawg420"},"content":"                    byTime \u003d splitted[4];","lastModifiedDate":"2023-01-28"},{"lineNumber":302,"author":{"gitId":"dawg420"},"content":"                    System.out.println(byDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":303,"author":{"gitId":"dawg420"},"content":"                    System.out.println(byTime);","lastModifiedDate":"2023-01-28"},{"lineNumber":304,"author":{"gitId":"dawg420"},"content":"                    LocalDate d1 \u003d LocalDate.parse(byDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":305,"author":{"gitId":"dawg420"},"content":"                    LocalTime t1 \u003d LocalTime.parse(byTime);","lastModifiedDate":"2023-01-28"},{"lineNumber":306,"author":{"gitId":"dawg420"},"content":"                    Deadline newDeadline \u003d new Deadline(firstWord, d1, t1);","lastModifiedDate":"2023-01-28"},{"lineNumber":307,"author":{"gitId":"dawg420"},"content":"                    listOfThings.add(newDeadline);","lastModifiedDate":"2023-01-21"},{"lineNumber":308,"author":{"gitId":"dawg420"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":309,"author":{"gitId":"dawg420"},"content":"                    System.out.println(newDeadline);","lastModifiedDate":"2023-01-21"},{"lineNumber":310,"author":{"gitId":"dawg420"},"content":"                    System.out.println(\"Now you have \" + listOfThings.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":311,"author":{"gitId":"dawg420"},"content":"                    try {","lastModifiedDate":"2023-01-26"},{"lineNumber":312,"author":{"gitId":"dawg420"},"content":"                        appendToFile(\"src/duke.txt\", listOfThings);","lastModifiedDate":"2023-01-26"},{"lineNumber":313,"author":{"gitId":"dawg420"},"content":"                    } catch (Exception ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":314,"author":{"gitId":"dawg420"},"content":"                        System.err.println(\"Error! There is no save file!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":315,"author":{"gitId":"dawg420"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":316,"author":{"gitId":"dawg420"},"content":"                } catch (Exception ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":317,"author":{"gitId":"dawg420"},"content":"                    System.err.println(\"Whoops! Please enter the deadline followed by its due date preceeded by a \u0027/by\u0027.\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":318,"author":{"gitId":"dawg420"},"content":"                        \"The date time format should be yyyy-mm-dd hh:mm\");","lastModifiedDate":"2023-01-28"},{"lineNumber":319,"author":{"gitId":"dawg420"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":320,"author":{"gitId":"dawg420"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":321,"author":{"gitId":"dawg420"},"content":"            case EVENT:","lastModifiedDate":"2023-01-26"},{"lineNumber":322,"author":{"gitId":"dawg420"},"content":"                try {","lastModifiedDate":"2023-01-26"},{"lineNumber":323,"author":{"gitId":"dawg420"},"content":"                    firstWord \u003d msg.substring(msg.indexOf(\" \") + 1, msg.indexOf(\"/from\") - 1);","lastModifiedDate":"2023-01-21"},{"lineNumber":324,"author":{"gitId":"dawg420"},"content":"                    fromWhen \u003d msg.substring(msg.indexOf(\"/from\") + 6, msg.indexOf(\"/to\") - 1);","lastModifiedDate":"2023-01-21"},{"lineNumber":325,"author":{"gitId":"dawg420"},"content":"                    toWhen \u003d msg.substring(msg.indexOf(\"/to\") + 4, msg.length());","lastModifiedDate":"2023-01-21"},{"lineNumber":326,"author":{"gitId":"dawg420"},"content":"                    Event newEvent \u003d new Event(firstWord, fromWhen, toWhen);","lastModifiedDate":"2023-01-21"},{"lineNumber":327,"author":{"gitId":"dawg420"},"content":"                    listOfThings.add(newEvent);","lastModifiedDate":"2023-01-21"},{"lineNumber":328,"author":{"gitId":"dawg420"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":329,"author":{"gitId":"dawg420"},"content":"                    System.out.println(newEvent);","lastModifiedDate":"2023-01-21"},{"lineNumber":330,"author":{"gitId":"dawg420"},"content":"                    System.out.println(\"Now you have \" + listOfThings.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":331,"author":{"gitId":"dawg420"},"content":"                    try {","lastModifiedDate":"2023-01-26"},{"lineNumber":332,"author":{"gitId":"dawg420"},"content":"                        appendToFile(\"src/duke.txt\", listOfThings);","lastModifiedDate":"2023-01-26"},{"lineNumber":333,"author":{"gitId":"dawg420"},"content":"                    } catch (Exception ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":334,"author":{"gitId":"dawg420"},"content":"                        System.err.println(\"Error! There is no save file!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":335,"author":{"gitId":"dawg420"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":336,"author":{"gitId":"dawg420"},"content":"                } catch (Exception ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":337,"author":{"gitId":"dawg420"},"content":"                    System.err.println(\"Whoops! Please enter the event followed by its /from and /to timings.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":338,"author":{"gitId":"dawg420"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":339,"author":{"gitId":"dawg420"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":340,"author":{"gitId":"dawg420"},"content":"            case BYE:","lastModifiedDate":"2023-01-26"},{"lineNumber":341,"author":{"gitId":"dawg420"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":342,"author":{"gitId":"dawg420"},"content":"                echoScanner.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":343,"author":{"gitId":"dawg420"},"content":"                loop \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":344,"author":{"gitId":"dawg420"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":345,"author":{"gitId":"dawg420"},"content":"            case LIST:","lastModifiedDate":"2023-01-26"},{"lineNumber":346,"author":{"gitId":"dawg420"},"content":"                for (int i \u003d 0; i \u003c listOfThings.size(); i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":347,"author":{"gitId":"dawg420"},"content":"                    System.out.println(i + 1 + \". \" + listOfThings.get(i));","lastModifiedDate":"2023-01-20"},{"lineNumber":348,"author":{"gitId":"dawg420"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":349,"author":{"gitId":"dawg420"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":350,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":351,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dawg420":343,"-":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"todo 12","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"dawg420":1}}]
