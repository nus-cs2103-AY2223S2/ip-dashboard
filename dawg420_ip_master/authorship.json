[{"path":"src/main/java/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"1. [T][X] me","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"2. [T][ ] erwr","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"3. [T][ ] Tdsd","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"4. [T][ ] 3","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"dawg420":4}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import static duke.Storage.SAVE_LOCATION;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":" * The Duke program implements a \u0027to-do\u0027 list","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":" * where users can add, mark and delete tasks ","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"public class Main {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"        Ui.showWelcomeMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"        Tasklist tasklist \u003d new Tasklist();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"            File saveFile \u003d new File(SAVE_LOCATION);","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"            if (saveFile.createNewFile()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"                System.out.println(\"Save file created: \" + saveFile.getName());","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"                tasklist \u003d Storage.load();","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"        ","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"        boolean loop \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"        while (loop) {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"            Scanner echoScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"            String msg \u003d echoScanner.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"            loop \u003d Parser.receiveCommand(tasklist, msg, echoScanner, loop);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dawg420":41,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"    ","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"    enum Type {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"        TODO,","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"        DEADLINE,","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"        EVENT,","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"        MARK,","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"        UNMARK,","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"        LIST,","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"        DELETE,","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"        BYE,","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"        ERR","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"    public static boolean receiveCommand(Tasklist tasklist, String msg, Scanner echoScanner, boolean loop) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"        String firstWord \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"        if (msg.contains(\" \")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"            firstWord \u003d msg.substring(0, msg.indexOf(\" \"));","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"            firstWord \u003d msg;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"        ","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"        Type cmdType \u003d Type.ERR;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"        try { ","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"            cmdType \u003d Type.valueOf(firstWord.toUpperCase());","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"            System.err.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"        Integer secondInt \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"        String byDate \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"        String byTime \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"        String fromWhen \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"        String toWhen \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"        switch (cmdType) {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"        case MARK:","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"                firstWord \u003d msg.substring(0, msg.indexOf(\" \"));","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"                secondInt \u003d Integer","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"                        .parseInt(msg.substring(msg.indexOf(\" \") + 1, msg.length()));","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"                tasklist.mark(secondInt);","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"                try {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"                    Storage.save(tasklist);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"                } catch (Exception ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"                    System.err.println(\"Error! There is no save file!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"            } catch (Exception ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"dawg420"},"content":"                System.err.println(\"Please indicate a valid task!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"dawg420"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"dawg420"},"content":"        case UNMARK:","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"dawg420"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"dawg420"},"content":"                firstWord \u003d msg.substring(0, msg.indexOf(\" \"));","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"dawg420"},"content":"                secondInt \u003d Integer","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"dawg420"},"content":"                        .parseInt(msg.substring(msg.indexOf(\" \") + 1, msg.length()));","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"dawg420"},"content":"                tasklist.unmark(secondInt);","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"dawg420"},"content":"                try {","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"dawg420"},"content":"                    Storage.save(tasklist);","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"dawg420"},"content":"                } catch (Exception ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"dawg420"},"content":"                    System.err.println(\"Error! There is no save file!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"dawg420"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"dawg420"},"content":"            } catch (Exception ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"dawg420"},"content":"                System.err.println(\"Please indicate a valid task!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"dawg420"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"dawg420"},"content":"        case DELETE:","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"dawg420"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"dawg420"},"content":"                secondInt \u003d Integer.parseInt(msg.substring(msg.indexOf(\" \") + 1, msg.length()));","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"dawg420"},"content":"                tasklist.delete(secondInt);","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"dawg420"},"content":"                try {","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"dawg420"},"content":"                    Storage.save(tasklist);","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"dawg420"},"content":"                } catch (Exception ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"dawg420"},"content":"                    System.err.println(\"Error! There is no save file!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"dawg420"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"dawg420"},"content":"            } catch (Exception ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"dawg420"},"content":"                System.err.println(\"Please indicate a valid task to delete!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"dawg420"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"dawg420"},"content":"        case TODO:","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"dawg420"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"dawg420"},"content":"                firstWord \u003d msg.substring(msg.indexOf(\" \") + 1, msg.length());","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"dawg420"},"content":"                Task.Todo newTodo \u003d new Task.Todo(firstWord);","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"dawg420"},"content":"                tasklist.add(newTodo);","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"dawg420"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"dawg420"},"content":"                System.out.println(newTodo);","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"dawg420"},"content":"                System.out.println(\"Now you have \" + tasklist.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"dawg420"},"content":"                try {","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"dawg420"},"content":"                    Storage.save(tasklist);","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"dawg420"},"content":"                } catch (Exception ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"dawg420"},"content":"                    System.err.println(\"Error! There is no save file!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"dawg420"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"dawg420"},"content":"            } catch (Exception ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"dawg420"},"content":"                System.err.println(\"Whoops! The description of a todo cannot be empty!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"dawg420"},"content":"            ","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"dawg420"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"dawg420"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"dawg420"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"dawg420"},"content":"                String[] splitted \u003d msg.split(\"\\\\s+\");","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"dawg420"},"content":"                firstWord \u003d splitted[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"dawg420"},"content":"                byDate \u003d splitted[3];","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"dawg420"},"content":"                byTime \u003d splitted[4];","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"dawg420"},"content":"                System.out.println(byDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"dawg420"},"content":"                System.out.println(byTime);","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"dawg420"},"content":"                LocalDate d1 \u003d LocalDate.parse(byDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"dawg420"},"content":"                LocalTime t1 \u003d LocalTime.parse(byTime);","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"dawg420"},"content":"                Task.Deadline newDeadline \u003d new Task.Deadline(firstWord, d1, t1);","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"dawg420"},"content":"                tasklist.add(newDeadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"dawg420"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"dawg420"},"content":"                System.out.println(newDeadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"dawg420"},"content":"                System.out.println(\"Now you have \" + tasklist.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"dawg420"},"content":"                try {","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"dawg420"},"content":"                    Storage.save(tasklist);","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"dawg420"},"content":"                } catch (Exception ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"dawg420"},"content":"                    System.err.println(\"Error! There is no save file!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"dawg420"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"dawg420"},"content":"            } catch (Exception ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"dawg420"},"content":"                System.err.println(\"Whoops! Please enter the deadline followed by its due date preceeded by a \u0027/by\u0027.\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"dawg420"},"content":"                    \"The date time format should be yyyy-mm-dd hh:mm\");","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"dawg420"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"dawg420"},"content":"        case EVENT:","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"dawg420"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"dawg420"},"content":"                firstWord \u003d msg.substring(msg.indexOf(\" \") + 1, msg.indexOf(\"/from\") - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"dawg420"},"content":"                fromWhen \u003d msg.substring(msg.indexOf(\"/from\") + 6, msg.indexOf(\"/to\") - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"dawg420"},"content":"                toWhen \u003d msg.substring(msg.indexOf(\"/to\") + 4, msg.length());","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"dawg420"},"content":"                Task.Event newEvent \u003d new Task.Event(firstWord, fromWhen, toWhen);","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"dawg420"},"content":"                tasklist.add(newEvent);","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"dawg420"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"dawg420"},"content":"                System.out.println(newEvent);","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"dawg420"},"content":"                System.out.println(\"Now you have \" + tasklist.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"dawg420"},"content":"                try {","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"dawg420"},"content":"                    Storage.save(tasklist);","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"dawg420"},"content":"                } catch (Exception ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"dawg420"},"content":"                    System.err.println(\"Error! There is no save file!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"dawg420"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"dawg420"},"content":"            } catch (Exception ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"dawg420"},"content":"                System.err.println(\"Whoops! Please enter the event followed by its /from and /to timings.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"dawg420"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"dawg420"},"content":"        case BYE:","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"dawg420"},"content":"            Ui.showGoodbyeMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"dawg420"},"content":"            echoScanner.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"dawg420"},"content":"            loop \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"dawg420"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"dawg420"},"content":"        case LIST:","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"dawg420"},"content":"            tasklist.printList();","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"dawg420"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"dawg420"},"content":"        return loop;","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"dawg420":159}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"    public static final String SAVE_LOCATION \u003d \"duke.txt\";","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"    public static Tasklist load() throws FileNotFoundException {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"        Tasklist listOfThings \u003d new Tasklist();","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"        File saveFile \u003d new File(SAVE_LOCATION);","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"        Scanner fileReader \u003d new Scanner(saveFile);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"        while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"            String data \u003d fileReader.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"            char taskType \u003d data.charAt(4);","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"            boolean taskDone \u003d (data.charAt(7) \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"            String taskName \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"            ","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"            switch(taskType) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"                taskName \u003d data.substring(10, data.length());","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"                Task.Todo newTodo \u003d new Task.Todo(taskName);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"                if (taskDone) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"                    newTodo.markDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"                listOfThings.add(newTodo);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"                taskName \u003d data.substring(10, data.indexOf(\"(by:\") - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd, yyyy\");","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"                String byWhen \u003d data.substring(data.indexOf(\"by:\") + 4, data.length() - 7);","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"                LocalDate date \u003d LocalDate.parse(byWhen, formatter);","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"                String byTime \u003d data.substring(data.length() - 6, data.length() - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"                LocalTime time \u003d LocalTime.parse(byTime);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"                Task.Deadline newDeadline \u003d new Task.Deadline(taskName, date, time);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"                if (taskDone) {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"                    newDeadline.markDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"                listOfThings.add(newDeadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"                taskName \u003d data.substring(10, data.indexOf(\"(from:\") - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"                String fromWhen \u003d data.substring(data.indexOf(\"from:\") + 6, data.indexOf(\"to:\") - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"                String toWhen \u003d data.substring(data.indexOf(\"to:\") + 4, data.length() - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"                Task.Event newEvent \u003d new Task.Event(taskName, fromWhen, toWhen);","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"                if (taskDone) {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"                    newEvent.markDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"dawg420"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"dawg420"},"content":"                listOfThings.add(newEvent);","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"dawg420"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"dawg420"},"content":"            default:","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"dawg420"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"dawg420"},"content":"        return listOfThings;","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"dawg420"},"content":"    public static void save(Tasklist tasklist) throws IOException {","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"dawg420"},"content":"        FileWriter fw \u003d new FileWriter(SAVE_LOCATION);","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"dawg420"},"content":"        fw.write(\"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"dawg420"},"content":"        fw.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"dawg420"},"content":"        fw \u003d new FileWriter(SAVE_LOCATION, true); // create a FileWriter in append mode","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"dawg420"},"content":"        for (int i \u003d 0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"dawg420"},"content":"           fw.write(i + 1 + \". \" + tasklist.get(i) + System.lineSeparator());","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"dawg420"},"content":"        fw.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"dawg420":75}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"public class Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"    protected String description;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"    public static class Todo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"        public Todo(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"            super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"        public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"        protected LocalDate by;","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"        protected LocalTime when;","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd, yyyy\");","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"        public Deadline(String description, LocalDate by, LocalTime when) {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"            super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"            this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"            this.when \u003d when;","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"dawg420"},"content":"        public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"dawg420"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + formatter.format(by) + \" \" + when + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"dawg420"},"content":"    public static class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"dawg420"},"content":"        protected String from;","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"dawg420"},"content":"        protected String to;","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"dawg420"},"content":"        public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"dawg420"},"content":"            super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"dawg420"},"content":"            this.from \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"dawg420"},"content":"            this.to \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"dawg420"},"content":"        public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"dawg420"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"dawg420":76}},{"path":"src/main/java/duke/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"public class Tasklist {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"    ArrayList\u003cTask\u003e listOfThings \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"        listOfThings.add(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"    public void mark(int i) {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"        Task thisTask \u003d listOfThings.get(i - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"        thisTask.markDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"        listOfThings.set(i - 1, thisTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"        Ui.showToUser(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"        Ui.showToUser(thisTask.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"    public void unmark(int i) {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"        Task thisTask \u003d listOfThings.get(i - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"        thisTask.markUndone();","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"        listOfThings.set(i - 1, thisTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"        Ui.showToUser(\"Nice! I\u0027ve marked this task as undone:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"        Ui.showToUser(thisTask.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"    public void delete(int i) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"        System.out.println(listOfThings.get(i - 1));","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"        listOfThings.remove(i - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"        System.out.println(\"Now you have \" + listOfThings.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"    public int size() {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"        return listOfThings.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"        return listOfThings.get(i);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"    public void set(int i, Task task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"        listOfThings.set(i, task);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"    public void printList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"        for (int i \u003d 0; i \u003c listOfThings.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"            System.out.println(i + 1 + \". \" + listOfThings.get(i));","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"} ","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"dawg420":52}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"public class Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"    private static String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"    ","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"    ","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"    public static void showWelcomeMessage() {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"        String welcomeMsg \u003d \"Hello from\\n\" + logo +","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"                \"\\n\" + \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"        System.out.println(welcomeMsg);","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"    public static void showGoodbyeMessage() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"    public static void showToUser(String message) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"        System.out.println(message);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"dawg420":25}},{"path":"src/main/java/duke/out/production/ip/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"1. [T][X] me","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"2. [T][ ] erwr","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"3. [T][ ] Tdsd","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"4. [T][ ] 3","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"dawg420":4}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"    public void createTaskTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"        Task.Event event \u003d new Task.Event(\"meeting\", \"3pm\", \"5pm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"        String eventString \u003d \"[E]\" + \"[\" + \" \" + \"] \" + \"meeting\" + \" (from: \" + \"3pm\" + \" to: \" + \"5pm\" + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"        assertEquals(eventString, event.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"dawg420":16}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"public class UiTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"    public void setUp() {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"    public void welcomeMsgTest(){","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"        String expectedStr \u003d \"Hello from\\n\" + logo +","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"                \"\\n\" + \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"        Ui.showWelcomeMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"        assertEquals(expectedStr, outputStreamCaptor.toString().trim());","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"    public void showUserTest(){","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"        String text \u003d \"Hello World!\";","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"        Ui.showToUser(text);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"        assertEquals(text, outputStreamCaptor.toString().trim());","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"    @AfterEach","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"    public void tearDown() {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"dawg420":46}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"todo 12","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"dawg420":1}}]
