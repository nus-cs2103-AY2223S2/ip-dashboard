[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"javafx {","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"    version \u003d \"16\"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    implementation \u0027net.runeduniverse.lib.utils:utils-scanner:1.0.6\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"    mainClassName \u003d \"GUI.Launcher\"","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"daytona65":25,"-":40}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"T 0 l that","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"T 0 h this","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"T 1 l this","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"T 1 m that","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"T 0 l this","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"D 0 l this | 14/12/2020","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"T 0 h this","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"E 1 h this | 23/12/2023 14:00 | 14/12/2024 13:00","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"daytona65":8}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"### Add and delete tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"Add and delete tasks like todo, deadline and event to your task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"### Marking and un-marking tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"Mark tasks as done or not done.","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"### Find","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"Find tasks with specified keywords from your task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"### List","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"View all of your tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"### Prioritise tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"View and assign levels of priority to each task.","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"### Store tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"DukeMeister3000 remembers tasks from your previous session.","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"### `todo DESCRIPTION` - Add todo","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"Adds a todo task to your task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"`todo return book`","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"Adds a todo task with description \"return book\" to your task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"[T][][LOW] return book","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"### `deadline DESCRIPTION /by DATE(DD/MM/YYYY HH:MM)` - Add deadline","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"Adds a deadline task with deadline date and time to your task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"`deadline return book /by 10/02/2023 14:00`","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"Adds a deadline task with description \"return book\", deadline 10 Feb 2023 2 pm to your task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"[D][][LOW] return book (by: 10 Feb 2023 2 PM)","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"### `event DESCRIPTION /from DATE /to DATE` - Add event","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"Adds an event task to your task list with start and end dates and times.","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"`event dinner /from 10/08/2023 19:00 /to 10/08/2023 21:00`","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"Adds an event task with description \"dinner\", from 7pm to 9pm on 10 Aug 2023 to your task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"[E][][LOW] dinner (from: 10 Aug 2023 7 PM to: 10 Aug 2023 9 PM)","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"### `list` - View all tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"`list`","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"### `mark INDEX` - Mark task as done","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"daytona65"},"content":"Mark task at INDEX as done.","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"daytona65"},"content":"`mark 1`","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"daytona65"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"daytona65"},"content":"[E][X][LOW] return book","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"daytona65"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"daytona65"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"daytona65"},"content":"### `unmark INDEX` - Mark task as not done","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"daytona65"},"content":"Mark task at INDEX as not done.","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"daytona65"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"daytona65"},"content":"`unmark 1`","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"daytona65"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":117,"author":{"gitId":"daytona65"},"content":"[E][][LOW] return book","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":119,"author":{"gitId":"daytona65"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"daytona65"},"content":"### `delete INDEX` - Delete task","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"daytona65"},"content":"Delete task at INDEX.","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"daytona65"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"daytona65"},"content":"`delete 1`","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"daytona65"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":131,"author":{"gitId":"daytona65"},"content":"### `find KEYWORD` - Find task","lastModifiedDate":"2023-02-20"},{"lineNumber":132,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":133,"author":{"gitId":"daytona65"},"content":"Show tasks with KEYWORD in description.","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"daytona65"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"daytona65"},"content":"`find book`","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"daytona65"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"daytona65"},"content":"### `pget INDEX` - Get Priority of task","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"daytona65"},"content":"Show priority of task at INDEX.","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":145,"author":{"gitId":"daytona65"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":146,"author":{"gitId":"daytona65"},"content":"`pget 1`","lastModifiedDate":"2023-02-20"},{"lineNumber":147,"author":{"gitId":"daytona65"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":149,"author":{"gitId":"daytona65"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":150,"author":{"gitId":"daytona65"},"content":"Priority of this task is: LOW","lastModifiedDate":"2023-02-20"},{"lineNumber":151,"author":{"gitId":"daytona65"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":152,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":153,"author":{"gitId":"daytona65"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":154,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":155,"author":{"gitId":"daytona65"},"content":"### `pset PRIORITY_VALUE INDEX` - Set Priority of task","lastModifiedDate":"2023-02-20"},{"lineNumber":156,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":157,"author":{"gitId":"daytona65"},"content":"Sets priority of task at INDEX.","lastModifiedDate":"2023-02-20"},{"lineNumber":158,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":159,"author":{"gitId":"daytona65"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":160,"author":{"gitId":"daytona65"},"content":"`pset h 1`","lastModifiedDate":"2023-02-20"},{"lineNumber":161,"author":{"gitId":"daytona65"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":162,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":163,"author":{"gitId":"daytona65"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":164,"author":{"gitId":"daytona65"},"content":"Priority of this task has been set to: HIGH","lastModifiedDate":"2023-02-20"},{"lineNumber":165,"author":{"gitId":"daytona65"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":166,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":167,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"daytona65":143,"-":24}},{"path":"src/main/java/GUI/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package GUI;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import javafx.scene.control.ContentDisplay;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":" * Sets up the dialog GUI.","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"    private Label pictureText;","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    private final Circle circle \u003d new Circle(50, 50, 50);","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"     * Creates a Dialog box.","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"     * @param l The text label","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"     * @param iv The user image","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"        displayPicture.setStyle(\"-fx-padding: 20; -fx-border-radius: 20\");","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"        displayPicture.setClip(circle);","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"        pictureText \u003d new Label(l.getText(), displayPicture);","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"        pictureText.setWrapText(true);","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"        pictureText.setContentDisplay(ContentDisplay.RIGHT);","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"        this.getChildren().addAll(pictureText);","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"    private void flip() {","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"        this.pictureText.setContentDisplay(ContentDisplay.LEFT);","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"        this.getChildren().setAll(pictureText);","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"     * Creates a user dialog box.","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"     * @param l The text label","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"     * @param iv The user image","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"     * @return The user dialog box.","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"     * Creates a Duke dialog box.","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"     * @param l The text label","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"     * @param iv The user image","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"     * @return The Duke dialog box.","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"        db.flip();","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"        return db;","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"daytona65":74}},{"path":"src/main/java/GUI/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package GUI;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":" * A launcher class to workaround classpath issues. Launches the main application.","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"public class Launcher {","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"daytona65":12}},{"path":"src/main/java/GUI/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package GUI;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":" * Sets up the GUI of the application.","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"    Duke GigaChad;","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"    private Image user \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/sigma.jpg\")));","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"    private Image duke \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/Giga_Chad.jpg\")));","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"     * Sets up the GUI of the application.","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"     * @param stage The stage of the application.","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"        //Formatting the window to look as expected","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"        stage.setTitle(\"DukeMeister3000\");","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"        //DialogBox properties","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"        dialogContainer.setStyle(\"-fx-padding: 20;\");","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"        dialogContainer.setSpacing(50);","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"        //Handle enter and send button","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"        });","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"        });","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"daytona65"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"daytona65"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"daytona65"},"content":"        stage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"daytona65"},"content":"        stage.show(); // Render the stage.","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"daytona65"},"content":"        //Starting Duke","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"daytona65"},"content":"        GigaChad \u003d new Duke(\"data.txt\");","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"daytona65"},"content":"        Label dukeText \u003d new Label(getResponse());","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"daytona65"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"daytona65"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"daytona65"},"content":"        );","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"daytona65"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"daytona65"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"daytona65"},"content":"     * Sends user input to Duke.","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"daytona65"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"daytona65"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"daytona65"},"content":"        Ui.receiveInput(userInput.getText());","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"daytona65"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"daytona65"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user))","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"daytona65"},"content":"        );","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"daytona65"},"content":"        GigaChad.run();","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"daytona65"},"content":"        Label dukeText \u003d new Label(getResponse());","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"daytona65"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-15"},{"lineNumber":120,"author":{"gitId":"daytona65"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"daytona65"},"content":"        );","lastModifiedDate":"2023-02-15"},{"lineNumber":122,"author":{"gitId":"daytona65"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-15"},{"lineNumber":123,"author":{"gitId":"daytona65"},"content":"        if (Ui.isDukeClosed()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"daytona65"},"content":"            closeDuke();","lastModifiedDate":"2023-02-16"},{"lineNumber":125,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":126,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":127,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":128,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"daytona65"},"content":"     * Closes the application.","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":131,"author":{"gitId":"daytona65"},"content":"    public void closeDuke() {","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"daytona65"},"content":"        new Thread(() -\u003e {","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"daytona65"},"content":"            try {","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"daytona65"},"content":"                Thread.sleep(5000);","lastModifiedDate":"2023-02-16"},{"lineNumber":135,"author":{"gitId":"daytona65"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":136,"author":{"gitId":"daytona65"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-02-16"},{"lineNumber":137,"author":{"gitId":"daytona65"},"content":"            } finally {","lastModifiedDate":"2023-02-16"},{"lineNumber":138,"author":{"gitId":"daytona65"},"content":"                Platform.exit();","lastModifiedDate":"2023-02-16"},{"lineNumber":139,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":140,"author":{"gitId":"daytona65"},"content":"        }).start();","lastModifiedDate":"2023-02-16"},{"lineNumber":141,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":142,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":143,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":144,"author":{"gitId":"daytona65"},"content":"     * Retrieves response from Duke.","lastModifiedDate":"2023-02-16"},{"lineNumber":145,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":146,"author":{"gitId":"daytona65"},"content":"     * @return Duke response.","lastModifiedDate":"2023-02-16"},{"lineNumber":147,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":148,"author":{"gitId":"daytona65"},"content":"    private String getResponse() {","lastModifiedDate":"2023-02-16"},{"lineNumber":149,"author":{"gitId":"daytona65"},"content":"        return Ui.dukeResponse();","lastModifiedDate":"2023-02-16"},{"lineNumber":150,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":151,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"daytona65":151}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.command.Bye;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":" * A task management program that reads user input to create and delete tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"public class Duke {","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"     * Constructor to create an instance of Duke.","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"     * @param filePath The file path to where the list of tasks is stored.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"        assert !filePath.isEmpty();","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"        this.tasks \u003d storage.readData();","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"        Ui.welcomeMessage();","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"     * Starts the Duke program.","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    public void run() {","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"        String input \u003d Ui.getInput();","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"        Parser parser \u003d new Parser(tasks);","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"        Command command \u003d null;","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"            command \u003d parser.parse(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"            tasks \u003d command.execute(tasks);","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"            Ui.errorMessage(e);","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"        } finally {","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"            if(command instanceof Bye) {","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"                storage.writeData();","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"                Ui.farewellMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"     * Returns the current TaskList.","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"     * @return The current TaskList.","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"     * Modifies the current TaskList.","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"     * @param tasks The new TaskList.","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"    public void setTasks(TaskList tasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"daytona65":62,"-":1}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":" * Parses all user input into commands.","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"public class Parser {","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"     * Constructor to create a Parser object.","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"     * @param tasks The TaskList.","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"     * Parses the user input into an executable Command for Duke.","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"     * @param input The user input","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"     * @return The Command parsed from the user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"        if (isFind(input)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"            return new Find(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"        } else if (isBye(input)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"            return new Bye(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"        } else if (isList(input)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"            return new ListTasks(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"        } else if (isMark(input, tasks.size())) {","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"            return new Mark(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"        } else if (isUnMark(input, tasks.size())) {","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"            return new Unmark(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"        } else if (isDelete(input, tasks.size())) {","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"            return new Delete(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"        } else if (isPriority(input)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"            return new PriorityCommand(input);","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"        } else if (isToDo(input)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"            return new Add(input, \"todo\");","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"        } else if (isDeadline(input)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"            return new Add(input, \"deadline\");","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"        } else if (isEvent(input)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"            return new Add(input, \"event\");","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"        } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"            throw new DukeException(\"Please input a valid command!\");","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is a priority command.","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is a priority command.","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"    public boolean isPriority(String input) {","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"        return input.startsWith(\"pget \") || input.startsWith(\"pset \");","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is a find command.","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is a find command.","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"    public boolean isFind(String input) {","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"        return input.length() \u003e\u003d 6 \u0026\u0026 input.startsWith(\"find \");","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is a bye command.","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is a bye command.","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"    public boolean isBye(String input) {","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"        return \"bye\".equals(input);","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is a list command.","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is a list command.","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"    public boolean isList(String input) {","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"daytona65"},"content":"        return \"list\".equals(input);","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is a mark command.","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is a mark command.","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"daytona65"},"content":"    public boolean isMark(String input, int listSize) {","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d  6 \u0026\u0026 input.startsWith(\"mark \") \u0026\u0026 isNumeric(input.substring(5))) {","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"daytona65"},"content":"            int taskIndex \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"daytona65"},"content":"            return !(taskIndex \u003c 0 || taskIndex \u003e listSize - 1);","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is an unmark command.","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is a unmark command.","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"daytona65"},"content":"    public boolean isUnMark(String input, int listSize) {","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d  8 \u0026\u0026 input.startsWith(\"unmark \") \u0026\u0026 isNumeric(input.substring(7))) {","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"daytona65"},"content":"            int taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"daytona65"},"content":"            return !(taskIndex \u003c 0 || taskIndex \u003e listSize - 1);","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":118,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":119,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":120,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":121,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is a delete command.","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is a delete command.","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"daytona65"},"content":"    public boolean isDelete(String input, int listSize) {","lastModifiedDate":"2023-02-04"},{"lineNumber":128,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d  8 \u0026\u0026 input.startsWith(\"delete \") \u0026\u0026 isNumeric(input.substring(7))) {","lastModifiedDate":"2023-02-04"},{"lineNumber":129,"author":{"gitId":"daytona65"},"content":"            int taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"daytona65"},"content":"            return !(taskIndex \u003c 0 || taskIndex \u003e listSize - 1);","lastModifiedDate":"2023-02-16"},{"lineNumber":131,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":132,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":134,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":135,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is a ToDo task.","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is a ToDo task.","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"daytona65"},"content":"    public boolean isToDo(String input) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":142,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d 4 \u0026\u0026 input.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":143,"author":{"gitId":"daytona65"},"content":"            if (input.equals(\"todo\") || input.substring(4).isBlank()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":144,"author":{"gitId":"daytona65"},"content":"                throw new DukeException(\"TODO needs a description!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":145,"author":{"gitId":"daytona65"},"content":"            } else return input.startsWith(\"todo \");","lastModifiedDate":"2023-02-04"},{"lineNumber":146,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":147,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":148,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":149,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":150,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is a Deadline task.","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is a Deadline task.","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"daytona65"},"content":"    public boolean isDeadline(String input) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":157,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d 8 \u0026\u0026 input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":158,"author":{"gitId":"daytona65"},"content":"            if (input.equals(\"deadline\") || input.substring(8).isBlank() ||","lastModifiedDate":"2023-02-16"},{"lineNumber":159,"author":{"gitId":"daytona65"},"content":"                    input.equals(\"deadline /by\") || input.equals(\"deadline /by \")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":160,"author":{"gitId":"daytona65"},"content":"                throw new DukeException(\"DEADLINE needs a description!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":161,"author":{"gitId":"daytona65"},"content":"            } else return input.contains(\" /by \");","lastModifiedDate":"2023-02-04"},{"lineNumber":162,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":163,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":164,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":165,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":166,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":167,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is an Event task.","lastModifiedDate":"2023-02-12"},{"lineNumber":168,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":169,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":170,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is an Event task.","lastModifiedDate":"2023-02-12"},{"lineNumber":171,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":172,"author":{"gitId":"daytona65"},"content":"    public boolean isEvent(String input) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":173,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d 5 \u0026\u0026 input.startsWith(\"event\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":174,"author":{"gitId":"daytona65"},"content":"            if (input.equals(\"event\") || input.substring(5).isBlank()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":175,"author":{"gitId":"daytona65"},"content":"                throw new DukeException(\"EVENT needs a description!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":176,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":177,"author":{"gitId":"daytona65"},"content":"            int fromIndex \u003d input.indexOf(\" /from \");","lastModifiedDate":"2023-02-16"},{"lineNumber":178,"author":{"gitId":"daytona65"},"content":"            int toIndex \u003d input.indexOf(\" /to \");","lastModifiedDate":"2023-02-16"},{"lineNumber":179,"author":{"gitId":"daytona65"},"content":"            if (fromIndex + 7 \u003e toIndex) {","lastModifiedDate":"2023-02-16"},{"lineNumber":180,"author":{"gitId":"daytona65"},"content":"                throw new DukeException(\"What are you saying?\");","lastModifiedDate":"2023-02-04"},{"lineNumber":181,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":182,"author":{"gitId":"daytona65"},"content":"            return true;","lastModifiedDate":"2023-02-04"},{"lineNumber":183,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":184,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":185,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":186,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":187,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":188,"author":{"gitId":"daytona65"},"content":"     * Checks if a String is an Integer.","lastModifiedDate":"2023-02-12"},{"lineNumber":189,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":190,"author":{"gitId":"daytona65"},"content":"     * @param strNum The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":191,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing if the String is an Integer.","lastModifiedDate":"2023-02-12"},{"lineNumber":192,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":193,"author":{"gitId":"daytona65"},"content":"    private boolean isNumeric(String strNum) {","lastModifiedDate":"2023-02-12"},{"lineNumber":194,"author":{"gitId":"daytona65"},"content":"        if (strNum \u003d\u003d null) {","lastModifiedDate":"2023-02-04"},{"lineNumber":195,"author":{"gitId":"daytona65"},"content":"            return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":196,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":197,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":198,"author":{"gitId":"daytona65"},"content":"            int d \u003d Integer.parseInt(strNum);","lastModifiedDate":"2023-02-04"},{"lineNumber":199,"author":{"gitId":"daytona65"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-02-04"},{"lineNumber":200,"author":{"gitId":"daytona65"},"content":"            return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":201,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":202,"author":{"gitId":"daytona65"},"content":"        return true;","lastModifiedDate":"2023-02-04"},{"lineNumber":203,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":204,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"daytona65":204}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import duke.task.*;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"import java.io.File;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":" * Manages all storage reading and writing functions. Parses TaskList from storage into Tasks.","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"public class Storage {","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"    private String filePath;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"     * Constructor to create a Storage object to store the TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"     * @param filePath The file path to where the list of tasks is stored.","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"            File data \u003d new File(filePath);","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"            data.createNewFile();","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"            Ui.errorMessage(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"     * Reads data from storage into the current Task List.","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"     * @return The Task List read from storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"    public TaskList readData() {","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"            File data \u003d new File(filePath);","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"            Scanner sc \u003d new Scanner(data);","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"            readFromStorage(sc);","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"            Ui.errorMessage(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"     * Writes data from the current Task List into storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"    public void writeData() {","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"            File data \u003d new File(filePath);","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"            FileWriter writer \u003d new FileWriter(data);","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"            writeToStorage(writer);","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"            writer.close();","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"            Ui.errorMessage(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"     * Parses data from storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"     * @param sc The Scanner reading from storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"    public void readFromStorage(Scanner sc) {","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"            String Line \u003d sc.nextLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"            char Type \u003d Line.charAt(0);","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"            char isDone \u003d Line.charAt(2);","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"            char priority \u003d Line.charAt(4);","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"            if (Type \u003d\u003d \u0027T\u0027) { // T 1 read book","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"                readToDo(Line, isDone, priority);","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"            } else if (Type \u003d\u003d \u0027D\u0027) { // D 1 read book | June 12 4pm","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"                readDeadline(Line, isDone, priority);","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"            } else if (Type \u003d\u003d \u0027E\u0027) { // E 1 read book | June 12 4pm | June 13 4pm","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"                readEvent(Line, isDone, priority);","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"     * Parses data from tasks and writes it into storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"     * @param writer The FileWriter writing into storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"    public void writeToStorage(FileWriter writer) throws IOException {","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"daytona65"},"content":"        while (!tasks.isEmpty()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"daytona65"},"content":"            Task task \u003d tasks.remove(0);","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"daytona65"},"content":"            String isDone \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"daytona65"},"content":"            String writeTask \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"daytona65"},"content":"            if (task.isDone()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"daytona65"},"content":"                isDone \u003d \"1\";","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"daytona65"},"content":"            } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"daytona65"},"content":"                isDone \u003d \"0\";","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"daytona65"},"content":"            if (task instanceof ToDo) {","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"daytona65"},"content":"                writeTask \u003d \"T \" + isDone + \" \" + task.getShortPriority() + \" \" + task.getDescription() + \"\\n\";","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"daytona65"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"daytona65"},"content":"                writeTask +\u003d \"D \" + isDone + \" \" + task.getShortPriority() + \" \" +","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"daytona65"},"content":"                        task.getDescription() + \" | \" + ((Deadline) task).getBy() + \"\\n\";","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"daytona65"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"daytona65"},"content":"                writeTask +\u003d \"E \" + isDone + \" \" + task.getShortPriority() + \" \" +","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"daytona65"},"content":"                        task.getDescription() + \" | \" + ((Event) task).getFrom() + \" | \" +","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"daytona65"},"content":"                        ((Event) task).getTo() + \"\\n\";","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"daytona65"},"content":"            writer.write(writeTask);","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":116,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"daytona65"},"content":"     * Reads a ToDo task from storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"daytona65"},"content":"     * @param Line The next line in the data.","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"daytona65"},"content":"     * @param isDone Status of the task being read.","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"daytona65"},"content":"     * @param priority Priority of the task.","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"daytona65"},"content":"    public void readToDo(String Line, char isDone, char priority) {","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"daytona65"},"content":"        String description \u003d Line.substring(6);","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"daytona65"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"daytona65"},"content":"        if (isDone \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"daytona65"},"content":"            task.markAsDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"daytona65"},"content":"        task.setPriority(Priority.priorityValue(priority));","lastModifiedDate":"2023-02-19"},{"lineNumber":131,"author":{"gitId":"daytona65"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"daytona65"},"content":"     * Reads a Deadline task from storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"daytona65"},"content":"     * @param Line The next line in the data.","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"daytona65"},"content":"     * @param isDone Status of the task being read.","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"daytona65"},"content":"     * @param priority Priority of the task.","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"daytona65"},"content":"    public void readDeadline(String Line, char isDone, char priority) {","lastModifiedDate":"2023-02-19"},{"lineNumber":142,"author":{"gitId":"daytona65"},"content":"        int dividerIndex \u003d Line.indexOf(\u0027|\u0027);","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"daytona65"},"content":"        String description \u003d Line.substring(6, dividerIndex - 1);","lastModifiedDate":"2023-02-19"},{"lineNumber":144,"author":{"gitId":"daytona65"},"content":"        String by \u003d Line.substring(dividerIndex + 2);","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"daytona65"},"content":"            Task task \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"daytona65"},"content":"            if (isDone \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"daytona65"},"content":"                task.markAsDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"daytona65"},"content":"            task.setPriority(Priority.priorityValue(priority));","lastModifiedDate":"2023-02-19"},{"lineNumber":151,"author":{"gitId":"daytona65"},"content":"            tasks.add(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"daytona65"},"content":"            Ui.errorMessage(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":158,"author":{"gitId":"daytona65"},"content":"     * Reads a Event task from storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":159,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":160,"author":{"gitId":"daytona65"},"content":"     * @param Line The next line in the data.","lastModifiedDate":"2023-02-12"},{"lineNumber":161,"author":{"gitId":"daytona65"},"content":"     * @param isDone Status of the task being read.","lastModifiedDate":"2023-02-12"},{"lineNumber":162,"author":{"gitId":"daytona65"},"content":"     * @param priority Priority of the task.","lastModifiedDate":"2023-02-19"},{"lineNumber":163,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":164,"author":{"gitId":"daytona65"},"content":"    public void readEvent(String Line, char isDone, char priority) {","lastModifiedDate":"2023-02-19"},{"lineNumber":165,"author":{"gitId":"daytona65"},"content":"        int firstDividerIndex \u003d Line.indexOf(\u0027|\u0027);","lastModifiedDate":"2023-02-12"},{"lineNumber":166,"author":{"gitId":"daytona65"},"content":"        int lastDividerIndex \u003d Line.lastIndexOf(\u0027|\u0027);","lastModifiedDate":"2023-02-12"},{"lineNumber":167,"author":{"gitId":"daytona65"},"content":"        String description \u003d Line.substring(6, firstDividerIndex - 1);","lastModifiedDate":"2023-02-19"},{"lineNumber":168,"author":{"gitId":"daytona65"},"content":"        String from \u003d Line.substring(firstDividerIndex + 2, lastDividerIndex - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":169,"author":{"gitId":"daytona65"},"content":"        String to \u003d Line.substring(lastDividerIndex + 2);","lastModifiedDate":"2023-02-12"},{"lineNumber":170,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":171,"author":{"gitId":"daytona65"},"content":"            Task task \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-12"},{"lineNumber":172,"author":{"gitId":"daytona65"},"content":"            if (isDone \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-02-19"},{"lineNumber":173,"author":{"gitId":"daytona65"},"content":"                task.markAsDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":174,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":175,"author":{"gitId":"daytona65"},"content":"            task.setPriority(Priority.priorityValue(priority));","lastModifiedDate":"2023-02-19"},{"lineNumber":176,"author":{"gitId":"daytona65"},"content":"            tasks.add(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":177,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":178,"author":{"gitId":"daytona65"},"content":"            Ui.errorMessage(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":179,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":180,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":181,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"daytona65":181}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":" * TaskList class that stores tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"public class TaskList {","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"    private ArrayList\u003cTask\u003e tasklist;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"     * Constructor to create a TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"        this.tasklist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"     * Returns the size of the TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"     * @return Size of the TaskList","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"    public int size() {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"        return tasklist.size();","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"     * Returns the task at the specified index in the TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"     * @param index The specified index of the task to be returned.","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"     * @return Task at specified index.","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"        return tasklist.get(index);","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"        tasklist.add(task);","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"     * Adds a task to the TaskList at a specified index.","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"     * @param index The specified index.","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"    public void add(int index, Task task) {","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"        tasklist.add(index, task);","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"     * Removes the task at the specified index in the TaskList and returns it.","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"     * @param index The specified index.","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"     * @return The task removed.","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"    public Task remove(int index) {","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"        return tasklist.remove(index);","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"     * Checks if the TaskList is empty.","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"     * @return Boolean representing if the TaskList is empty.","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"        return tasklist.isEmpty();","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"daytona65":76}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":" * User Interface class that manages messages being shown to the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"public class Ui {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"    private static String input;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"    private static String response;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"    private static boolean dukeClosed \u003d false;","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"     * Constructor that creates an instance of Ui.","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    public Ui() {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"     * Returns Duke\u0027s latest response to the GUI.","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"     * @return Duke\u0027s response to GUI.","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"    public static String dukeResponse() {","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"        return response;","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"     * Returns user most recent input for Duke.","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"     * @return User most recent input.","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"    public static String getInput() {","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"        return input;","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"     * Sets user most recent input from GUI.","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"     * @param input User most recent input.","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"    public static void receiveInput(String input) {","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"        assert !input.isEmpty();","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"        Ui.input \u003d input;","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"     * Prints priority of a task.","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"     * @param task Task to be printed.","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"    public static void getPriorityMessage(Task task) {","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"        response \u003d \"\";","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"        response +\u003d \"Priority of this task is: \" + task.getPriority();","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"     * Prints new priority of a task.","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"     * @param task Task to be printed.","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"    public static void setPriorityMessage(Task task) {","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"        response \u003d \"\";","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"        response +\u003d \"Priority of this task has been set to: \" + task.getPriority();","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"     * Prints the given TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"     * @param tasks The TaskList to be printed.","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"    public static void listMessage(TaskList tasks) {","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"        response \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"        response +\u003d \"Working on it Sigma. Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"            response +\u003d j + \".\" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"     * Prints the TaskList containing the queried term in a find command.","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"     * @param searchFor The queried term.","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"     * @param tasks The TaskList to be printed.","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"    public static void findMessage(String searchFor, TaskList tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"        response \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"daytona65"},"content":"        response +\u003d \"Let me do it for you Sigma. Here are the tasks in your list that contain [\" + searchFor + \"]:\\n\";","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"daytona65"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"daytona65"},"content":"            response +\u003d j + \".\" + tasks.get(i).toString() +\"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"daytona65"},"content":"     * Prints the marked task.","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"daytona65"},"content":"     * @param task The task marked as done.","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"daytona65"},"content":"    public static void markMessage(Task task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"daytona65"},"content":"        response \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"daytona65"},"content":"        response +\u003d \"Nice work Sigma. I\u0027m marking this task as done:\\n\" + task +\"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"daytona65"},"content":"     * Prints the unmarked task.","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"daytona65"},"content":"     * @param task The task marked as not done.","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"daytona65"},"content":"    public static void unMarkMessage(Task task) {","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"daytona65"},"content":"        response \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"daytona65"},"content":"        response +\u003d \"Sigma, I am marking this as not done:\\n\" + task +\"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":116,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"daytona65"},"content":"     * Prints the deleted task.","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"daytona65"},"content":"     * @param task The task deleted.","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"daytona65"},"content":"    public static void deleteMessage(Task task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":123,"author":{"gitId":"daytona65"},"content":"        response \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"daytona65"},"content":"        response +\u003d \"Sigma move! One less task to go! Removing...\\n\" + task +\"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":125,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":126,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":127,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"daytona65"},"content":"     * Prints the added task.","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"daytona65"},"content":"     * @param task The task added to the TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"daytona65"},"content":"    public static void addMessage(Task task, int taskListSize) {","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"daytona65"},"content":"        response \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"daytona65"},"content":"        response +\u003d \"Let\u0027s go Sigma. This task has been added:\\n\" + \"  \" + task +\"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":135,"author":{"gitId":"daytona65"},"content":"        response +\u003d \"Now you have \" + taskListSize + \" tasks in your list.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":136,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":137,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":138,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"daytona65"},"content":"     * Welcome message during startup.","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"daytona65"},"content":"    public static void welcomeMessage() {","lastModifiedDate":"2023-02-04"},{"lineNumber":142,"author":{"gitId":"daytona65"},"content":"        response \u003d \"Greetings fellow Sigma.\\n\" + \"I am GigaChad. What do you wish to conquer today?\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":143,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":144,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":145,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"daytona65"},"content":"     * Farewell message on bye command.","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"daytona65"},"content":"    public static void farewellMessage() {","lastModifiedDate":"2023-02-04"},{"lineNumber":149,"author":{"gitId":"daytona65"},"content":"        response \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":150,"author":{"gitId":"daytona65"},"content":"        response +\u003d \"Writing list to storage. Hope to Sigma you again! \\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":151,"author":{"gitId":"daytona65"},"content":"        response +\u003d \"GigaChad is leaving the chat.....\";","lastModifiedDate":"2023-02-19"},{"lineNumber":152,"author":{"gitId":"daytona65"},"content":"        dukeClosed \u003d true;","lastModifiedDate":"2023-02-16"},{"lineNumber":153,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":154,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":155,"author":{"gitId":"daytona65"},"content":"    public static boolean isDukeClosed() {","lastModifiedDate":"2023-02-16"},{"lineNumber":156,"author":{"gitId":"daytona65"},"content":"        return dukeClosed;","lastModifiedDate":"2023-02-16"},{"lineNumber":157,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":158,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":159,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":160,"author":{"gitId":"daytona65"},"content":"     * Prints the given Exception\u0027s error message.","lastModifiedDate":"2023-02-12"},{"lineNumber":161,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":162,"author":{"gitId":"daytona65"},"content":"     * @param e The given Exception.","lastModifiedDate":"2023-02-12"},{"lineNumber":163,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":164,"author":{"gitId":"daytona65"},"content":"    public static void errorMessage(Exception e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"daytona65"},"content":"        response \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":166,"author":{"gitId":"daytona65"},"content":"        response +\u003d e;","lastModifiedDate":"2023-02-16"},{"lineNumber":167,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":168,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"daytona65":168}},{"path":"src/main/java/duke/command/Add.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":" * Add command which adds tasks to the TaskList.","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"public class Add extends Command {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"    private String taskType;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"     * Constructor for Add","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"     * @param taskType The type of task being added.","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"    public Add(String input, String taskType) {","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"        super(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"     * @param tasks The current Task List.","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"     * @return The modified Task List.","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"    public TaskList execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"        switch(taskType) {","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"                tasks.add(newToDo(input, tasks.size() + 1));","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"                tasks.add(newDeadline(input, tasks.size() + 1));","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"            case \"event\":","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"                tasks.add(newEvent(input, tasks.size() + 1));","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"     * Creates a new ToDo task and prints a message for the user","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"     * confirming the addition of the task to the Task List.","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"     * @param taskSize The current Task List size.","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"     * @return The created task.","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"    public Task newToDo(String input, int taskSize) {","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"        Task task \u003d new ToDo(input.substring(5));","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"        Ui.addMessage(task, taskSize);","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"        return task;","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"     * Creates a new Deadline task and prints a message for the user","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"     * confirming the addition of the task to the Task List.","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"     * @param taskSize The current Task List size.","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"     * @return The created task.","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"    public Task newDeadline(String input, int taskSize) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"        int index \u003d input.indexOf(\" /by \");","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"        Task task \u003d new Deadline(input.substring(9, index), input.substring(index + 5));","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"        Ui.addMessage(task, taskSize);","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"        return task;","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"     * Creates a new Event task and prints a message for the user","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"     * confirming the addition of the task to the Task List.","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"     * @param taskSize The current Task List size.","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"     * @return The created task.","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"    public Task newEvent(String input, int taskSize) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"        int fromIndex \u003d input.indexOf(\" /from \");","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"        int toIndex \u003d input.indexOf(\" /to \");","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"daytona65"},"content":"        Task task \u003d new Event(input.substring(6, fromIndex), input.substring(fromIndex + 7, toIndex),","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"                input.substring(toIndex + 5));","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"daytona65"},"content":"        Ui.addMessage(task, taskSize);","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"daytona65"},"content":"        return task;","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"daytona65":97}},{"path":"src/main/java/duke/command/Bye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":" * Bye command which is a command placeholder for the program to stop.","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"public class Bye extends Command {","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"     * Constructor for Bye","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"    public Bye(String input) {","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"        super(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"     * Does nothing.","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"     * @param tasks The current Task List.","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"     * @return The current Task List.","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    public TaskList execute(TaskList tasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"daytona65":29}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":" * Command class which has an execute method to execute the command.","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"    protected String input;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"     * Constructor for Command","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    public Command(String input) {","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"        assert !input.isEmpty();","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"     * Executes the Command. Implemented in subclasses of Command depending on the command to be executed.","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"     * @param tasks The TaskList the command is executed upon.","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    public abstract TaskList execute(TaskList tasks) throws DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"daytona65":28}},{"path":"src/main/java/duke/command/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":" * Delete command which removes a task from the TaskList.","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"public class Delete extends Command {","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"     * Constructor for Delete","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    public Delete(String input) {","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"        super(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"     * Deletes the user-specified item in the Task List.","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"     * @param tasks The current Task List.","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"     * @return The Task List with the specified item deleted.","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    public TaskList execute(TaskList tasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"        Ui.deleteMessage(tasks.get(taskIndex));","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"daytona65":33}},{"path":"src/main/java/duke/command/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":" * Find command which finds tasks by keyword.","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"public class Find extends Command {","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"     * Constructor for Find","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    public Find(String input) {","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"        super(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"     * Searches a TaskList and prints out a list of tasks containing the queried term in a find command.","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"     * @param tasks The current TaskList.","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"     * @return The current TaskList.","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    public TaskList execute(TaskList tasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"        String searchFor \u003d input.substring(5);","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"        TaskList found \u003d new TaskList();","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"            if (tasks.get(i).getDescription().contains(searchFor)) {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"                found.add(tasks.get(i));","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"        Ui.findMessage(searchFor, found);","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"daytona65":38}},{"path":"src/main/java/duke/command/ListTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":" * ListTasks command which lists out the current TaskList.","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"public class ListTasks extends Command {","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"     * Constructor for ListTasks","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    public ListTasks(String input) {","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"        super(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"     * Lists the current tasks to the user.","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"     * @param tasks The current Task List.","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"     * @return The current Task List.","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    public TaskList execute(TaskList tasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"        Ui.listMessage(tasks);","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"daytona65":31}},{"path":"src/main/java/duke/command/Mark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":" * Marks a Task as done.","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"public class Mark extends Command {","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"     * Constructor for Mark","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    public Mark(String input) {","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"        super(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"     * Marks the user-specified item in the Task List as done.","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"     * @param tasks The current Task List.","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"     * @return The Task List with the specified item marked done.","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    public TaskList execute(TaskList tasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"        tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"        Ui.markMessage(tasks.get(taskIndex));","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"daytona65":33}},{"path":"src/main/java/duke/command/PriorityCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import duke.task.Priority;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":" * Sets and queries the priority of a task.","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"public class PriorityCommand extends Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"    private String commandType;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"     * Constructor for Priority","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    public PriorityCommand(String input) {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"        super(input);","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"        this.commandType \u003d input.substring(1, 4);","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"        assert commandType.equals(\"get\") || commandType.equals(\"set\");","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"     * Gets or sets the Priority of a given task.","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"     * @param tasks The current Task List.","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"     * @return The current Task List.","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"    public TaskList execute(TaskList tasks) {","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"        switch(commandType) {","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"            case \"get\":","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"                int taskIndex \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"                Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"                Ui.getPriorityMessage(task);","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"                break;","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"            case \"set\":","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"                taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"                task \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"                Priority priority \u003d Priority.priorityValue(input.charAt(5));","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"                task.setPriority(priority);","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"                tasks.remove(taskIndex);","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"                tasks.add(taskIndex, task);","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"                Ui.setPriorityMessage(task);","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"daytona65":50}},{"path":"src/main/java/duke/command/Unmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":" * Unmark command which marks a task as not done.","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"public class Unmark extends Command {","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"     * Constructor for Unmark","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    public Unmark(String input) {","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"        super(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"     * Unmarks the user-specified item in the Task List.","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"     * @param tasks The current Task List.","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"     * @return The Task List with the specified item unmarked.","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    public TaskList execute(TaskList tasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"        tasks.get(taskIndex).markAsNotDone();","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"        Ui.unMarkMessage(tasks.get(taskIndex));","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"daytona65":33}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.exception;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"        super(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"daytona65":7}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":" * The Deadline task which stores the task description and when the task is due.","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"    protected String stringBy;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    protected boolean hasTime \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    private static final String[] DATE_FORMATS \u003d {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"            \"dd-MM-yyyy\",","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"            \"dd/MM/yyyy\",","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"            \"yyyy-MM-dd\",","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"            \"yyyy/MM/dd\"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"    };","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"    private static final String[] DATE_TIME_FORMATS \u003d {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"            \"dd-MM-yyyy HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"            \"dd/MM/yyyy HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"            \"yyyy-MM-dd HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"            \"yyyy/MM/dd HH:mm\"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"    };","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    private static final DateTimeFormatter DISPLAY_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"    private static final DateTimeFormatter DISPLAY_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h a\");","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"     * Constructor to create a Deadline task.","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"        stringBy \u003d by;","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"        for (String format : DATE_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"                this.by \u003d LocalDateTime.of(LocalDate.parse(by, DateTimeFormatter.ofPattern(format)),","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"                        LocalDateTime.now().toLocalTime());","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"                hasTime \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"                //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"                continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"        if (hasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"            for (String format : DATE_TIME_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"                try {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"                    this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"                } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"                    //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"                    continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"        if (this.by \u003d\u003d null) {","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"            throw new DukeException(\"Invalid format for /by field!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"     * Returns the deadline of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"     * @return The deadline of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"        return stringBy;","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"        if (hasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by.format(DISPLAY_DATE_TIME_FORMAT) + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by.toLocalDate().format(DISPLAY_DATE_FORMAT) + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"daytona65":91}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":" * The Event task which stores the task description and the start and end of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    protected String stringFrom;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    protected String stringTo;","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    protected boolean fromHasTime \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    protected boolean toHasTime \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    private static final String[] DATE_FORMATS \u003d {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"            \"dd-MM-yyyy\",","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"            \"dd/MM/yyyy\",","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"            \"yyyy-MM-dd\",","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"            \"yyyy/MM/dd\"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"    };","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    private static final String[] DATE_TIME_FORMATS \u003d {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"            \"dd-MM-yyyy HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"            \"dd/MM/yyyy HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"            \"yyyy-MM-dd HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"            \"yyyy/MM/dd HH:mm\"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"    };","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"    private static final DateTimeFormatter DISPLAY_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"    private static final DateTimeFormatter DISPLAY_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h a\");","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"     * Constructor to create an Event task.","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"     * @param from The start point of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"     * @param to The end point of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"        stringFrom \u003d from;","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"        stringTo \u003d to;","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"        parseFrom(from);","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"        parseTo(to);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"        assert !from.isEmpty() \u0026\u0026 !to.isEmpty();","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"        if (from \u003d\u003d null || to \u003d\u003d null) {","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"            throw new DukeException(\"Invalid format for /from and /to fields!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"     * Parses the start inputted by the user into a LocalDateTime format.","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"     * @param from The start point inputted by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"    private void parseFrom(String from) {","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"        for (String format : DATE_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"                this.from \u003d LocalDateTime.of(LocalDate.parse(from, DateTimeFormatter.ofPattern(format)),","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"                        LocalDateTime.now().toLocalTime());","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"                fromHasTime \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"                //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"                continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"        if (fromHasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"            for (String format : DATE_TIME_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"                try {","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"                    this.from \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"                } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"                    //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"                    continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"     * Parses the end inputted by the user into a LocalDateTime format.","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"     * @param to The end point inputted by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"daytona65"},"content":"    private void parseTo(String to) {","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"        for (String format : DATE_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"daytona65"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"daytona65"},"content":"                this.to \u003d LocalDateTime.of(LocalDate.parse(to, DateTimeFormatter.ofPattern(format)),","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"daytona65"},"content":"                        LocalDateTime.now().toLocalTime());","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"daytona65"},"content":"                toHasTime \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"daytona65"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"daytona65"},"content":"                //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"daytona65"},"content":"                continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"daytona65"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"daytona65"},"content":"        if (toHasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"daytona65"},"content":"            for (String format : DATE_TIME_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"daytona65"},"content":"                try {","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"daytona65"},"content":"                    this.to \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"daytona65"},"content":"                } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"daytona65"},"content":"                    //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"daytona65"},"content":"                    continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"daytona65"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"daytona65"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":115,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"daytona65"},"content":"     * Returns the String start point inputted by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"daytona65"},"content":"     * @return The String start point inputted by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"daytona65"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"daytona65"},"content":"        return stringFrom;","lastModifiedDate":"2023-02-04"},{"lineNumber":122,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"daytona65"},"content":"     * Returns the String end point inputted by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"daytona65"},"content":"     * @return The String end point inputted by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"daytona65"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"daytona65"},"content":"        return stringTo;","lastModifiedDate":"2023-02-04"},{"lineNumber":131,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"daytona65"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"daytona65"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":139,"author":{"gitId":"daytona65"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":140,"author":{"gitId":"daytona65"},"content":"        String fromPrint;","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"daytona65"},"content":"        String toPrint;","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"daytona65"},"content":"        if (fromHasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"daytona65"},"content":"            fromPrint \u003d from.format(DISPLAY_DATE_TIME_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"daytona65"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"daytona65"},"content":"            fromPrint \u003d from.toLocalDate().format(DISPLAY_DATE_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"daytona65"},"content":"        if (toHasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"daytona65"},"content":"            toPrint \u003d to.format(DISPLAY_DATE_TIME_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"daytona65"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"daytona65"},"content":"            toPrint \u003d to.toLocalDate().format(DISPLAY_DATE_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"daytona65"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromPrint + \" to: \" + toPrint + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":154,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"daytona65":154}},{"path":"src/main/java/duke/task/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"public enum Priority {","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"    HIGH(\"h\"),","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"    MEDIUM(\"m\"),","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"    LOW(\"l\");","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"    private final String value;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"    Priority(String value) {","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"     * Returns Priority value from a given char.","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"     * @param value Given char","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"     * @return Corresponding Priority value","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    public static Priority priorityValue(char value) {","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"        switch(value) {","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"            case \u0027h\u0027:","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"                return Priority.HIGH;","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"            case \u0027m\u0027:","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"                return Priority.MEDIUM;","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"            case \u0027l\u0027:","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"                return Priority.LOW;","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"            default:","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"                return null;","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"     * Returns short form of the priority.","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"     * @return Short form of the priority.","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"    public String shortString() {","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"        return value;","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"daytona65":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":" * The Task class.","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"    protected String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"    protected Priority priority;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"     * Constructor to create a Task.","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"        assert !description.isEmpty();","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"        this.priority \u003d Priority.LOW;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"     * Return the task\u0027s priority.","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"     * @return String representation of the priority.","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    public String getPriority() {","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"        return priority.toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"     * Return the task\u0027s priority in short form.","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"     * @return String representation of the priority in short form.","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"    public String getShortPriority() {","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"        return priority.shortString();","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"     * Sets the tasks\u0027 priority.","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"     * @param priority Priority to be set to.","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"    public void setPriority(Priority priority) {","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"     * Returns X if the task is done, and whitespace if the task is not done.","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"     * @return The string representation of whether the task is done or not.","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"     * Returns description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"        return this.description;","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"     * @return Boolean representing if the task is done or not.","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"        return isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"     * String representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"daytona65"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"daytona65"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":97,"author":{"gitId":"daytona65"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \"[\" + priority + \"] \" + getDescription();","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":99,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daytona65":99}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":" * The ToDo task which stores the task description.","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"     * Constructor to create a ToDo task.","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"daytona65":26}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"    public void testToString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"            Deadline deadline \u003d new Deadline(\"Eat food\", \"08/02/2023 16:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"            assertEquals(\"[D][ ][LOW] Eat food (by: 08 Feb 2023 4 PM)\", deadline.toString());","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    public void testGetBy() {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"            Deadline deadline \u003d new Deadline(\"Eat food\", \"08/02/2023 16:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"            assertEquals(\"08/02/2023 16:00\", deadline.getBy());","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"daytona65":28}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"public class EventTest {","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"    public void testToString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"            Event event \u003d new Event(\"Eat food\", \"08/02/2023 16:00\", \"08/02/2023 18:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"            assertEquals(\"[E][ ][LOW] Eat food (from: 08 Feb 2023 4 PM to: 08 Feb 2023 6 PM)\", event.toString());","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    public void testGetFrom() {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"            Event event \u003d new Event(\"Eat food\", \"08/02/2023 16:00\", \"08/02/2023 18:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"            assertEquals(\"08/02/2023 16:00\", event.getFrom());","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"    public void testGetTo() {","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"            Event event \u003d new Event(\"Eat food\", \"08/02/2023 16:00\", \"08/02/2023 18:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"            assertEquals(\"08/02/2023 18:00\", event.getTo());","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"daytona65":38}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"    public void testToString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"        ToDo todo \u003d new ToDo(\"Eat food\");","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"        assertEquals(\"[T][ ][LOW] Eat food\", todo.toString());","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"daytona65":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"todo return some books","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"deadline complete assignment /by Monday 2359","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"event CS2103T lecture /from Monday 1000 /to Monday 1200","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"mark 1","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"list","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"unmark 1","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"todo","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"daytona65":7}}]
