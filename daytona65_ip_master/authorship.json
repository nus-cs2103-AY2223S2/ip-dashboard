[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"javafx {","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"    version \u003d \"16\"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    implementation \u0027net.runeduniverse.lib.utils:utils-scanner:1.0.6\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"daytona65":24,"-":40}},{"path":"src/main/java/GUI/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package GUI;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"    private Label text;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"daytona65":24}},{"path":"src/main/java/GUI/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package GUI;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"public class Launcher {","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"daytona65":12}},{"path":"src/main/java/GUI/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package GUI;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"        });","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"        });","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"        stage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"        stage.show(); // Render the stage.","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"     * Iteration 1:","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"daytona65"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"daytona65"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"daytona65"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"daytona65"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"daytona65"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"daytona65"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"daytona65"},"content":"        return textToAdd;","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"daytona65"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"daytona65"},"content":"        new Duke(\"data.txt\").run();","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"daytona65":105}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":" * A task management program that reads user input to create and delete tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"public class Duke {","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"     * Constructor to create an instance of Duke.","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"     * @param filePath The file path to where the list of tasks is stored.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"        tasks \u003d storage.readData();","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"     * Starts the Duke program.","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    public void run() {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"        Ui.welcomeMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"        Parser parser \u003d new Parser(new Scanner(System.in));","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"            while (parser.notDone()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"                tasks \u003d parser.parse(tasks);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"            System.out.println(\"ParseError: \" + e);","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"        } finally {","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"            storage.writeData();","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"            Ui.farewellMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"daytona65":40,"-":1}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":" * Parses all user input into commands such as bye, list, mark, unmark, and the 3 tasks ToDo, Deadline and Event.","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":" * Executes the commands.","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"public class Parser {","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    private Scanner sc;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    private boolean parserIsDone;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"     * Constructor to create a Parser object.","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"     * @param sc The Scanner that takes input from the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"    public Parser(Scanner sc) {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"        this.parserIsDone \u003d false;","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"     * Parses the user input into commands for Duke.","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"     * @param tasks The task list to be modified.","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"     * @return The task list after parsing through user input from the scanner.","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"    public TaskList parse(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"        if (isFind(input)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"            return find(input, tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"        }else if (isBye(input)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"            return bye(tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"        } else if (isList(input)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"            Ui.listMessage(tasks);","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"        } else if (isMark(input, tasks.size())) {","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"            return mark(input, tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"        } else if (isUnMark(input, tasks.size())) {","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"            return unMark(input, tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"        } else if (isDelete(input, tasks.size())) {","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"            return delete(input, tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"            if (isToDo(input)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"                tasks.add(newToDo(input, tasks.size()));","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"            } else if (isDeadline(input)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"                tasks.add(newDeadline(input, tasks.size()));","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"            } else if (isEvent(input)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"                tasks.add(newEvent(input, tasks.size()));","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"            } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"                throw new DukeException(\"Please input a task with either todo, deadline or event prefixed!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"     * Checks if the parser is done parsing.","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the parser is done parsing.","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"    public boolean notDone() {","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"        return !parserIsDone;","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is a find command.","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is a find command.","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"    public boolean isFind(String input) {","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"        return input.length() \u003e\u003d 6 \u0026\u0026 input.startsWith(\"find \");","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"     * Searches for and prints out a list of tasks containing the queried term in a find command.","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"     * @param tasks The TaskList to be searched.","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"     * @return The original TaskList unmodified.","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"    public TaskList find(String input, TaskList tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"daytona65"},"content":"        String searchFor \u003d input.substring(5);","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"        TaskList found \u003d new TaskList();","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"daytona65"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"daytona65"},"content":"            if (tasks.get(i).getDescription().contains(searchFor)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"daytona65"},"content":"                found.add(tasks.get(i));","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"daytona65"},"content":"        Ui.findMessage(searchFor, found);","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is a bye command.","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is a bye command.","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"daytona65"},"content":"    public boolean isBye(String input) {","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"daytona65"},"content":"        return \"bye\".equals(input);","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is a list command.","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is a list command.","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"daytona65"},"content":"    public boolean isList(String input) {","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"daytona65"},"content":"        return \"list\".equals(input);","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":120,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":121,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is a mark command.","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is a mark command.","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"daytona65"},"content":"    public boolean isMark(String input, int listSize) {","lastModifiedDate":"2023-02-04"},{"lineNumber":128,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d  6 \u0026\u0026 input.startsWith(\"mark \") \u0026\u0026 isNumeric(input.substring(5))) {","lastModifiedDate":"2023-02-04"},{"lineNumber":129,"author":{"gitId":"daytona65"},"content":"            int taskindex \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":130,"author":{"gitId":"daytona65"},"content":"            return !(taskindex \u003c 0 || taskindex \u003e listSize - 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":131,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":132,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":134,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":135,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is an unmark command.","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is a unmark command.","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"daytona65"},"content":"    public boolean isUnMark(String input, int listSize) {","lastModifiedDate":"2023-02-04"},{"lineNumber":142,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d  8 \u0026\u0026 input.startsWith(\"unmark \") \u0026\u0026 isNumeric(input.substring(7))) {","lastModifiedDate":"2023-02-04"},{"lineNumber":143,"author":{"gitId":"daytona65"},"content":"            int taskindex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":144,"author":{"gitId":"daytona65"},"content":"            return !(taskindex \u003c 0 || taskindex \u003e listSize - 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":145,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":146,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":147,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":148,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":149,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is a delete command.","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is a delete command.","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"daytona65"},"content":"    public boolean isDelete(String input, int listSize) {","lastModifiedDate":"2023-02-04"},{"lineNumber":156,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d  8 \u0026\u0026 input.startsWith(\"delete \") \u0026\u0026 isNumeric(input.substring(7))) {","lastModifiedDate":"2023-02-04"},{"lineNumber":157,"author":{"gitId":"daytona65"},"content":"            int taskindex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":158,"author":{"gitId":"daytona65"},"content":"            return !(taskindex \u003c 0 || taskindex \u003e listSize - 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":159,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":160,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":161,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":162,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":163,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":164,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is a ToDo task.","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":166,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":167,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is a ToDo task.","lastModifiedDate":"2023-02-12"},{"lineNumber":168,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":169,"author":{"gitId":"daytona65"},"content":"    public boolean isToDo(String input) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":170,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d 4 \u0026\u0026 input.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":171,"author":{"gitId":"daytona65"},"content":"            if (input.equals(\"todo\") || input.substring(4).isBlank()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":172,"author":{"gitId":"daytona65"},"content":"                throw new DukeException(\"TODO needs a description!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":173,"author":{"gitId":"daytona65"},"content":"            } else return input.startsWith(\"todo \");","lastModifiedDate":"2023-02-04"},{"lineNumber":174,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":175,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":176,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":177,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":178,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":179,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is a Deadline task.","lastModifiedDate":"2023-02-12"},{"lineNumber":180,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":181,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":182,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is a Deadline task.","lastModifiedDate":"2023-02-12"},{"lineNumber":183,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":184,"author":{"gitId":"daytona65"},"content":"    public boolean isDeadline(String input) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":185,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d 8 \u0026\u0026 input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":186,"author":{"gitId":"daytona65"},"content":"            if (input.equals(\"deadline\") || input.substring(8).isBlank() || input.equals(\"deadline /by\") || input.equals(\"deadline /by \")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":187,"author":{"gitId":"daytona65"},"content":"                throw new DukeException(\"DEADLINE needs a description!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":188,"author":{"gitId":"daytona65"},"content":"            } else return input.contains(\" /by \");","lastModifiedDate":"2023-02-04"},{"lineNumber":189,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":190,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":191,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":192,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":193,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":194,"author":{"gitId":"daytona65"},"content":"     * Checks if the user input is an Event task.","lastModifiedDate":"2023-02-12"},{"lineNumber":195,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":196,"author":{"gitId":"daytona65"},"content":"     * @param input The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":197,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing whether the user input is an Event task.","lastModifiedDate":"2023-02-12"},{"lineNumber":198,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":199,"author":{"gitId":"daytona65"},"content":"    public boolean isEvent(String input) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":200,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d 5 \u0026\u0026 input.startsWith(\"event\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":201,"author":{"gitId":"daytona65"},"content":"            if (input.equals(\"event\") || input.substring(5).isBlank()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":202,"author":{"gitId":"daytona65"},"content":"                throw new DukeException(\"EVENT needs a description!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":203,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":204,"author":{"gitId":"daytona65"},"content":"            int fromdex \u003d input.indexOf(\" /from \");","lastModifiedDate":"2023-02-04"},{"lineNumber":205,"author":{"gitId":"daytona65"},"content":"            int todex \u003d input.indexOf(\" /to \");","lastModifiedDate":"2023-02-04"},{"lineNumber":206,"author":{"gitId":"daytona65"},"content":"            if (fromdex + 7 \u003e todex) {","lastModifiedDate":"2023-02-04"},{"lineNumber":207,"author":{"gitId":"daytona65"},"content":"                throw new DukeException(\"What are you saying?\");","lastModifiedDate":"2023-02-04"},{"lineNumber":208,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":209,"author":{"gitId":"daytona65"},"content":"            return true;","lastModifiedDate":"2023-02-04"},{"lineNumber":210,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":211,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":212,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":213,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":214,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":215,"author":{"gitId":"daytona65"},"content":"     * Ends the parser.","lastModifiedDate":"2023-02-12"},{"lineNumber":216,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":217,"author":{"gitId":"daytona65"},"content":"     * @param tasks The current Task List.","lastModifiedDate":"2023-02-12"},{"lineNumber":218,"author":{"gitId":"daytona65"},"content":"     * @return The current Task List.","lastModifiedDate":"2023-02-12"},{"lineNumber":219,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":220,"author":{"gitId":"daytona65"},"content":"    public TaskList bye(TaskList tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":221,"author":{"gitId":"daytona65"},"content":"        parserIsDone \u003d true;","lastModifiedDate":"2023-02-12"},{"lineNumber":222,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":223,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":224,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":225,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":226,"author":{"gitId":"daytona65"},"content":"     * Marks the user-specified item in the Task List.","lastModifiedDate":"2023-02-12"},{"lineNumber":227,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":228,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-12"},{"lineNumber":229,"author":{"gitId":"daytona65"},"content":"     * @param tasks The current Task List.","lastModifiedDate":"2023-02-12"},{"lineNumber":230,"author":{"gitId":"daytona65"},"content":"     * @return The Task List with the specified item marked.","lastModifiedDate":"2023-02-12"},{"lineNumber":231,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":232,"author":{"gitId":"daytona65"},"content":"    public TaskList mark(String input, TaskList tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":233,"author":{"gitId":"daytona65"},"content":"        int taskindex \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":234,"author":{"gitId":"daytona65"},"content":"        tasks.get(taskindex).markAsDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":235,"author":{"gitId":"daytona65"},"content":"        Ui.markMessage(tasks.get(taskindex));","lastModifiedDate":"2023-02-12"},{"lineNumber":236,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":237,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":238,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":239,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":240,"author":{"gitId":"daytona65"},"content":"     * Unmarks the user-specified item in the Task List.","lastModifiedDate":"2023-02-12"},{"lineNumber":241,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":242,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-12"},{"lineNumber":243,"author":{"gitId":"daytona65"},"content":"     * @param tasks The current Task List.","lastModifiedDate":"2023-02-12"},{"lineNumber":244,"author":{"gitId":"daytona65"},"content":"     * @return The Task List with the specified item unmarked.","lastModifiedDate":"2023-02-12"},{"lineNumber":245,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":246,"author":{"gitId":"daytona65"},"content":"    public TaskList unMark(String input, TaskList tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":247,"author":{"gitId":"daytona65"},"content":"        int taskindex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":248,"author":{"gitId":"daytona65"},"content":"        tasks.get(taskindex).markAsNotDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":249,"author":{"gitId":"daytona65"},"content":"        Ui.unmarkMessage(tasks.get(taskindex));","lastModifiedDate":"2023-02-12"},{"lineNumber":250,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":251,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":252,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":253,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":254,"author":{"gitId":"daytona65"},"content":"     * Deletes the user-specified item in the Task List.","lastModifiedDate":"2023-02-12"},{"lineNumber":255,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":256,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-12"},{"lineNumber":257,"author":{"gitId":"daytona65"},"content":"     * @param tasks The current Task List.","lastModifiedDate":"2023-02-12"},{"lineNumber":258,"author":{"gitId":"daytona65"},"content":"     * @return The Task List with the specified item deleted.","lastModifiedDate":"2023-02-12"},{"lineNumber":259,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":260,"author":{"gitId":"daytona65"},"content":"    public TaskList delete(String input, TaskList tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":261,"author":{"gitId":"daytona65"},"content":"        int taskindex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":262,"author":{"gitId":"daytona65"},"content":"        tasks.remove(taskindex);","lastModifiedDate":"2023-02-12"},{"lineNumber":263,"author":{"gitId":"daytona65"},"content":"        Ui.deleteMessage(tasks.get(taskindex));","lastModifiedDate":"2023-02-12"},{"lineNumber":264,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":265,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":266,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":267,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":268,"author":{"gitId":"daytona65"},"content":"     * Creates a new ToDo task and prints a message for the user","lastModifiedDate":"2023-02-12"},{"lineNumber":269,"author":{"gitId":"daytona65"},"content":"     * confirming the addition of the task to the Task List.","lastModifiedDate":"2023-02-12"},{"lineNumber":270,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":271,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-12"},{"lineNumber":272,"author":{"gitId":"daytona65"},"content":"     * @param taskSize The current Task List size.","lastModifiedDate":"2023-02-12"},{"lineNumber":273,"author":{"gitId":"daytona65"},"content":"     * @return The created task.","lastModifiedDate":"2023-02-12"},{"lineNumber":274,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":275,"author":{"gitId":"daytona65"},"content":"    public Task newToDo(String input, int taskSize) {","lastModifiedDate":"2023-02-12"},{"lineNumber":276,"author":{"gitId":"daytona65"},"content":"        Task task \u003d new ToDo(input.substring(5));","lastModifiedDate":"2023-02-12"},{"lineNumber":277,"author":{"gitId":"daytona65"},"content":"        Ui.addMessage(task, taskSize);","lastModifiedDate":"2023-02-12"},{"lineNumber":278,"author":{"gitId":"daytona65"},"content":"        return task;","lastModifiedDate":"2023-02-12"},{"lineNumber":279,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":280,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":281,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":282,"author":{"gitId":"daytona65"},"content":"     * Creates a new Deadline task and prints a message for the user","lastModifiedDate":"2023-02-12"},{"lineNumber":283,"author":{"gitId":"daytona65"},"content":"     * confirming the addition of the task to the Task List.","lastModifiedDate":"2023-02-12"},{"lineNumber":284,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":285,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-12"},{"lineNumber":286,"author":{"gitId":"daytona65"},"content":"     * @param taskSize The current Task List size.","lastModifiedDate":"2023-02-12"},{"lineNumber":287,"author":{"gitId":"daytona65"},"content":"     * @return The created task.","lastModifiedDate":"2023-02-12"},{"lineNumber":288,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":289,"author":{"gitId":"daytona65"},"content":"    public Task newDeadline(String input, int taskSize) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":290,"author":{"gitId":"daytona65"},"content":"        int index \u003d input.indexOf(\" /by \");","lastModifiedDate":"2023-02-12"},{"lineNumber":291,"author":{"gitId":"daytona65"},"content":"        Task task \u003d new Deadline(input.substring(9, index), input.substring(index + 5));","lastModifiedDate":"2023-02-12"},{"lineNumber":292,"author":{"gitId":"daytona65"},"content":"        Ui.addMessage(task, taskSize);","lastModifiedDate":"2023-02-12"},{"lineNumber":293,"author":{"gitId":"daytona65"},"content":"        return task;","lastModifiedDate":"2023-02-12"},{"lineNumber":294,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":295,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":296,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":297,"author":{"gitId":"daytona65"},"content":"     * Creates a new Event task and prints a message for the user","lastModifiedDate":"2023-02-12"},{"lineNumber":298,"author":{"gitId":"daytona65"},"content":"     * confirming the addition of the task to the Task List.","lastModifiedDate":"2023-02-12"},{"lineNumber":299,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":300,"author":{"gitId":"daytona65"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-12"},{"lineNumber":301,"author":{"gitId":"daytona65"},"content":"     * @param taskSize The current Task List size.","lastModifiedDate":"2023-02-12"},{"lineNumber":302,"author":{"gitId":"daytona65"},"content":"     * @return The created task.","lastModifiedDate":"2023-02-12"},{"lineNumber":303,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":304,"author":{"gitId":"daytona65"},"content":"    public Task newEvent(String input, int taskSize) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":305,"author":{"gitId":"daytona65"},"content":"        int fromIndex \u003d input.indexOf(\" /from \");","lastModifiedDate":"2023-02-12"},{"lineNumber":306,"author":{"gitId":"daytona65"},"content":"        int toIndex \u003d input.indexOf(\" /to \");","lastModifiedDate":"2023-02-12"},{"lineNumber":307,"author":{"gitId":"daytona65"},"content":"        Task task \u003d new Event(input.substring(6, fromIndex), input.substring(fromIndex + 7, toIndex),","lastModifiedDate":"2023-02-12"},{"lineNumber":308,"author":{"gitId":"daytona65"},"content":"                input.substring(toIndex + 5));","lastModifiedDate":"2023-02-12"},{"lineNumber":309,"author":{"gitId":"daytona65"},"content":"        Ui.addMessage(task, taskSize);","lastModifiedDate":"2023-02-12"},{"lineNumber":310,"author":{"gitId":"daytona65"},"content":"        return task;","lastModifiedDate":"2023-02-12"},{"lineNumber":311,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":312,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":313,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":314,"author":{"gitId":"daytona65"},"content":"     * Checks if a String is an Integer.","lastModifiedDate":"2023-02-12"},{"lineNumber":315,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":316,"author":{"gitId":"daytona65"},"content":"     * @param strNum The input String.","lastModifiedDate":"2023-02-12"},{"lineNumber":317,"author":{"gitId":"daytona65"},"content":"     * @return The boolean representing if the String is an Integer.","lastModifiedDate":"2023-02-12"},{"lineNumber":318,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":319,"author":{"gitId":"daytona65"},"content":"    private boolean isNumeric(String strNum) {","lastModifiedDate":"2023-02-12"},{"lineNumber":320,"author":{"gitId":"daytona65"},"content":"        if (strNum \u003d\u003d null) {","lastModifiedDate":"2023-02-04"},{"lineNumber":321,"author":{"gitId":"daytona65"},"content":"            return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":322,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":323,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":324,"author":{"gitId":"daytona65"},"content":"            int d \u003d Integer.parseInt(strNum);","lastModifiedDate":"2023-02-04"},{"lineNumber":325,"author":{"gitId":"daytona65"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-02-04"},{"lineNumber":326,"author":{"gitId":"daytona65"},"content":"            return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":327,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":328,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":329,"author":{"gitId":"daytona65"},"content":"        return true;","lastModifiedDate":"2023-02-04"},{"lineNumber":330,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":331,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"daytona65":331}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"import java.io.File;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":" * Manages all storage reading and writing functions. Uses file path to read and write to a","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":" * specific location on the hard disk.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"public class Storage {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    private String filePath;","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"     * Constructor to create a Storage object to store the Task List.","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"     * @param filePath The file path to where the list of tasks is stored.","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"            File data \u003d new File(filePath);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"            data.createNewFile();","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"            Ui.errorMessage(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"     * Reads data from storage into the current Task List.","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"     * @return The Task List read from storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"    public TaskList readData() {","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"            File data \u003d new File(filePath);","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"            Scanner sc \u003d new Scanner(data);","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"            readScanner(sc);","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"            Ui.errorMessage(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"     * Writes data from the current Task List into storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"    public void writeData() {","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"            File data \u003d new File(filePath);","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"            FileWriter writer \u003d new FileWriter(data);","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"            writeFromTasks(writer);","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"            writer.close();","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"            Ui.errorMessage(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"     * Parses data from storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"     * @param sc The Scanner reading from storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"    public void readScanner(Scanner sc) {","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"            String Line \u003d sc.nextLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"            char Type \u003d Line.charAt(0);","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"            int isDone \u003d Integer.parseInt(Character.toString(Line.charAt(2)));","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"            if (Type \u003d\u003d \u0027T\u0027) { // T 1 read book","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"                readToDo(Line, isDone);","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"            } else if (Type \u003d\u003d \u0027D\u0027) { // D 1 read book | June 12 4pm","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"                readDeadline(Line, isDone);","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"            } else if (Type \u003d\u003d \u0027E\u0027) { // E 1 read book | June 12 4pm | June 13 4pm","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"                readEvent(Line, isDone);","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"daytona65"},"content":"     * Parses data from tasks and writes it into storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"daytona65"},"content":"     * @param writer The FileWriter writing into storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"daytona65"},"content":"    public void writeFromTasks(FileWriter writer) throws IOException {","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"daytona65"},"content":"        while (!tasks.isEmpty()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"daytona65"},"content":"            Task task \u003d tasks.remove(0);","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"daytona65"},"content":"            String isDone \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"daytona65"},"content":"            String writeTask \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"daytona65"},"content":"            if(task.isDone()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"daytona65"},"content":"                isDone \u003d \"1\";","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"daytona65"},"content":"            } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"daytona65"},"content":"                isDone \u003d \"0\";","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"daytona65"},"content":"            if (task instanceof ToDo) {","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"daytona65"},"content":"                writeTask \u003d \"T \" + isDone + \" \" + task.getDescription() + \"\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"daytona65"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"daytona65"},"content":"                writeTask +\u003d \"D \" + isDone + \" \" + task.getDescription() + \" | \" + ((Deadline) task).getBy() + \"\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"daytona65"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"daytona65"},"content":"                writeTask +\u003d \"E \" + isDone + \" \" + task.getDescription() + \" | \" + ((Event) task).getFrom() + \" | \"","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"daytona65"},"content":"                        + ((Event) task).getTo() + \"\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"daytona65"},"content":"            writer.write(writeTask);","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":116,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"daytona65"},"content":"     * Reads a ToDo task from storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"daytona65"},"content":"     * @param Line The next line in the data.","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"daytona65"},"content":"     * @param isDone Status of the task being read.","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"daytona65"},"content":"    public void readToDo(String Line, int isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"daytona65"},"content":"        String description \u003d Line.substring(4);","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"daytona65"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"daytona65"},"content":"        if (isDone \u003d\u003d 1) {","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"daytona65"},"content":"            task.markAsDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"daytona65"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"daytona65"},"content":"     * Reads a Deadline task from storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"daytona65"},"content":"     * @param Line The next line in the data.","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"daytona65"},"content":"     * @param isDone Status of the task being read.","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"daytona65"},"content":"    public void readDeadline(String Line, int isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"daytona65"},"content":"        int dividerIndex \u003d Line.indexOf(\u0027|\u0027);","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"daytona65"},"content":"        String description \u003d Line.substring(4, dividerIndex - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"daytona65"},"content":"        String by \u003d Line.substring(dividerIndex + 2);","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"daytona65"},"content":"            Task task \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"daytona65"},"content":"            if (isDone \u003d\u003d 1) {","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"daytona65"},"content":"                task.markAsDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"daytona65"},"content":"            tasks.add(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"daytona65"},"content":"            Ui.errorMessage(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"daytona65"},"content":"     * Reads a Event task from storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"daytona65"},"content":"     * @param Line The next line in the data.","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"daytona65"},"content":"     * @param isDone Status of the task being read.","lastModifiedDate":"2023-02-12"},{"lineNumber":158,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":159,"author":{"gitId":"daytona65"},"content":"    public void readEvent(String Line, int isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":160,"author":{"gitId":"daytona65"},"content":"        int firstDividerIndex \u003d Line.indexOf(\u0027|\u0027);","lastModifiedDate":"2023-02-12"},{"lineNumber":161,"author":{"gitId":"daytona65"},"content":"        int lastDividerIndex \u003d Line.lastIndexOf(\u0027|\u0027);","lastModifiedDate":"2023-02-12"},{"lineNumber":162,"author":{"gitId":"daytona65"},"content":"        String description \u003d Line.substring(4, firstDividerIndex - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":163,"author":{"gitId":"daytona65"},"content":"        String from \u003d Line.substring(firstDividerIndex + 2, lastDividerIndex - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":164,"author":{"gitId":"daytona65"},"content":"        String to \u003d Line.substring(lastDividerIndex + 2);","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":166,"author":{"gitId":"daytona65"},"content":"            Task task \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-12"},{"lineNumber":167,"author":{"gitId":"daytona65"},"content":"            if (isDone \u003d\u003d 1) {","lastModifiedDate":"2023-02-12"},{"lineNumber":168,"author":{"gitId":"daytona65"},"content":"                task.markAsDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":169,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":170,"author":{"gitId":"daytona65"},"content":"            tasks.add(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":171,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":172,"author":{"gitId":"daytona65"},"content":"            Ui.errorMessage(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":173,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":174,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":175,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"daytona65":175}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":" * TaskList class that stores tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"public class TaskList {","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"    private ArrayList\u003cTask\u003e tasklist;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"     * Constructor to create a TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"        this.tasklist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"     * Returns the size of the TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"     * @return Size of the TaskList","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"    public int size() {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"        return tasklist.size();","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"     * Returns the task at the specified index in the TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"     * @param index The specified index of the task to be returned.","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"     * @return Task at specified index.","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"        return tasklist.get(index);","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"        tasklist.add(task);","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"     * Removes the task at the specified index in the TaskList and returns it.","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"     * @param index The specified index.","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"     * @return The task removed.","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"    public Task remove(int index) {","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"        return tasklist.remove(index);","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"     * Checks if the TaskList is empty.","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"     * @return Boolean representing if the TaskList is empty.","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"        return tasklist.isEmpty();","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"daytona65":66}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":" * User Interface class that manages messages being shown to the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"public class Ui {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"     * Constructor that creates an instance of Ui.","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"    public Ui() {","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"     * Prints the given TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"     * @param tasks The TaskList to be printed.","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"    public static void listMessage(TaskList tasks) {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"            System.out.println(j + \".\" + tasks.get(i).toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"     * Prints the TaskList containing the queried term in a find command.","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"     * @param searchFor The queried term.","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"     * @param tasks The TaskList to be printed.","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"    public static void findMessage(String searchFor, TaskList tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"        System.out.println(\"Here are the tasks in your list that contain [\" + searchFor + \"]:\");","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"            System.out.println(j + \".\" + tasks.get(i).toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"     * Prints the marked task.","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"     * @param task The task marked as done.","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"    public static void markMessage(Task task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"        System.out.println(\"Solid! I\u0027m marking this task as done:\\n\" + task);","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"     * Prints the unmarked task.","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"     * @param task The task marked as not done.","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"    public static void unmarkMessage(Task task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"        System.out.println(\"Aight, marking this as not done:\\n\" + task);","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"     * Prints the deleted task.","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"     * @param task The task deleted.","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"    public static void deleteMessage(Task task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"        System.out.println(\"Swee! One less task to go! Removing...\\n\" + task);","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"     * Prints the added task.","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"     * @param task The task added to the TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"    public static void addMessage(Task task, int taskListSize) {","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"        System.out.println(\"Roger. This task has been added:\\n\" + \"  \" + task);","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"        System.out.println(\"Now you have \" + taskListSize + \" tasks in your list.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"     * Welcome message during startup.","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"    public static void welcomeMessage() {","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"        System.out.println(\"Hello.\\n\" + \"I am a task organizer!\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"     * Farewell message on bye command.","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"daytona65"},"content":"    public static void farewellMessage() {","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"        System.out.println(\"Writing list to storage. Kay thanks bye!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"daytona65"},"content":"     * Prints the given Exception\u0027s error message.","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"daytona65"},"content":"     * @param e The given Exception.","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"daytona65"},"content":"    public static void errorMessage(Exception e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"daytona65"},"content":"        System.out.println(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"daytona65":102}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.exception;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"        super(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"daytona65":7}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":" * The Deadline task which stores the task description and when the task is due.","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"    protected String stringBy;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    protected boolean hasTime \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    private static final String[] DATE_FORMATS \u003d {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"            \"dd-MM-yyyy\",","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"            \"dd/MM/yyyy\",","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"            \"yyyy-MM-dd\",","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"            \"yyyy/MM/dd\"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"    };","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"    private static final String[] DATE_TIME_FORMATS \u003d {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"            \"dd-MM-yyyy HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"            \"dd/MM/yyyy HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"            \"yyyy-MM-dd HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"            \"yyyy/MM/dd HH:mm\"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"    };","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    private static final DateTimeFormatter DISPLAY_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"    private static final DateTimeFormatter DISPLAY_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h a\");","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"     * Constructor to create a Deadline task.","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"        stringBy \u003d by;","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"        for (String format : DATE_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"                this.by \u003d LocalDateTime.of(LocalDate.parse(by, DateTimeFormatter.ofPattern(format)),","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"                        LocalDateTime.now().toLocalTime());","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"                hasTime \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"                //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"                continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"        if (hasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"            for (String format : DATE_TIME_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"                try {","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"                    this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"                } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"                    //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"                    continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"        if (this.by \u003d\u003d null) {","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"            throw new DukeException(\"Invalid format for /by field!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"     * Returns the deadline of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"     * @return The deadline of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"        return stringBy;","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"        if (hasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by.format(DISPLAY_DATE_TIME_FORMAT) + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by.toLocalDate().format(DISPLAY_DATE_FORMAT) + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"daytona65":92}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":" * The Event task which stores the task description and the start and end of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    protected String stringFrom;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    protected String stringTo;","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    protected boolean fromHasTime \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    protected boolean toHasTime \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    private static final String[] DATE_FORMATS \u003d {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"            \"dd-MM-yyyy\",","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"            \"dd/MM/yyyy\",","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"            \"yyyy-MM-dd\",","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"            \"yyyy/MM/dd\"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"    };","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    private static final String[] DATE_TIME_FORMATS \u003d {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"            \"dd-MM-yyyy HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"            \"dd/MM/yyyy HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"            \"yyyy-MM-dd HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"            \"yyyy/MM/dd HH:mm\"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"    };","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"    private static final DateTimeFormatter DISPLAY_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"    private static final DateTimeFormatter DISPLAY_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h a\");","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"     * Constructor to create an Event task.","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"     * @param from The start point of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"     * @param to The end point of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"        stringFrom \u003d from;","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"        stringTo \u003d to;","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"        parseFrom(from);","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"        parseTo(to);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"        if (from \u003d\u003d null || to \u003d\u003d null) {","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"            throw new DukeException(\"Invalid format for /from and /to fields!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"     * Parses the start inputted by the user into a LocalDateTime format.","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"     * @param from The start point inputted by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"    private void parseFrom(String from) {","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"        for (String format : DATE_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"                this.from \u003d LocalDateTime.of(LocalDate.parse(from, DateTimeFormatter.ofPattern(format)),","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"                        LocalDateTime.now().toLocalTime());","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"                fromHasTime \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"                //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"                continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"        if (fromHasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"            for (String format : DATE_TIME_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"                try {","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"                    this.from \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"                } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"                    //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"                    continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"     * Parses the end inputted by the user into a LocalDateTime format.","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"     * @param to The end point inputted by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"    private void parseTo(String to) {","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"daytona65"},"content":"        for (String format : DATE_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"daytona65"},"content":"                this.to \u003d LocalDateTime.of(LocalDate.parse(to, DateTimeFormatter.ofPattern(format)),","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"daytona65"},"content":"                        LocalDateTime.now().toLocalTime());","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"daytona65"},"content":"                toHasTime \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"daytona65"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"daytona65"},"content":"                //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"daytona65"},"content":"                continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"daytona65"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"daytona65"},"content":"        if (toHasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"daytona65"},"content":"            for (String format : DATE_TIME_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"daytona65"},"content":"                try {","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"daytona65"},"content":"                    this.to \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"daytona65"},"content":"                } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"daytona65"},"content":"                    //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"daytona65"},"content":"                    continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"daytona65"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"daytona65"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":115,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"daytona65"},"content":"     * Returns the String start point inputted by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"daytona65"},"content":"     * @return The String start point inputted by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"daytona65"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"daytona65"},"content":"        return stringFrom;","lastModifiedDate":"2023-02-04"},{"lineNumber":122,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"daytona65"},"content":"     * Returns the String end point inputted by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"daytona65"},"content":"     * @return The String end point inputted by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"daytona65"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"daytona65"},"content":"        return stringTo;","lastModifiedDate":"2023-02-04"},{"lineNumber":131,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"daytona65"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"daytona65"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":139,"author":{"gitId":"daytona65"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":140,"author":{"gitId":"daytona65"},"content":"        String fromPrint;","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"daytona65"},"content":"        String toPrint;","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"daytona65"},"content":"        if (fromHasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"daytona65"},"content":"            fromPrint \u003d from.format(DISPLAY_DATE_TIME_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"daytona65"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"daytona65"},"content":"            fromPrint \u003d from.toLocalDate().format(DISPLAY_DATE_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"daytona65"},"content":"        if (toHasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"daytona65"},"content":"            toPrint \u003d to.format(DISPLAY_DATE_TIME_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"daytona65"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"daytona65"},"content":"            toPrint \u003d to.toLocalDate().format(DISPLAY_DATE_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"daytona65"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromPrint + \" to: \" + toPrint + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":154,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"daytona65":154}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":" * The Task class.","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"    protected String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"     * Constructor to create a Task.","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"     * Returns X if the task is done, and whitespace if the task is not done.","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"     * @return The string representation of whether the task is done or not.","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"     * Returns description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"        return this.description;","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"     * @return Boolean representing if the task is done or not.","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"        return isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"     * String representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-01-21"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daytona65":69}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":" * The ToDo task which stores the task description.","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"     * Constructor to create a ToDo task.","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"daytona65":26}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"    public void testToString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"            Deadline deadline \u003d new Deadline(\"Eat food\", \"08/02/2023 16:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"            assertEquals(\"[D][ ] Eat food (by: 08 Feb 2023 4 PM)\", deadline.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    public void testGetBy() {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"            Deadline deadline \u003d new Deadline(\"Eat food\", \"08/02/2023 16:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"            assertEquals(\"08/02/2023 16:00\", deadline.getBy());","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"daytona65":28}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"public class EventTest {","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"    public void testToString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"            Event event \u003d new Event(\"Eat food\", \"08/02/2023 16:00\", \"08/02/2023 18:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"            assertEquals(\"[E][ ] Eat food (from: 08 Feb 2023 4 PM to: 08 Feb 2023 6 PM)\", event.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    public void testGetFrom() {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"            Event event \u003d new Event(\"Eat food\", \"08/02/2023 16:00\", \"08/02/2023 18:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"            assertEquals(\"08/02/2023 16:00\", event.getFrom());","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"    public void testGetTo() {","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"            Event event \u003d new Event(\"Eat food\", \"08/02/2023 16:00\", \"08/02/2023 18:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"            assertEquals(\"08/02/2023 18:00\", event.getTo());","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"daytona65":38}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"    public void testToString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"        ToDo todo \u003d new ToDo(\"Eat food\");","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"        assertEquals(\"[T][ ] Eat food\", todo.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"daytona65":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"todo return some books","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"deadline complete assignment /by Monday 2359","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"event CS2103T lecture /from Monday 1000 /to Monday 1200","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"mark 1","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"list","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"unmark 1","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"todo","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"daytona65":7}}]
