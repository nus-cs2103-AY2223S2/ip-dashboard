[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"daytona65":16,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"        tasks \u003d storage.readData();","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    public void run() {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"        Ui.welcomeMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"        Parser parser \u003d new Parser(new Scanner(System.in));","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"            while (parser.notDone()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"                tasks \u003d parser.parse(tasks);","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"            System.out.println(\"ParseError: \" + e);","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"        } finally {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"            storage.writeData();","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"            Ui.farewellMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"        new Duke(\"data.txt\").run();","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"daytona65":32,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"public class Parser {","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"    private Scanner sc;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"    public Parser(Scanner sc) {","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    public TaskList parse(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"        if (\"bye\".equals(input)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"            isDone \u003d true;","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"            return tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"        } else if (\"list\".equals(input)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"            Ui.listMessage(tasks);","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"        } else if (isMark(input, tasks.size())) {","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"            int taskindex \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"            tasks.get(taskindex).markAsDone();","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"            Ui.markMessage(tasks.get(taskindex));","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"        } else if (isUnMark(input, tasks.size())) {","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"            int taskindex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"            tasks.get(taskindex).markAsNotDone();","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"            Ui.unmarkMessage(tasks.get(taskindex));","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"        } else if (isDelete(input, tasks.size())) {","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"            int taskindex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"            tasks.remove(taskindex);","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"            Ui.deleteMessage(tasks.get(taskindex));","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"        } else { //Task Creation","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"            Task task \u003d null;","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"            if (isToDo(input)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"                task \u003d new ToDo(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"                tasks.add(task);","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"            } else if (isDeadline(input)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"                int index \u003d input.indexOf(\" /by \");","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"                task \u003d new Deadline(input.substring(0, index), input.substring(index + 5));","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"                tasks.add(task);","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"            } else if (isEvent(input)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"                int fromdex \u003d input.indexOf(\" /from \");","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"                int todex \u003d input.indexOf(\" /to \");","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"                task \u003d new Event(input.substring(0, fromdex), input.substring(fromdex + 7, todex), input.substring(todex + 5));","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"                tasks.add(task);","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"            } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"                throw new DukeException(\"Please input a task with either todo, deadline or event prefixed!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"            Ui.addMessage(task, tasks.size());","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"    public boolean notDone() {","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"        return !isDone;","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"    public boolean isMark(String input, int listSize) {","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d  6 \u0026\u0026 input.startsWith(\"mark \") \u0026\u0026 isNumeric(input.substring(5))) {","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"            int taskindex \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"            return !(taskindex \u003c 0 || taskindex \u003e listSize - 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"    public boolean isUnMark(String input, int listSize) {","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d  8 \u0026\u0026 input.startsWith(\"unmark \") \u0026\u0026 isNumeric(input.substring(7))) {","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"            int taskindex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"            return !(taskindex \u003c 0 || taskindex \u003e listSize - 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"    public boolean isDelete(String input, int listSize) {","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d  8 \u0026\u0026 input.startsWith(\"delete \") \u0026\u0026 isNumeric(input.substring(7))) {","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"            int taskindex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"            return !(taskindex \u003c 0 || taskindex \u003e listSize - 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"    public boolean isToDo(String input) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d 4 \u0026\u0026 input.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"            if (input.equals(\"todo\") || input.substring(4).isBlank()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"daytona65"},"content":"                throw new DukeException(\"TODO needs a description!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"daytona65"},"content":"            } else return input.startsWith(\"todo \");","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"daytona65"},"content":"    public boolean isDeadline(String input) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d 8 \u0026\u0026 input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"daytona65"},"content":"            if (input.equals(\"deadline\") || input.substring(8).isBlank() || input.equals(\"deadline /by\") || input.equals(\"deadline /by \")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"daytona65"},"content":"                throw new DukeException(\"DEADLINE needs a description!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"daytona65"},"content":"            } else return input.contains(\" /by \");","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"daytona65"},"content":"    public boolean isEvent(String input) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"daytona65"},"content":"        if (input.length() \u003e\u003d 5 \u0026\u0026 input.startsWith(\"event\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"daytona65"},"content":"            if (input.equals(\"event\") || input.substring(5).isBlank()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"daytona65"},"content":"                throw new DukeException(\"EVENT needs a description!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"daytona65"},"content":"            int fromdex \u003d input.indexOf(\" /from \");","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"daytona65"},"content":"            int todex \u003d input.indexOf(\" /to \");","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"daytona65"},"content":"            if (fromdex + 7 \u003e todex) {","lastModifiedDate":"2023-02-04"},{"lineNumber":116,"author":{"gitId":"daytona65"},"content":"                throw new DukeException(\"What are you saying?\");","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":118,"author":{"gitId":"daytona65"},"content":"            return true;","lastModifiedDate":"2023-02-04"},{"lineNumber":119,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":120,"author":{"gitId":"daytona65"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":121,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":122,"author":{"gitId":"daytona65"},"content":"    public boolean isNumeric(String strNum) {","lastModifiedDate":"2023-02-04"},{"lineNumber":123,"author":{"gitId":"daytona65"},"content":"        if (strNum \u003d\u003d null) {","lastModifiedDate":"2023-02-04"},{"lineNumber":124,"author":{"gitId":"daytona65"},"content":"            return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":125,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":126,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":127,"author":{"gitId":"daytona65"},"content":"            int d \u003d Integer.parseInt(strNum);","lastModifiedDate":"2023-02-04"},{"lineNumber":128,"author":{"gitId":"daytona65"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-02-04"},{"lineNumber":129,"author":{"gitId":"daytona65"},"content":"            return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":130,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":131,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":132,"author":{"gitId":"daytona65"},"content":"        return true;","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":134,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"daytona65":134}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"import java.io.File;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"public class Storage {","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"    private String filePath;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"            File data \u003d new File(filePath);","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"            data.createNewFile();","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"            System.out.println(\"Storage constructor: \" + e);","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    public TaskList readData() {","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"            File data \u003d new File(filePath);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"            Scanner sc \u003d new Scanner(data);","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"                String Line \u003d sc.nextLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"                char Type \u003d Line.charAt(0);","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"                int isDone \u003d Integer.parseInt(Character.toString(Line.charAt(2)));","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"                Task task \u003d null;","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"                if (Type \u003d\u003d \u0027T\u0027) { // T 1 read book","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"                    String description \u003d Line.substring(4);","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"                    task \u003d new ToDo(description);","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"                    if (isDone \u003d\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"                        task.markAsDone();","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"                    }","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"                } else if (Type \u003d\u003d \u0027D\u0027) { // D 1 read book | June 12 4pm","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"                    int dividerIndex \u003d Line.indexOf(\u0027|\u0027);","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"                    String description \u003d Line.substring(4, dividerIndex - 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"                    String by \u003d Line.substring(dividerIndex + 2);","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"                    try {","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"                        task \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"                        if (isDone \u003d\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"                            task.markAsDone();","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"                        }","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"                        tasks.add(task);","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"                        continue;","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"                    }","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"                } else if (Type \u003d\u003d \u0027E\u0027) { // E 1 read book | June 12 4pm | June 13 4pm","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"                    int firstDividerIndex \u003d Line.indexOf(\u0027|\u0027);","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"                    int lastDividerIndex \u003d Line.lastIndexOf(\u0027|\u0027);","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"                    String description \u003d Line.substring(4, firstDividerIndex - 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"                    String from \u003d Line.substring(firstDividerIndex + 2, lastDividerIndex - 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"                    String to \u003d Line.substring(lastDividerIndex + 2);","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"                    try {","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"                        task \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"                        if (isDone \u003d\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"                            task.markAsDone();","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"                        }","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"                        tasks.add(task);","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"                        continue;","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"                    }","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"                }","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"            System.out.println(\"readData(): \" + e);","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"        return tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"    public void writeData() {","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"            File data \u003d new File(filePath);","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"            FileWriter writer \u003d new FileWriter(data);","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"            while (!tasks.isEmpty()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"                Task task \u003d tasks.remove(0);","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"                String isDone \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"                String writeTask \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"                if(task.isDone()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"daytona65"},"content":"                    isDone \u003d \"1\";","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"daytona65"},"content":"                } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"daytona65"},"content":"                    isDone \u003d \"0\";","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"daytona65"},"content":"                }","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"daytona65"},"content":"                if (task instanceof ToDo) {","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"daytona65"},"content":"                    writeTask \u003d \"T \" + isDone + \" \" + task.getDescription() + \"\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"daytona65"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"daytona65"},"content":"                    writeTask +\u003d \"D \" + isDone + \" \" + task.getDescription() + \" | \" + ((Deadline) task).getBy() + \"\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"daytona65"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"daytona65"},"content":"                    writeTask +\u003d \"E \" + isDone + \" \" + task.getDescription() + \" | \" + ((Event) task).getFrom() + \" | \"","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"daytona65"},"content":"                            + ((Event) task).getTo() + \"\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"daytona65"},"content":"                }","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"daytona65"},"content":"                writer.write(writeTask);","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"daytona65"},"content":"            writer.close();","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"daytona65"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"daytona65"},"content":"            System.out.println(\"writeData: \" + e);","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"daytona65":113}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"public class TaskList {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"    private ArrayList\u003cTask\u003e tasklist;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"        this.tasklist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"    public int size() {","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"        return tasklist.size();","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"        return tasklist.get(index);","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"        tasklist.add(task);","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    public Task remove(int taskindex) {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"        return tasklist.remove(taskindex);","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"        return tasklist.isEmpty();","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"daytona65":33}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"public class Ui {","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"    public Ui() {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"    public static void listMessage(TaskList tasks) {","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"            System.out.println(j + \".\" + tasks.get(i).toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"    public static void markMessage(Task task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"        System.out.println(\"Solid! I\u0027m marking this task as done:\\n\" + task);","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"    public static void unmarkMessage(Task task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"        System.out.println(\"Aight, marking this as not done:\\n\" + task);","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    public static void deleteMessage(Task task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"        System.out.println(\"Swee! One less task to go! Removing...\\n\" + task);","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"    public static void addMessage(Task task, int taskListSize) {","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"        System.out.println(\"Roger. This task has been added:\\n\" + \"  \" + task);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"        System.out.println(\"Now you have \" + taskListSize + \" tasks in your list.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"    public static void welcomeMessage() {","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"        System.out.println(\"Hello.\\n\" + \"I am a task organizer!\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"    public static void farewellMessage() {","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"        System.out.println(\"Writing list to storage. Kay thanks bye!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"daytona65":42}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.exception;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"        super(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"daytona65":7}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"    protected String stringBy;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"    protected boolean hasTime \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"    private static final String[] DATE_FORMATS \u003d {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"            \"dd-MM-yyyy\",","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"            \"dd/MM/yyyy\",","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"            \"yyyy-MM-dd\",","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"            \"yyyy/MM/dd\"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    };","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"    private static final String[] DATE_TIME_FORMATS \u003d {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"            \"dd-MM-yyyy HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"            \"dd/MM/yyyy HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"            \"yyyy-MM-dd HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"            \"yyyy/MM/dd HH:mm\"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"    };","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    private static final DateTimeFormatter DISPLAY_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"    private static final DateTimeFormatter DISPLAY_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h a\");","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"        stringBy \u003d by;","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"        for (String format : DATE_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"                this.by \u003d LocalDateTime.of(LocalDate.parse(by, DateTimeFormatter.ofPattern(format)),","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"                        LocalDateTime.now().toLocalTime());","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"                hasTime \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"                //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"                continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"        if (hasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"            for (String format : DATE_TIME_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"                try {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"                    this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"                } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"                    //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"                    continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"        if (this.by \u003d\u003d null) {","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"            throw new DukeException(\"Invalid format for /by field!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"        return stringBy;","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"        if (hasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by.format(DISPLAY_DATE_TIME_FORMAT) + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by.toLocalDate().format(DISPLAY_DATE_FORMAT) + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"daytona65":73}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"    protected String stringFrom;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"    protected String stringTo;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"    protected boolean fromHasTime \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"    protected boolean toHasTime \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    private static final String[] DATE_FORMATS \u003d {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"            \"dd-MM-yyyy\",","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"            \"dd/MM/yyyy\",","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"            \"yyyy-MM-dd\",","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"            \"yyyy/MM/dd\"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"    };","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"    private static final String[] DATE_TIME_FORMATS \u003d {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"            \"dd-MM-yyyy HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"            \"dd/MM/yyyy HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"            \"yyyy-MM-dd HH:mm\",","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"            \"yyyy/MM/dd HH:mm\"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"    };","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    private static final DateTimeFormatter DISPLAY_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"    private static final DateTimeFormatter DISPLAY_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h a\");","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"        stringFrom \u003d from;","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"        stringTo \u003d to;","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"        parseFrom(from);","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"        parseTo(to);","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"        if (from \u003d\u003d null || to \u003d\u003d null) {","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"daytona65"},"content":"            throw new DukeException(\"Invalid format for /from and /to fields!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"daytona65"},"content":"    private void parseFrom(String from) {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"daytona65"},"content":"        for (String format : DATE_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"daytona65"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"daytona65"},"content":"                this.from \u003d LocalDateTime.of(LocalDate.parse(from, DateTimeFormatter.ofPattern(format)),","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"daytona65"},"content":"                        LocalDateTime.now().toLocalTime());","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"daytona65"},"content":"                fromHasTime \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"daytona65"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"daytona65"},"content":"                //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"daytona65"},"content":"                continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"daytona65"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"daytona65"},"content":"        if (fromHasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"daytona65"},"content":"            for (String format : DATE_TIME_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"daytona65"},"content":"                try {","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"daytona65"},"content":"                    this.from \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"daytona65"},"content":"                } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"daytona65"},"content":"                    //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"daytona65"},"content":"                    continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"daytona65"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"daytona65"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"daytona65"},"content":"    private void parseTo(String to) {","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"daytona65"},"content":"        for (String format : DATE_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"daytona65"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"daytona65"},"content":"                this.to \u003d LocalDateTime.of(LocalDate.parse(to, DateTimeFormatter.ofPattern(format)),","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"daytona65"},"content":"                        LocalDateTime.now().toLocalTime());","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"daytona65"},"content":"                toHasTime \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"daytona65"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"daytona65"},"content":"                //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"daytona65"},"content":"                continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"daytona65"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"daytona65"},"content":"        if (toHasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"daytona65"},"content":"            for (String format : DATE_TIME_FORMATS) {","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"daytona65"},"content":"                try {","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"daytona65"},"content":"                    this.to \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"daytona65"},"content":"                } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"daytona65"},"content":"                    //Try next format","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"daytona65"},"content":"                    continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"daytona65"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"daytona65"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"daytona65"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"daytona65"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"daytona65"},"content":"        return stringFrom;","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"daytona65"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"daytona65"},"content":"        return stringTo;","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"daytona65"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"daytona65"},"content":"        String fromPrint;","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"daytona65"},"content":"        String toPrint;","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"daytona65"},"content":"        if (fromHasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"daytona65"},"content":"            fromPrint \u003d from.format(DISPLAY_DATE_TIME_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"daytona65"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"daytona65"},"content":"            fromPrint \u003d from.toLocalDate().format(DISPLAY_DATE_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"daytona65"},"content":"        if (toHasTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"daytona65"},"content":"            toPrint \u003d to.format(DISPLAY_DATE_TIME_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"daytona65"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"daytona65"},"content":"            toPrint \u003d to.toLocalDate().format(DISPLAY_DATE_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"daytona65"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromPrint + \" to: \" + toPrint + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"daytona65":119}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"    protected String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"        return this.description;","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"        return isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"daytona65":37}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"daytona65":13}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"    public void testToString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"            Deadline deadline \u003d new Deadline(\"Eat food\", \"08/02/2023 16:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"            assertEquals(\"[D][ ] Eat food (by: 08 Feb 2023 4 PM)\", deadline.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    public void testGetBy() {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"            Deadline deadline \u003d new Deadline(\"Eat food\", \"08/02/2023 16:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"            assertEquals(\"08/02/2023 16:00\", deadline.getBy());","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"daytona65":28}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"public class EventTest {","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"    public void testToString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"            Event event \u003d new Event(\"Eat food\", \"08/02/2023 16:00\", \"08/02/2023 18:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"            assertEquals(\"[E][ ] Eat food (from: 08 Feb 2023 4 PM to: 08 Feb 2023 6 PM)\", event.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"daytona65"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"daytona65"},"content":"    public void testGetFrom() {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"daytona65"},"content":"            Event event \u003d new Event(\"Eat food\", \"08/02/2023 16:00\", \"08/02/2023 18:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"daytona65"},"content":"            assertEquals(\"08/02/2023 16:00\", event.getFrom());","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"daytona65"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"daytona65"},"content":"    public void testGetTo() {","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"daytona65"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"daytona65"},"content":"            Event event \u003d new Event(\"Eat food\", \"08/02/2023 16:00\", \"08/02/2023 18:00\");","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"daytona65"},"content":"            assertEquals(\"08/02/2023 18:00\", event.getTo());","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"daytona65"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"daytona65"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"daytona65"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"daytona65":38}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"daytona65"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"daytona65"},"content":"    public void testToString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"daytona65"},"content":"        ToDo todo \u003d new ToDo(\"Eat food\");","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"daytona65"},"content":"        assertEquals(\"[T][ ] Eat food\", todo.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"daytona65"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"daytona65"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"daytona65":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"daytona65"},"content":"todo return some books","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"daytona65"},"content":"deadline complete assignment /by Monday 2359","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"daytona65"},"content":"event CS2103T lecture /from Monday 1000 /to Monday 1200","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"daytona65"},"content":"mark 1","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"daytona65"},"content":"list","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"daytona65"},"content":"unmark 1","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"daytona65"},"content":"todo","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"daytona65":7}}]
