[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dfordarius":2,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":" * Project Name: Duke","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":" * Duke is a Chatbot that helps to keep track of stuff to do.","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":" * @author Darius Ng Teng Wee","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    private static boolean isExit;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"     * A constructor for Duke.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"     * @param filepath the filepath where data is saved.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"     * A method to start running Duke.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"    public void start() {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        ui.welcomeMessage();","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"        ui.showListFromStorage(storage);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"        isExit \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"                String command \u003d ui.readCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"                Command c \u003d Parser.parse(command);","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"        String filepath \u003d System.getProperty(\"user.home\") + \"/data/data.txt\";","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"        new Duke(filepath).start();","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dfordarius":61,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":" * DukeException is an unchecked exception that is thrown when Duke does not recognise the input.","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"     * A constructor for Duke Exception.","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"     * @param message contains the error message to be outputted.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"        super(message);","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"dfordarius":13}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"import duke.command.ToDoCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"public class Parser {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    public enum Commands {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"        bye,","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"        list,","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"        mark,","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"        unmark,","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"        deadline,","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"        event,","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"        todo,","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"        delete,","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"        find","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    public static Command parse(String inputCommand) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"            String[] splitString \u003d inputCommand.split(\" \", 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"            Commands commands \u003d Commands.valueOf(splitString[0].toLowerCase());","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"            switch (commands) {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"            case bye:","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"                return new ByeCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"            case list:","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"                return new ListCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"            case mark:","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"                if (splitString.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"                    throw new DukeException(\"\\tPlease enter the task number to mark!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"                    return new MarkCommand(Integer.parseInt(splitString[1].trim()) - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"            case unmark:","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"                if (splitString.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"                    throw new DukeException(\"\\tPlease enter the task number to unmark!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"                    return new UnmarkCommand(Integer.parseInt(splitString[1].trim()) - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"            case deadline:","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"                if (splitString.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"                    throw new DukeException(\"\\t☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"                    String[] splitDescription \u003d splitString[1].split(\" /by \");","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"                    if (splitDescription.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"                        throw new DukeException(\"\\t☹ OOPS!!! The date of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"                    return new DeadlineCommand(splitDescription[0], splitDescription[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"            case event:","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"                if (splitString.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"                    throw new DukeException(\"\\t☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"                    String[] splitDescriptionArray \u003d splitString[1].split(\" /from \");","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"                    String[] timeSplitArray \u003d splitDescriptionArray[1].split(\"/to\");","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"                    if (timeSplitArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"                        throw new DukeException(\"\\t☹ OOPS!!! The date of an event cannot be empty.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"                    return new EventCommand(splitDescriptionArray[0], timeSplitArray[0], timeSplitArray[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"            case todo:","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"                if (splitString.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"                    throw new DukeException(\"\\t☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"                    return new ToDoCommand(splitString[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"            case delete:","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"                if (splitString.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"                    throw new DukeException(\"\\tPlease enter the task number to delete!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"                    return new DeleteCommand(Integer.parseInt(splitString[1].trim()) - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"            case find:","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"                if (splitString[1].trim().equals(\"\") ) {","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"                    throw new DukeException(\"\\t☹ OOPS!!! The name of task u want to find cannot be empty!.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"dfordarius"},"content":"                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"                    return new FindCommand(splitString[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"dfordarius"},"content":"            default:","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"                throw new DukeException(\"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"dfordarius"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"dfordarius"},"content":"            throw new DukeException(\"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"dfordarius"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"dfordarius"},"content":"            throw new DukeException(\"\\t☹ OOPS!!! The name of task u want to find cannot be empty!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"dfordarius":96}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"public class Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    private final String FILEPATH;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"    public Storage(String filepath){","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"        this.FILEPATH \u003d filepath;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    public String getFilepath(){","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"        return FILEPATH;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"    public void save(ArrayList\u003cTask\u003e dataArray) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"            FileWriter fw \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"            for (Task data : dataArray) {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"                String text \u003d data.saveFormat();","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"                fw.write(text + \"\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"            fw.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    public ArrayList\u003cString\u003e load() throws FileNotFoundException {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"        File file \u003d new File(FILEPATH);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"        Scanner loader \u003d new Scanner(file);","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"        while(loader.hasNextLine()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"            data.add(loader.nextLine());","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        return data;","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dfordarius":44}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" * TaskList contains the list of Tasks and methods to modify the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"public class TaskList{","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"    private ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"     * Contructor for TaskList without any saved data.","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"    public TaskList(){","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"        this.listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"     * Contructor for TaskList with data previously stored in the file.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"     * @param taskList contains data of saved task obtains from file.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"     * @throws DukeException if duke cannot recognise the command.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    public TaskList(ArrayList\u003cString\u003e taskList) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"        this.listOfTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        for (String data : taskList) {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"            listOfTasks.add(Task.loadTask(data));","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"     * Creates a new Deadline object.","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"     * @param description Description of the Deadline object.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"     * @param by The due date of the deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"    public void addDeadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"        Deadline deadline \u003d new Deadline(description, by, false);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"        listOfTasks.add(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"     * Creates a new ToDo object.","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"     * @param description Description of the ToDo object.","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"    public void addToDo(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"        ToDo todo \u003d new ToDo(description, false);","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"        listOfTasks.add(todo);","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"     * Creates a new Event object.","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"     * @param description Description of the Event object.","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"     * @param from The start of the event.","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"     * @param to The end of the event.","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"    public void addEvent(String description, String from, String to) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"        Event event \u003d new Event(description, from, to, false);","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"        listOfTasks.add(event);","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"     * Deletes task in the tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"     * @param index Index of task to be deleted.","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"     * @return The deleted task.","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"        return listOfTasks.remove(index);","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"     * @param index Index of task to be marked done.","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"        listOfTasks.get(index).markDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"     * Unmarks the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"     * @param index Index of task to be marked unDone.","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"dfordarius"},"content":"        listOfTasks.get(index).markUnDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"dfordarius"},"content":"     * Prints the tasks in the list for the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"    public void printList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"        System.out.println(\"\\n\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"dfordarius"},"content":"        for(Task task : listOfTasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"dfordarius"},"content":"            System.out.println(\"\\t\"","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"dfordarius"},"content":"                    + i","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"dfordarius"},"content":"                    + \". \"","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"dfordarius"},"content":"                    + task.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"            i++;","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"dfordarius"},"content":"    public ArrayList\u003cString\u003e findTask(String taskname){","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"dfordarius"},"content":"        ArrayList\u003cString\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"dfordarius"},"content":"        for(Task task : listOfTasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"dfordarius"},"content":"            if(task.getDescription().contains(taskname)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"dfordarius"},"content":"                matchingTasks.add(task.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"dfordarius"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"dfordarius"},"content":"        return matchingTasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"dfordarius"},"content":"     * Gets the size of the tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"dfordarius"},"content":"     * @return Size of the tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"dfordarius"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"dfordarius"},"content":"        return listOfTasks.size();","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"dfordarius"},"content":"     * Checks if the tasklist is empty.","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"dfordarius"},"content":"     * @return Is the list empty.","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"dfordarius"},"content":"    public boolean isEmpty(){","lastModifiedDate":"2023-01-23"},{"lineNumber":129,"author":{"gitId":"dfordarius"},"content":"        return listOfTasks.isEmpty();","lastModifiedDate":"2023-01-23"},{"lineNumber":130,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":131,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":132,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"dfordarius"},"content":"     * Gets the task at the specific index in the tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"dfordarius"},"content":"     * @param index Index of task in the tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"dfordarius"},"content":"     * @return Task at the specific index of the tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"dfordarius"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"dfordarius"},"content":"        return listOfTasks.get(index);","lastModifiedDate":"2023-01-25"},{"lineNumber":139,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"dfordarius"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"dfordarius"},"content":"     * @return Arraylist which consist of the tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"dfordarius"},"content":"    public ArrayList\u003cTask\u003e getListOfTasks(){","lastModifiedDate":"2023-01-23"},{"lineNumber":146,"author":{"gitId":"dfordarius"},"content":"        return listOfTasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":147,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":148,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"dfordarius":148}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"public class Ui {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    final static String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    protected final static String SEPARATOR \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    private Scanner sc;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    public Ui(){","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"    public void printSeparator() {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"        System.out.println(logo","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"                + \"\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"                + SEPARATOR","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"                + \"\\n\\tHello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"                + \"\\tWhat can I do for you?\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"                + SEPARATOR);","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"    public void byeMessage() {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"        System.out.println(SEPARATOR","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"                + \"\\n\\t Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"                + SEPARATOR);","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"    public void showMark(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"        System.out.println(SEPARATOR + \"\\n\\tNice! I\u0027ve marked this task as done:\\n\\t  \" + task.toString()","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"                + \"\\n\" + SEPARATOR);","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"    public void showUnmark(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"        System.out.println(SEPARATOR + \"\\n\\tOK, I\u0027ve marked this task as not done yet:\\n\\t  \" + task.toString()","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"                + \"\\n\" + SEPARATOR);","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"    public void showAdd(Task task, int size) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"        System.out.println(SEPARATOR + \"\\n\\tGot it. I\u0027ve added this task:\\n\\t  \"","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"                + task.toString() + \"\\n\\tNow you have \"","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"                + size + \" task(s) in the list.\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"                + SEPARATOR);","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"    public void showDelete(Task task, int size) {","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"        System.out.println(SEPARATOR + \"\\n\\tNoted. I\u0027ve removed this task:\\n\\t  \"","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"                + task.toString() + \"\\n\\tNow you have \"","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"                + size + \" task(s) in the list.\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"                + SEPARATOR);","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"    public void showList(TaskList tasklist) {","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"        System.out.print(SEPARATOR);","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"        tasklist.printList();","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"    public void printFindList(ArrayList\u003cString\u003e findlist) {","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"        System.out.println(SEPARATOR + \"\\n\\tHere are the matching tasks in your list:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"        for (String string : findlist) {","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"            System.out.println(\"\\t\"","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"                    + i","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"                    + \". \"","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"                    + string);","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"        System.out.println(\"\\tThere are \"","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"                + findlist.size()","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"                + \" matching task(s) in your list.\"","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"dfordarius"},"content":"                + \"\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"                + SEPARATOR);","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"dfordarius"},"content":"    public void showListFromStorage (Storage storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"        String filepath \u003d storage.getFilepath();","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"dfordarius"},"content":"        if (!Files.exists(Path.of(filepath))) {","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"            new File(filepath).getParentFile().mkdirs();","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"dfordarius"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"dfordarius"},"content":"            File file \u003d new File(filepath);","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"dfordarius"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"dfordarius"},"content":"                Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"                System.out.println(\"\\tThese is your current TaskList\");","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"                    String text \u003d sc.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"dfordarius"},"content":"                    System.out.println(\"\\t\" + text.trim());","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"dfordarius"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"dfordarius"},"content":"                System.out.println(SEPARATOR);","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"dfordarius"},"content":"            } catch (FileNotFoundException e){","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"dfordarius"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"dfordarius"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"dfordarius"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"dfordarius"},"content":"        System.out.println(SEPARATOR","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"dfordarius"},"content":"                + \"\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"dfordarius"},"content":"                + errorMessage","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"dfordarius"},"content":"                + \"\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"dfordarius"},"content":"                + SEPARATOR);","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"dfordarius":112}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":" * ByeCommand is a command that ends the session with Duke.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"     * Contructor for ByeCommand.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"        super(true);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"     * Displays bye message to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"     * @param task Tasklist containing the list of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"     * @param storage Saves tasks into the file locally.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"     * @param ui Deals with interactions with user.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"     * @throws DukeException if command cannot be recognised.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    public void execute(TaskList task, Storage storage, Ui ui) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"        storage.save(task.getListOfTasks());","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        ui.byeMessage();","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"dfordarius":30}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":" * Command encapsulates various commands done by user.","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    private boolean isExit;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"     * Contructor for Command.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"     * @param isExit Exit status of programme.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"     * Exit status of programme.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"     * @return Has the user ended his/her session with duke.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    public boolean isExit()  {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"        return this.isExit;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"     * Executes command according to its type.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"     * @param task Tasklist containing the list of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"     * @param storage Saves tasks into the file locally.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"     * @param ui Deals with interactions with user.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"     * @throws DukeException if command cannot be recognised.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"    public abstract void execute(TaskList task, Storage storage, Ui ui) throws DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"dfordarius":36}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" * Deadline is a command that adds a new deadline task","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"    private String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    private String by;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"     * Contructor for DeadlineCommand","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"     * @param description Description of deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"     * @param by Due date of deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"    public DeadlineCommand(String description, String by) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"        super(false);","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"     * Adds a deadline task into the tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"     * @param task Tasklist containing the list of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"     * @param storage Saves tasks into the file locally.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"     * @param ui Deals with interactions with user.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"     * @throws DukeException if command cannot be recognised.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"    public void execute(TaskList task, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"        task.addDeadline(description, by);","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"        int size \u003d task.getSize();","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"        Task temp \u003d task.getTask(size - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"        ui.showAdd(temp, size);","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"        storage.save(task.getListOfTasks());","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"dfordarius":40}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" * DeleteCommand is a command that deletes a task from the tasklist","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    int index;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"     * @param index Index of task to be deleted from tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"        super(false);","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"     * A method that deletes a task from the tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"     * @param task Tasklist containing the list of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"     * @param storage Saves tasks into the file locally.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"     * @param ui Deals with interactions with user.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"     * @throws DukeException if command cannot be recognised or task number does not exist.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    public void execute(TaskList task, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"        if (task.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"            throw new DukeException(\"\\tYou currently have no tasks in your list to delete.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"                Task deletedTask \u003d task.deleteTask(index);","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"                int size \u003d task.getSize();","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"                ui.showDelete(deletedTask, size);","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"                storage.save(task.getListOfTasks());","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"                throw new DukeException(\"\\tTask number does not exist!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"dfordarius":46}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" * EventCommand is a command that creates a new Event.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"    String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    String from;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    String by;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"     * Constructor for EventCommand.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"     * @param description Description of Event.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"     * @param from Start date of Event.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"     * @param by End date of Event.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    public EventCommand(String description, String from, String by) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"        super(false);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"     * Creates a new Event task and adds it into the tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"     * @param task Tasklist containing the list of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"     * @param storage Saves tasks into the file locally.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"     * @param ui Deals with interactions with user.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"     * @throws DukeException if duke does not recognise the command.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"    public void execute(TaskList task, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"        task.addEvent(description,from,by);","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        int size \u003d task.getSize();","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"        Task temp \u003d task.getTask(size - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"        ui.showAdd(temp, size);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"        storage.save(task.getListOfTasks());","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"dfordarius":44}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":" * Find is a command that finds tasks in the tasklist filtered by a specific keyword.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    private String taskname;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"     * @param taskname Keyword used to filter tasks in the tasklist.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"    public FindCommand(String taskname) {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"        super(false);","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"        this.taskname \u003d taskname;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"     * Finds a specific task in the tasklist using a keyword.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"     * @param task Tasklist containing the list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"     * @param storage Saves tasks into the file locally.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"     * @param ui Deals with interactions with user.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"     * @throws DukeException if command cannot be recognised.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    public void execute(TaskList task, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        ui.printFindList(task.findTask(taskname));","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"dfordarius":32}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":" * ListCommand is a command that shows displays the list to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"        super(false);","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"     * Shows the list of tasks in the tasklist to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"     * @param task Tasklist containing the list of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"     * @param storage Saves tasks into the file locally.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"     * @param ui Deals with interactions with user.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"     * @throws DukeException if duke does not recognise command.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    public void execute(TaskList task, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"        ui.showList(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"dfordarius":26}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":" * MarkCommand is a command that marks a task as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    int index;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"     * @param index Index of task to be marked as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"        super(false);","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"     * Marks the task at the specific index in the tasklist as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"     * @param task Tasklist containing the list of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"     * @param storage Saves tasks into the file locally.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"     * @param ui Deals with interactions with user.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"     * @throws DukeException if duke does not recognise the command.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"    public void execute(TaskList task, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"        task.markTask(index);","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        ui.showMark(task.getTask(index));","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"        storage.save(task.getListOfTasks());","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"dfordarius":35}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" * ToDo Command is a command that creates a new todo task.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"    String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"     * Constructor for ToDoCommand.","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"     * @param description Description of ToDo task.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"        super(false);","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"     * Adds the todo task into tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"     * @param task Tasklist containing the list of tasks, displays the add message to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"     * @param storage Saves tasks into the file locally.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"     * @param ui Deals with interactions with user.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"     * @throws DukeException if duke does not recognise the command.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    public void execute(TaskList task, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"        task.addToDo(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"        int size \u003d task.getSize();","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"        Task temp \u003d task.getTask(size - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"        ui.showAdd(temp, size);","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"        storage.save(task.getListOfTasks());","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"dfordarius":39}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":" * UnmarkCommand is a command that unamarks a task in the tasklist.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"    private int index;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"     * Constructor for UnmarkCommand.","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"     * @param index Index of specific task in the tasklist to be unmark.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"        super(false);","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"     * Unmarks the specifc task in the tasklist and show message to user.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"     * @param task Tasklist containing the list of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"     * @param storage Saves tasks into the file locally.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"     * @param ui Deals with interactions with user.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"     * @throws DukeException if duke does not recognise the command.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    public void execute(TaskList task, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        task.unmarkTask(index);","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"        ui.showUnmark(task.getTask(index));","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"        storage.save(task.getListOfTasks());","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"dfordarius":36}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" * Deadline is a Task with a due date.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    protected String by;","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    LocalDate dateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"     * Constructor for deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"     * @param by Due date of deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"     * @param isDone Completion status of Deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"    public Deadline(String description, String by, boolean isDone) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"            this.dateTime \u003d LocalDate.parse(by.trim());","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"            throw new DukeException(\"\\tPlease enter a date in e.g yyyy-mm-dd format!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"     * A method that converts the Deadline into its String representation.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"     * @return String representation of Deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"        return \"\\t[D]\" + super.toString() + \" (by: \" + dateTime.format(formatter) + \")\";","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"     * Converts the Deadline into the String format required to be saved in the Storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"     * @return String formatted data of Deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"    public String saveFormat(){","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"        return String.format(\"D | %s | %s\", super.saveFormat(), this.by);","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dfordarius":49}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":" * Event is a task that has a from and to date.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    protected String by;","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"    private LocalDate from;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    private LocalDate to;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"     * Contructor for Event.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"     * @param description Description of Event.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"     * @param from Event start date.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"     * @param to Event end date.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"     * @param isDone Completion status of Event.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    public Event(String description, String from, String to, boolean isDone) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"            this.from \u003d LocalDate.parse(from.trim());","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"            this.to \u003d LocalDate.parse(to.trim());","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"            throw new DukeException(\"\\tPlease enter a valid date in e.g /from yyyy-mm-dd /to yyyy-mm-dd format!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"     * A method that converts the Event into its String representation.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"     * @return String representation of Event.","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"        return \"\\t[E]\" + super.toString()","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"                + \" (from: \" + from.format(formatter) + \" to: \"","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"                + to.format(formatter) + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"     * Converts the Event into the String format required to be saved in the Storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"     * @return String formatted data of Event.","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"    public String saveFormat(){","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"        return String.format(\"E | %s | %s to %s\", super.saveFormat(), this.from, this.to);","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dfordarius":53}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":" * Task encapsulates various tasks that can be done by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"public class Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"    protected String description;","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"     * Contructor for task.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"     * @param isDone Completion status of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"     * Gets status icon of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"     * @return String representation of the status of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dfordarius"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dfordarius"},"content":"        return this.description;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"dfordarius"},"content":"     * Sets the isDone parameter to true.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"dfordarius"},"content":"    public void markDone(){","lastModifiedDate":"2023-01-15"},{"lineNumber":37,"author":{"gitId":"dfordarius"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-15"},{"lineNumber":38,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":39,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":40,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"dfordarius"},"content":"     * Sets the isDone parameter to false.","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"dfordarius"},"content":"    public void markUnDone(){","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"dfordarius"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":46,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":47,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"dfordarius"},"content":"     * Converts the Task into its string representation.","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"dfordarius"},"content":"     * @return String representation of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"dfordarius"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"dfordarius"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-15"},{"lineNumber":53,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":54,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"dfordarius"},"content":"     * Converts boolean to int.","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"dfordarius"},"content":"     * @return Int representation of isDone.","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"dfordarius"},"content":"    public int isDoneToInt(){","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"dfordarius"},"content":"        return isDone ? 1 : 0;","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"dfordarius"},"content":"     * Method that creates specific task given input data.","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"dfordarius"},"content":"     * @param data String formatted data of the Task that is retrieved from Storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"dfordarius"},"content":"     * @return Task created from data input.","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"dfordarius"},"content":"     * @throws DukeException if task type is not recognised by duke.","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"dfordarius"},"content":"    public static Task loadTask(String data) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"dfordarius"},"content":"        String [] dataSplit \u003d data.trim().split(\"\\\\|\",4);","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"dfordarius"},"content":"        boolean isDone \u003d dataSplit[1].equals(\"1\");","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"dfordarius"},"content":"        char taskType \u003d dataSplit[0].charAt(0);","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"dfordarius"},"content":"        String description \u003d dataSplit[2].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"dfordarius"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"dfordarius"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"dfordarius"},"content":"            return new ToDo(description, isDone);","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"dfordarius"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"dfordarius"},"content":"            return new Deadline(description, dataSplit[3].trim(), isDone);","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"dfordarius"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"dfordarius"},"content":"            return new Event(description, dataSplit[3].split(\"to\",2)[0],","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"dfordarius"},"content":"                    dataSplit[3].split(\"to\",2)[1], isDone);","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"dfordarius"},"content":"        default:","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"dfordarius"},"content":"            throw new DukeException(\"☹ OOPS!!! Unrecognised task type!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"dfordarius"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"dfordarius"},"content":"     * Converts Task into string representation to be saved in storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"dfordarius"},"content":"     * @return Formatted String representation of data.","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"dfordarius"},"content":"    public String saveFormat(){","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"dfordarius"},"content":"        return String.format(\"%d | %s\", isDoneToInt(), this.description);","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"dfordarius":97}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":" * ToDo is a task with just a description.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"    public ToDo(String description, Boolean isDone) {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"     * Creates the string representation of todo task.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"     * @return The string representation of todo task.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"dfordarius"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"dfordarius"},"content":"        return \"\\t[T]\" + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"dfordarius"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dfordarius"},"content":"     * Converts Todo task into a string representation to be saved into storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dfordarius"},"content":"     * @return String representation of todo task.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dfordarius"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dfordarius"},"content":"    public String saveFormat(){","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"dfordarius"},"content":"        return String.format(\"T | %s\", super.saveFormat());","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dfordarius":28}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"class DeadlineTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    void deadlineTestUi() throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"        Deadline deadline \u003d new Deadline(\"meeting\", \"2022-02-23\", false);","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"        assertEquals(\"\\t[D][ ] meeting (by: Feb 23 2022)\", deadline.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"dfordarius":15}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"class EventTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    void eventTestUi() throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"        Event event \u003d new Event(\"school\", \"2022-02-23\", \"2022-03-23\", false);","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"        assertEquals(\"\\t[E][ ] school (from: Feb 23 2022 to: Mar 23 2022)\", event.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"dfordarius":15}},{"path":"src/test/java/duke/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"class ToDoTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"    void toDoTestUi(){","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"        ToDo todo \u003d new ToDo(\"read book\",false);","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dfordarius"},"content":"        assertEquals(\"\\t[T][ ] read book\", todo.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dfordarius"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"dfordarius"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"dfordarius":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dfordarius"},"content":"todo read book","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"dfordarius"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"dfordarius"},"content":"event project meeting /from now /to another time","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"dfordarius"},"content":"todo join piano club","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"dfordarius"},"content":"todo complete online quiz","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"dfordarius"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"dfordarius"},"content":"mark 1","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"dfordarius"},"content":"mark 3","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"dfordarius"},"content":"unmark 1","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"dfordarius"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"dfordarius"},"content":"bye","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"dfordarius"},"content":"","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dfordarius":12}}]
