[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"checkstyle {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"    mainClassName \u003d \"tunabot.TunaBot\"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"    archiveBaseName \u003d \"TunaBot\"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":39,"dillongoh":8}},{"path":"src/main/java/tunabot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package tunabot;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import tunabot.exceptions.InputException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import tunabot.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"import tunabot.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"import tunabot.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":" * Class handling the parsing of commands","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"     * Returns boolean to determine whether to continue receiving input","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"     * If input \"bye\" is received return true else return false","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"     * @param input command","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"     * @param tasks TaskList","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"     * @return true If input is \"bye\" else false","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"     * @throws InputException If the command does not fit required format","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"    public static boolean parse(String input, TaskList tasks) throws InputException {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"        String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"        switch (command[0]) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"        case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"            System.out.println(\"BLUB! There are \" + tasks.size() + \" task(s)!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"                System.out.println(\"    \" + i + \". \" + tasks.get(i - 1));","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"            System.out.println(\"    Bye! Blub blub!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"            return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"            if (command.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"                throw new InputException(\"BLUB! No task chosen!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"                int index \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"                tasks.get(index - 1).markDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"                System.out.println(\"    Blub! i have marked this as done!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"                System.out.println(tasks.get(index - 1));","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"                throw new InputException(\"BLUB! Index chosen isn\u0027t a number!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"                throw new InputException(\"BLUB! duke.task.Task chosen isn\u0027t on the list!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"            if (command.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"                throw new InputException(\"BLUB! No task chosen!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"                int index \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"                tasks.get(index - 1).unmarkDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"                System.out.println(\"    Blub! i have marked this as not done!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"                System.out.println(tasks.get(index - 1));","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"dillongoh"},"content":"                throw new InputException(\"BLUB! Index chosen isn\u0027t a number!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"                throw new InputException(\"BLUB! duke.task.Task chosen isn\u0027t on the list!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"dillongoh"},"content":"            if (command.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"dillongoh"},"content":"                throw new InputException(\"BLUB! No task chosen!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"dillongoh"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"dillongoh"},"content":"                int index \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"dillongoh"},"content":"                System.out.println(\"    Blub! i have deleted this task!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"dillongoh"},"content":"                System.out.println(tasks.get(index - 1));","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"dillongoh"},"content":"                tasks.remove(index - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"dillongoh"},"content":"                System.out.println(\"    Blub! You have \" + tasks.size() + \" tasks now!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"dillongoh"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"dillongoh"},"content":"                throw new InputException(\"BLUB! Index chosen isn\u0027t a number!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"dillongoh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"dillongoh"},"content":"                throw new InputException(\"BLUB! duke.task.Task chosen isn\u0027t on the list!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"dillongoh"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"dillongoh"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"dillongoh"},"content":"            if (command.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"dillongoh"},"content":"                throw new InputException(\"BLUB! duke.task.Task needs a name!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"dillongoh"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"dillongoh"},"content":"                Task newTask \u003d new Task(command[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"dillongoh"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"dillongoh"},"content":"                System.out.println(\"    Blub! added: \\n\" + newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"dillongoh"},"content":"                System.out.println(\"    Blub! You have \" + tasks.size() + \" tasks now!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"dillongoh"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"dillongoh"},"content":"        case \"event\":","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"dillongoh"},"content":"            if (command.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"dillongoh"},"content":"                throw new InputException(\"BLUB! duke.task.Event needs a name, \"","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"dillongoh"},"content":"                    + \"a start time and end time!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"dillongoh"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"dillongoh"},"content":"                String[] details \u003d command[1].split(\"/from |/to \", 3);","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"dillongoh"},"content":"                if (details.length \u003c 3) {","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"dillongoh"},"content":"                    throw new InputException(\"BLUB! duke.task.Event is missing info!\"","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"dillongoh"},"content":"                        + \" Please check input. BLUB!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"dillongoh"},"content":"                Event newEvent \u003d new Event(details[0], details[1], details[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"dillongoh"},"content":"                tasks.add(newEvent);","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"dillongoh"},"content":"                System.out.println(\"    Blub! added: \\n\" + newEvent);","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"dillongoh"},"content":"                System.out.println(\"    Blub! You have \" + tasks.size() + \" tasks now!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"dillongoh"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"dillongoh"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"dillongoh"},"content":"            if (command.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"dillongoh"},"content":"                throw new InputException(\"BLUB! duke.task.Deadline needs a name and due date!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"dillongoh"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"dillongoh"},"content":"                String[] details \u003d command[1].split(\"/by \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"dillongoh"},"content":"                if (details.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"dillongoh"},"content":"                    throw new InputException(\"BLUB! duke.task.Deadline is missing info!\"","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"dillongoh"},"content":"                        + \" PLease check input. BLUB!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"dillongoh"},"content":"                Deadline newDeadline \u003d new Deadline(details[0], details[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"dillongoh"},"content":"                tasks.add(newDeadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"dillongoh"},"content":"                System.out.println(\"    Blub! added: \\n\" + newDeadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"dillongoh"},"content":"                System.out.println(\"    Blub! You have \" + tasks.size() + \" tasks now!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"dillongoh"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"dillongoh"},"content":"        case \"find\":","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"dillongoh"},"content":"            if (command.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"dillongoh"},"content":"                throw new InputException(\"BLUB! find needs a search target!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"dillongoh"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"dillongoh"},"content":"                String target \u003d command[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"dillongoh"},"content":"                TaskList targetList \u003d tasks.find(target);","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"dillongoh"},"content":"                if (targetList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"dillongoh"},"content":"                    System.out.println(\"BLUB! No matching tasks!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"dillongoh"},"content":"                } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"dillongoh"},"content":"                    System.out.println(\"BLUB! Here are your matching task(s)!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"dillongoh"},"content":"                    for (int i \u003d 1; i \u003c\u003d targetList.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"dillongoh"},"content":"                        System.out.println(\"    \" + i + \". \" + targetList.get(i - 1));","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"dillongoh"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"dillongoh"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"dillongoh"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"dillongoh"},"content":"            System.out.println(\"BLUB OH! INVALID COMMAND!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"dillongoh"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dillongoh":140}},{"path":"src/main/java/tunabot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package tunabot;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"import tunabot.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"import tunabot.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"import tunabot.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":" * Class to handle Storage of TunaBot","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"    private final Path filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    public Storage(Path filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"     * Creates a save file and save folder if it doesn\u0027t already exist","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"     * @return TaskList generated by loadSave()","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"     * @throws IOException if an I/O Exception occurs when creating a new file.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"    public TaskList load() throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"        File saveFile \u003d filePath.toFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"        Path parentPath \u003d filePath.getParent();","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"        File parentFolder \u003d parentPath.toFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"        if (!parentFolder.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"            parentFolder.mkdir();","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"            saveFile.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"        return loadSave(saveFile);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"    private static TaskList loadSave(File saveFile) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"            Scanner saveReader \u003d new Scanner(saveFile);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"            while (saveReader.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"                String [] taskInfo \u003d saveReader.nextLine().split(\";\");","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"                switch (taskInfo[0]) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"                case \"T\":","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"                    tasks.add(new Task(taskInfo[1], taskInfo[2]));","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"                case \"D\":","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"                    tasks.add(new Deadline(taskInfo[1], taskInfo[2], taskInfo[3]));","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"                case \"E\":","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"                    tasks.add(new Event(taskInfo[1], taskInfo[2], taskInfo[3], taskInfo[4]));","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"dillongoh"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"                default:","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"            System.out.println(\"BLUB! Couldn\u0027t find save file!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"dillongoh"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"dillongoh"},"content":"     * Saves TaskList to the save file.","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"dillongoh"},"content":"     * @param tasks TaskList of current tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"dillongoh"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"dillongoh"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"dillongoh"},"content":"            File saveFile \u003d filePath.toFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"dillongoh"},"content":"            FileWriter writer \u003d new FileWriter(saveFile);","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"dillongoh"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"dillongoh"},"content":"                writer.write(tasks.get(i).saveFormat() + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"dillongoh"},"content":"            writer.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"dillongoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"dillongoh"},"content":"            System.out.println(\"BLUB! Couldn\u0027t save tasks!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dillongoh":83}},{"path":"src/main/java/tunabot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package tunabot;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"import tunabot.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":" * Class to handle TaskList","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"    public int size() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"    public void remove(int i) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"        tasks.remove(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"     * Returns a TaskList containing tasks that contain the given target String","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"     * @param target Target string to search for","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"     * @return targetList TaskList containing matching tasks","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"    public TaskList find(String target) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"        TaskList targetList \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"            if (task.getName().contains(target)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"                targetList.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"        return targetList;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dillongoh":44}},{"path":"src/main/java/tunabot/TunaBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package tunabot;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"import tunabot.exceptions.InputException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":" * Main class for TunaBot","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"public class TunaBot {","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"    private static final Scanner s \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"    private static boolean toExit \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"     * Initializes a TunaBot with the given save path.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"     * @param savePath Path for locating the save file containing existing tasks if any.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"    public TunaBot(Path savePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"        storage \u003d new Storage(savePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"            ui.saveFileProblem();","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"     * Runs TunaBot","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"    public void run() {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"        ui.greeting();","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"        while (!toExit) {","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"            try {","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"                String input \u003d s.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"                ui.line();","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"                toExit \u003d Parser.parse(input, tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"            } catch (InputException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"                ui.printErrorMessage(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"                ui.printDateTimeFormatError();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"            ui.line();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"     * Main class to initialize and run TunaBot","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"        Path savePath \u003d Paths.get(\"data\", \"save.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"dillongoh"},"content":"        new TunaBot(savePath).run();","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dillongoh":62}},{"path":"src/main/java/tunabot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package tunabot;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":" * Class to handle User Interface","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"    private static final String LINE \u003d \"------------------------------\";","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"    public Ui() {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"    public void saveFileProblem() {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"        System.out.println(\"BLUB! Problem with save file!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"     * Prints out greeting message upon launch","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"    public void greeting() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"        System.out.println(\"    Hello! I\u0027m TunaBot\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"                + \"    What can I do for you?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"    public void line() {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"    public void printErrorMessage(Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"     * Prints error when date time format is wrong.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"    public void printDateTimeFormatError() {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"        System.out.println(\"BLUB! Please use the format dd/mm/yy-hhmm \"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"                + \"with time in 24H format! eg. 29/12/23-1854\");","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dillongoh":38}},{"path":"src/main/java/tunabot/exceptions/InputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package tunabot.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":" * Class for InputException","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"public class InputException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"    public InputException(String error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"        super(error);","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"dillongoh":10}},{"path":"src/main/java/tunabot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package tunabot.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":" * Class to handle Deadline objects","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"     * Initializes new Deadline with the given name and deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"     * @param name Name of Deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"     * @param deadline Deadline of Deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"        super(name);","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy-HHmm\");","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"     * Initializes new Deadline with the given name, status and deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"     * @param name Name of Deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"     * @param isDone Status of Deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"     * @param deadline Deadline of Deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"    public Deadline(String name, String isDone, String deadline) {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy-HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy-HHmm\");","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"        return deadline.format(formatter);","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"        return \"T;\" + this.name + \";\" + this.isDone + \";\" + this.getDeadline();","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"        String box;","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"        if (this.getDone()) {","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"            box \u003d \"[X] \";","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"            box \u003d \"[ ] \";","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"        return \"[D]\" + box + this.getName() + \"(by \" + this.getDeadline() + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dillongoh":53}},{"path":"src/main/java/tunabot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package tunabot.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":" * Class to handle Events","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"     * Initializes new Event with given name, start date and end date","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"     * @param name Name of Event","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"     * @param start Start date of Event","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"     * @param end End date of Event","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"        super(name);","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy-HHmm\");","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"        start \u003d start.substring(0, start.length() - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"        this.start \u003d LocalDateTime.parse(start, format);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"        this.end \u003d LocalDateTime.parse(end, format);","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"     * Initializes new Event with given name, status, start date and end date","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"     * @param name Name of Event","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"     * @param isDone Status of Event","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"     * @param start Start date of Event","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"     * @param end End date of Event","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"    public Event(String name, String isDone, String start, String end) {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy-HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"        this.start \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"        this.end \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"    public String getEnd() {","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy-HHmm\");","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"        return end.format(formatter);","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"    public String getStart() {","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy-HHmm\");","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"        return start.format(formatter);","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"        return \"E;\" + this.name + \";\" + this.isDone + \";\" + this.getStart() + \";\" + this.getEnd();","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":57,"author":{"gitId":"dillongoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"        String box;","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"        if (this.getDone()) {","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"dillongoh"},"content":"            box \u003d \"[X] \";","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"            box \u003d \"[ ] \";","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":64,"author":{"gitId":"dillongoh"},"content":"        return \"[E]\" + box + this.getName() + \"(from: \" + this.getStart() + \" to \" + this.getEnd() + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dillongoh":66}},{"path":"src/main/java/tunabot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package tunabot.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":" * Class to handle Tasks","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"public class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"    final String name;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"    boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"     * Initializes new Task with given name","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"     * @param name","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"     * Initializes new Task with given name and status","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"     * @param name","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"     * @param isDone","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"    public  Task(String name, String isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"        this.isDone \u003d isDone.equals(\"true\");","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"    public String getName() {","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"        return name;","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"    public boolean getDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"        return isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"     * Marks task as done","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"     * Marks task as undone","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"        return \"T;\" + this.name + \";\" +this.isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"    ","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"        String box;","lastModifiedDate":"2023-01-16"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-16"},{"lineNumber":57,"author":{"gitId":"dillongoh"},"content":"            box \u003d \"[X] \";","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"            box \u003d \"[ ] \";","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"        return\"[T]\" + box + this.getName();","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dillongoh":63}},{"path":"src/test/java/tunabot/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package tunabot.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"    public void instanceTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"        Deadline task \u003d new Deadline(\"Test Task \", \"01/01/23-1800\");","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"        assertEquals(\"[D][ ] Test Task (by 01/01/23-1800)\", task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"    public void markTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"        Deadline markTask \u003d new Deadline(\"Mark Task\", \"01/01/23-1800\");","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"        markTask.markDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"        assertTrue(markTask.getDone());","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"    public void unmarkTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"        Deadline unmarkTask \u003d new Deadline(\"Unmark Task\", \"01/01/23-1800\");","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"        unmarkTask.markDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"        unmarkTask.unmarkDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"        assertFalse(unmarkTask.getDone());","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dillongoh":28}},{"path":"src/test/java/tunabot/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package tunabot.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"    public void instanceTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"        Task task \u003d new Task(\"Test Task\");","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"        assertEquals(\"[T][ ] Test Task\", task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"    public void markTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"        Task markTask \u003d new Task(\"Mark Task\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"        markTask.markDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"        assertTrue(markTask.getDone());","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"    public void unmarkTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"        Task unmarkTask \u003d new Task(\"Unmark Task\");","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"        unmarkTask.markDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"        unmarkTask.unmarkDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"        assertFalse(unmarkTask.getDone());","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dillongoh":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"todo","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"todo read book","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"event","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"event bookfest","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"event bookfest /from 25/01/23-1800","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"event bookfest /from 25/01/23-1800 /to 26/01/23-1800","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"deadline","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"deadline return book","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"deadline return book /by 28/01/23-1800","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"mark 1","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"mark 2","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"unmark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"mark 3","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"unmark task","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"unmark 1","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"delete 2","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"banana","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"baaaanan","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"bye","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dillongoh":31}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"java -classpath ..\\bin tunabot.TunaBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"dillongoh":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"java -classpath ../bin TunaBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"dillongoh":1}}]
