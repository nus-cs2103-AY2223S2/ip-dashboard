[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"        super(name);","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy-HHmm\");","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"    public Deadline(String name, String isDone, String deadline) {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy-HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy-HHmm\");","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"        return deadline.format(formatter);","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"        return \"T;\" + this.name + \";\" +this.isDone + \";\" + this.getDeadline();","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"        String box;","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"        if (this.getDone()) {","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"            box \u003d \"[X] \";","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"            box \u003d \"[ ] \";","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"        return\"[D]\" + box + this.getName() + \"(by \" + this.getDeadline() +\")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dillongoh":36}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"        super(name);","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy-HHmm\");","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"        start \u003d start.substring(0, start.length() - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"        this.start \u003d LocalDateTime.parse(start, format);","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"        this.end \u003d LocalDateTime.parse(end, format);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"    public Event(String name, String isDone, String start, String end) {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy-HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"        this.start \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"        this.end \u003d LocalDateTime.parse(end, formatter);;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    ","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"    public String getEnd() {","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy-HHmm\");","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"        return end.format(formatter);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"    public String getStart() {","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy-HHmm\");","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"        return start.format(formatter);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"        return \"E;\" + this.name + \";\" +this.isDone + \";\" + this.getStart() + \";\" + this.getEnd();","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"        String box;","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"        if (this.getDone()) {","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"            box \u003d \"[X] \";","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"            box \u003d \"[ ] \";","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"        return\"[E]\" + box + this.getName() + \"(from: \" + this.getStart() + \" to \" + this.getEnd() + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dillongoh":48}},{"path":"src/main/java/InputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"public class InputException extends Exception{","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"    public InputException(String error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"        super(error);","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"dillongoh":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"public class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"    final String name;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"    boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"    public  Task(String name, String isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"        this.isDone \u003d isDone.equals(\"true\");","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"    public String getName() {","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"        return name;","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"    public boolean getDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"        return isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"    public boolean markDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"        return true;","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"    public boolean unmarkDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"        return false;","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"    public String saveFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"        return \"T;\" + this.name + \";\" +this.isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"    ","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"        String box;","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"            box \u003d \"[X] \";","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"            box \u003d \"[ ] \";","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"        return\"[T]\" + box + this.getName();","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dillongoh":42}},{"path":"src/main/java/TunaBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"public class TunaBot {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"    static String LINE \u003d \"------------------------------\";","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"    static Scanner s \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"    static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"    static boolean toExit \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"        Path filePath \u003d Paths.get(\"data\");","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"        File saveLocation \u003d filePath.toFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"        if (!saveLocation.exists()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"                saveLocation.mkdir();","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"            } catch (SecurityException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"                System.out.println(\"BLUB! Problem with save location!!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"        Path savePath \u003d Paths.get(\"data\", \"save.txt\");","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"        File saveFile \u003d savePath.toFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"                System.out.println(\"BLUB! Problem creating save file!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"        loadSave(saveFile);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"        System.out.println(\"    Hello! I\u0027m TunaBot\\n\" +","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"                \"    What can I do for you?\");","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"        while (!toExit) {","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"            String input \u003d s.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"            System.out.println(LINE);","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"            try {","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"                parse(input);","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"            } catch (InputException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"                System.out.println(\"BLUB! Please use the format dd/mm/yy-hhmm! eg. 29/12/23-1854\");","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"            System.out.println(LINE);","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"        save(saveFile);","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"    private static void save(File saveFile) {","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"dillongoh"},"content":"            FileWriter writer \u003d new FileWriter(saveFile);","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"                writer.write(task.saveFormat()+ \"\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"            writer.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"dillongoh"},"content":"            System.out.println(\"BLUB! Couldn\u0027t save tasks!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"dillongoh"},"content":"    private static void loadSave(File saveFile) {","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"dillongoh"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"dillongoh"},"content":"            Scanner saveReader \u003d new Scanner(saveFile);","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"dillongoh"},"content":"            while (saveReader.hasNextLine()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"dillongoh"},"content":"                String [] taskInfo \u003d saveReader.nextLine().split(\";\");","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"dillongoh"},"content":"                if (taskInfo[0].equals(\"T\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"dillongoh"},"content":"                    tasks.add(new Task(taskInfo[1], taskInfo[2]));","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"dillongoh"},"content":"                } else if (taskInfo[0].equals(\"D\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"dillongoh"},"content":"                    tasks.add(new Deadline(taskInfo[1], taskInfo[2], taskInfo[3]));","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"dillongoh"},"content":"                } else if (taskInfo[0].equals(\"E\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"dillongoh"},"content":"                    tasks.add(new Event(taskInfo[1], taskInfo[2], taskInfo[3], taskInfo[4]));","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"dillongoh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"dillongoh"},"content":"            System.out.println(\"BLUB! Couldn\u0027t find save file!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"dillongoh"},"content":"    public static void parse(String input) throws InputException {","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"dillongoh"},"content":"        String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"dillongoh"},"content":"        switch (command[0]) {","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"dillongoh"},"content":"            case \"list\":","lastModifiedDate":"2023-01-16"},{"lineNumber":89,"author":{"gitId":"dillongoh"},"content":"                System.out.println(\"BLUB! There are \" + tasks.size() + \" task(s)!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"dillongoh"},"content":"                for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-01-16"},{"lineNumber":91,"author":{"gitId":"dillongoh"},"content":"                    System.out.println(\"    \" + i + \". \" + tasks.get(i - 1));","lastModifiedDate":"2023-01-16"},{"lineNumber":92,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":93,"author":{"gitId":"dillongoh"},"content":"                break;","lastModifiedDate":"2023-01-16"},{"lineNumber":94,"author":{"gitId":"dillongoh"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-16"},{"lineNumber":95,"author":{"gitId":"dillongoh"},"content":"                toExit \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":96,"author":{"gitId":"dillongoh"},"content":"                System.out.println(\"    Bye! Blub blub!\");","lastModifiedDate":"2023-01-16"},{"lineNumber":97,"author":{"gitId":"dillongoh"},"content":"                break;","lastModifiedDate":"2023-01-16"},{"lineNumber":98,"author":{"gitId":"dillongoh"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-16"},{"lineNumber":99,"author":{"gitId":"dillongoh"},"content":"                if (command.length \u003c 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"dillongoh"},"content":"                    throw new InputException(\"BLUB! No task chosen!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"dillongoh"},"content":"                try {","lastModifiedDate":"2023-01-17"},{"lineNumber":103,"author":{"gitId":"dillongoh"},"content":"                    int index \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"dillongoh"},"content":"                    tasks.get(index - 1).markDone();","lastModifiedDate":"2023-01-16"},{"lineNumber":105,"author":{"gitId":"dillongoh"},"content":"                    System.out.println(\"    Blub! i have marked this as done!\");","lastModifiedDate":"2023-01-16"},{"lineNumber":106,"author":{"gitId":"dillongoh"},"content":"                    System.out.println(tasks.get(index - 1));","lastModifiedDate":"2023-01-16"},{"lineNumber":107,"author":{"gitId":"dillongoh"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":108,"author":{"gitId":"dillongoh"},"content":"                    throw new InputException(\"BLUB! Index chosen isn\u0027t a number!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":109,"author":{"gitId":"dillongoh"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":110,"author":{"gitId":"dillongoh"},"content":"                    throw new InputException(\"BLUB! Task chosen isn\u0027t on the list!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":111,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":112,"author":{"gitId":"dillongoh"},"content":"                break;","lastModifiedDate":"2023-01-16"},{"lineNumber":113,"author":{"gitId":"dillongoh"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-16"},{"lineNumber":114,"author":{"gitId":"dillongoh"},"content":"                if (command.length \u003c 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":115,"author":{"gitId":"dillongoh"},"content":"                    throw new InputException(\"BLUB! No task chosen!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":116,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":117,"author":{"gitId":"dillongoh"},"content":"                try {","lastModifiedDate":"2023-01-17"},{"lineNumber":118,"author":{"gitId":"dillongoh"},"content":"                    int index \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":119,"author":{"gitId":"dillongoh"},"content":"                    tasks.get(index - 1).unmarkDone();","lastModifiedDate":"2023-01-16"},{"lineNumber":120,"author":{"gitId":"dillongoh"},"content":"                    System.out.println(\"    Blub! i have marked this as not done!\");","lastModifiedDate":"2023-01-16"},{"lineNumber":121,"author":{"gitId":"dillongoh"},"content":"                    System.out.println(tasks.get(index - 1));","lastModifiedDate":"2023-01-16"},{"lineNumber":122,"author":{"gitId":"dillongoh"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":123,"author":{"gitId":"dillongoh"},"content":"                    throw new InputException(\"BLUB! Index chosen isn\u0027t a number!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":124,"author":{"gitId":"dillongoh"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":125,"author":{"gitId":"dillongoh"},"content":"                    throw new InputException(\"BLUB! Task chosen isn\u0027t on the list!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":126,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":127,"author":{"gitId":"dillongoh"},"content":"                break;","lastModifiedDate":"2023-01-16"},{"lineNumber":128,"author":{"gitId":"dillongoh"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-17"},{"lineNumber":129,"author":{"gitId":"dillongoh"},"content":"                if (command.length \u003c 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":130,"author":{"gitId":"dillongoh"},"content":"                    throw new InputException(\"BLUB! No task chosen!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":131,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":132,"author":{"gitId":"dillongoh"},"content":"                try {","lastModifiedDate":"2023-01-17"},{"lineNumber":133,"author":{"gitId":"dillongoh"},"content":"                    int index \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":134,"author":{"gitId":"dillongoh"},"content":"                    System.out.println(\"    Blub! i have deleted this task!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":135,"author":{"gitId":"dillongoh"},"content":"                    System.out.println(tasks.get(index - 1));","lastModifiedDate":"2023-01-17"},{"lineNumber":136,"author":{"gitId":"dillongoh"},"content":"                    tasks.remove(index - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":137,"author":{"gitId":"dillongoh"},"content":"                    System.out.println(\"    Blub! You have \" + tasks.size() + \" tasks now!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":138,"author":{"gitId":"dillongoh"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":139,"author":{"gitId":"dillongoh"},"content":"                    throw new InputException(\"BLUB! Index chosen isn\u0027t a number!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":140,"author":{"gitId":"dillongoh"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":141,"author":{"gitId":"dillongoh"},"content":"                    throw new InputException(\"BLUB! Task chosen isn\u0027t on the list!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":142,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":143,"author":{"gitId":"dillongoh"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":144,"author":{"gitId":"dillongoh"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-16"},{"lineNumber":145,"author":{"gitId":"dillongoh"},"content":"                if (command.length \u003c 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":146,"author":{"gitId":"dillongoh"},"content":"                    throw new InputException(\"BLUB! Task needs a name!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":147,"author":{"gitId":"dillongoh"},"content":"                } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":148,"author":{"gitId":"dillongoh"},"content":"                    Task newTask \u003d new Task(command[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":149,"author":{"gitId":"dillongoh"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2023-01-16"},{"lineNumber":150,"author":{"gitId":"dillongoh"},"content":"                    System.out.println(\"    Blub! added: \\n\" + newTask);","lastModifiedDate":"2023-01-16"},{"lineNumber":151,"author":{"gitId":"dillongoh"},"content":"                    System.out.println(\"    Blub! You have \" + tasks.size() + \" tasks now!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":152,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":153,"author":{"gitId":"dillongoh"},"content":"                break;","lastModifiedDate":"2023-01-16"},{"lineNumber":154,"author":{"gitId":"dillongoh"},"content":"            case \"event\":","lastModifiedDate":"2023-01-16"},{"lineNumber":155,"author":{"gitId":"dillongoh"},"content":"                if(command.length \u003c 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":156,"author":{"gitId":"dillongoh"},"content":"                    throw new InputException(\"BLUB! Event needs a name, \" +","lastModifiedDate":"2023-01-17"},{"lineNumber":157,"author":{"gitId":"dillongoh"},"content":"                            \"a start time and end time!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":158,"author":{"gitId":"dillongoh"},"content":"                } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":159,"author":{"gitId":"dillongoh"},"content":"                    String[] details \u003d command[1].split(\"/from |/to \", 3);","lastModifiedDate":"2023-01-17"},{"lineNumber":160,"author":{"gitId":"dillongoh"},"content":"                    if (details.length \u003c 3) {","lastModifiedDate":"2023-01-17"},{"lineNumber":161,"author":{"gitId":"dillongoh"},"content":"                        throw new InputException(\"BLUB! Event is missing info!\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":162,"author":{"gitId":"dillongoh"},"content":"                                \" Please check input. BLUB!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":163,"author":{"gitId":"dillongoh"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":164,"author":{"gitId":"dillongoh"},"content":"                    Event newEvent \u003d new Event(details[0], details[1], details[2]);","lastModifiedDate":"2023-01-17"},{"lineNumber":165,"author":{"gitId":"dillongoh"},"content":"                    tasks.add(newEvent);","lastModifiedDate":"2023-01-16"},{"lineNumber":166,"author":{"gitId":"dillongoh"},"content":"                    System.out.println(\"    Blub! added: \\n\" + newEvent);","lastModifiedDate":"2023-01-16"},{"lineNumber":167,"author":{"gitId":"dillongoh"},"content":"                    System.out.println(\"    Blub! You have \" + tasks.size() + \" tasks now!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":168,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":169,"author":{"gitId":"dillongoh"},"content":"                break;","lastModifiedDate":"2023-01-16"},{"lineNumber":170,"author":{"gitId":"dillongoh"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-16"},{"lineNumber":171,"author":{"gitId":"dillongoh"},"content":"                if(command.length \u003c 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":172,"author":{"gitId":"dillongoh"},"content":"                    throw new InputException(\"BLUB! Deadline needs a name and due date!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":173,"author":{"gitId":"dillongoh"},"content":"                } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":174,"author":{"gitId":"dillongoh"},"content":"                    String details[] \u003d command[1].split(\"/by \", 2);","lastModifiedDate":"2023-01-17"},{"lineNumber":175,"author":{"gitId":"dillongoh"},"content":"                    if(details.length \u003c 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":176,"author":{"gitId":"dillongoh"},"content":"                        throw new InputException(\"BLUB! Deadline is missing info!\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":177,"author":{"gitId":"dillongoh"},"content":"                                \" PLease check input. BLUB!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":178,"author":{"gitId":"dillongoh"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":179,"author":{"gitId":"dillongoh"},"content":"                    Deadline newDeadline \u003d new Deadline(details[0], details[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":180,"author":{"gitId":"dillongoh"},"content":"                    tasks.add(newDeadline);","lastModifiedDate":"2023-01-16"},{"lineNumber":181,"author":{"gitId":"dillongoh"},"content":"                    System.out.println(\"    Blub! added: \\n\" + newDeadline);","lastModifiedDate":"2023-01-16"},{"lineNumber":182,"author":{"gitId":"dillongoh"},"content":"                    System.out.println(\"    Blub! You have \" + tasks.size() + \" tasks now!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":183,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":184,"author":{"gitId":"dillongoh"},"content":"                break;","lastModifiedDate":"2023-01-16"},{"lineNumber":185,"author":{"gitId":"dillongoh"},"content":"            default:","lastModifiedDate":"2023-01-16"},{"lineNumber":186,"author":{"gitId":"dillongoh"},"content":"                System.out.println(\"BLUB OH! INVALID COMMAND!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":187,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":188,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":189,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dillongoh":189}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"todo","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"todo read book","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"event","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"event bookfest","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"event bookfest /from 25/01/23-1800","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"event bookfest /from 25/01/23-1800 /to 26/01/23-1800","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"deadline","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"deadline return book","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"deadline return book /by 28/01/23-1800","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"mark 1","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"mark 2","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"unmark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"mark 3","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"unmark task","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"unmark 1","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"delete 2","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"banana","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"baaaanan","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"bye","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dillongoh":31}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"java -classpath ..\\bin TunaBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"dillongoh":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"java -classpath ../bin TunaBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"dillongoh":1}}]
