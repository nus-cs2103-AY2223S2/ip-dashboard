[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"/*javafx {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"}*/","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"checkstyle {","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"dependencies {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"dohaduong"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"dohaduong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"dohaduong":34,"-":37}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"[T][X] cleanthe house ","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"[T][X] cleanthe house ","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"[T][ ] clean the beach ","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"[E][X] clean house  (from: Oct 10 2020 11:00 AM to: Oct 10 2020 12:00 PM)","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"[T][ ] go ","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"[T][ ] go to bed ","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"[T][ ] wash your face ","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"[T][ ] go Hanoi ","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"dohaduong":8}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"[D][ ] return books  (by: Feb 12 2019)","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"[T][ ] clean up ","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"[T][ ] clean house ","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":3}},{"path":"src/main/java/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"[T][ ] clean up ","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"[T][ ] clean the hosue ","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"[D][ ] call parents  (by: Feb 12 2020)","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"[D][ ] go home  (by: Oct 10 2020)","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"[T][ ] clean the car ","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"[T][ ] go home ","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"[T][ ] clean ipad ","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"[T][ ] clean the car ","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"[T][ ] go home ","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"[E][ ] go  (from: Oct 10 2020 to: Oct 10 2020)","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"dohaduong":10}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"//import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"//import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"    //private Label text;","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"    private void flip() {","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"dohaduong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"dohaduong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"dohaduong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"dohaduong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"dohaduong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"dohaduong"},"content":"        db.flip();","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"dohaduong"},"content":"        return db;","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"dohaduong":66}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"import duke.command.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"import duke.command.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"import duke.command.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"enum Action {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"    Bye,","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"    Deadline,","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"    Delete,","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"    Event,","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"    Find,","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"    List,","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"    Mark,","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"    Todo,","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"    Undo,","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"    Unmark,","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":" * Represents a Duke","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"     * Initialize a Duke with given information","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"     * @param filepath where storage data will be stored","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"     * @throws FileNotFoundException if such filepath does not exist","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"    public Duke(String filepath) throws FileNotFoundException {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"     * Represent a new Duke","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"    public Duke() {","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"        storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"dohaduong"},"content":"    private void run() throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"dohaduong"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"dohaduong"},"content":"        TaskList listOfAction \u003d tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"dohaduong"},"content":"        Storage file \u003d storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"dohaduong"},"content":"        String s \u003d \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"dohaduong"},"content":"        String[] arr \u003d ui.getInput();","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"dohaduong"},"content":"        s \u003d arr[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"dohaduong"},"content":"        //int len \u003d listOfAction.validLen();","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"dohaduong"},"content":"        while (!s.equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"dohaduong"},"content":"            file.overwrite(listOfAction);","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"dohaduong"},"content":"            String remaining \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"dohaduong"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"dohaduong"},"content":"                Action myAction \u003d Action.valueOf(String.valueOf(s.charAt(0)).toUpperCase()","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"dohaduong"},"content":"                        + s.substring(1));","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"dohaduong"},"content":"                switch (myAction) {","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"dohaduong"},"content":"                case Find:","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"dohaduong"},"content":"                    ui.says(ui.findWordIntro(listOfAction, arr, listOfAction.checkWord(arr[1])));","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"dohaduong"},"content":"                case Bye:","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"dohaduong"},"content":"                    ui.says(ui.bye());","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"dohaduong"},"content":"                case Undo:","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"dohaduong"},"content":"                    ui.says(ui.undo(listOfAction));","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"dohaduong"},"content":"                case List:","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"dohaduong"},"content":"                    ui.says(ui.list(listOfAction));","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"dohaduong"},"content":"                case Mark:","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"dohaduong"},"content":"                    ui.says(ui.mark(listOfAction, arr));","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"dohaduong"},"content":"                case Unmark:","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"dohaduong"},"content":"                    ui.says(ui.unmark(listOfAction, arr));","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"dohaduong"},"content":"                case Delete:","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"dohaduong"},"content":"                    ui.says(ui.delete(listOfAction, arr));","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"dohaduong"},"content":"                case Todo:","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"dohaduong"},"content":"                    ui.says(ui.addToDo(listOfAction, arr));","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"dohaduong"},"content":"                case Deadline:","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"dohaduong"},"content":"                    ui.says(ui.addDeadline(listOfAction, arr));","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"dohaduong"},"content":"                case Event:","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"dohaduong"},"content":"                    ui.says(ui.addEvent(listOfAction, arr));","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"dohaduong"},"content":"                default:","lastModifiedDate":"2023-02-10"},{"lineNumber":111,"author":{"gitId":"dohaduong"},"content":"                    ui.says(ui.showUnknownError());","lastModifiedDate":"2023-02-10"},{"lineNumber":112,"author":{"gitId":"dohaduong"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"dohaduong"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"dohaduong"},"content":"                ui.showUnknownError();","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"dohaduong"},"content":"            file.overwrite(listOfAction);","lastModifiedDate":"2023-02-03"},{"lineNumber":118,"author":{"gitId":"dohaduong"},"content":"            arr \u003d ui.getInput();","lastModifiedDate":"2023-02-03"},{"lineNumber":119,"author":{"gitId":"dohaduong"},"content":"            s \u003d arr[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"dohaduong"},"content":"        ui.bye();","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"dohaduong"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"dohaduong"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":126,"author":{"gitId":"dohaduong"},"content":"        //ui.showWelcome();","lastModifiedDate":"2023-02-10"},{"lineNumber":127,"author":{"gitId":"dohaduong"},"content":"        TaskList listOfAction \u003d tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":128,"author":{"gitId":"dohaduong"},"content":"        Storage file \u003d storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":129,"author":{"gitId":"dohaduong"},"content":"        String[] arr \u003d ui.getInput(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":130,"author":{"gitId":"dohaduong"},"content":"        String s \u003d arr[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":132,"author":{"gitId":"dohaduong"},"content":"            Action myAction \u003d Action.valueOf(String.valueOf(s.charAt(0)).toUpperCase()","lastModifiedDate":"2023-02-03"},{"lineNumber":133,"author":{"gitId":"dohaduong"},"content":"                    + s.substring(1));","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"dohaduong"},"content":"            switch (myAction) {","lastModifiedDate":"2023-02-03"},{"lineNumber":135,"author":{"gitId":"dohaduong"},"content":"            case Find:","lastModifiedDate":"2023-02-03"},{"lineNumber":136,"author":{"gitId":"dohaduong"},"content":"                return (ui.findWordIntro(listOfAction, arr, listOfAction.checkWord(arr[1])));","lastModifiedDate":"2023-02-03"},{"lineNumber":137,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":138,"author":{"gitId":"dohaduong"},"content":"            case Bye:","lastModifiedDate":"2023-02-03"},{"lineNumber":139,"author":{"gitId":"dohaduong"},"content":"                return (ui.bye());","lastModifiedDate":"2023-02-03"},{"lineNumber":140,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":141,"author":{"gitId":"dohaduong"},"content":"            case Undo:","lastModifiedDate":"2023-02-10"},{"lineNumber":142,"author":{"gitId":"dohaduong"},"content":"                return ui.undo(listOfAction);","lastModifiedDate":"2023-02-10"},{"lineNumber":143,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":144,"author":{"gitId":"dohaduong"},"content":"            case List:","lastModifiedDate":"2023-02-03"},{"lineNumber":145,"author":{"gitId":"dohaduong"},"content":"                return (ui.list(listOfAction));","lastModifiedDate":"2023-02-03"},{"lineNumber":146,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":147,"author":{"gitId":"dohaduong"},"content":"            case Mark:","lastModifiedDate":"2023-02-03"},{"lineNumber":148,"author":{"gitId":"dohaduong"},"content":"                return (ui.mark(listOfAction, arr));","lastModifiedDate":"2023-02-03"},{"lineNumber":149,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":150,"author":{"gitId":"dohaduong"},"content":"            case Unmark:","lastModifiedDate":"2023-02-03"},{"lineNumber":151,"author":{"gitId":"dohaduong"},"content":"                return (ui.unmark(listOfAction, arr));","lastModifiedDate":"2023-02-03"},{"lineNumber":152,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":153,"author":{"gitId":"dohaduong"},"content":"            case Delete:","lastModifiedDate":"2023-02-03"},{"lineNumber":154,"author":{"gitId":"dohaduong"},"content":"                return (ui.delete(listOfAction, arr));","lastModifiedDate":"2023-02-03"},{"lineNumber":155,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":156,"author":{"gitId":"dohaduong"},"content":"            case Todo:","lastModifiedDate":"2023-02-03"},{"lineNumber":157,"author":{"gitId":"dohaduong"},"content":"                return (ui.addToDo(listOfAction, arr));","lastModifiedDate":"2023-02-03"},{"lineNumber":158,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":159,"author":{"gitId":"dohaduong"},"content":"            case Deadline:","lastModifiedDate":"2023-02-03"},{"lineNumber":160,"author":{"gitId":"dohaduong"},"content":"                return (ui.addDeadline(listOfAction, arr));","lastModifiedDate":"2023-02-03"},{"lineNumber":161,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":162,"author":{"gitId":"dohaduong"},"content":"            case Event:","lastModifiedDate":"2023-02-03"},{"lineNumber":163,"author":{"gitId":"dohaduong"},"content":"                return (ui.addEvent(listOfAction, arr));","lastModifiedDate":"2023-02-03"},{"lineNumber":164,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":165,"author":{"gitId":"dohaduong"},"content":"            default:","lastModifiedDate":"2023-02-03"},{"lineNumber":166,"author":{"gitId":"dohaduong"},"content":"                return (ui.showUnknownError());","lastModifiedDate":"2023-02-10"},{"lineNumber":167,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":168,"author":{"gitId":"dohaduong"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":169,"author":{"gitId":"dohaduong"},"content":"            ui.showUnknownError();","lastModifiedDate":"2023-02-03"},{"lineNumber":170,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":171,"author":{"gitId":"dohaduong"},"content":"        return ui.showUnknownError();","lastModifiedDate":"2023-02-03"},{"lineNumber":172,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":173,"author":{"gitId":"dohaduong"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"dohaduong"},"content":"        new Duke(\"./data/tasks.txt\").run();","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":177,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":178,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":179,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":180,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":181,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"dohaduong":178,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"public class Launcher {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"dohaduong":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"            stage.show();","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"dohaduong":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Gru.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/GruDuke.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"dohaduong":52}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"import duke.exception.MissingContentException;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":" * Makes sense of what users say","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"    private static final String inSecond \u003d \"00\";","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"    private static final int secondToEndIndex \u003d 2;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"    private static final int minSize \u003d 0;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"    private static String lastCommand \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"    private static String lastCommandDetail \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"    private static TaskList lastTaskList \u003d new TaskList();","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"     * Update last command","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"     * @param newCommand type of last command","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"    public static void updateLastCommand(String newCommand) {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"        lastCommand \u003d newCommand;","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"     * Update last command detail","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"     * @param newDetail detail of last command in String","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"    public static void updateLastCommandDetail(String newDetail) {","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"        lastCommandDetail \u003d newDetail;","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"     * Update last task list (update to before most recent command is applied on Duke)","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"     * @param newTaskList what the task list was before most recent command is applied","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"    public static void updateLastTaskList(TaskList newTaskList) {","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"        lastTaskList \u003d newTaskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"     * Return the last task list - the task list before last command is applied","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"     * @return last task list","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"    private static TaskList getLastTaskList() {","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"        return lastTaskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"     * Undo response to user input","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"     * And update task list correspondingly","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"dohaduong"},"content":"     * @param taskList original task list (after the most recent command is done)","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"dohaduong"},"content":"     * @return Duke\u0027s response","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"dohaduong"},"content":"    public static String undo(TaskList taskList) {","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"dohaduong"},"content":"        if (lastCommand.startsWith(\"mark \")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"dohaduong"},"content":"            taskList.overwrite(lastTaskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"dohaduong"},"content":"            return (\"WOOF! Got it! I will undo the last command!\" + \"\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"dohaduong"},"content":"                    + \"The following task has been unmarked: \" + \"\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"dohaduong"},"content":"                    + lastCommandDetail);","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"dohaduong"},"content":"        } else if (lastCommand.startsWith(\"unmark \")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"dohaduong"},"content":"            taskList.overwrite(lastTaskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"dohaduong"},"content":"            return (\"WOOF! Got it! I will undo the last command!\" + \"\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"dohaduong"},"content":"                    + \"The following task has been un-unmarked: \" + \"\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"dohaduong"},"content":"                    + lastCommandDetail);","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"dohaduong"},"content":"        } else if (lastCommand.startsWith(\"delete \")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"dohaduong"},"content":"            taskList.overwrite(lastTaskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"dohaduong"},"content":"            return (\"WOOF! Got it! I will undo the last command!\" + \"\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"dohaduong"},"content":"                    + \"The following task has been un-deleted: \" + \"\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"dohaduong"},"content":"                    + lastCommandDetail);","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"dohaduong"},"content":"        } else if (lastCommand.startsWith(\"todo \") || lastCommand.startsWith(\"event \")","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"dohaduong"},"content":"                || lastCommand.startsWith(\"deadline \")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"dohaduong"},"content":"            taskList.overwrite(lastTaskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"dohaduong"},"content":"            return (\"WOOF! Got it! I will undo the last command!\" + \"\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"dohaduong"},"content":"                    + \"The following task has been un-added: \" + \"\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"dohaduong"},"content":"                    + lastCommandDetail);","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"dohaduong"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"dohaduong"},"content":"            return (\"WOOF!! The last command cannot be undone!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"dohaduong"},"content":"     * Makes sense of adding to do command from users","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"dohaduong"},"content":"     * @param arr array of original array","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"dohaduong"},"content":"     * @return full string command for users","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"dohaduong"},"content":"    public static String parseToDo(String[] arr) throws MissingContentException {","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"dohaduong"},"content":"        String remaining \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"dohaduong"},"content":"            remaining \u003d arr[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"dohaduong"},"content":"            remaining +\u003d \" \";","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"dohaduong"},"content":"            for (int j \u003d 2; j \u003c arr.length; j++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"dohaduong"},"content":"                remaining +\u003d arr[j];","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"dohaduong"},"content":"                remaining +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"dohaduong"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"dohaduong"},"content":"            throw new MissingContentException();","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"dohaduong"},"content":"        assert (remaining.length() !\u003d minSize) : \"Parser could not process todo task as description is empty\";","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"dohaduong"},"content":"        return remaining;","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"dohaduong"},"content":"     * Gets index at which task should perform on task list","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"dohaduong"},"content":"     * @param listOfAction original task list","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"dohaduong"},"content":"     * @param command user\u0027s command input","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"dohaduong"},"content":"     * @return index of tasklist","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"dohaduong"},"content":"     * @throws MissingContentException if command does not specify index","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"dohaduong"},"content":"     * @throws InvalidIndexException if task list does not have such index","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"dohaduong"},"content":"    public static int getTaskIndex(TaskList listOfAction, String[] command) throws MissingContentException,","lastModifiedDate":"2023-02-10"},{"lineNumber":113,"author":{"gitId":"dohaduong"},"content":"            InvalidIndexException {","lastModifiedDate":"2023-02-10"},{"lineNumber":114,"author":{"gitId":"dohaduong"},"content":"        int taskIndex;","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":116,"author":{"gitId":"dohaduong"},"content":"            taskIndex \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":117,"author":{"gitId":"dohaduong"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":118,"author":{"gitId":"dohaduong"},"content":"            throw new MissingContentException();","lastModifiedDate":"2023-02-03"},{"lineNumber":119,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":120,"author":{"gitId":"dohaduong"},"content":"        if (!listOfAction.checkValidIndex(taskIndex - 1)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"dohaduong"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"dohaduong"},"content":"        } else if (taskIndex \u003c 1) {","lastModifiedDate":"2023-02-03"},{"lineNumber":123,"author":{"gitId":"dohaduong"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"dohaduong"},"content":"        return taskIndex;","lastModifiedDate":"2023-02-03"},{"lineNumber":126,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":127,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":128,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"dohaduong"},"content":"     * Returns the detail/content of deadline.","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"dohaduong"},"content":"     * Given that the detail is not empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"dohaduong"},"content":"     * @param arr an array of the input.","lastModifiedDate":"2023-01-27"},{"lineNumber":133,"author":{"gitId":"dohaduong"},"content":"     * @return the String detail.","lastModifiedDate":"2023-01-27"},{"lineNumber":134,"author":{"gitId":"dohaduong"},"content":"     * @throws MissingContentException if arr is empty.","lastModifiedDate":"2023-02-03"},{"lineNumber":135,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"dohaduong"},"content":"    public String getDeadlineDetail(String[] arr) throws MissingContentException {","lastModifiedDate":"2023-02-10"},{"lineNumber":137,"author":{"gitId":"dohaduong"},"content":"        String detail \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"dohaduong"},"content":"        if (arr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"dohaduong"},"content":"            throw new MissingContentException();","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"dohaduong"},"content":"        for (int j \u003d 1; j \u003c arr.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"dohaduong"},"content":"            if (String.valueOf(arr[j]).equals(\"/by\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"dohaduong"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"dohaduong"},"content":"            detail +\u003d arr[j];","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"dohaduong"},"content":"            detail +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"dohaduong"},"content":"        return detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":152,"author":{"gitId":"dohaduong"},"content":"     * Returns index of the input array where indicates time of the deadline.","lastModifiedDate":"2023-01-27"},{"lineNumber":153,"author":{"gitId":"dohaduong"},"content":"     * Given that the arr is not empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":154,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":155,"author":{"gitId":"dohaduong"},"content":"     * @param arr an array of the input.","lastModifiedDate":"2023-01-27"},{"lineNumber":156,"author":{"gitId":"dohaduong"},"content":"     * @return the index of deadline time.","lastModifiedDate":"2023-01-27"},{"lineNumber":157,"author":{"gitId":"dohaduong"},"content":"     * @throws MissingContentException if arr is empty.","lastModifiedDate":"2023-02-03"},{"lineNumber":158,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"dohaduong"},"content":"    private int getDeadlineTimeIndex(String[] arr) throws MissingContentException {","lastModifiedDate":"2023-02-10"},{"lineNumber":160,"author":{"gitId":"dohaduong"},"content":"        if (arr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":161,"author":{"gitId":"dohaduong"},"content":"            throw new MissingContentException();","lastModifiedDate":"2023-01-27"},{"lineNumber":162,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":163,"author":{"gitId":"dohaduong"},"content":"        int pointer \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"dohaduong"},"content":"        for (int j \u003d 1; j \u003c arr.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"dohaduong"},"content":"            if (String.valueOf(arr[j]).equals(\"/by\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"dohaduong"},"content":"                pointer \u003d j + 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"dohaduong"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"dohaduong"},"content":"        if (pointer \u003d\u003d minSize) {","lastModifiedDate":"2023-02-10"},{"lineNumber":171,"author":{"gitId":"dohaduong"},"content":"            throw new MissingContentException();","lastModifiedDate":"2023-01-27"},{"lineNumber":172,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":173,"author":{"gitId":"dohaduong"},"content":"        return pointer;","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":177,"author":{"gitId":"dohaduong"},"content":"     * Gets full deadline detail and date from user command","lastModifiedDate":"2023-02-03"},{"lineNumber":178,"author":{"gitId":"dohaduong"},"content":"     * @param command user input","lastModifiedDate":"2023-02-03"},{"lineNumber":179,"author":{"gitId":"dohaduong"},"content":"     * @return deadline in full detail and date","lastModifiedDate":"2023-02-03"},{"lineNumber":180,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":181,"author":{"gitId":"dohaduong"},"content":"    public String getDeadlineFull(String[] command) {","lastModifiedDate":"2023-02-03"},{"lineNumber":182,"author":{"gitId":"dohaduong"},"content":"        String remaining \u003d \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":183,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":184,"author":{"gitId":"dohaduong"},"content":"            String detail \u003d this.getDeadlineDetail(command);","lastModifiedDate":"2023-02-10"},{"lineNumber":185,"author":{"gitId":"dohaduong"},"content":"            int pointer \u003d this.getDeadlineTimeIndex(command);","lastModifiedDate":"2023-02-10"},{"lineNumber":186,"author":{"gitId":"dohaduong"},"content":"            for (int j \u003d pointer; j \u003c command.length; j++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":187,"author":{"gitId":"dohaduong"},"content":"                if (String.valueOf(command[j]).equals(\"/\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":188,"author":{"gitId":"dohaduong"},"content":"                    remaining +\u003d \"-\";","lastModifiedDate":"2023-02-03"},{"lineNumber":189,"author":{"gitId":"dohaduong"},"content":"                } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":190,"author":{"gitId":"dohaduong"},"content":"                    remaining +\u003d command[j];","lastModifiedDate":"2023-02-03"},{"lineNumber":191,"author":{"gitId":"dohaduong"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":192,"author":{"gitId":"dohaduong"},"content":"                if (j !\u003d command.length - 1) {","lastModifiedDate":"2023-02-03"},{"lineNumber":193,"author":{"gitId":"dohaduong"},"content":"                    remaining +\u003d \" \";","lastModifiedDate":"2023-02-03"},{"lineNumber":194,"author":{"gitId":"dohaduong"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":195,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":196,"author":{"gitId":"dohaduong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":197,"author":{"gitId":"dohaduong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":198,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":199,"author":{"gitId":"dohaduong"},"content":"        return remaining;","lastModifiedDate":"2023-02-03"},{"lineNumber":200,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":201,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":202,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":203,"author":{"gitId":"dohaduong"},"content":"     * Returns index of the input array where indicates starting time of the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":204,"author":{"gitId":"dohaduong"},"content":"     * Given that the arr is not empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":205,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":206,"author":{"gitId":"dohaduong"},"content":"     * @param arr an array of the input.","lastModifiedDate":"2023-01-27"},{"lineNumber":207,"author":{"gitId":"dohaduong"},"content":"     * @return the index of starting time.","lastModifiedDate":"2023-01-27"},{"lineNumber":208,"author":{"gitId":"dohaduong"},"content":"     * @throws MissingContentException if arr is empty.","lastModifiedDate":"2023-02-03"},{"lineNumber":209,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":210,"author":{"gitId":"dohaduong"},"content":"    public int getEventStartTimeIndex(String[] arr) throws MissingContentException {","lastModifiedDate":"2023-01-27"},{"lineNumber":211,"author":{"gitId":"dohaduong"},"content":"        int startIndex \u003d minSize;","lastModifiedDate":"2023-02-10"},{"lineNumber":212,"author":{"gitId":"dohaduong"},"content":"        for (int j \u003d 1; j \u003c arr.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":213,"author":{"gitId":"dohaduong"},"content":"            if (String.valueOf(arr[j]).equals(\"/from\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":214,"author":{"gitId":"dohaduong"},"content":"                startIndex \u003d j + 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":215,"author":{"gitId":"dohaduong"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":216,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":217,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":218,"author":{"gitId":"dohaduong"},"content":"        if (startIndex \u003d\u003d minSize) {","lastModifiedDate":"2023-02-10"},{"lineNumber":219,"author":{"gitId":"dohaduong"},"content":"            throw new MissingContentException();","lastModifiedDate":"2023-01-27"},{"lineNumber":220,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":221,"author":{"gitId":"dohaduong"},"content":"        return startIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":222,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":223,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":224,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":225,"author":{"gitId":"dohaduong"},"content":"     * Returns event detail from input array.","lastModifiedDate":"2023-01-27"},{"lineNumber":226,"author":{"gitId":"dohaduong"},"content":"     * Given that the arr is not empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":227,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":228,"author":{"gitId":"dohaduong"},"content":"     * @param arr an array of the input.","lastModifiedDate":"2023-01-27"},{"lineNumber":229,"author":{"gitId":"dohaduong"},"content":"     * @return event detail.","lastModifiedDate":"2023-01-27"},{"lineNumber":230,"author":{"gitId":"dohaduong"},"content":"     * @throws MissingContentException if arr is empty.","lastModifiedDate":"2023-02-03"},{"lineNumber":231,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":232,"author":{"gitId":"dohaduong"},"content":"    public String getEventDetail(String[] arr) throws MissingContentException {","lastModifiedDate":"2023-01-27"},{"lineNumber":233,"author":{"gitId":"dohaduong"},"content":"        if (arr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":234,"author":{"gitId":"dohaduong"},"content":"            throw new MissingContentException();","lastModifiedDate":"2023-01-27"},{"lineNumber":235,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":236,"author":{"gitId":"dohaduong"},"content":"        String detail \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":237,"author":{"gitId":"dohaduong"},"content":"        for (int j \u003d 1; j \u003c arr.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":238,"author":{"gitId":"dohaduong"},"content":"            if (String.valueOf(arr[j]).equals(\"/from\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":239,"author":{"gitId":"dohaduong"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":240,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":241,"author":{"gitId":"dohaduong"},"content":"            detail +\u003d arr[j];","lastModifiedDate":"2023-01-26"},{"lineNumber":242,"author":{"gitId":"dohaduong"},"content":"            detail +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":243,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":244,"author":{"gitId":"dohaduong"},"content":"        assert (detail.length() !\u003d minSize) : \"Parser could not process event task as its detail is empty\";","lastModifiedDate":"2023-02-10"},{"lineNumber":245,"author":{"gitId":"dohaduong"},"content":"        return detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":246,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":247,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":248,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":249,"author":{"gitId":"dohaduong"},"content":"     * Returns index of the input array where indicates ending time of the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":250,"author":{"gitId":"dohaduong"},"content":"     * Given that the arr is not empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":251,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":252,"author":{"gitId":"dohaduong"},"content":"     * @param arr an array of the input.","lastModifiedDate":"2023-01-27"},{"lineNumber":253,"author":{"gitId":"dohaduong"},"content":"     * @param startIndex starting index where indicates starting time of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":254,"author":{"gitId":"dohaduong"},"content":"     * @return the index of ending time.","lastModifiedDate":"2023-01-27"},{"lineNumber":255,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":256,"author":{"gitId":"dohaduong"},"content":"    public int getEventEndTimeIndex(String[] arr, int startIndex) throws MissingContentException {","lastModifiedDate":"2023-01-27"},{"lineNumber":257,"author":{"gitId":"dohaduong"},"content":"        int endIndex \u003d minSize;","lastModifiedDate":"2023-02-10"},{"lineNumber":258,"author":{"gitId":"dohaduong"},"content":"        for (int j \u003d startIndex; j \u003c arr.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":259,"author":{"gitId":"dohaduong"},"content":"            if (String.valueOf(arr[j]).equals(\"/to\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":260,"author":{"gitId":"dohaduong"},"content":"                endIndex \u003d j + 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":261,"author":{"gitId":"dohaduong"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":262,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":263,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":264,"author":{"gitId":"dohaduong"},"content":"        if (endIndex \u003d\u003d minSize) {","lastModifiedDate":"2023-02-10"},{"lineNumber":265,"author":{"gitId":"dohaduong"},"content":"            throw new MissingContentException();","lastModifiedDate":"2023-01-27"},{"lineNumber":266,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":267,"author":{"gitId":"dohaduong"},"content":"        return endIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":268,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":269,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":270,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":271,"author":{"gitId":"dohaduong"},"content":"     * Returns index of the input array where indicates ending time of the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":272,"author":{"gitId":"dohaduong"},"content":"     * Given that the arr is not empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":273,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":274,"author":{"gitId":"dohaduong"},"content":"     * @param arr an array of the input.","lastModifiedDate":"2023-01-27"},{"lineNumber":275,"author":{"gitId":"dohaduong"},"content":"     * @param startIndex starting index where indicates starting time of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":276,"author":{"gitId":"dohaduong"},"content":"     * @param endIndex ending index where indicates ending time of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":277,"author":{"gitId":"dohaduong"},"content":"     * @return an array consists of event start time and event ent time specifically in String.","lastModifiedDate":"2023-01-27"},{"lineNumber":278,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":279,"author":{"gitId":"dohaduong"},"content":"    public String[] getEventTime(String[] arr, int startIndex, int endIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":280,"author":{"gitId":"dohaduong"},"content":"        String[] eventTime \u003d new String[4];","lastModifiedDate":"2023-02-03"},{"lineNumber":281,"author":{"gitId":"dohaduong"},"content":"        String start \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":282,"author":{"gitId":"dohaduong"},"content":"        String end \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":283,"author":{"gitId":"dohaduong"},"content":"        for (int j \u003d startIndex; j \u003c endIndex - 1; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":284,"author":{"gitId":"dohaduong"},"content":"            if (String.valueOf(arr[j]).equals(\"/\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":285,"author":{"gitId":"dohaduong"},"content":"                start +\u003d \"-\";","lastModifiedDate":"2023-01-26"},{"lineNumber":286,"author":{"gitId":"dohaduong"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":287,"author":{"gitId":"dohaduong"},"content":"                start +\u003d arr[j];","lastModifiedDate":"2023-01-26"},{"lineNumber":288,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":289,"author":{"gitId":"dohaduong"},"content":"            if (j !\u003d endIndex - secondToEndIndex) {","lastModifiedDate":"2023-02-10"},{"lineNumber":290,"author":{"gitId":"dohaduong"},"content":"                start +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":291,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":292,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":293,"author":{"gitId":"dohaduong"},"content":"        for (int k \u003d endIndex; k \u003c arr.length; k++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":294,"author":{"gitId":"dohaduong"},"content":"            if (String.valueOf(arr[k]).equals(\"/\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":295,"author":{"gitId":"dohaduong"},"content":"                end +\u003d \"-\";","lastModifiedDate":"2023-01-26"},{"lineNumber":296,"author":{"gitId":"dohaduong"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":297,"author":{"gitId":"dohaduong"},"content":"                end +\u003d arr[k];","lastModifiedDate":"2023-01-27"},{"lineNumber":298,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":299,"author":{"gitId":"dohaduong"},"content":"            if (k !\u003d arr.length - 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":300,"author":{"gitId":"dohaduong"},"content":"                end +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":301,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":302,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":303,"author":{"gitId":"dohaduong"},"content":"        eventTime[0] \u003d Parser.getTime(start);","lastModifiedDate":"2023-02-03"},{"lineNumber":304,"author":{"gitId":"dohaduong"},"content":"        eventTime[1] \u003d Parser.getTime(end);","lastModifiedDate":"2023-02-03"},{"lineNumber":305,"author":{"gitId":"dohaduong"},"content":"        return eventTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":306,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":307,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":308,"author":{"gitId":"dohaduong"},"content":"    private static String getTime(String s) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-03"},{"lineNumber":309,"author":{"gitId":"dohaduong"},"content":"        String track \u003d String.valueOf(s.charAt(minSize));","lastModifiedDate":"2023-02-10"},{"lineNumber":310,"author":{"gitId":"dohaduong"},"content":"        int tracker \u003d minSize;","lastModifiedDate":"2023-02-10"},{"lineNumber":311,"author":{"gitId":"dohaduong"},"content":"        while (!track.equals(\" \")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":312,"author":{"gitId":"dohaduong"},"content":"            tracker++;","lastModifiedDate":"2023-02-03"},{"lineNumber":313,"author":{"gitId":"dohaduong"},"content":"            track \u003d String.valueOf(s.charAt(tracker));","lastModifiedDate":"2023-02-03"},{"lineNumber":314,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":315,"author":{"gitId":"dohaduong"},"content":"        assert tracker !\u003d minSize : \"Cannot get event time - missing input from user\";","lastModifiedDate":"2023-02-10"},{"lineNumber":316,"author":{"gitId":"dohaduong"},"content":"        String date \u003d String.valueOf(s.substring(0, tracker));","lastModifiedDate":"2023-02-03"},{"lineNumber":317,"author":{"gitId":"dohaduong"},"content":"        String time \u003d String.valueOf(s.substring(tracker + 1));","lastModifiedDate":"2023-02-03"},{"lineNumber":318,"author":{"gitId":"dohaduong"},"content":"        String timeFormatted \u003d \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":319,"author":{"gitId":"dohaduong"},"content":"        for (int i \u003d 0; i \u003c time.length(); i +\u003d 2) {","lastModifiedDate":"2023-02-03"},{"lineNumber":320,"author":{"gitId":"dohaduong"},"content":"            timeFormatted +\u003d String.valueOf(time.substring(i, i + 2));","lastModifiedDate":"2023-02-03"},{"lineNumber":321,"author":{"gitId":"dohaduong"},"content":"            timeFormatted +\u003d \":\";","lastModifiedDate":"2023-02-03"},{"lineNumber":322,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":323,"author":{"gitId":"dohaduong"},"content":"        timeFormatted +\u003d inSecond;","lastModifiedDate":"2023-02-10"},{"lineNumber":324,"author":{"gitId":"dohaduong"},"content":"        return date + \"T\" + timeFormatted;","lastModifiedDate":"2023-02-03"},{"lineNumber":325,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":326,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":326}},{"path":"src/main/java/duke/command/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":" * Saves tasks into file","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"    private String path;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"     * Returns the loaded data file whenever Duke restarts.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"     * @return array containing content of the existing data file.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"    public String[] load() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"        String[] arr \u003d new String[100];","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"            File myFile \u003d new File(this.path);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"            myFile.getParentFile().mkdirs();","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"            if (myFile.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"                Scanner sc \u003d new Scanner(myFile);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"                int pointer \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"                while (sc.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"                    arr[pointer] \u003d sc.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"                    pointer++;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"        return arr;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"     * Overwrites the given data file with new information.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"     * @param tasks new task list to overwrite on the given file.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"     * @write on given data file.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"    public void overwrite(TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"        String[] arr \u003d tasks.readTaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"        File myFile \u003d new File(this.path);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"        myFile.getParentFile().mkdirs();","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"dohaduong"},"content":"        FileWriter myWriter \u003d new FileWriter(myFile);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"dohaduong"},"content":"        if (myFile.createNewFile()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"dohaduong"},"content":"            for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"dohaduong"},"content":"                if (arr[i] \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"dohaduong"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"dohaduong"},"content":"                myWriter.write(arr[i].toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"dohaduong"},"content":"                myWriter.write(\"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"dohaduong"},"content":"            myWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"dohaduong"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"dohaduong"},"content":"            new FileWriter(this.path, false).close();","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"dohaduong"},"content":"            for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"dohaduong"},"content":"                if (arr[i] \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"dohaduong"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"dohaduong"},"content":"                myWriter.write(arr[i].toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"dohaduong"},"content":"                myWriter.write(\"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"dohaduong"},"content":"            myWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":75}},{"path":"src/main/java/duke/command/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"import duke.exception.MissingContentException;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":" * Handles data and formats into tasklist","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"    private String[] arr;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"        arr \u003d new String[100];","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"     * Initialize a new TaskList object","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"     * @param arr","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"    public TaskList(String[] arr) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"        this.arr \u003d arr;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"     * Returns the tasklist in array","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"     * @return the tasklist in array","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"     * @throws IOException if array does not exist","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"    public String[] readTaskList() {","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"                return this.arr;","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"                throw new MissingContentException();","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"        } catch (MissingContentException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"        return this.arr;","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"    public void overwrite(TaskList newTaskList) {","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"        this.arr \u003d newTaskList.readTaskList();","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"     * Checks if task list is empty or not","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"     * @return true if task list is empty, false otherwise","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"dohaduong"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"dohaduong"},"content":"        return this.getValidLen() \u003d\u003d 0;","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"dohaduong"},"content":"     * Lists tasks inside tasklist.","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"dohaduong"},"content":"     * @return task one-by-one.","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"dohaduong"},"content":"    public String list() {","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"dohaduong"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"dohaduong"},"content":"        for (int j \u003d 0; j \u003c arr.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"dohaduong"},"content":"            if (arr[j] \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"dohaduong"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"dohaduong"},"content":"            res +\u003d String.format(\"%d.%s\", j + 1, arr[j]);","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"dohaduong"},"content":"            res +\u003d \"\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"dohaduong"},"content":"        return (\"Here are the tasks in your list:\" + \"\\n\" + res);","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"dohaduong"},"content":"     * Returns the real length of the array.","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"dohaduong"},"content":"     * Maximum index in which array at such index is not null.","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"dohaduong"},"content":"     * @return the first null index.","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"dohaduong"},"content":"    public int getValidLen() {","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"dohaduong"},"content":"        int len \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"dohaduong"},"content":"        while (arr[len] !\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"dohaduong"},"content":"            len++;","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"dohaduong"},"content":"        return len;","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"dohaduong"},"content":"     * Returns new task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"dohaduong"},"content":"     * Marks task at given index as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"dohaduong"},"content":"     * @param num index at which task need to be marked as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"dohaduong"},"content":"     * @return new task list with task marked.","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"dohaduong"},"content":"    public String mark(int num) throws IOException {","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"dohaduong"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"dohaduong"},"content":"                if (arr[num] !\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"dohaduong"},"content":"                    Parser.updateLastTaskList(new TaskList(Arrays.copyOf(arr, 100)));","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"dohaduong"},"content":"                    String original \u003d arr[num];","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"dohaduong"},"content":"                    arr[num] \u003d new Task(String.valueOf(original.charAt(1)),","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"dohaduong"},"content":"                            original.substring(7), true).toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"dohaduong"},"content":"                    Parser.updateLastCommandDetail(arr[num]);","lastModifiedDate":"2023-02-10"},{"lineNumber":105,"author":{"gitId":"dohaduong"},"content":"                    return (\"OK, I\u0027ve marked this task as done:\" + \"\\n\" + arr[num]);","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"dohaduong"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"dohaduong"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"dohaduong"},"content":"                throw new InvalidIndexException();","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"dohaduong"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"dohaduong"},"content":"            return (e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"dohaduong"},"content":"        return \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"dohaduong"},"content":"     * Returns new task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"dohaduong"},"content":"     * Unmarks task at given index as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"dohaduong"},"content":"     * @param num index at which task need to be marked as undone.","lastModifiedDate":"2023-02-10"},{"lineNumber":121,"author":{"gitId":"dohaduong"},"content":"     * @return new task list with task unmarked.","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"dohaduong"},"content":"     * @throw InvalidIndexException if array at specific index is null","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"dohaduong"},"content":"    public String unmark(int num) throws IOException {","lastModifiedDate":"2023-02-10"},{"lineNumber":125,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"dohaduong"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"dohaduong"},"content":"                String original \u003d arr[num];","lastModifiedDate":"2023-02-10"},{"lineNumber":128,"author":{"gitId":"dohaduong"},"content":"                Parser.updateLastTaskList(new TaskList(Arrays.copyOf(arr, 100)));","lastModifiedDate":"2023-02-10"},{"lineNumber":129,"author":{"gitId":"dohaduong"},"content":"                Task newTask \u003d new Task(String.valueOf(original.charAt(1)),","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"dohaduong"},"content":"                        original.substring(7), false);","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"dohaduong"},"content":"                arr[num] \u003d newTask.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":132,"author":{"gitId":"dohaduong"},"content":"                Parser.updateLastCommandDetail(arr[num]);","lastModifiedDate":"2023-02-10"},{"lineNumber":133,"author":{"gitId":"dohaduong"},"content":"                return (\"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\" + arr[num]);","lastModifiedDate":"2023-02-10"},{"lineNumber":134,"author":{"gitId":"dohaduong"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"dohaduong"},"content":"                throw new InvalidIndexException();","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"dohaduong"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"dohaduong"},"content":"            return (e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":139,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"dohaduong"},"content":"     * Checks if element at given index of array is valid or not.","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"dohaduong"},"content":"     * @param index at which content need to be checked.","lastModifiedDate":"2023-02-02"},{"lineNumber":146,"author":{"gitId":"dohaduong"},"content":"     * @return boolean for content validity.","lastModifiedDate":"2023-01-27"},{"lineNumber":147,"author":{"gitId":"dohaduong"},"content":"     * @throw InvalidIndexException if array at specific index is null","lastModifiedDate":"2023-01-27"},{"lineNumber":148,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":149,"author":{"gitId":"dohaduong"},"content":"    public boolean checkValidIndex(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"dohaduong"},"content":"        return (arr[index] !\u003d null);","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":153,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":154,"author":{"gitId":"dohaduong"},"content":"     * Returns new task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":155,"author":{"gitId":"dohaduong"},"content":"     * Deletes task at given index.","lastModifiedDate":"2023-01-27"},{"lineNumber":156,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":157,"author":{"gitId":"dohaduong"},"content":"     * @param num1 index at which task need to be deleted.","lastModifiedDate":"2023-01-27"},{"lineNumber":158,"author":{"gitId":"dohaduong"},"content":"     * @return new task list with task deleted.","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"dohaduong"},"content":"     * @throw InvalidIndexException if array at specific index is null if array at specific index is null","lastModifiedDate":"2023-01-27"},{"lineNumber":160,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":161,"author":{"gitId":"dohaduong"},"content":"    public String delete(int num1) throws IOException {","lastModifiedDate":"2023-02-03"},{"lineNumber":162,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":163,"author":{"gitId":"dohaduong"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":164,"author":{"gitId":"dohaduong"},"content":"                if (num1 \u003c this.getValidLen()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":165,"author":{"gitId":"dohaduong"},"content":"                    String original \u003d arr[num1];","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"dohaduong"},"content":"                    int trace \u003d num1;","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"dohaduong"},"content":"                    String[] originalList \u003d new String[100];","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"dohaduong"},"content":"                    for (int k \u003d 0; k \u003c 100; k++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"dohaduong"},"content":"                        originalList[k] \u003d arr[k];","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"dohaduong"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"dohaduong"},"content":"                    Parser.updateLastTaskList(new TaskList(originalList));","lastModifiedDate":"2023-02-10"},{"lineNumber":172,"author":{"gitId":"dohaduong"},"content":"                    Parser.updateLastCommandDetail(original);","lastModifiedDate":"2023-02-10"},{"lineNumber":173,"author":{"gitId":"dohaduong"},"content":"                    arr[trace] \u003d arr[trace + 1];","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"dohaduong"},"content":"                    trace++;","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"dohaduong"},"content":"                    while ((trace \u003e\u003d 1) \u0026\u0026 (originalList[trace - 1] !\u003d null)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"dohaduong"},"content":"                        arr[trace] \u003d originalList[trace + 1];","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"dohaduong"},"content":"                        trace++;","lastModifiedDate":"2023-01-26"},{"lineNumber":179,"author":{"gitId":"dohaduong"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":180,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":181,"author":{"gitId":"dohaduong"},"content":"                    return (\"Noted. I\u0027ve removed this task:\" + \"\\n\" + original + \"\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":182,"author":{"gitId":"dohaduong"},"content":"                            + String.format(\"Now you have %d \"","lastModifiedDate":"2023-02-03"},{"lineNumber":183,"author":{"gitId":"dohaduong"},"content":"                            + \"tasks in the list\", this.getValidLen()));","lastModifiedDate":"2023-02-03"},{"lineNumber":184,"author":{"gitId":"dohaduong"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":185,"author":{"gitId":"dohaduong"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":186,"author":{"gitId":"dohaduong"},"content":"                throw new InvalidIndexException();","lastModifiedDate":"2023-01-27"},{"lineNumber":187,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":188,"author":{"gitId":"dohaduong"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":189,"author":{"gitId":"dohaduong"},"content":"            return (e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":190,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":191,"author":{"gitId":"dohaduong"},"content":"        return new InvalidIndexException().getMessage();","lastModifiedDate":"2023-02-03"},{"lineNumber":192,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":193,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":194,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":195,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":196,"author":{"gitId":"dohaduong"},"content":"     * Returns new task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":197,"author":{"gitId":"dohaduong"},"content":"     * Adds task to the back.","lastModifiedDate":"2023-01-27"},{"lineNumber":198,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":199,"author":{"gitId":"dohaduong"},"content":"     * @param task needed to be added.","lastModifiedDate":"2023-01-27"},{"lineNumber":200,"author":{"gitId":"dohaduong"},"content":"     * @return new task list with task added.","lastModifiedDate":"2023-01-27"},{"lineNumber":201,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":202,"author":{"gitId":"dohaduong"},"content":"    public String add(Task task) {","lastModifiedDate":"2023-02-03"},{"lineNumber":203,"author":{"gitId":"dohaduong"},"content":"        int len \u003d this.getValidLen();","lastModifiedDate":"2023-02-03"},{"lineNumber":204,"author":{"gitId":"dohaduong"},"content":"        Parser.updateLastTaskList(new TaskList(Arrays.copyOf(arr, 100)));","lastModifiedDate":"2023-02-10"},{"lineNumber":205,"author":{"gitId":"dohaduong"},"content":"        arr[len] \u003d task.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":206,"author":{"gitId":"dohaduong"},"content":"        Parser.updateLastCommandDetail(task.toString());","lastModifiedDate":"2023-02-10"},{"lineNumber":207,"author":{"gitId":"dohaduong"},"content":"        return (\"Got it. I\u0027ve added this task:\" + \"\\n\" + task.toString()","lastModifiedDate":"2023-02-03"},{"lineNumber":208,"author":{"gitId":"dohaduong"},"content":"                + \"\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":209,"author":{"gitId":"dohaduong"},"content":"                + String.format(\"Now you have %d \"","lastModifiedDate":"2023-02-03"},{"lineNumber":210,"author":{"gitId":"dohaduong"},"content":"                + \"tasks in the list\", this.getValidLen()));","lastModifiedDate":"2023-02-03"},{"lineNumber":211,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":212,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":213,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":214,"author":{"gitId":"dohaduong"},"content":"     * Prints out tasks that contain the given keyword.","lastModifiedDate":"2023-01-27"},{"lineNumber":215,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":216,"author":{"gitId":"dohaduong"},"content":"     * @param keyWord given keyword.","lastModifiedDate":"2023-01-27"},{"lineNumber":217,"author":{"gitId":"dohaduong"},"content":"     * @print tasks that contain the given keyword in task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":218,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":219,"author":{"gitId":"dohaduong"},"content":"    public String findWord(String keyWord) {","lastModifiedDate":"2023-02-03"},{"lineNumber":220,"author":{"gitId":"dohaduong"},"content":"        int trace \u003d 0;","lastModifiedDate":"2023-01-27"},{"lineNumber":221,"author":{"gitId":"dohaduong"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":222,"author":{"gitId":"dohaduong"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":223,"author":{"gitId":"dohaduong"},"content":"            if (arr[i] \u003d\u003d null) {","lastModifiedDate":"2023-01-27"},{"lineNumber":224,"author":{"gitId":"dohaduong"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":225,"author":{"gitId":"dohaduong"},"content":"            } else if (arr[i].contains(keyWord)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":226,"author":{"gitId":"dohaduong"},"content":"                trace++;","lastModifiedDate":"2023-01-27"},{"lineNumber":227,"author":{"gitId":"dohaduong"},"content":"                res +\u003d (String.format(\"%d. %s\", trace, arr[i]));","lastModifiedDate":"2023-02-03"},{"lineNumber":228,"author":{"gitId":"dohaduong"},"content":"                res +\u003d \"\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":229,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":230,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":231,"author":{"gitId":"dohaduong"},"content":"        return (\"WOOF! Here  are the matching tasks in your list:\" + \"\\n\" + res);","lastModifiedDate":"2023-02-03"},{"lineNumber":232,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":233,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":234,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":235,"author":{"gitId":"dohaduong"},"content":"     * Checks if there is any task that contains the given keyword.","lastModifiedDate":"2023-01-27"},{"lineNumber":236,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":237,"author":{"gitId":"dohaduong"},"content":"     * @param keyWord given keyword.","lastModifiedDate":"2023-01-27"},{"lineNumber":238,"author":{"gitId":"dohaduong"},"content":"     * @return true if there is any task contains the keyword and false otherwise.","lastModifiedDate":"2023-01-27"},{"lineNumber":239,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":240,"author":{"gitId":"dohaduong"},"content":"    public boolean checkWord(String keyWord) {","lastModifiedDate":"2023-01-27"},{"lineNumber":241,"author":{"gitId":"dohaduong"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":242,"author":{"gitId":"dohaduong"},"content":"            if (arr[i] \u003d\u003d null) {","lastModifiedDate":"2023-01-27"},{"lineNumber":243,"author":{"gitId":"dohaduong"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":244,"author":{"gitId":"dohaduong"},"content":"            } else if (arr[i].contains(keyWord)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":245,"author":{"gitId":"dohaduong"},"content":"                return true;","lastModifiedDate":"2023-01-27"},{"lineNumber":246,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":247,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":248,"author":{"gitId":"dohaduong"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":249,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":250,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":251,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"dohaduong":251}},{"path":"src/main/java/duke/command/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"import duke.exception.InvalidDeadlineDateException;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"import duke.exception.InvalidEventDateTimeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"import duke.exception.MissingContentException;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":" * Deals with interaction with users","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"    public Ui() {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"     * Shows logo and welcome.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"        System.out.println(\"\\nHello, I\u0027m Duke\");","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"     * Let Duke say something","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"     * @param message given message that Duke needs to say","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"    public void says(String message) {","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"        System.out.println(message);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"     * Prints out error message.","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"     * @return error message","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"    public String showError(String message) {","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"        return (message);","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"     * Prints out loading error message.","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"dohaduong"},"content":"     * @return file not existed error message","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"dohaduong"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"dohaduong"},"content":"        return (\"File not existed\");","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"dohaduong"},"content":"     * Prints out unknown error message.","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"dohaduong"},"content":"     * @return unknown message.","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"dohaduong"},"content":"    public String showUnknownError() {","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"dohaduong"},"content":"        return (\"WOOF!!! I\u0027m sorry boss, \"","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"dohaduong"},"content":"                + \"but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"dohaduong"},"content":"     * Prints out goodbye message.","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"dohaduong"},"content":"     * @return goodbye message","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"dohaduong"},"content":"    public String bye() {","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"dohaduong"},"content":"        return (\"WOOF WOOF WOOF! Kyle is sad to see you leave!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"dohaduong"},"content":"     * Prints out line for separation.","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"dohaduong"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"dohaduong"},"content":"        System.out.println(\"_____________________________\");","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"dohaduong"},"content":"     * Prints out if input array is not empty","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"dohaduong"},"content":"     * @param arr input array.","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"dohaduong"},"content":"     * @print instruction.","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"dohaduong"},"content":"     * @return appropriate message","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"dohaduong"},"content":"     * @throw MissingContentException if input array is empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"dohaduong"},"content":"    public String findWordIntro(TaskList taskList, String[] arr, boolean containsKeyword) {","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"dohaduong"},"content":"        if (arr.length \u003e\u003d 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"dohaduong"},"content":"            if (containsKeyword) {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"dohaduong"},"content":"                Parser.updateLastCommand(\"find\");","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"dohaduong"},"content":"                return (taskList.findWord(arr[1]));","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"dohaduong"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"dohaduong"},"content":"                return (\"Sorry boss! No task found!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"dohaduong"},"content":"        return (new DukeException(\"WOOF WOOF! The content can not be left empty!\").getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"dohaduong"},"content":"     * Returns message for listing out task list","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"dohaduong"},"content":"     * @param taskList original task list","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"dohaduong"},"content":"     * @return appropriate message","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"dohaduong"},"content":"    public String list(TaskList taskList) {","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"dohaduong"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"dohaduong"},"content":"            return (\"WOOF! You do not have any tasks in your task list!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"dohaduong"},"content":"        Parser.updateLastCommand(\"list\");","lastModifiedDate":"2023-02-10"},{"lineNumber":114,"author":{"gitId":"dohaduong"},"content":"        return (taskList.list());","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":116,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":117,"author":{"gitId":"dohaduong"},"content":"    public String undo(TaskList tasklist) {","lastModifiedDate":"2023-02-10"},{"lineNumber":118,"author":{"gitId":"dohaduong"},"content":"        return Parser.undo(tasklist);","lastModifiedDate":"2023-02-10"},{"lineNumber":119,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":120,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":121,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"dohaduong"},"content":"     * Gets input/command from users","lastModifiedDate":"2023-02-03"},{"lineNumber":123,"author":{"gitId":"dohaduong"},"content":"     * @return array consists of user\u0027s command line","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"dohaduong"},"content":"    public String[] getInput() {","lastModifiedDate":"2023-02-03"},{"lineNumber":126,"author":{"gitId":"dohaduong"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-03"},{"lineNumber":127,"author":{"gitId":"dohaduong"},"content":"        String newLine \u003d sc.nextLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":128,"author":{"gitId":"dohaduong"},"content":"        assert newLine !\u003d \"\" : \"Empty input from user\";","lastModifiedDate":"2023-02-10"},{"lineNumber":129,"author":{"gitId":"dohaduong"},"content":"        String[] arr \u003d newLine.split(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":130,"author":{"gitId":"dohaduong"},"content":"        return arr;","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":132,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":133,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"dohaduong"},"content":"     * Gets input/command from users","lastModifiedDate":"2023-02-03"},{"lineNumber":135,"author":{"gitId":"dohaduong"},"content":"     * @param s input string from user command","lastModifiedDate":"2023-02-03"},{"lineNumber":136,"author":{"gitId":"dohaduong"},"content":"     * @return array consists of user\u0027s command line","lastModifiedDate":"2023-02-03"},{"lineNumber":137,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":138,"author":{"gitId":"dohaduong"},"content":"    public String[] getInput(String s) {","lastModifiedDate":"2023-02-03"},{"lineNumber":139,"author":{"gitId":"dohaduong"},"content":"        String[] arr \u003d s.split(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":140,"author":{"gitId":"dohaduong"},"content":"        return arr;","lastModifiedDate":"2023-02-03"},{"lineNumber":141,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":142,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":143,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":144,"author":{"gitId":"dohaduong"},"content":"     * Marks task at given index","lastModifiedDate":"2023-02-03"},{"lineNumber":145,"author":{"gitId":"dohaduong"},"content":"     * @param listOfAction original tasklist","lastModifiedDate":"2023-02-03"},{"lineNumber":146,"author":{"gitId":"dohaduong"},"content":"     * @param commands array of user command line","lastModifiedDate":"2023-02-03"},{"lineNumber":147,"author":{"gitId":"dohaduong"},"content":"     * @return new updated task list","lastModifiedDate":"2023-02-03"},{"lineNumber":148,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":149,"author":{"gitId":"dohaduong"},"content":"    public String mark(TaskList listOfAction, String[] commands) {","lastModifiedDate":"2023-02-03"},{"lineNumber":150,"author":{"gitId":"dohaduong"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":151,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":152,"author":{"gitId":"dohaduong"},"content":"            int index \u003d Parser.getTaskIndex(listOfAction, commands);","lastModifiedDate":"2023-02-03"},{"lineNumber":153,"author":{"gitId":"dohaduong"},"content":"            reply \u003d (listOfAction.mark(index - 1));","lastModifiedDate":"2023-02-10"},{"lineNumber":154,"author":{"gitId":"dohaduong"},"content":"            Parser.updateLastCommand(String.format(\"mark %d\", index - 1));","lastModifiedDate":"2023-02-10"},{"lineNumber":155,"author":{"gitId":"dohaduong"},"content":"            return reply;","lastModifiedDate":"2023-02-10"},{"lineNumber":156,"author":{"gitId":"dohaduong"},"content":"        } catch (MissingContentException | InvalidIndexException | IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":157,"author":{"gitId":"dohaduong"},"content":"            return (e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":158,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":159,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":160,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":161,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":162,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":163,"author":{"gitId":"dohaduong"},"content":"     * Unmarks task at given index","lastModifiedDate":"2023-02-03"},{"lineNumber":164,"author":{"gitId":"dohaduong"},"content":"     * @param listOfAction original tasklist","lastModifiedDate":"2023-02-03"},{"lineNumber":165,"author":{"gitId":"dohaduong"},"content":"     * @param commands array of user command line","lastModifiedDate":"2023-02-03"},{"lineNumber":166,"author":{"gitId":"dohaduong"},"content":"     * @return new updated task list","lastModifiedDate":"2023-02-03"},{"lineNumber":167,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":168,"author":{"gitId":"dohaduong"},"content":"    public String unmark(TaskList listOfAction, String[] commands) {","lastModifiedDate":"2023-02-03"},{"lineNumber":169,"author":{"gitId":"dohaduong"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":170,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":171,"author":{"gitId":"dohaduong"},"content":"            int index \u003d Parser.getTaskIndex(listOfAction, commands) - 1;","lastModifiedDate":"2023-02-03"},{"lineNumber":172,"author":{"gitId":"dohaduong"},"content":"            reply \u003d (listOfAction.unmark(index));","lastModifiedDate":"2023-02-10"},{"lineNumber":173,"author":{"gitId":"dohaduong"},"content":"            Parser.updateLastCommand(String.format(\"unmark %d\", index - 1));","lastModifiedDate":"2023-02-10"},{"lineNumber":174,"author":{"gitId":"dohaduong"},"content":"            return reply;","lastModifiedDate":"2023-02-10"},{"lineNumber":175,"author":{"gitId":"dohaduong"},"content":"        } catch (MissingContentException | InvalidIndexException | IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":176,"author":{"gitId":"dohaduong"},"content":"            return (e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":177,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":178,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":179,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":180,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":181,"author":{"gitId":"dohaduong"},"content":"     * Deletes task at specific index","lastModifiedDate":"2023-02-03"},{"lineNumber":182,"author":{"gitId":"dohaduong"},"content":"     * @param listOfAction original task list","lastModifiedDate":"2023-02-03"},{"lineNumber":183,"author":{"gitId":"dohaduong"},"content":"     * @param command user command","lastModifiedDate":"2023-02-03"},{"lineNumber":184,"author":{"gitId":"dohaduong"},"content":"     * @return new updated task list","lastModifiedDate":"2023-02-03"},{"lineNumber":185,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":186,"author":{"gitId":"dohaduong"},"content":"    public String delete(TaskList listOfAction, String[] command) {","lastModifiedDate":"2023-02-03"},{"lineNumber":187,"author":{"gitId":"dohaduong"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":188,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":189,"author":{"gitId":"dohaduong"},"content":"            int index \u003d Parser.getTaskIndex(listOfAction, command) - 1;","lastModifiedDate":"2023-02-03"},{"lineNumber":190,"author":{"gitId":"dohaduong"},"content":"            try {","lastModifiedDate":"2023-02-03"},{"lineNumber":191,"author":{"gitId":"dohaduong"},"content":"                reply \u003d (listOfAction.delete(index));","lastModifiedDate":"2023-02-10"},{"lineNumber":192,"author":{"gitId":"dohaduong"},"content":"                Parser.updateLastCommand(String.format(\"delete %d\", index - 1));","lastModifiedDate":"2023-02-10"},{"lineNumber":193,"author":{"gitId":"dohaduong"},"content":"                return reply;","lastModifiedDate":"2023-02-10"},{"lineNumber":194,"author":{"gitId":"dohaduong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":195,"author":{"gitId":"dohaduong"},"content":"                return (new InvalidIndexException().getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":196,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":197,"author":{"gitId":"dohaduong"},"content":"        } catch (MissingContentException | InvalidIndexException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":198,"author":{"gitId":"dohaduong"},"content":"            return (e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":199,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":200,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":201,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":202,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":203,"author":{"gitId":"dohaduong"},"content":"     * Adds todo task to task list","lastModifiedDate":"2023-02-03"},{"lineNumber":204,"author":{"gitId":"dohaduong"},"content":"     * @param listOfAction original task list","lastModifiedDate":"2023-02-03"},{"lineNumber":205,"author":{"gitId":"dohaduong"},"content":"     * @param command command from user input","lastModifiedDate":"2023-02-03"},{"lineNumber":206,"author":{"gitId":"dohaduong"},"content":"     * @return new updated task list","lastModifiedDate":"2023-02-03"},{"lineNumber":207,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":208,"author":{"gitId":"dohaduong"},"content":"    public String addToDo(TaskList listOfAction, String[] command) {","lastModifiedDate":"2023-02-03"},{"lineNumber":209,"author":{"gitId":"dohaduong"},"content":"        String remaining \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":210,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":211,"author":{"gitId":"dohaduong"},"content":"            remaining \u003d Parser.parseToDo(command);","lastModifiedDate":"2023-02-10"},{"lineNumber":212,"author":{"gitId":"dohaduong"},"content":"        } catch (MissingContentException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":213,"author":{"gitId":"dohaduong"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":214,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":215,"author":{"gitId":"dohaduong"},"content":"        if (remaining.equals(\"\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":216,"author":{"gitId":"dohaduong"},"content":"            return (new MissingContentException().getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":217,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":218,"author":{"gitId":"dohaduong"},"content":"        Todo newTask \u003d new Todo(command[0], remaining, false);","lastModifiedDate":"2023-02-03"},{"lineNumber":219,"author":{"gitId":"dohaduong"},"content":"        Parser.updateLastCommand(\"todo\");","lastModifiedDate":"2023-02-10"},{"lineNumber":220,"author":{"gitId":"dohaduong"},"content":"        return (listOfAction.add(newTask));","lastModifiedDate":"2023-02-03"},{"lineNumber":221,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":222,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":223,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":224,"author":{"gitId":"dohaduong"},"content":"     * Adds new deadline to task list","lastModifiedDate":"2023-02-03"},{"lineNumber":225,"author":{"gitId":"dohaduong"},"content":"     * @param listOfAction original task list","lastModifiedDate":"2023-02-03"},{"lineNumber":226,"author":{"gitId":"dohaduong"},"content":"     * @param command user input","lastModifiedDate":"2023-02-03"},{"lineNumber":227,"author":{"gitId":"dohaduong"},"content":"     * @return new updated task list","lastModifiedDate":"2023-02-03"},{"lineNumber":228,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":229,"author":{"gitId":"dohaduong"},"content":"    public String addDeadline(TaskList listOfAction, String[] command) {","lastModifiedDate":"2023-02-03"},{"lineNumber":230,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":231,"author":{"gitId":"dohaduong"},"content":"            String detail \u003d new Parser().getDeadlineDetail(command);","lastModifiedDate":"2023-02-10"},{"lineNumber":232,"author":{"gitId":"dohaduong"},"content":"            String remaining \u003d new Parser().getDeadlineFull(command);","lastModifiedDate":"2023-02-03"},{"lineNumber":233,"author":{"gitId":"dohaduong"},"content":"            Parser.updateLastCommand(\"deadline\");","lastModifiedDate":"2023-02-10"},{"lineNumber":234,"author":{"gitId":"dohaduong"},"content":"            Deadline newTaskDeadline \u003d new Deadline(command[0], detail, remaining);","lastModifiedDate":"2023-02-03"},{"lineNumber":235,"author":{"gitId":"dohaduong"},"content":"            return (listOfAction.add(newTaskDeadline));","lastModifiedDate":"2023-02-03"},{"lineNumber":236,"author":{"gitId":"dohaduong"},"content":"        } catch (MissingContentException | InvalidDeadlineDateException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":237,"author":{"gitId":"dohaduong"},"content":"            return (e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":238,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":239,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":240,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":241,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":242,"author":{"gitId":"dohaduong"},"content":"     * Add new event to tasklist","lastModifiedDate":"2023-02-10"},{"lineNumber":243,"author":{"gitId":"dohaduong"},"content":"     * @param listOfAction original tasklist","lastModifiedDate":"2023-02-10"},{"lineNumber":244,"author":{"gitId":"dohaduong"},"content":"     * @param command from user\u0027s input","lastModifiedDate":"2023-02-10"},{"lineNumber":245,"author":{"gitId":"dohaduong"},"content":"     * @return Duke\u0027s response to user\u0027s input","lastModifiedDate":"2023-02-10"},{"lineNumber":246,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":247,"author":{"gitId":"dohaduong"},"content":"    public String addEvent(TaskList listOfAction, String[] command) {","lastModifiedDate":"2023-02-03"},{"lineNumber":248,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":249,"author":{"gitId":"dohaduong"},"content":"            try {","lastModifiedDate":"2023-02-03"},{"lineNumber":250,"author":{"gitId":"dohaduong"},"content":"                int startIndex \u003d new Parser()","lastModifiedDate":"2023-02-03"},{"lineNumber":251,"author":{"gitId":"dohaduong"},"content":"                        .getEventStartTimeIndex(command);","lastModifiedDate":"2023-02-03"},{"lineNumber":252,"author":{"gitId":"dohaduong"},"content":"                int endIndex \u003d new Parser()","lastModifiedDate":"2023-02-03"},{"lineNumber":253,"author":{"gitId":"dohaduong"},"content":"                        .getEventEndTimeIndex(command, startIndex);","lastModifiedDate":"2023-02-03"},{"lineNumber":254,"author":{"gitId":"dohaduong"},"content":"                String detail \u003d new Parser()","lastModifiedDate":"2023-02-03"},{"lineNumber":255,"author":{"gitId":"dohaduong"},"content":"                        .getEventDetail(command);","lastModifiedDate":"2023-02-03"},{"lineNumber":256,"author":{"gitId":"dohaduong"},"content":"                String start \u003d (new Parser()","lastModifiedDate":"2023-02-03"},{"lineNumber":257,"author":{"gitId":"dohaduong"},"content":"                        .getEventTime(command, startIndex, endIndex))[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":258,"author":{"gitId":"dohaduong"},"content":"                String end \u003d (new Parser()","lastModifiedDate":"2023-02-03"},{"lineNumber":259,"author":{"gitId":"dohaduong"},"content":"                        .getEventTime(command, startIndex, endIndex))[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":260,"author":{"gitId":"dohaduong"},"content":"                Parser.updateLastCommand(\"event\");","lastModifiedDate":"2023-02-10"},{"lineNumber":261,"author":{"gitId":"dohaduong"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":262,"author":{"gitId":"dohaduong"},"content":"                return (listOfAction.add(new Event(\"event\",","lastModifiedDate":"2023-02-03"},{"lineNumber":263,"author":{"gitId":"dohaduong"},"content":"                        detail, start, end)));","lastModifiedDate":"2023-02-03"},{"lineNumber":264,"author":{"gitId":"dohaduong"},"content":"            } catch (MissingContentException | InvalidEventDateTimeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":265,"author":{"gitId":"dohaduong"},"content":"                return (e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":266,"author":{"gitId":"dohaduong"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":267,"author":{"gitId":"dohaduong"},"content":"                throw new InvalidEventDateTimeException();","lastModifiedDate":"2023-02-03"},{"lineNumber":268,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":269,"author":{"gitId":"dohaduong"},"content":"        } catch (InvalidEventDateTimeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":270,"author":{"gitId":"dohaduong"},"content":"            return (e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":271,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":272,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":273,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":273}},{"path":"src/main/java/duke/exception/DateTimeNotCorrectException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.exception;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":" * Represents empty task list exception","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"public class DateTimeNotCorrectException extends DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"    public DateTimeNotCorrectException() {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"        super(\"WOOF! The event date time format should be YYYY-MM-DD HHmm! Change it NOW!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"dohaduong":10}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":" * Represents exceptions for Duke","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"    public DukeException() {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"        super();","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"    public DukeException(String message, Throwable cause) {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"        super(message, cause);","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"        super(message);","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"    public DukeException(Throwable cause) {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"        super(cause);","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"dohaduong":23}},{"path":"src/main/java/duke/exception/InvalidDeadlineDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.exception;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":" * Represents wrong deadline date format","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"public class InvalidDeadlineDateException extends DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"    public InvalidDeadlineDateException() {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"        super(\"WOOF! The deadline date time format should be YYYY-MM-DD! Change it NOW!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"dohaduong":10}},{"path":"src/main/java/duke/exception/InvalidEventDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.exception;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":" * Represents wrong event date-time format","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"public class InvalidEventDateTimeException extends DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"    public InvalidEventDateTimeException() {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"        super(\"WOOF! The event date time format should be YYYY-MM-DD HHmm! Change it NOW!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"dohaduong":10}},{"path":"src/main/java/duke/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":" * Represents Invalid index exception","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"        super(\"WOOF! The indexing is not valid!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"dohaduong":11}},{"path":"src/main/java/duke/exception/MissingContentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":" * Represents Missing content exception","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"public class MissingContentException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"    public MissingContentException() {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"        super(\"WOOF! The content/detail cannot be empty!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"dohaduong":10}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"import duke.exception.InvalidDeadlineDateException;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":" * Represents deadlines","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"    private LocalDate day;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"     * Initializes a new Deadline object","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"     * @param type of task","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"     * @param detail of Deadline","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"     * @param marked whether deadline is marked or not","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"     * @param day of deadline","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"    public Deadline(String type, String detail, boolean marked, LocalDate day) {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"        super(type, detail, marked);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"        this.day \u003d day;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"     * Initialize a new Deadline object","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"     * @param type of task","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"     * @param detail of deadline","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"     * @param day of deadline","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"    public Deadline(String type, String detail, String day) throws InvalidDeadlineDateException {","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"        super(type, detail);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"            this.day \u003d LocalDate.parse(day);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"            throw new InvalidDeadlineDateException();","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"     * Returns deadline printed out properly.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"     * @return deadline in full details.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"        if (marked) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"            return \"[D][X] \" + super.detail + \" (by: \" + this.day.format(DateTimeFormatter","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"                    .ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"dohaduong"},"content":"            return \"[D][ ] \" + super.detail + \" (by: \" + this.day.format(DateTimeFormatter","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"dohaduong"},"content":"                    .ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":57}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"import duke.exception.InvalidEventDateTimeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":" * Represents Event class","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"     * Initializes a new Event object","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"     * @param type of task","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"     * @param detail of event","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"     * @param marked whether event is marked or not","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"     * @param start starting day of event","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"     * @param end ending day of event","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"    public Event(String type, String detail, boolean marked, String start, String end) throws","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"            InvalidEventDateTimeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"        super(type, detail, marked);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"            this.start \u003d LocalDateTime.parse(start);","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"            this.end \u003d LocalDateTime.parse(end);","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"            throw new InvalidEventDateTimeException();","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"     * Initializes a new Event object","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"     * @param type of task","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"     * @param detail of event","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"     * @param start starting day of event","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"     * @param end ending day of event","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"    public Event(String type, String detail, String start, String end) throws InvalidEventDateTimeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"        super(type, detail);","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"            this.start \u003d LocalDateTime.parse(start);","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"            this.end \u003d LocalDateTime.parse(end);","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"            throw new InvalidEventDateTimeException();","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"dohaduong"},"content":"     * Returns event printed out properly.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"dohaduong"},"content":"     * @return event in full details.","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"dohaduong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"dohaduong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"dohaduong"},"content":"        if (marked) {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"dohaduong"},"content":"            return \"[E][X] \" + super.detail + \" (from: \"","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"dohaduong"},"content":"                    + this.start.format(DateTimeFormatter","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"dohaduong"},"content":"                    .ofPattern(\"MMM dd yyyy hh:mm a\"))","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"dohaduong"},"content":"                    + \" to: \" + this.end.format(DateTimeFormatter","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"dohaduong"},"content":"                    .ofPattern(\"MMM dd yyyy hh:mm a\")) + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"dohaduong"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"dohaduong"},"content":"            return \"[E][ ] \" + super.detail + \" (from: \"","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"dohaduong"},"content":"                    + this.start.format(DateTimeFormatter","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"dohaduong"},"content":"                    .ofPattern(\"MMM dd yyyy hh:mm a\"))","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"dohaduong"},"content":"                    + \" to: \" + this.end.format(DateTimeFormatter","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"dohaduong"},"content":"                    .ofPattern(\"MMM dd yyyy hh:mm a\")) + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":74}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":" * Represent tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"    protected String type;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"    protected String detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    protected boolean marked;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"     * Intializes a new Task object","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"     * @param type of task","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"     * @param detail of task","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"    public Task(String type, String detail) {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"        this.marked \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"     * Initialize a Task object with given value","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"     * @param type   type of task","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"     * @param detail content of task","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"     * @param marked","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"    public Task(String type, String detail, boolean marked) {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"        this.marked \u003d marked;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"     * Marks task as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"     * @mark task as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"    public void mark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"        this.marked \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"     * Unarks task as undone.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"     * @unmark task as undone.","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"        this.marked \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"dohaduong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"dohaduong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"dohaduong"},"content":"        if (marked) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"dohaduong"},"content":"            return \"[\" + this.type + \"][X] \" + this.detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"dohaduong"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"dohaduong"},"content":"            return \"[\" + this.type + \"][ ] \" + this.detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":62}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":" * Represent a Todo class","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":" * Handles with todo commands","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"     * Initializes a new Todo object","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"     * @param type of task","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"     * @param detail of Todo","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"     * @param marked wheter Todo is marked or not","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"    public Todo(String type, String detail, boolean marked) {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"        super(type, detail, marked);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"    public Todo(String type, String detail) {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"        super(type, detail);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"     * Returns todo printed out properly.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"     * @return todo in full details.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"        if (marked) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"            return \"[T][X] \" + super.detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"            return \"[T][ ] \" + super.detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":37}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"dohaduong":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"dohaduong":19}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    public void test() {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"        assertEquals(\"[T][ ] clean house\", new Todo(\"todo\", \"clean house\").toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"dohaduong":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"todo borrow books","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"dohaduong":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.javaIF","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dohaduong":1,"-":20}}]
