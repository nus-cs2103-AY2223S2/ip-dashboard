[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"checkstyle {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"dohaduong":22,"-":41}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"[D][ ] return books  (by: Feb 12 2019)","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"[T][ ] clean up ","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"[T][ ] clean house ","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":3}},{"path":"src/main/java/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"[T][ ] clean up ","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"[T][ ] clean the hosue ","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"[D][ ] call parents  (by: Feb 12 2020)","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"[D][ ] go home  (by: Oct 10 2020)","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"[T][ ] clean the car ","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"[T][ ] go home ","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"[T][ ] clean ipad ","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"[T][ ] clean the car ","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"[T][ ] go home ","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"[E][ ] go  (from: Oct 10 2020 to: Oct 10 2020)","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"dohaduong":10}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"import duke.command.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"import duke.command.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"import duke.command.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"enum Action {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"    Bye,","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"    Deadline,","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"    Delete,","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"    Event,","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"    Find,","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"    List,","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"    Mark,","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"    Todo,","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"    Unmark,","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":" * Represents a Duke","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"     * Initialize a Duke with given information","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"     * @param filepath where storage data will be stored","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"     * @throws FileNotFoundException if such filepath does not exist","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"    public Duke(String filepath) throws FileNotFoundException {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"     * Check if input array is empty or not.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"     * For some types of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"     * @param arr    an array of the input.","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"dohaduong"},"content":"     * @param action type of task given.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"dohaduong"},"content":"     * @throw DukeException if input array is empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"dohaduong"},"content":"    private void run() throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"dohaduong"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"dohaduong"},"content":"        TaskList listOfAction \u003d tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"dohaduong"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"dohaduong"},"content":"        Storage file \u003d storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"dohaduong"},"content":"        String s \u003d \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"dohaduong"},"content":"        String newLine \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"dohaduong"},"content":"        String[] arr \u003d newLine.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"dohaduong"},"content":"        s \u003d arr[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"dohaduong"},"content":"        int len \u003d listOfAction.validLen();","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"dohaduong"},"content":"        while (!s.equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"dohaduong"},"content":"            String remaining \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"dohaduong"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"dohaduong"},"content":"                Action myAction \u003d Action.valueOf(String.valueOf(s.charAt(0)).toUpperCase()","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"dohaduong"},"content":"                        + s.substring(1));","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"dohaduong"},"content":"                switch (myAction) {","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"dohaduong"},"content":"                case Find:","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"dohaduong"},"content":"                    ui.findWordIntro(arr, listOfAction.checkWord(arr[1]));","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"dohaduong"},"content":"                    listOfAction.findWord(arr[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"dohaduong"},"content":"                case Bye:","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"dohaduong"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"dohaduong"},"content":"                case List:","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"dohaduong"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"dohaduong"},"content":"                    listOfAction.list();","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"dohaduong"},"content":"                case Mark:","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"dohaduong"},"content":"                    int num \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"dohaduong"},"content":"                    listOfAction \u003d listOfAction.mark(num);","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"dohaduong"},"content":"                    file.overwrite(listOfAction);","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"dohaduong"},"content":"                case Unmark:","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"dohaduong"},"content":"                    int num1 \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"dohaduong"},"content":"                    listOfAction \u003d listOfAction.unmark(num1);","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"dohaduong"},"content":"                    file.overwrite(listOfAction);","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"dohaduong"},"content":"                case Delete:","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"dohaduong"},"content":"                    num1 \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"dohaduong"},"content":"                    if (listOfAction.checkValidIndex(num1)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"dohaduong"},"content":"                        listOfAction \u003d listOfAction.delete(num1);","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"dohaduong"},"content":"                        len--;","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(String.format(\"Now you have %d \"","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"dohaduong"},"content":"                                + \"tasks in the list\", len));","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"dohaduong"},"content":"                        file.overwrite(listOfAction);","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"dohaduong"},"content":"                    } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(new DukeException(\"OOPS!!! Invalid index!\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"dohaduong"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"dohaduong"},"content":"                case Todo:","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"dohaduong"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"dohaduong"},"content":"                    remaining \u003d new Parser().toDo(arr);","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"dohaduong"},"content":"                    Todo newTask \u003d new Todo(s, remaining, false);","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"dohaduong"},"content":"                    listOfAction.add(newTask);","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"dohaduong"},"content":"                    System.out.println(String.format(\"Now you have %d \"","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"dohaduong"},"content":"                            + \"tasks in the list\", len + 1));","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"dohaduong"},"content":"                    len++;","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"dohaduong"},"content":"                    file.overwrite(listOfAction);","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"dohaduong"},"content":"                case Deadline:","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"dohaduong"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"dohaduong"},"content":"                        String detail \u003d new Parser().deadlineDetail(arr);","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"dohaduong"},"content":"                        int pointer \u003d new Parser().deadlineTimeIndex(arr);","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"dohaduong"},"content":"                        for (int j \u003d pointer; j \u003c arr.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"dohaduong"},"content":"                            if (String.valueOf(arr[j]).equals(\"/\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"dohaduong"},"content":"                                remaining +\u003d \"-\";","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"dohaduong"},"content":"                            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"dohaduong"},"content":"                                remaining +\u003d arr[j];","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"dohaduong"},"content":"                            }","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"dohaduong"},"content":"                            if (j !\u003d arr.length - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"dohaduong"},"content":"                                remaining +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"dohaduong"},"content":"                            }","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"dohaduong"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"dohaduong"},"content":"                        Deadline newTaskDeadline \u003d new Deadline(s, detail, remaining);","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"dohaduong"},"content":"                        listOfAction.add(newTaskDeadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(String.format(\"Now you have %d \"","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"dohaduong"},"content":"                                + \"tasks in the list\", len + 1));","lastModifiedDate":"2023-02-02"},{"lineNumber":146,"author":{"gitId":"dohaduong"},"content":"                        len++;","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"dohaduong"},"content":"                        file.overwrite(listOfAction);","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"dohaduong"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":150,"author":{"gitId":"dohaduong"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"dohaduong"},"content":"                case Event:","lastModifiedDate":"2023-01-27"},{"lineNumber":154,"author":{"gitId":"dohaduong"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":156,"author":{"gitId":"dohaduong"},"content":"                        int startIndex \u003d new Parser()","lastModifiedDate":"2023-02-02"},{"lineNumber":157,"author":{"gitId":"dohaduong"},"content":"                                .getEventStartTimeIndex(arr);","lastModifiedDate":"2023-02-02"},{"lineNumber":158,"author":{"gitId":"dohaduong"},"content":"                        int endIndex \u003d new Parser()","lastModifiedDate":"2023-02-02"},{"lineNumber":159,"author":{"gitId":"dohaduong"},"content":"                                .getEventEndTimeIndex(arr, startIndex);","lastModifiedDate":"2023-02-02"},{"lineNumber":160,"author":{"gitId":"dohaduong"},"content":"                        String detail \u003d new Parser()","lastModifiedDate":"2023-02-02"},{"lineNumber":161,"author":{"gitId":"dohaduong"},"content":"                                .getEventDetail(arr);","lastModifiedDate":"2023-02-02"},{"lineNumber":162,"author":{"gitId":"dohaduong"},"content":"                        String start \u003d (new Parser()","lastModifiedDate":"2023-02-02"},{"lineNumber":163,"author":{"gitId":"dohaduong"},"content":"                                .getEventTime(arr, startIndex, endIndex))[0];","lastModifiedDate":"2023-02-02"},{"lineNumber":164,"author":{"gitId":"dohaduong"},"content":"                        String end \u003d (new Parser()","lastModifiedDate":"2023-02-02"},{"lineNumber":165,"author":{"gitId":"dohaduong"},"content":"                                .getEventTime(arr, startIndex, endIndex))[1];","lastModifiedDate":"2023-02-02"},{"lineNumber":166,"author":{"gitId":"dohaduong"},"content":"                        listOfAction.add(new Event(\"event\",","lastModifiedDate":"2023-01-27"},{"lineNumber":167,"author":{"gitId":"dohaduong"},"content":"                                detail, start, end));","lastModifiedDate":"2023-01-27"},{"lineNumber":168,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(String.format(\"Now you have %d \"","lastModifiedDate":"2023-02-02"},{"lineNumber":169,"author":{"gitId":"dohaduong"},"content":"                                + \"tasks in the list\", len + 1));","lastModifiedDate":"2023-02-02"},{"lineNumber":170,"author":{"gitId":"dohaduong"},"content":"                        len++;","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"dohaduong"},"content":"                        file.overwrite(listOfAction);","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"dohaduong"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":173,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":174,"author":{"gitId":"dohaduong"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":175,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":176,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":177,"author":{"gitId":"dohaduong"},"content":"                default:","lastModifiedDate":"2023-02-02"},{"lineNumber":178,"author":{"gitId":"dohaduong"},"content":"                    System.out.println(\"OOPS!!! I\u0027m sorry, \"","lastModifiedDate":"2023-02-02"},{"lineNumber":179,"author":{"gitId":"dohaduong"},"content":"                            + \"but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-02"},{"lineNumber":180,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-02-02"},{"lineNumber":181,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":182,"author":{"gitId":"dohaduong"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":183,"author":{"gitId":"dohaduong"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":184,"author":{"gitId":"dohaduong"},"content":"                System.out.println(\"OOPS!!! I\u0027m sorry, \"","lastModifiedDate":"2023-02-02"},{"lineNumber":185,"author":{"gitId":"dohaduong"},"content":"                        + \"but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-02"},{"lineNumber":186,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":188,"author":{"gitId":"dohaduong"},"content":"            newLine \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"dohaduong"},"content":"            arr \u003d newLine.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":190,"author":{"gitId":"dohaduong"},"content":"            s \u003d arr[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":191,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":192,"author":{"gitId":"dohaduong"},"content":"        sc.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":193,"author":{"gitId":"dohaduong"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":195,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":196,"author":{"gitId":"dohaduong"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":197,"author":{"gitId":"dohaduong"},"content":"        new Duke(\"./data/tasks.txt\").run();","lastModifiedDate":"2023-01-26"},{"lineNumber":198,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":200,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":201,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":202,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":203,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":200,"-":3}},{"path":"src/main/java/duke/DukeMain.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"/*import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"import javafx.stage.Stage;*/","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"public class DukeMain extends Application {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"        System.out.println(\"Hello everyone\");","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"        stage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"        stage.show(); // Render the stage.","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"dohaduong":38}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"public class Launcher {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"        Application.launch(DukeMain.class, args);","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"dohaduong":12}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"import duke.exception.MissingContentException;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":" * Makes sense of what users say","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"     * Makes sense of adding to do command from users","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"     * @param arr array of original array","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"     * @return full string command for users","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"    public String toDo(String[] arr) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"        String remaining \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"        for (int j \u003d 1; j \u003c arr.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"            //remaining +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"            remaining +\u003d arr[j];","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"            remaining +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"        return remaining;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"     * Returns the detail/content of deadline.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"     * Given that the detail is not empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"     * @param arr an array of the input.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"     * @return the String detail.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"     * @throws duke.MissingContentException if arr is empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"    public String deadlineDetail(String[] arr) throws MissingContentException {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"        String detail \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"        if (arr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"            throw new MissingContentException();","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"        for (int j \u003d 1; j \u003c arr.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"            if (String.valueOf(arr[j]).equals(\"/by\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"            detail +\u003d arr[j];","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"            detail +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"        return detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"     * Returns index of the input array where indicates time of the deadline.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"     * Given that the arr is not empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"     * @param arr an array of the input.","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"dohaduong"},"content":"     * @return the index of deadline time.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"dohaduong"},"content":"     * @throws duke.MissingContentException if arr is empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"dohaduong"},"content":"    public int deadlineTimeIndex(String[] arr) throws MissingContentException {","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"dohaduong"},"content":"        if (arr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"dohaduong"},"content":"            throw new MissingContentException();","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"dohaduong"},"content":"        int pointer \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"dohaduong"},"content":"        for (int j \u003d 1; j \u003c arr.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"dohaduong"},"content":"            if (String.valueOf(arr[j]).equals(\"/by\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"dohaduong"},"content":"                pointer \u003d j + 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"dohaduong"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"dohaduong"},"content":"        if (pointer \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"dohaduong"},"content":"            throw new MissingContentException();","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"dohaduong"},"content":"        return pointer;","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"dohaduong"},"content":"     * Returns index of the input array where indicates starting time of the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"dohaduong"},"content":"     * Given that the arr is not empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"dohaduong"},"content":"     * @param arr an array of the input.","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"dohaduong"},"content":"     * @return the index of starting time.","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"dohaduong"},"content":"     * @throws duke.MissingContentException if arr is empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"dohaduong"},"content":"    public int getEventStartTimeIndex(String[] arr) throws MissingContentException {","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"dohaduong"},"content":"        int startIndex \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"dohaduong"},"content":"        for (int j \u003d 1; j \u003c arr.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"dohaduong"},"content":"            if (String.valueOf(arr[j]).equals(\"/from\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"dohaduong"},"content":"                startIndex \u003d j + 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"dohaduong"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"dohaduong"},"content":"        if (startIndex \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"dohaduong"},"content":"            throw new MissingContentException();","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"dohaduong"},"content":"        return startIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"dohaduong"},"content":"     * Returns event detail from input array.","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"dohaduong"},"content":"     * Given that the arr is not empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"dohaduong"},"content":"     * @param arr an array of the input.","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"dohaduong"},"content":"     * @return event detail.","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"dohaduong"},"content":"     * @throws duke.MissingContentException if arr is empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"dohaduong"},"content":"    public String getEventDetail(String[] arr) throws MissingContentException {","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"dohaduong"},"content":"        if (arr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"dohaduong"},"content":"            throw new MissingContentException();","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"dohaduong"},"content":"        String detail \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"dohaduong"},"content":"        for (int j \u003d 1; j \u003c arr.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"dohaduong"},"content":"            if (String.valueOf(arr[j]).equals(\"/from\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"dohaduong"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"dohaduong"},"content":"            detail +\u003d arr[j];","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"dohaduong"},"content":"            detail +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"dohaduong"},"content":"        return detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"dohaduong"},"content":"     * Returns index of the input array where indicates ending time of the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"dohaduong"},"content":"     * Given that the arr is not empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"dohaduong"},"content":"     * @param arr an array of the input.","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"dohaduong"},"content":"     * @param startIndex starting index where indicates starting time of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"dohaduong"},"content":"     * @return the index of ending time.","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"dohaduong"},"content":"    public int getEventEndTimeIndex(String[] arr, int startIndex) throws MissingContentException {","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"dohaduong"},"content":"        int endIndex \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"dohaduong"},"content":"        for (int j \u003d startIndex; j \u003c arr.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"dohaduong"},"content":"            if (String.valueOf(arr[j]).equals(\"/to\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"dohaduong"},"content":"                endIndex \u003d j + 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"dohaduong"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"dohaduong"},"content":"        if (endIndex \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"dohaduong"},"content":"            throw new MissingContentException();","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"dohaduong"},"content":"        return endIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"dohaduong"},"content":"     * Returns index of the input array where indicates ending time of the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"dohaduong"},"content":"     * Given that the arr is not empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"dohaduong"},"content":"     * @param arr an array of the input.","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"dohaduong"},"content":"     * @param startIndex starting index where indicates starting time of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"dohaduong"},"content":"     * @param endIndex ending index where indicates ending time of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":147,"author":{"gitId":"dohaduong"},"content":"     * @return an array consists of event start time and event ent time specifically in String.","lastModifiedDate":"2023-01-27"},{"lineNumber":148,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":149,"author":{"gitId":"dohaduong"},"content":"    public String[] getEventTime(String[] arr, int startIndex, int endIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"dohaduong"},"content":"        String[] eventTime \u003d new String[2];","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"dohaduong"},"content":"        String start \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"dohaduong"},"content":"        String end \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"dohaduong"},"content":"        for (int j \u003d startIndex; j \u003c endIndex - 1; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"dohaduong"},"content":"            if (String.valueOf(arr[j]).equals(\"/\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"dohaduong"},"content":"                start +\u003d \"-\";","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"dohaduong"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"dohaduong"},"content":"                start +\u003d arr[j];","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"dohaduong"},"content":"            if (j !\u003d endIndex - 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"dohaduong"},"content":"                start +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"dohaduong"},"content":"        for (int k \u003d endIndex; k \u003c arr.length; k++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":164,"author":{"gitId":"dohaduong"},"content":"            if (String.valueOf(arr[k]).equals(\"/\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":165,"author":{"gitId":"dohaduong"},"content":"                end +\u003d \"-\";","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"dohaduong"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"dohaduong"},"content":"                end +\u003d arr[k];","lastModifiedDate":"2023-01-27"},{"lineNumber":168,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"dohaduong"},"content":"            if (k !\u003d arr.length - 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":170,"author":{"gitId":"dohaduong"},"content":"                end +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"dohaduong"},"content":"        eventTime[0] \u003d start;","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"dohaduong"},"content":"        eventTime[1] \u003d end;","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"dohaduong"},"content":"        return eventTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":177}},{"path":"src/main/java/duke/command/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":" * Saves tasks into file","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"    private String path;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"     * Returns the loaded data file whenever Duke restarts.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"     * @return array containing content of the existing data file.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"    public String[] load() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"        String[] arr \u003d new String[100];","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"            File myFile \u003d new File(this.path);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"            myFile.getParentFile().mkdirs();","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"            if (myFile.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"                Scanner sc \u003d new Scanner(myFile);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"                int pointer \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"                while (sc.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"                    arr[pointer] \u003d sc.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"                    pointer++;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"        return arr;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"     * Overwrites the given data file with new information.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"     * @param tasks new task list to overwrite on the given file.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"     * @write on given data file.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"    public void overwrite(TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"        String[] arr \u003d tasks.readTaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"        File myFile \u003d new File(this.path);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"        myFile.getParentFile().mkdirs();","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"dohaduong"},"content":"        FileWriter myWriter \u003d new FileWriter(myFile);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"dohaduong"},"content":"        if (myFile.createNewFile()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"dohaduong"},"content":"            for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"dohaduong"},"content":"                if (arr[i] \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"dohaduong"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"dohaduong"},"content":"                myWriter.write(arr[i].toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"dohaduong"},"content":"                myWriter.write(\"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"dohaduong"},"content":"            myWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"dohaduong"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"dohaduong"},"content":"            new FileWriter(this.path, false).close();","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"dohaduong"},"content":"            for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"dohaduong"},"content":"                if (arr[i] \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"dohaduong"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"dohaduong"},"content":"                myWriter.write(arr[i].toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"dohaduong"},"content":"                myWriter.write(\"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"dohaduong"},"content":"            myWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":75}},{"path":"src/main/java/duke/command/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"import duke.exception.MissingContentException;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":" * Handles data and formats into tasklist","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"    private String[] arr;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"        arr \u003d new String[100];","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"     * Initialize a new TaskList object","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"     * @param arr","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"    public TaskList(String[] arr) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"        this.arr \u003d arr;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"     * Returns the tasklist in array","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"     * @return the tasklist in array","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"     * @throws IOException if array does not exist","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"    public String[] readTaskList() throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"                return this.arr;","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"                throw new MissingContentException();","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"        } catch (MissingContentException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"        return this.arr;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"     * Lists tasks inside tasklist.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"     * @print task one-by-one.","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"    public void list() {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"        for (int j \u003d 0; j \u003c arr.length; j++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"            if (arr[j] \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"dohaduong"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"dohaduong"},"content":"            System.out.println(String.format(\"%d.%s\", j + 1, arr[j]));","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"dohaduong"},"content":"     * Returns the real length of the array.","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"dohaduong"},"content":"     * Maximum index in which array at such index is not null.","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"dohaduong"},"content":"     * @return the first null index.","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"dohaduong"},"content":"    public int validLen() {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"dohaduong"},"content":"        int len \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"dohaduong"},"content":"        while (arr[len] !\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"dohaduong"},"content":"            len++;","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"dohaduong"},"content":"        return len;","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"dohaduong"},"content":"     * Returns new task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"dohaduong"},"content":"     * Marks task at given index as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"dohaduong"},"content":"     * @param num index at which task need to be marked as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"dohaduong"},"content":"     * @return new task list with task marked.","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"dohaduong"},"content":"    public TaskList mark(int num) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"dohaduong"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"dohaduong"},"content":"                if (arr[num] !\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"dohaduong"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"dohaduong"},"content":"                    String original \u003d arr[num];","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"dohaduong"},"content":"                    arr[num] \u003d new Task(String.valueOf(original.charAt(1)),","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"dohaduong"},"content":"                            original.substring(7), true).toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"dohaduong"},"content":"                    System.out.println(arr[num]);","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"dohaduong"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"dohaduong"},"content":"                return new TaskList(arr);","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"dohaduong"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"dohaduong"},"content":"                throw new InvalidIndexException();","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"dohaduong"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"dohaduong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"dohaduong"},"content":"        return new TaskList(arr);","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"dohaduong"},"content":"     * Returns new task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"dohaduong"},"content":"     * Unmarks task at given index as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"dohaduong"},"content":"     * @param num1 index at which task need to be marked as undone.","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"dohaduong"},"content":"     * @return new task list with task unmarked.","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"dohaduong"},"content":"     * @throw InvalidIndexException if array at specific index is null","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"dohaduong"},"content":"    public TaskList unmark(int num1) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"dohaduong"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"dohaduong"},"content":"                if (arr[num1] !\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"dohaduong"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"dohaduong"},"content":"                    String original \u003d arr[num1];","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"dohaduong"},"content":"                    Task newTask \u003d new Task(String.valueOf(original.charAt(1)),","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"dohaduong"},"content":"                            original.substring(7), false);","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"dohaduong"},"content":"                    arr[num1] \u003d newTask.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"dohaduong"},"content":"                    System.out.println(arr[num1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"dohaduong"},"content":"                    return new TaskList(arr);","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"dohaduong"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"dohaduong"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"dohaduong"},"content":"                throw new InvalidIndexException();","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"dohaduong"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"dohaduong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"dohaduong"},"content":"        return new TaskList(arr);","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"dohaduong"},"content":"     * Checks if element at given index of array is valid or not.","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":133,"author":{"gitId":"dohaduong"},"content":"     * @param index at which content need to be checked.","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"dohaduong"},"content":"     * @return boolean for content validity.","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"dohaduong"},"content":"     * @throw InvalidIndexException if array at specific index is null","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"dohaduong"},"content":"    public boolean checkValidIndex(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"dohaduong"},"content":"        return (arr[index] !\u003d null);","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"dohaduong"},"content":"     * Returns new task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"dohaduong"},"content":"     * Deletes task at given index.","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"dohaduong"},"content":"     * @param num1 index at which task need to be deleted.","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"dohaduong"},"content":"     * @return new task list with task deleted.","lastModifiedDate":"2023-01-27"},{"lineNumber":147,"author":{"gitId":"dohaduong"},"content":"     * @throw InvalidIndexException if array at specific index is null if array at specific index is null","lastModifiedDate":"2023-01-27"},{"lineNumber":148,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":149,"author":{"gitId":"dohaduong"},"content":"    public TaskList delete(int num1) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":150,"author":{"gitId":"dohaduong"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":151,"author":{"gitId":"dohaduong"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":152,"author":{"gitId":"dohaduong"},"content":"                if (arr[num1] !\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"dohaduong"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"dohaduong"},"content":"                    String original \u003d arr[num1];","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"dohaduong"},"content":"                    System.out.println(original);","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"dohaduong"},"content":"                    int trace \u003d num1;","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"dohaduong"},"content":"                    String[] originalList \u003d new String[100];","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"dohaduong"},"content":"                    for (int k \u003d 0; k \u003c 100; k++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"dohaduong"},"content":"                        originalList[k] \u003d arr[k];","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"dohaduong"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"dohaduong"},"content":"                    arr[trace] \u003d arr[trace + 1];","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"dohaduong"},"content":"                    trace++;","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"dohaduong"},"content":"                    while ((trace \u003e\u003d 1) \u0026\u0026 (originalList[trace - 1] !\u003d null)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"dohaduong"},"content":"                        arr[trace] \u003d originalList[trace + 1];","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"dohaduong"},"content":"                        trace++;","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"dohaduong"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"dohaduong"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"dohaduong"},"content":"                return new TaskList(arr);","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"dohaduong"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":172,"author":{"gitId":"dohaduong"},"content":"                throw new InvalidIndexException();","lastModifiedDate":"2023-01-27"},{"lineNumber":173,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"dohaduong"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":175,"author":{"gitId":"dohaduong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":176,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":177,"author":{"gitId":"dohaduong"},"content":"        return this;","lastModifiedDate":"2023-01-27"},{"lineNumber":178,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":179,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":180,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":181,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":182,"author":{"gitId":"dohaduong"},"content":"     * Returns new task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":183,"author":{"gitId":"dohaduong"},"content":"     * Adds task to the back.","lastModifiedDate":"2023-01-27"},{"lineNumber":184,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":185,"author":{"gitId":"dohaduong"},"content":"     * @param task needed to be added.","lastModifiedDate":"2023-01-27"},{"lineNumber":186,"author":{"gitId":"dohaduong"},"content":"     * @return new task list with task added.","lastModifiedDate":"2023-01-27"},{"lineNumber":187,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":188,"author":{"gitId":"dohaduong"},"content":"    public TaskList add(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":189,"author":{"gitId":"dohaduong"},"content":"        int len \u003d this.validLen();","lastModifiedDate":"2023-01-26"},{"lineNumber":190,"author":{"gitId":"dohaduong"},"content":"        arr[len] \u003d task.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":191,"author":{"gitId":"dohaduong"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":192,"author":{"gitId":"dohaduong"},"content":"        return new TaskList(arr);","lastModifiedDate":"2023-01-26"},{"lineNumber":193,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":194,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":195,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":196,"author":{"gitId":"dohaduong"},"content":"     * Prints out tasks that contain the given keyword.","lastModifiedDate":"2023-01-27"},{"lineNumber":197,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":198,"author":{"gitId":"dohaduong"},"content":"     * @param keyWord given keyword.","lastModifiedDate":"2023-01-27"},{"lineNumber":199,"author":{"gitId":"dohaduong"},"content":"     * @print tasks that contain the given keyword in task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":200,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":201,"author":{"gitId":"dohaduong"},"content":"    public void findWord(String keyWord) {","lastModifiedDate":"2023-01-27"},{"lineNumber":202,"author":{"gitId":"dohaduong"},"content":"        int trace \u003d 0;","lastModifiedDate":"2023-01-27"},{"lineNumber":203,"author":{"gitId":"dohaduong"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":204,"author":{"gitId":"dohaduong"},"content":"            if (arr[i] \u003d\u003d null) {","lastModifiedDate":"2023-01-27"},{"lineNumber":205,"author":{"gitId":"dohaduong"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":206,"author":{"gitId":"dohaduong"},"content":"            } else if (arr[i].contains(keyWord)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":207,"author":{"gitId":"dohaduong"},"content":"                trace++;","lastModifiedDate":"2023-01-27"},{"lineNumber":208,"author":{"gitId":"dohaduong"},"content":"                System.out.println(String.format(\"%d. %s\", trace, arr[i]));","lastModifiedDate":"2023-01-27"},{"lineNumber":209,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":210,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":211,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":212,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":213,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":214,"author":{"gitId":"dohaduong"},"content":"     * Checks if there is any task that contains the given keyword.","lastModifiedDate":"2023-01-27"},{"lineNumber":215,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":216,"author":{"gitId":"dohaduong"},"content":"     * @param keyWord given keyword.","lastModifiedDate":"2023-01-27"},{"lineNumber":217,"author":{"gitId":"dohaduong"},"content":"     * @return true if there is any task contains the keyword and false otherwise.","lastModifiedDate":"2023-01-27"},{"lineNumber":218,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":219,"author":{"gitId":"dohaduong"},"content":"    public boolean checkWord(String keyWord) {","lastModifiedDate":"2023-01-27"},{"lineNumber":220,"author":{"gitId":"dohaduong"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":221,"author":{"gitId":"dohaduong"},"content":"            if (arr[i] \u003d\u003d null) {","lastModifiedDate":"2023-01-27"},{"lineNumber":222,"author":{"gitId":"dohaduong"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":223,"author":{"gitId":"dohaduong"},"content":"            } else if (arr[i].contains(keyWord)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":224,"author":{"gitId":"dohaduong"},"content":"                return true;","lastModifiedDate":"2023-01-27"},{"lineNumber":225,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":226,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":227,"author":{"gitId":"dohaduong"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":228,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":229,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":229}},{"path":"src/main/java/duke/command/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":" * Deals with interaction with users","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    public Ui() {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"     * Shows logo and welcome.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"        System.out.println(\"\\nHello, I\u0027m Duke\");","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"     * Prints out error message.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"        System.out.println(message);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"     * Prints out loading error message.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"        System.out.println(\"File not existed\");","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"     * Prints out line for separation.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"        System.out.println(\"_____________________________\");","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"     * Prints out if input array is not empty","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"     * @param arr input array.","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"dohaduong"},"content":"     * @print instruction.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"dohaduong"},"content":"     * @throw MissingContentException if input array is empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"dohaduong"},"content":"    public void findWordIntro(String[] arr, boolean containsKeyword) {","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"dohaduong"},"content":"        if (arr.length \u003e\u003d 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"dohaduong"},"content":"            if (containsKeyword) {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"dohaduong"},"content":"                System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"dohaduong"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"dohaduong"},"content":"                System.out.println(\"Sorry! No task found!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"dohaduong"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"dohaduong"},"content":"            System.out.println(new DukeException(\"OPPS! The content can not be left empty!\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":67}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":" * Represents exceptions for Duke","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"    public DukeException() {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"        super();","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"    public DukeException(String message, Throwable cause) {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"        super(message, cause);","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"        super(message);","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"    public DukeException(Throwable cause) {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"        super(cause);","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"dohaduong":23}},{"path":"src/main/java/duke/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":" * Represents Invalid index exception","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"        super(\"OOPS! The indexing is not valid!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"dohaduong":10}},{"path":"src/main/java/duke/exception/MissingContentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":" * Represents Missing content exception","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"public class MissingContentException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"    public MissingContentException() {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"        super(\"OOPS! The content/detail cannot be empty!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"dohaduong":10}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":" * Represents deadlines","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"    private LocalDate day;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"     * Initializes a new Deadline object","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"     * @param type of task","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"     * @param detail of Deadlin","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"     * @param marked whether deadline is marked or not","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"     * @param day of deadline","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"    public Deadline(String type, String detail, boolean marked, LocalDate day) {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"        super(type, detail, marked);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"        this.day \u003d day;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"     * Initialize a new Deadline object","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"     * @param type of task","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"     * @param detail of deadline","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"     * @param day of deadline","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"    public Deadline(String type, String detail, String day) {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"        super(type, detail);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"        this.day \u003d LocalDate.parse(day);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"     * Returns deadline printed out properly.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"     * @return deadline in full details.","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"        if (marked) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"            return \"[D][X] \" + super.detail + \" (by: \" + this.day.format(DateTimeFormatter","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"                    .ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"            return \"[D][ ] \" + super.detail + \" (by: \" + this.day.format(DateTimeFormatter","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"                    .ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":50}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":" * Represents Event class","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"    private LocalDate start;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"    private LocalDate end;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"     * Initializes a new Event object","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"     * @param type of task","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"     * @param detail of event","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"     * @param marked whether event is marked or not","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"     * @param start starting day of event","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"     * @param end ending day of event","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"    public Event(String type, String detail, boolean marked, String start, String end) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"        super(type, detail, marked);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"        this.start \u003d LocalDate.parse(start);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"        this.end \u003d LocalDate.parse(end);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"     * Initializes a new Event object","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"     * @param type of task","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"     * @param detail of event","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"     * @param start starting day of event","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"     * @param end ending day of event","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"    public Event(String type, String detail, String start, String end) {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"        super(type, detail);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"        this.start \u003d LocalDate.parse(start);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"        this.end \u003d LocalDate.parse(end);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"     * Returns event printed out properly.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"     * @return event in full details.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"        if (marked) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"            return \"[E][X] \" + super.detail + \" (from: \"","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"                    + this.start.format(DateTimeFormatter","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"                    .ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"                    + \" to: \" + this.end.format(DateTimeFormatter","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"dohaduong"},"content":"                    .ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"dohaduong"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"dohaduong"},"content":"            return \"[E][ ] \" + super.detail + \" (from: \"","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"dohaduong"},"content":"                    + this.start.format(DateTimeFormatter","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"dohaduong"},"content":"                    .ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"dohaduong"},"content":"                    + \" to: \" + this.end.format(DateTimeFormatter","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"dohaduong"},"content":"                    .ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":62}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":" * Represent tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"    protected String type;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"    protected String detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    protected boolean marked;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"     * Intializes a new Task object","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"     * @param type of task","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"     * @param detail of task","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"    public Task(String type, String detail) {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"        this.marked \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"     * Initialize a Task object with given value","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"     * @param type   type of task","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"     * @param detail content of task","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"     * @param marked","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"    public Task(String type, String detail, boolean marked) {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"        this.marked \u003d marked;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"     * Marks task as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"     * @mark task as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"    public void mark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"        this.marked \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"     * Unarks task as undone.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"     * @unmark task as undone.","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"        this.marked \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"dohaduong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"dohaduong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"dohaduong"},"content":"        if (marked) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"dohaduong"},"content":"            return \"[\" + this.type + \"][X] \" + this.detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"dohaduong"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"dohaduong"},"content":"            return \"[\" + this.type + \"][ ] \" + this.detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":62}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":" * Represent a Todo class","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":" * Handles with todo commands","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"     * Initializes a new Todo object","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"     * @param type of task","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"     * @param detail of Todo","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"dohaduong"},"content":"     * @param marked wheter Todo is marked or not","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"    public Todo(String type, String detail, boolean marked) {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"        super(type, detail, marked);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"    public Todo(String type, String detail) {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"        super(type, detail);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"dohaduong"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"dohaduong"},"content":"     * Returns todo printed out properly.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"dohaduong"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"     * @return todo in full details.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"        if (marked) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"            return \"[T][X] \" + super.detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"            return \"[T][ ] \" + super.detail;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dohaduong":37}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"    public void test() {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"        assertEquals(\"[T][ ] clean house\", new Todo(\"todo\", \"clean house\").toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"dohaduong":11}},{"path":"src/test/java/deadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"public class deadlineTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"        assertEquals(\"[D][ ] go home (by: Oct 15 2019)\", new Deadline(\"deadline\", \"go home\", \"2019-10-15\").toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"dohaduong":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"todo borrow books","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"dohaduong":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.javaIF","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dohaduong":1,"-":20}}]
