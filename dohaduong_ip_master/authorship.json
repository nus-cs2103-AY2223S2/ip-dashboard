[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"enum action {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"dohaduong"},"content":"    bye,","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"dohaduong"},"content":"    list,","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"dohaduong"},"content":"    mark,","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"dohaduong"},"content":"    unmark,","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"dohaduong"},"content":"    todo,","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"dohaduong"},"content":"    deadline,","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"    event,","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"dohaduong"},"content":"    delete","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"dohaduong"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"dohaduong"},"content":"    static void checkEmptyAction(String[] arr, String action) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"dohaduong"},"content":"        if (arr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"dohaduong"},"content":"            throw new DukeException(String.format(\"â˜¹ OOPS!!! The description of a %s cannot be empty.\", action));","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"dohaduong"},"content":"    public static void main(String[] args) throws IllegalArgumentException {","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"dohaduong"},"content":"        String[] listOfAction \u003d new String[100];","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"dohaduong"},"content":"        System.out.println(\"\\nHello, I\u0027m Duke\");","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"dohaduong"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"dohaduong"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"dohaduong"},"content":"        String bye \u003d \"bye\";","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"dohaduong"},"content":"        String s \u003d \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"dohaduong"},"content":"        String newLine \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"dohaduong"},"content":"        String[] arr \u003d newLine.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"dohaduong"},"content":"        s \u003d arr[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"dohaduong"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"dohaduong"},"content":"        while (!bye.equals(s)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"dohaduong"},"content":"            String remaining \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"dohaduong"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"dohaduong"},"content":"            action myAction \u003d action.valueOf(s);","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"dohaduong"},"content":"            switch(myAction) {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"dohaduong"},"content":"                case bye:","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"dohaduong"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"dohaduong"},"content":"                case list:","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"dohaduong"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"dohaduong"},"content":"                    for (int j \u003d 0; j \u003c listOfAction.length; j++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"dohaduong"},"content":"                        if (listOfAction[j] \u003d\u003d null) {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"dohaduong"},"content":"                            break;","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"dohaduong"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(String.format(\"%d.%s\", j + 1, listOfAction[j]));","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"dohaduong"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"dohaduong"},"content":"                case mark:","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"dohaduong"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"dohaduong"},"content":"                        checkEmptyAction(arr, \"mark\");","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"dohaduong"},"content":"                        int num \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"dohaduong"},"content":"                        if (listOfAction[num] !\u003d null) {","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"dohaduong"},"content":"                            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"dohaduong"},"content":"                            String original \u003d listOfAction[num];","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"dohaduong"},"content":"                            listOfAction[num] \u003d String.format(\"%s[X] %s\", original.substring(0, 3), original.substring(7));","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"dohaduong"},"content":"                            System.out.println(listOfAction[num]);","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"dohaduong"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"dohaduong"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"dohaduong"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"dohaduong"},"content":"                case unmark:","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"dohaduong"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"dohaduong"},"content":"                        checkEmptyAction(arr, \"unmark\");","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"dohaduong"},"content":"                        int num1 \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"dohaduong"},"content":"                        if (listOfAction[num1] !\u003d null) {","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"dohaduong"},"content":"                            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"dohaduong"},"content":"                            String original \u003d listOfAction[num1];","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"dohaduong"},"content":"                            listOfAction[num1] \u003d String.format(\"%s[ ] %s\", original.substring(0, 3), original.substring(7));","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"dohaduong"},"content":"                            System.out.println(listOfAction[num1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"dohaduong"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"dohaduong"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"dohaduong"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"dohaduong"},"content":"                case delete:","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"dohaduong"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"dohaduong"},"content":"                        checkEmptyAction(arr, \"delete\");","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"dohaduong"},"content":"                        int num1 \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"dohaduong"},"content":"                        if (listOfAction[num1] !\u003d null) {","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"dohaduong"},"content":"                            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"dohaduong"},"content":"                            String original \u003d listOfAction[num1];","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"dohaduong"},"content":"                            System.out.println(original);","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"dohaduong"},"content":"                            i--;","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"dohaduong"},"content":"                            System.out.println(String.format(\"Now you have %d tasks in the list\", i));","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"dohaduong"},"content":"                            int trace \u003d num1;","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"dohaduong"},"content":"                            String[] originalList \u003d new String[100];","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"dohaduong"},"content":"                            for (int k \u003d 0; k \u003c 100; k++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"dohaduong"},"content":"                                originalList[k] \u003d listOfAction[k];","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"dohaduong"},"content":"                            }","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"dohaduong"},"content":"                            listOfAction[trace] \u003d originalList[trace + 1];","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"dohaduong"},"content":"                            trace++;","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"dohaduong"},"content":"                            while ((trace \u003e\u003d 1) \u0026\u0026 (originalList[trace - 1] !\u003d null)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"dohaduong"},"content":"                                listOfAction[trace] \u003d originalList[trace + 1];","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"dohaduong"},"content":"                                trace++;","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"dohaduong"},"content":"                            }","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"dohaduong"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"dohaduong"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"dohaduong"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"dohaduong"},"content":"                case todo:","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"dohaduong"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"dohaduong"},"content":"                        checkEmptyAction(arr, \"todo\");","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"dohaduong"},"content":"                        for (int j \u003d 1; j \u003c arr.length; j++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"dohaduong"},"content":"                            //remaining +\u003d \" \";","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"dohaduong"},"content":"                            remaining +\u003d arr[j];","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"dohaduong"},"content":"                            remaining +\u003d \" \";","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"dohaduong"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"dohaduong"},"content":"                        listOfAction[i] \u003d String.format(\"[T][ ] %s\", remaining);","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(listOfAction[i]);","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(String.format(\"Now you have %d tasks in the list\", i + 1));","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"dohaduong"},"content":"                        i++;","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"dohaduong"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"dohaduong"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"dohaduong"},"content":"                case deadline:","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"dohaduong"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"dohaduong"},"content":"                        checkEmptyAction(arr, \"deadline\");","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"dohaduong"},"content":"                        for (int j \u003d 1; j \u003c arr.length; j++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"dohaduong"},"content":"                            remaining +\u003d \" \";","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"dohaduong"},"content":"                            if (String.valueOf(arr[j].charAt(0)).equals(\"/\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"dohaduong"},"content":"                                remaining +\u003d \"(\";","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"dohaduong"},"content":"                                if (arr[j].length() !\u003d 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"dohaduong"},"content":"                                    remaining +\u003d arr[j].substring(1);","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"dohaduong"},"content":"                                }","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"dohaduong"},"content":"                            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"dohaduong"},"content":"                                //remaining +\u003d arr[j];","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"dohaduong"},"content":"                                remaining +\u003d arr[j];","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"dohaduong"},"content":"                            }","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"dohaduong"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"dohaduong"},"content":"                        remaining +\u003d \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"dohaduong"},"content":"                        listOfAction[i] \u003d String.format(\"[D][ ]%s\", remaining);","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(listOfAction[i]);","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(String.format(\"Now you have %d tasks in the list\", i + 1));","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"dohaduong"},"content":"                        i++;","lastModifiedDate":"2023-01-20"},{"lineNumber":156,"author":{"gitId":"dohaduong"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":157,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":158,"author":{"gitId":"dohaduong"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":160,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":161,"author":{"gitId":"dohaduong"},"content":"                case event:","lastModifiedDate":"2023-01-20"},{"lineNumber":162,"author":{"gitId":"dohaduong"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":163,"author":{"gitId":"dohaduong"},"content":"                        checkEmptyAction(arr, \"event\");","lastModifiedDate":"2023-01-20"},{"lineNumber":164,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":165,"author":{"gitId":"dohaduong"},"content":"                        int k \u003d 0;","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"dohaduong"},"content":"                        for (int j \u003d 1; j \u003c arr.length; j++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":167,"author":{"gitId":"dohaduong"},"content":"                            remaining +\u003d \" \";","lastModifiedDate":"2023-01-19"},{"lineNumber":168,"author":{"gitId":"dohaduong"},"content":"                            if (String.valueOf(arr[j].charAt(0)).equals(\"/\") \u0026\u0026 (k !\u003d 0)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":169,"author":{"gitId":"dohaduong"},"content":"                                if (arr[j].length() !\u003d 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":170,"author":{"gitId":"dohaduong"},"content":"                                    remaining +\u003d arr[j].substring(1);","lastModifiedDate":"2023-01-19"},{"lineNumber":171,"author":{"gitId":"dohaduong"},"content":"                                    remaining +\u003d \":\";","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"dohaduong"},"content":"                                }","lastModifiedDate":"2023-01-19"},{"lineNumber":173,"author":{"gitId":"dohaduong"},"content":"                            } else if (String.valueOf(arr[j].charAt(0)).equals(\"/\") \u0026\u0026 (k \u003d\u003d 0)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":174,"author":{"gitId":"dohaduong"},"content":"                                remaining +\u003d \"(\";","lastModifiedDate":"2023-01-19"},{"lineNumber":175,"author":{"gitId":"dohaduong"},"content":"                                if (arr[j].length() !\u003d 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":176,"author":{"gitId":"dohaduong"},"content":"                                    remaining +\u003d arr[j].substring(1);","lastModifiedDate":"2023-01-19"},{"lineNumber":177,"author":{"gitId":"dohaduong"},"content":"                                    remaining +\u003d \":\";","lastModifiedDate":"2023-01-19"},{"lineNumber":178,"author":{"gitId":"dohaduong"},"content":"                                }","lastModifiedDate":"2023-01-19"},{"lineNumber":179,"author":{"gitId":"dohaduong"},"content":"                                k++;","lastModifiedDate":"2023-01-19"},{"lineNumber":180,"author":{"gitId":"dohaduong"},"content":"                            } else if (arr[j-1].substring(1).equals(\"to\") \u0026\u0026 (k!\u003d 0)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":181,"author":{"gitId":"dohaduong"},"content":"                                remaining +\u003d arr[j];","lastModifiedDate":"2023-01-19"},{"lineNumber":182,"author":{"gitId":"dohaduong"},"content":"                            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":183,"author":{"gitId":"dohaduong"},"content":"                                remaining +\u003d arr[j];","lastModifiedDate":"2023-01-19"},{"lineNumber":184,"author":{"gitId":"dohaduong"},"content":"                            }","lastModifiedDate":"2023-01-19"},{"lineNumber":185,"author":{"gitId":"dohaduong"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":186,"author":{"gitId":"dohaduong"},"content":"                        remaining +\u003d \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"dohaduong"},"content":"                        listOfAction[i] \u003d String.format(\"[E][ ]%s\", remaining);","lastModifiedDate":"2023-01-20"},{"lineNumber":188,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(listOfAction[i]);","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(String.format(\"Now you have %d tasks in the list\", i + 1));","lastModifiedDate":"2023-01-19"},{"lineNumber":190,"author":{"gitId":"dohaduong"},"content":"                        i++;","lastModifiedDate":"2023-01-19"},{"lineNumber":191,"author":{"gitId":"dohaduong"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":192,"author":{"gitId":"dohaduong"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":193,"author":{"gitId":"dohaduong"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"dohaduong"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":195,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":196,"author":{"gitId":"dohaduong"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":197,"author":{"gitId":"dohaduong"},"content":"                System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-20"},{"lineNumber":198,"author":{"gitId":"dohaduong"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":199,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":200,"author":{"gitId":"dohaduong"},"content":"            newLine \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":201,"author":{"gitId":"dohaduong"},"content":"            arr \u003d newLine.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":202,"author":{"gitId":"dohaduong"},"content":"            s \u003d arr[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":203,"author":{"gitId":"dohaduong"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":204,"author":{"gitId":"dohaduong"},"content":"        sc.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":205,"author":{"gitId":"dohaduong"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":208,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":209,"author":{"gitId":"dohaduong"},"content":"class DukeException extends  Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":210,"author":{"gitId":"dohaduong"},"content":"    public DukeException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":211,"author":{"gitId":"dohaduong"},"content":"        super();","lastModifiedDate":"2023-01-20"},{"lineNumber":212,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":213,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":214,"author":{"gitId":"dohaduong"},"content":"    public DukeException(String message, Throwable cause) {","lastModifiedDate":"2023-01-20"},{"lineNumber":215,"author":{"gitId":"dohaduong"},"content":"        super(message, cause);","lastModifiedDate":"2023-01-20"},{"lineNumber":216,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":217,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":218,"author":{"gitId":"dohaduong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":219,"author":{"gitId":"dohaduong"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":220,"author":{"gitId":"dohaduong"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":221,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":222,"author":{"gitId":"dohaduong"},"content":"    public DukeException(Throwable cause) {","lastModifiedDate":"2023-01-20"},{"lineNumber":223,"author":{"gitId":"dohaduong"},"content":"        super(cause);","lastModifiedDate":"2023-01-20"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":226,"author":{"gitId":"dohaduong"},"content":"","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"dohaduong":215,"-":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dohaduong"},"content":"todo borrow books","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"dohaduong"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"dohaduong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"dohaduong":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"dohaduong"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.javaIF","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dohaduong":1,"-":20}}]
