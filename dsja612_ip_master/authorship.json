[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"dsja612":1}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"import commands.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import utils.Parser;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"import views.UI;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":" * Main driver class for Duke.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"public final class Duke {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    private static final TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    private static final UI ui \u003d new UI();","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"    private static final Storage storage \u003d new Storage(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"    private Duke() { }","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"        Duke.run();","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"    public static void run() throws IOException {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"        storage.load();","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"        ui.printInitMessage();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"        ui.printCommands();","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"        acceptCommands();","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"        storage.save();","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"        ui.printExitMessage();","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"     * Takes in input from the user, and passes it to Parser","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"     * to get the appropriate command and execute it.","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"    private static void acceptCommands() {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"dsja612"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"dsja612"},"content":"                String fullCommand \u003d sc.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"dsja612"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"dsja612"},"content":"                c.execute(ui, tasks, storage);","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"dsja612"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"dsja612"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"dsja612"},"content":"                ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"dsja612":52}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package commands;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"import views.UI;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"        this.commandStatus \u003d \"Exit command executed!\";","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"            storage.save();","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"            throw new DukeException(\"Failed to save tasks to local storage...\");","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"        ui.printCommandOutput(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":28}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package commands;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import views.UI;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":" * Abstract command class for all Duke commands.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"    /** The status of the command after execution. **/","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"    String commandStatus;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    boolean isExit \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"     * Executes the respective command.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"     * @param ui User interface for displaying status of command","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"     * @param tasks List of tasks for commands that update it","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"     * @param storage Storing of tasks for commands that update it","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"     * @throws DukeException If execution encounters errors","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"    public abstract void execute(UI ui, TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"    public String getCommandStatus() {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"        return this.commandStatus;","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"    };","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"        return isExit;","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":32}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package commands;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"import views.UI;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"    private String name;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"    public DeadlineCommand(String name, String deadline) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"            throw new DukeException(\"Please enter a valid date format in \\\"dd/mm/yyyy!\\\"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"        Deadline deadline \u003d new Deadline(this.name, this.deadline);","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"        this.commandStatus \u003d \"Added deadline: \" + deadline + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"                + \"You now have \" + tasks.size() + \" task(s) in your list\";","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"        ui.printCommandOutput(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":37}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package commands;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"import views.UI;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"    int index;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"            Task deletedTask \u003d tasks.delete(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"            this.commandStatus \u003d \"Removed task: \" + deletedTask + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"                    + \"You now have \" + tasks.size() + \" task(s) in your list.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"            ui.printCommandOutput(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"            throw new DukeException(\"Please provide a valid index!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":29}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package commands;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import tasks.Event;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"import views.UI;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"    private String name;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"    public EventCommand(String name, String startDate, String endDate) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"            this.startDate \u003d LocalDateTime.parse(startDate, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"            this.endDate \u003d LocalDateTime.parse(endDate, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"            if (this.startDate.isAfter(this.endDate)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"                throw new DukeException(\"The starting date of this event is after its ending date!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"            throw new DukeException(\"Please enter a valid date format in \\\"dd/mm/yyyy!\\\"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"        Event event \u003d new Event(this.name, this.startDate, this.endDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"        tasks.addTask(event);","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"        this.commandStatus \u003d \"Added event: \" + event + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"                + \"You now have \" + tasks.size() + \" task(s) in your list\";","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"        ui.printCommandOutput(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":42}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import views.UI;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"    private String searchTerm;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"            this.commandStatus \u003d \"You have no tasks in your list! \\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"            TaskList temp \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"                Task curTask \u003d tasks.get(i);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"                if (curTask.getName().contains(this.searchTerm)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"                    temp.addTask(tasks.get(i));","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"            if (temp.size() \u003e\u003d 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"                this.commandStatus \u003d \"Here are the matching tasks in your list: \\n\" + temp;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"            } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"                this.commandStatus \u003d \"Unable to find any tasks with that description!\";","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"        ui.printCommandOutput(this);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"dsja612":38}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package commands;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"import views.UI;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"            this.commandStatus \u003d \"You currently have 0 tasks added. Add one now!\";","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"            this.commandStatus \u003d tasks.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"        ui.printCommandOutput(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":22}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package commands;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"import views.UI;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"    int index;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"            tasks.markDone(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"            this.commandStatus \u003d \"Good job! I have marked this task as done! \\n\" + \"\\t\" + tasks.get(index - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"            ui.printCommandOutput(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"            throw new DukeException(\"Please provide a valid index!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":28}},{"path":"src/main/java/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package commands;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"import views.UI;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"    private String name;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"    public ToDoCommand(String name) {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"        ToDo todo \u003d new ToDo(name);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"        this.commandStatus \u003d \"Added To-do: \" + todo + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"                + \"You now have \" + tasks.size() + \" task(s) in your list\";","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"        ui.printCommandOutput(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":27}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package commands;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"import views.UI;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"    int index;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"            tasks.markUndone(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"            this.commandStatus \u003d \"Oof! I have marked this task as undone for you! \\n\" + tasks.get(index - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"            ui.printCommandOutput(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"            throw new DukeException(\"Please provide a valid index!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":28}},{"path":"src/main/java/enums/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package enums;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":" * Types of commands that can be used.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"public enum CommandType {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"    FIND(\"find\");","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    private final String type;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"    CommandType(String type) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"    public String getType() {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"        return type;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"dsja612":25}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":" * General exception class for displaying error messages to users.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"     * Constructor for DukeException that stores an error message.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"     * @param message Main body of error message","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"dsja612":15}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import tasks.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":" * Handles loading and saving of tasks to local storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"    private final Path DUKE_DATA_DIR \u003d Path.of(System.getProperty(\"user.dir\") + \"/data\");","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"    private File dataFile;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"    public Storage(TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"     * Loads tasks from a local file into a TaskList, creates one if one does not exist.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"     * @throws IOException If fail to load/create a storage file","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"    public void load() throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"            if (!Files.exists(DUKE_DATA_DIR)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"                Files.createDirectories(DUKE_DATA_DIR);","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"            this.dataFile \u003d new File(this.DUKE_DATA_DIR + \"/duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"dsja612"},"content":"            boolean isCreated \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"dsja612"},"content":"            if (!this.dataFile.exists()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"dsja612"},"content":"                isCreated \u003d this.dataFile.createNewFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"dsja612"},"content":"            if (!isCreated) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"dsja612"},"content":"                throw new DukeException(\"Failed to create storage file!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"dsja612"},"content":"            Scanner sc \u003d new Scanner(this.dataFile);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"dsja612"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"dsja612"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"dsja612"},"content":"                parseFile(input, tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"dsja612"},"content":"        } catch (FileNotFoundException | DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"dsja612"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"dsja612"},"content":"     * Saves current TaskList into local file.","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"dsja612"},"content":"     * @throws IOException If fail to save tasks into file","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"dsja612"},"content":"    public void save() throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"dsja612"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.dataFile);","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"dsja612"},"content":"            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"dsja612"},"content":"                String line \u003d tasks.get(i).toSaveFormat();","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"dsja612"},"content":"                fileWriter.write(line + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"dsja612"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"dsja612"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"dsja612"},"content":"            System.out.println(\"Failed to save existing tasks...\");","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"dsja612"},"content":"     * Parse input from file into tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"dsja612"},"content":"     * @param input Line from local file","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"dsja612"},"content":"     * @param tasks TaskList to store tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"dsja612"},"content":"     * @throws DukeException If fail to create task from invalid input","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"dsja612"},"content":"    public static void parseFile(String input, TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"dsja612"},"content":"        String[] inputList \u003d input.split(\",\");","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"dsja612"},"content":"        String taskType \u003d inputList[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"dsja612"},"content":"        String taskName \u003d inputList[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"dsja612"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"dsja612"},"content":"            case \"T\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"dsja612"},"content":"                tasks.addTask(new ToDo(taskName));","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"dsja612"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"dsja612"},"content":"            case \"D\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"dsja612"},"content":"                String by \u003d inputList[2];","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"dsja612"},"content":"                LocalDateTime deadline \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"dsja612"},"content":"                tasks.addTask(new Deadline(taskName, deadline));","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"dsja612"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"dsja612"},"content":"            case \"E\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"dsja612"},"content":"                String from \u003d inputList[2];","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"dsja612"},"content":"                String to \u003d inputList[3];","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"dsja612"},"content":"                LocalDateTime startDate \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"dsja612"},"content":"                LocalDateTime endDate \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"dsja612"},"content":"                tasks.addTask(new Event(taskName, startDate, endDate));","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"dsja612"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"dsja612"},"content":"            default: {","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"dsja612"},"content":"                throw new DukeException(\"Unable to parse this line: \" + input);","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"dsja612":113}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":" * Class representing a Deadline task.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"    /** The deadline of this task. **/","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"     * Constructor for a Deadline task.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"     * @param name Name of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"     * @param deadline Deadline of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"    public Deadline(String name, LocalDateTime deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"        return this.deadline.format(DateTimeFormatter.ofPattern(\"HHmm, MMM d yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"        return String.format(\"D,%s,%s\", this.name, this.getDeadline());","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"        return \"[D]\" + super.toString() + \" (by \" + this.getDeadline() + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"dsja612":35}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":" * A class representing an Event task.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"    /** The starting date of this task. **/","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    /** The ending date of this task. **/","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"     * Constructor for an Event task.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"     * @param name Name of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"     * @param startDate Starting date of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"     * @param endDate Ending date of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"    public Event(String name, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"    public String getStartDate() {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"        return this.startDate.format(DateTimeFormatter.ofPattern(\"HHmm, MMM d yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"        return this.endDate.format(DateTimeFormatter.ofPattern(\"HHmm, MMM d yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"        return String.format(\"E,%s,%s,%s\", this.name, this.startDate, this.endDate);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"dsja612"},"content":"        return \"[E]\" + super.toString() + \" (Starts from \" + this.getStartDate() + \"; ends at \" + this.getEndDate() + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"dsja612":45}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":" * An abstract class to represent a Task object.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"    /** The name or description of this task. **/","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"    String name;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"    /** Represents if the task is marked as done or not. **/","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"     * Constructor for a task.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"     * @param name The name of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"     * Format when saving task to local storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"     * @return A formatted string","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"    public abstract String toSaveFormat();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"    public String getName() {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"        return this.name;","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"dsja612"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"dsja612"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.name;","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dsja612":48}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":" * A wrapper class for a list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"public class TaskList {","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"    /** ArrayList to store the tasks. **/","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"     * A Constructor for a TaskList object.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"     * @param task","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"    public int size() {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"     * Deletes a task from this TaskList based on its index.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"     * @param index Index of the task in 1-based indexing format","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"     * @return Task that is deleted","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"    public Task delete(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"        return this.taskList.remove(index - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"dsja612"},"content":"     * Marks a task as done in this TaskList based on its index.","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"dsja612"},"content":"     * @param index Index of the task in 1-based indexing format","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"dsja612"},"content":"    public void markDone(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"dsja612"},"content":"        Task task \u003d this.taskList.get(index - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"dsja612"},"content":"        task.markAsDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"dsja612"},"content":"     * Marks a task as not done in this TaskList based on its index.","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"dsja612"},"content":"     * @param index Index of the task in 1-based indexing format","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"dsja612"},"content":"    public void markUndone(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"dsja612"},"content":"        Task task \u003d this.taskList.get(index - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"dsja612"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"dsja612"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"dsja612"},"content":"        return (this.size() \u003d\u003d 0);","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"dsja612"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"dsja612"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"dsja612"},"content":"        result.append(\"List of Tasks: \\n\");","lastModifiedDate":"2023-01-16"},{"lineNumber":70,"author":{"gitId":"dsja612"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-16"},{"lineNumber":71,"author":{"gitId":"dsja612"},"content":"            result.append((i + 1))","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"dsja612"},"content":"                    .append(\". \")","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"dsja612"},"content":"                    .append(taskList.get(i).toString())","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"dsja612"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":76,"author":{"gitId":"dsja612"},"content":"        return result.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":77,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":78,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dsja612":78}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":" * A class representing a ToDo task.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"     * Constructor for a ToDo task.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"     * @param name","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"        return String.format(\"T,%s\", this.name);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"dsja612":24}},{"path":"src/main/java/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package utils;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import commands.ByeCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import commands.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import commands.DeadlineCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import commands.EventCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"import commands.FindCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"import commands.ListCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"import commands.MarkCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"import commands.ToDoCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"import commands.UnmarkCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"import enums.CommandType;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":" * Parse user input into commands for Duke.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"public class Parser {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"     * Parses user input into a command.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"     * @param input User input","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"     * @return Command corresponding to user input","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"     * @throws DukeException If input is invalid for any command","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"            String[] inputList \u003d input.split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"            CommandType commandType \u003d CommandType.valueOf(inputList[0].toUpperCase().strip());","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"            boolean tooFewArgs \u003d inputList.length \u003c\u003d 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"            switch (commandType) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"                case LIST: {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"                    return new ListCommand();","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"                case DEADLINE: {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"                    if (tooFewArgs) {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"                        throw new DukeException(\"Please give a name for your deadline!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"                    } else if (!input.contains(\" /by \")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"                        throw new DukeException(\"Please give a date/time for your deadline!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"dsja612"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"dsja612"},"content":"                    String[] parseCommand \u003d input.split(\"/by\");","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"dsja612"},"content":"                    String name \u003d parseCommand[0].replaceFirst(\"deadline \", \"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"dsja612"},"content":"                    String deadline \u003d parseCommand[1].strip();","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"dsja612"},"content":"                    return new DeadlineCommand(name, deadline);","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"dsja612"},"content":"                case TODO: {","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"dsja612"},"content":"                    if (tooFewArgs) {","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"dsja612"},"content":"                        throw new DukeException(\"Please give a name for your ToDo task!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"dsja612"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"dsja612"},"content":"                    String name \u003d input.replaceFirst(\"todo \", \"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"dsja612"},"content":"                    return new ToDoCommand(name);","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"dsja612"},"content":"                case EVENT: {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"dsja612"},"content":"                    if (tooFewArgs) {","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"dsja612"},"content":"                        throw new DukeException(\"Please give a name for your event!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"dsja612"},"content":"                    } else if (!input.contains(\" /from \")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"dsja612"},"content":"                        throw new DukeException(\"Please give a starting date/time for your event!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"dsja612"},"content":"                    } else if (!input.contains(\" /to \")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"dsja612"},"content":"                        throw new DukeException(\"Please give an ending date/time for your event!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"dsja612"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"dsja612"},"content":"                    String[] parseCommand \u003d input.split(\"/from\");","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"dsja612"},"content":"                    String name \u003d parseCommand[0].replaceFirst(\"event \", \"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"dsja612"},"content":"                    parseCommand \u003d parseCommand[1].split(\"/to\");","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"dsja612"},"content":"                    String from \u003d parseCommand[0].strip();","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"dsja612"},"content":"                    String by \u003d parseCommand[1].strip();","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"dsja612"},"content":"                    return new EventCommand(name, from, by);","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"dsja612"},"content":"                case MARK: {","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"dsja612"},"content":"                    if (tooFewArgs) {","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"dsja612"},"content":"                        throw new DukeException(\"Please provide the index of the task!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"dsja612"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"dsja612"},"content":"                    int index \u003d Integer.parseInt(inputList[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"dsja612"},"content":"                    return new MarkCommand(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"dsja612"},"content":"                case UNMARK: {","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"dsja612"},"content":"                    if (tooFewArgs) {","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"dsja612"},"content":"                        throw new DukeException(\"Please provide the index of the task!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"dsja612"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"dsja612"},"content":"                    int index \u003d Integer.parseInt(inputList[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"dsja612"},"content":"                    return new UnmarkCommand(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"dsja612"},"content":"                case DELETE: {","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"dsja612"},"content":"                    if (tooFewArgs) {","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"dsja612"},"content":"                        throw new DukeException(\"Please provide the index of the task!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"dsja612"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"dsja612"},"content":"                    int index \u003d Integer.parseInt(inputList[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"dsja612"},"content":"                    return new DeleteCommand(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"dsja612"},"content":"                case FIND: {","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"dsja612"},"content":"                    if (tooFewArgs) {","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"dsja612"},"content":"                        throw new DukeException(\"Please specify a search term!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"dsja612"},"content":"                    }","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"dsja612"},"content":"                    String searchTerm \u003d input.replaceFirst(\"find \", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"dsja612"},"content":"                    return new FindCommand(searchTerm);","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"dsja612"},"content":"                case BYE: {","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"dsja612"},"content":"                    return new ByeCommand();","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"dsja612"},"content":"                default: {","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"dsja612"},"content":"                    throw new DukeException(\"Sorry, that command is not recognised. \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"dsja612"},"content":"                            + \"P.S. Maybe you could contact @dsja612 on github to request for more types of commands :)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"dsja612"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"dsja612"},"content":"            throw new DukeException(\"Sorry, that command is not recognised. \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"dsja612"},"content":"                    + \"P.S. Maybe you could contact @dsja612 on github to request for more types of commands :)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":112}},{"path":"src/main/java/views/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package views;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import commands.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":" * Handles display of program output to user.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"public class UI {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"    private static final String DATE_FORMAT \u003d \"dd/mm/yyyy\";","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"    public void printInitMessage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"        System.out.println(\"Hello from\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"                + logo","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"                + \", your personal assistant.\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"    public void printExitMessage() {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"        System.out.println(\"I hope you\u0027ve managed to be productive today. Bye!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"    private String indentString(String s) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"        return \"\\n\\t\" + s;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"     * Displays a list of possible commands","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"     * to the user","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"    public void printCommands() {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"        System.out.println(","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"                \"Here is the list of available commands I can do:\"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"                        + indentString(\"bye\")","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"                        + indentString(\"todo [name]\")","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"                        + indentString(\"deadline [name] /by [\" + DATE_FORMAT + \"]\")","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"                        + indentString(\"event [name] /from [\" + DATE_FORMAT + \"] /to [\" + DATE_FORMAT + \"]\")","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"                        + indentString(\"list\")","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"                        + indentString(\"mark [index]\")","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"dsja612"},"content":"                        + indentString(\"unmark [index]\")","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"dsja612"},"content":"                        + indentString(\"delete [index]\")","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"dsja612"},"content":"                        + indentString(\"find [search term]\")","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"dsja612"},"content":"                        + indentString(\"bye\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"dsja612"},"content":"    public void printCommandOutput(Command c) {","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"dsja612"},"content":"        System.out.println(c.getCommandStatus());","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"dsja612"},"content":"    public void printErrorMessage(String e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"dsja612"},"content":"        System.out.println(e);","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dsja612":57}},{"path":"src/test/java/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    public void descriptionTest() throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"        String name \u003d \"should output this\";","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(\"10/12/2022 1020\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"        Deadline test \u003d new Deadline(name, date);","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"        assertEquals(\"[D][ ] should output this (by 1020, Dec 10 2022)\", test.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"    public void markTest() throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"        String name \u003d \"should output this\";","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(\"10/12/2022 1020\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"        Deadline test \u003d new Deadline(name, date);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"        test.markAsDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"        assertEquals(\"[D][X] should output this (by 1020, Dec 10 2022)\", test.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"        test.markAsUndone();","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"        assertEquals(\"[D][ ] should output this (by 1020, Dec 10 2022)\", test.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"deadline first deadline /by a random date","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"todo tasks.ToDo: make sure duke is working properly","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"event Learn how to use github! /from tomorrow /to also tomorrow","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"dsja612":4}}]
