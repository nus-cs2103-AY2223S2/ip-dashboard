[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"dsja612":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"repositories {","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"    mavenCentral()","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"dependencies {","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"dsja612"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"dsja612"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"dsja612"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"dsja612"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"dsja612"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"dsja612"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"dsja612"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"dsja612"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"dsja612"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"dsja612"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"dsja612"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"dsja612"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"dsja612"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":39,"dsja612":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"import duke.utils.Parser;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"import duke.views.UI;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":" * duke.Main driver class for duke.Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"public class Duke {","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"    public UI ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"    public Duke() throws IOException {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"        this.storage \u003d new Storage(tasks, \"/duke.txt\");","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"        storage.load();","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"     * Takes in input from the user, and passes it to Parser","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"     * to get the appropriate command and execute it.","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"            c.execute(ui, tasks, storage);","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"            return c.getCommandStatus();","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"dsja612":42}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"public class Launcher {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"dsja612":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import gui.DialogBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"import gui.MainWindow;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":" * A GUI for duke.Duke using FXML.","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"    public Main() throws IOException {}","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setStage(stage);","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().sendGreeting();","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"            stage.show();","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"dsja612":37}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.commands;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"import duke.views.UI;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"        this.commandStatus \u003d \"Exit command executed!\\n\"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"                + \"I hope you\u0027ve managed to be productive today. Bye!\";","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"            storage.save();","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"            throw new DukeException(\"Failed to save tasks to local storage...\");","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"        ui.printCommandOutput(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":25}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.commands;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import duke.views.UI;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":" * Abstract command class for all duke.Duke commands.","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"    /** The status of the command after execution. **/","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"    protected String commandStatus;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"     * Executes the respective command.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"     * @param ui User interface for displaying status of command","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"     * @param tasks List of tasks for commands that update it","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"     * @param storage Storing of tasks for commands that update it","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"     * @throws DukeException If execution encounters errors","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"    public abstract void execute(UI ui, TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"    public String getCommandStatus() {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"        return this.commandStatus;","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"    };","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":28}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.commands;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"import duke.views.UI;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    private String name;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"    public DeadlineCommand(String name, String deadline) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"            throw new DukeException(\"Please enter a valid date format in \\\"dd/mm/yyyy!\\\"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"        Deadline deadline \u003d new Deadline(this.name, this.deadline);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"        this.commandStatus \u003d \"Added deadline: \" + deadline + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"                + \"You now have \" + tasks.size() + \" task(s) in your list\";","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"        ui.printCommandOutput(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":34}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.commands;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import duke.views.UI;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"    private int index;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"            Task deletedTask \u003d tasks.delete(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"            this.commandStatus \u003d \"Removed task: \" + deletedTask + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"                    + \"You now have \" + tasks.size() + \" task(s) in your list.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"            ui.printCommandOutput(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"            throw new DukeException(\"Please provide a valid index!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":27}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.commands;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"import duke.views.UI;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    private String name;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"    public EventCommand(String name, String startDate, String endDate) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"            this.startDate \u003d LocalDateTime.parse(startDate, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"            this.endDate \u003d LocalDateTime.parse(endDate, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"            if (this.startDate.isAfter(this.endDate)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"                throw new DukeException(\"The starting date of this event is after its ending date!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"            throw new DukeException(\"Please enter a valid date format in \\\"dd/mm/yyyy!\\\"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"        Event event \u003d new Event(this.name, this.startDate, this.endDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"        tasks.addTask(event);","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"        this.commandStatus \u003d \"Added event: \" + event + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"                + \"You now have \" + tasks.size() + \" task(s) in your list\";","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"        ui.printCommandOutput(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":39}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.commands;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import duke.views.UI;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"    private String searchTerm;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"            this.commandStatus \u003d \"You have no tasks in your list! \\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"            TaskList temp \u003d tasks.find(searchTerm);","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"            ","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"            if (!temp.isEmpty()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"                this.commandStatus \u003d \"Here are the matching tasks in your list: \\n\" + temp;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"            } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"                this.commandStatus \u003d \"Unable to find any tasks with that description!\";","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"        ui.printCommandOutput(this);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"dsja612":31}},{"path":"src/main/java/duke/commands/FreeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.commands;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import duke.views.UI;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"public class FreeCommand extends Command {","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"        this.commandStatus \u003d tasks.findFreeDay();","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"        ui.printCommandOutput(this);","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"dsja612":15}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.commands;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import duke.views.UI;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"            this.commandStatus \u003d \"You currently have 0 tasks added. Add one now!\";","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"            this.commandStatus \u003d tasks.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"        ui.printCommandOutput(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":19}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.commands;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import duke.views.UI;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"    private int index;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"            tasks.markDone(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"            this.commandStatus \u003d \"Good job! I have marked this task as done! \\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"                    + \"\\t\" + tasks.get(index - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"            ui.printCommandOutput(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"            throw new DukeException(\"Please provide a valid index!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":26}},{"path":"src/main/java/duke/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.commands;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import duke.views.UI;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"    private String name;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"    public ToDoCommand(String name) {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"        ToDo todo \u003d new ToDo(name);","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"        this.commandStatus \u003d \"Added To-do: \" + todo + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"                + \"You now have \" + tasks.size() + \" task(s) in your list\";","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"        ui.printCommandOutput(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":24}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.commands;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import duke.views.UI;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"    private int index;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    public void execute(UI ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"            tasks.markUndone(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"            this.commandStatus \u003d \"Oof! I have marked this task as undone for you! \\n\" + tasks.get(index - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"            ui.printCommandOutput(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"            throw new DukeException(\"Please provide a valid index!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":25}},{"path":"src/main/java/duke/enums/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.enums;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":" * Types of commands that can be used.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"public enum CommandType {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"    FIND(\"find\"),","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    FREE(\"free\");","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"    private final String type;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"    CommandType(String type) {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"    public String getType() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"        return type;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"dsja612":26}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":" * General exception class for displaying error messages to users.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"     * Constructor for DukeException that stores an error message.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"     * @param message duke.Main body of error message","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"dsja612":15}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import java.io.File;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":" * Handles loading and saving of tasks to local storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"    private final Path dukeDataDir \u003d Path.of(System.getProperty(\"user.dir\") + \"/data\");","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"    private File dataFile;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"    private final String fileName;","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"    public Storage(TaskList tasks, String fileName) {","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"     * Loads tasks from a local file into a TaskList, creates one if one does not exist.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"     * @throws IOException If fail to load/create a storage file","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"    public void load() throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"            if (!Files.exists(dukeDataDir)) {","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"                Files.createDirectories(dukeDataDir);","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"dsja612"},"content":"            this.dataFile \u003d new File(this.dukeDataDir + fileName);","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"dsja612"},"content":"            boolean isCreated \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"dsja612"},"content":"            if (!this.dataFile.exists()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"dsja612"},"content":"                isCreated \u003d this.dataFile.createNewFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"dsja612"},"content":"            if (!isCreated) {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"dsja612"},"content":"                throw new DukeException(\"Failed to create storage file!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"dsja612"},"content":"            Scanner sc \u003d new Scanner(this.dataFile);","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"dsja612"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"dsja612"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"dsja612"},"content":"                parseLine(input, tasks);","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"dsja612"},"content":"        } catch (FileNotFoundException | DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"dsja612"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"dsja612"},"content":"     * Saves current TaskList into local file.","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"dsja612"},"content":"     * @throws IOException If fail to save tasks into file","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"dsja612"},"content":"    public void save() throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"dsja612"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.dataFile);","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"dsja612"},"content":"            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"dsja612"},"content":"                String line \u003d tasks.get(i).toSaveFormat();","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"dsja612"},"content":"                fileWriter.write(line + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"dsja612"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"dsja612"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"dsja612"},"content":"            System.out.println(\"Failed to save existing tasks...\");","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"dsja612"},"content":"     * Parse input from file into tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"dsja612"},"content":"     * @param input Line from local file","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"dsja612"},"content":"     * @param tasks TaskList to store tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"dsja612"},"content":"     * @throws DukeException If fail to create task from invalid input","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"dsja612"},"content":"    public static void parseLine(String input, TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"dsja612"},"content":"        String[] inputList \u003d input.split(\",\");","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"dsja612"},"content":"        String taskType \u003d inputList[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"dsja612"},"content":"        String taskName \u003d inputList[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"dsja612"},"content":"        String isDone \u003d inputList[2];","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"dsja612"},"content":"        Task newTask;","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"dsja612"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"dsja612"},"content":"        case \"T\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"dsja612"},"content":"            newTask \u003d new ToDo(taskName);","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"dsja612"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"dsja612"},"content":"        case \"D\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"dsja612"},"content":"            String by \u003d inputList[3];","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"dsja612"},"content":"            LocalDateTime deadline \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"dsja612"},"content":"            newTask \u003d new Deadline(taskName, deadline);","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"dsja612"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"dsja612"},"content":"        case \"E\": {","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"dsja612"},"content":"            String from \u003d inputList[3];","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"dsja612"},"content":"            String to \u003d inputList[4];","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"dsja612"},"content":"            LocalDateTime startDate \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"dsja612"},"content":"            LocalDateTime endDate \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"dsja612"},"content":"            newTask \u003d new Event(taskName, startDate, endDate);","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"dsja612"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"dsja612"},"content":"        default: {","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"dsja612"},"content":"            throw new DukeException(\"Unable to parse this line: \" + input);","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"dsja612"},"content":"        if (isDone.equals(\"X\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":121,"author":{"gitId":"dsja612"},"content":"            newTask.markAsDone();","lastModifiedDate":"2023-02-04"},{"lineNumber":122,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":123,"author":{"gitId":"dsja612"},"content":"        assert newTask !\u003d null : \"Cannot add a null task into a TaskList\";","lastModifiedDate":"2023-02-06"},{"lineNumber":124,"author":{"gitId":"dsja612"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-02-04"},{"lineNumber":125,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":126,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"dsja612":127}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":" * Class representing a Deadline task.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"    /** The deadline of this task. **/","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"     * Constructor for a Deadline task.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"     * @param name Name of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"     * @param deadline Deadline of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"    public Deadline(String name, LocalDateTime deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"        return this.deadline.format(DateTimeFormatter.ofPattern(\"HHmm, MMM d yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"        return String.format(\"D,%s,%s,%s\", this.name, this.getStatusIcon(), this.deadline);","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"        return \"[D]\" + super.toString() + \" (by \" + this.getDeadline() + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"dsja612":35}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import com.sun.prism.shader.AlphaOne_Color_AlphaTest_Loader;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":" * A class representing an Event task.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"    /** The starting date of this task. **/","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    /** The ending date of this task. **/","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"     * Constructor for an Event task.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"     * @param name Name of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"     * @param startDate Starting date of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"     * @param endDate Ending date of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"    public Event(String name, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"    public String getStartDate() {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"        return this.startDate.format(DateTimeFormatter.ofPattern(\"HHmm, MMM d yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"        return this.endDate.format(DateTimeFormatter.ofPattern(\"HHmm, MMM d yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"    public boolean hasDateClash(LocalDateTime searchDate) {","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"        return !(searchDate.isBefore(startDate) || searchDate.isAfter(endDate));","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"dsja612"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"dsja612"},"content":"        return String.format(\"E,%s,%s,%s,%s\", this.name, this.getStatusIcon(), this.startDate, this.endDate);","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"dsja612"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"dsja612"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"dsja612"},"content":"                + \" (Starts from \" + this.getStartDate() + \"; ends at \" + this.getEndDate() + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"dsja612":52}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":" * An abstract class to represent a Task object.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"    /** The name or description of this task. **/","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"    protected String name;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"    /** Represents if the task is marked as done or not. **/","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"     * Constructor for a task.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"     * @param name The name of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"     * Format when saving task to local storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"     * @return A formatted string","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"    public abstract String toSaveFormat();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"    public String getName() {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"        return this.name;","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"dsja612"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"dsja612"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.name;","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dsja612":48}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import java.time.Duration;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import java.util.List;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":" * A wrapper class for a list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"public class TaskList {","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"    /** ArrayList to store the tasks. **/","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"     * A Constructor for a TaskList object.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"     * @param task","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"        assert this.isEmpty() : \"Failed to add task\";","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"    public int size() {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"dsja612"},"content":"        assert index \u003c 0 : \"Index is invalid\";","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"dsja612"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"dsja612"},"content":"     * Deletes a task from this TaskList based on its index.","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"dsja612"},"content":"     * @param index Index of the task in 1-based indexing format","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"dsja612"},"content":"     * @return Task that is deleted","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"dsja612"},"content":"    public Task delete(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"dsja612"},"content":"        assert index \u003c 1 : \"Index is invalid\";","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"dsja612"},"content":"        return this.taskList.remove(index - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"dsja612"},"content":"     * Marks a task as done in this TaskList based on its index.","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"dsja612"},"content":"     * @param index Index of the task in 1-based indexing format","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"dsja612"},"content":"    public void markDone(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"dsja612"},"content":"        assert index \u003c 1 : \"Index is invalid\";","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"dsja612"},"content":"        Task task \u003d this.taskList.get(index - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"dsja612"},"content":"        task.markAsDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"dsja612"},"content":"     * Marks a task as not done in this TaskList based on its index.","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"dsja612"},"content":"     * @param index Index of the task in 1-based indexing format","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"dsja612"},"content":"    public void markUndone(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"dsja612"},"content":"        assert index \u003c 1 : \"Index is invalid\";","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"dsja612"},"content":"        Task task \u003d this.taskList.get(index - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"dsja612"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"dsja612"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"dsja612"},"content":"        return (this.size() \u003d\u003d 0);","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"dsja612"},"content":"    public TaskList find(String searchTerm) {","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"dsja612"},"content":"        List\u003cTask\u003e taskList \u003d this.taskList","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"dsja612"},"content":"                .stream()","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"dsja612"},"content":"                .filter(task -\u003e task.getName().contains(searchTerm))","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"dsja612"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"dsja612"},"content":"        return new TaskList(new ArrayList\u003c\u003e(taskList));","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"dsja612"},"content":"    public String findFreeDay() {","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"dsja612"},"content":"        LocalDateTime startingDate \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"dsja612"},"content":"        while (true) {","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"dsja612"},"content":"            LocalDateTime currentDate \u003d startingDate;","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"dsja612"},"content":"            List\u003cEvent\u003e taskList \u003d this.taskList","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"dsja612"},"content":"                    .stream()","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"dsja612"},"content":"                    .filter(task -\u003e task instanceof Event)","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"dsja612"},"content":"                    .map(Event.class::cast)","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"dsja612"},"content":"                    .filter(event -\u003e event.hasDateClash(currentDate))","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"dsja612"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"dsja612"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"dsja612"},"content":"                if (currentDate.equals(LocalDateTime.now())) {","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"dsja612"},"content":"                    return \"You are free as you have no pending events!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"dsja612"},"content":"                return \"Your closest free day is in \"","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"dsja612"},"content":"                        + startingDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"dsja612"},"content":"                        + \", \" + Duration.between(LocalDateTime.now(), currentDate).toDays() + \" days from now!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":109,"author":{"gitId":"dsja612"},"content":"            startingDate \u003d startingDate.plusDays(1);","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":112,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":113,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":114,"author":{"gitId":"dsja612"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":115,"author":{"gitId":"dsja612"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-16"},{"lineNumber":116,"author":{"gitId":"dsja612"},"content":"        result.append(\"List of Tasks: \\n\");","lastModifiedDate":"2023-01-16"},{"lineNumber":117,"author":{"gitId":"dsja612"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-16"},{"lineNumber":118,"author":{"gitId":"dsja612"},"content":"            result.append((i + 1))","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"dsja612"},"content":"                    .append(\". \")","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"dsja612"},"content":"                    .append(taskList.get(i).toString())","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"dsja612"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":123,"author":{"gitId":"dsja612"},"content":"        return result.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":124,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":125,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"dsja612":125}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":" * A class representing a ToDo task.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"     * Constructor for a ToDo task.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"     * @param name Name of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"        return String.format(\"T,%s,%s\", this.name, this.getStatusIcon());","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"dsja612":24}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.utils;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import duke.commands.*;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import duke.enums.CommandType;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":" * Parse user input into commands for duke.Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"public class Parser {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"     * Parses user input into a command.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"     * @param input User input","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"     * @return Command corresponding to user input","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"     * @throws DukeException If input is invalid for any command","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"            String[] inputList \u003d input.split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"            CommandType commandType \u003d CommandType.valueOf(inputList[0].toUpperCase().strip());","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"            boolean tooFewArgs \u003d inputList.length \u003c\u003d 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"            switch (commandType) {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"            case LIST: {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"                return new ListCommand();","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"            case DEADLINE: {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"                boolean missingByDate \u003d !input.contains(\" /by \");","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"                if (tooFewArgs) {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"                    throw new DukeException(\"Please give a name for your deadline!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"                } else if (missingByDate) {","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"                    throw new DukeException(\"Please give a date/time for your deadline!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"                String[] parseCommand \u003d input.split(\"/by\"); // Split command string into name and date","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"                String name \u003d parseCommand[0].replaceFirst(\"deadline \", \"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"                String deadline \u003d parseCommand[1].strip();","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"                return new DeadlineCommand(name, deadline);","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"dsja612"},"content":"            case TODO: {","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"dsja612"},"content":"                if (tooFewArgs) {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"dsja612"},"content":"                    throw new DukeException(\"Please give a name for your ToDo task!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"dsja612"},"content":"                String name \u003d input.replaceFirst(\"todo \", \"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"dsja612"},"content":"                return new ToDoCommand(name);","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"dsja612"},"content":"            case EVENT: {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"dsja612"},"content":"                boolean missingFromDate \u003d !input.contains(\" /from \");","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"dsja612"},"content":"                boolean missingToDate \u003d !input.contains(\" /to \");","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"dsja612"},"content":"                if (tooFewArgs) {","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"dsja612"},"content":"                    throw new DukeException(\"Please give a name for your event!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"dsja612"},"content":"                } else if (missingFromDate) {","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"dsja612"},"content":"                    throw new DukeException(\"Please give a starting date/time for your event!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"dsja612"},"content":"                } else if (missingToDate) {","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"dsja612"},"content":"                    throw new DukeException(\"Please give an ending date/time for your event!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"dsja612"},"content":"                String[] parseCommand \u003d input.split(\"/from\"); // Split command string into description and dates","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"dsja612"},"content":"                String name \u003d parseCommand[0].replaceFirst(\"event \", \"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"dsja612"},"content":"                String[] splitDates \u003d parseCommand[1].split(\"/to\");","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"dsja612"},"content":"                String from \u003d splitDates[0].strip();","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"dsja612"},"content":"                String by \u003d splitDates[1].strip();","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"dsja612"},"content":"                return new EventCommand(name, from, by);","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"dsja612"},"content":"            case MARK: {","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"dsja612"},"content":"                if (tooFewArgs) {","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"dsja612"},"content":"                    throw new DukeException(\"Please provide the index of the task!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"dsja612"},"content":"                int index \u003d Integer.parseInt(inputList[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"dsja612"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"dsja612"},"content":"            case UNMARK: {","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"dsja612"},"content":"                if (tooFewArgs) {","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"dsja612"},"content":"                    throw new DukeException(\"Please provide the index of the task!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"dsja612"},"content":"                int index \u003d Integer.parseInt(inputList[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"dsja612"},"content":"                return new UnmarkCommand(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"dsja612"},"content":"            case DELETE: {","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"dsja612"},"content":"                if (tooFewArgs) {","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"dsja612"},"content":"                    throw new DukeException(\"Please provide the index of the task!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"dsja612"},"content":"                int index \u003d Integer.parseInt(inputList[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"dsja612"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"dsja612"},"content":"            case FIND: {","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"dsja612"},"content":"                if (tooFewArgs) {","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"dsja612"},"content":"                    throw new DukeException(\"Please specify a search term!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"dsja612"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"dsja612"},"content":"                String searchTerm \u003d input.replaceFirst(\"find \", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"dsja612"},"content":"                return new FindCommand(searchTerm);","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"dsja612"},"content":"            case BYE: {","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"dsja612"},"content":"                return new ByeCommand();","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"dsja612"},"content":"            case FREE: {","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"dsja612"},"content":"                return new FreeCommand();","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"dsja612"},"content":"            default: {","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"dsja612"},"content":"                throw new AssertionError(commandType); // commandType enums should cover all possible commands","lastModifiedDate":"2023-02-06"},{"lineNumber":108,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"dsja612"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"dsja612"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"dsja612"},"content":"            throw new DukeException(\"Sorry, that command is not recognised. \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"dsja612"},"content":"                    + \"P.S. Maybe you could contact @dsja612 on github to request for more types of commands :)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":115}},{"path":"src/main/java/duke/views/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package duke.views;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":" * Handles display of program output to user.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"public class UI {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"    private static final String DATE_FORMAT \u003d \"dd/mm/yyyy HHmm\";","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"    public String getInitMessage() {","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"        return \"Hello. I\u0027m Duke, your personal assistant.\\n\"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"                + \"How may I help you today?\";","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"    private String newlineAndIndentString(String s) {","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"        return \"\\n\\t\" + s;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"     * Displays a list of possible commands","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"     * to the user","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"    public String getAvailableCommands() {","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"        return \"Here is the list of available commands I can do:\"","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"                        + newlineAndIndentString(\"bye\")","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"                        + newlineAndIndentString(\"todo [name]\")","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"                        + newlineAndIndentString(\"deadline [name] /by [\" + DATE_FORMAT + \"]\")","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"                        + newlineAndIndentString(\"event [name] /from [\" + DATE_FORMAT + \"] /to [\" + DATE_FORMAT + \"]\")","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"                        + newlineAndIndentString(\"list\")","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"                        + newlineAndIndentString(\"mark [index]\")","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"                        + newlineAndIndentString(\"unmark [index]\")","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"                        + newlineAndIndentString(\"delete [index]\")","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"                        + newlineAndIndentString(\"find [search term]\")","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"                        + newlineAndIndentString(\"free\")","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"                        + newlineAndIndentString(\"bye\");","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"    public void printCommandOutput(Command c) {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"        System.out.println(c.getCommandStatus());","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"dsja612":43}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package gui;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"dsja612"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"dsja612"},"content":"    private void flip() {","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"dsja612"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"dsja612"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"dsja612"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"dsja612"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"dsja612"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"dsja612"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"dsja612"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"dsja612"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"dsja612"},"content":"        db.flip();","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"dsja612"},"content":"        return db;","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"dsja612":61}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package gui;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":" * Controller for gui.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"    private Stage stage;","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"dsja612"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"dsja612"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"dsja612"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"dsja612"},"content":"    public void sendGreeting() {","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"dsja612"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"dsja612"},"content":"                DialogBox.getDukeDialog(duke.ui.getInitMessage(), dukeImage),","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"dsja612"},"content":"                DialogBox.getDukeDialog(duke.ui.getAvailableCommands(), dukeImage)","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"dsja612"},"content":"        );","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"dsja612"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"dsja612"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"dsja612"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"dsja612"},"content":"     * Creates two dialog boxes, one is user input and the other is duke.Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"dsja612"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"dsja612"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"dsja612"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"dsja612"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"dsja612"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"dsja612"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"dsja612"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"dsja612"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"dsja612"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"dsja612"},"content":"        );","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"dsja612"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"dsja612"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"dsja612"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"dsja612"},"content":"            delay.setOnFinished( event -\u003e stage.close() );","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"dsja612"},"content":"            delay.play();","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"dsja612"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"dsja612"},"content":"    public void setStage(Stage stage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"dsja612"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"dsja612":74}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"dsja612":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"518.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"435.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"439.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"511.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"511.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"dsja612":19}},{"path":"src/test/java/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"package tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"dsja612"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"dsja612"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"dsja612"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"dsja612"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"dsja612"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"dsja612"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"dsja612"},"content":"    public void descriptionTest() throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"dsja612"},"content":"        String name \u003d \"should output this\";","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"dsja612"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(\"10/12/2022 1020\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"        Deadline test \u003d new Deadline(name, date);","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"dsja612"},"content":"        assertEquals(\"[D][ ] should output this (by 1020, Dec 10 2022)\", test.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"dsja612"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"dsja612"},"content":"    public void markTest() throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"dsja612"},"content":"        String name \u003d \"should output this\";","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"dsja612"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(\"10/12/2022 1020\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"dsja612"},"content":"        Deadline test \u003d new Deadline(name, date);","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"dsja612"},"content":"        test.markAsDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"dsja612"},"content":"        assertEquals(\"[D][X] should output this (by 1020, Dec 10 2022)\", test.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"dsja612"},"content":"        test.markAsUndone();","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"dsja612"},"content":"        assertEquals(\"[D][ ] should output this (by 1020, Dec 10 2022)\", test.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"dsja612"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"dsja612"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"dsja612"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"dsja612":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dsja612"},"content":"deadline first deadline /by a random date","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"dsja612"},"content":"todo tasks.ToDo: make sure duke is working properly","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"dsja612"},"content":"event Learn how to use github! /from tomorrow /to also tomorrow","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"dsja612"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"dsja612":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"dsja612"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"dsja612":1}}]
