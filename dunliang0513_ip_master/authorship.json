[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"# Duke.Duke project template","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dunliang0513":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"//javafx {","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"//    version \u003d \"11\"","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"//    modules \u003d [ \u0027javafx.base\u0027, \u0027javafx.fxml\u0027, \u0027javafx.controls\u0027, \u0027javafx.graphics\u0027 ]","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"//}","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"checkstyle {","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"//    implementation \u0027org.openjfx:javafx-controls:11\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"//    implementation \u0027org.openjfx:javafx-fxml:11\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"//    implementation \u0027org.openjfx:javafx-base:11\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"//    implementation \u0027org.openjfx:javafx-graphics:11\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"dunliang0513"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"dunliang0513"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"dunliang0513"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"dunliang0513"},"content":"    mainClassName \u003d \"Duke.gui.Main\"","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dunliang0513":33,"-":38}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.DukeMainExceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import Duke.command.Command;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.CommandNotFoundException;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"     * Constructor of Duke.Duke class.","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"     * @param filePath The path that can access to the file.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"    public Duke(String filePath) throws IOException {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"        parser \u003d new Parser(taskList, storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"            taskList \u003d storage.loadTasks();","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"        } catch (IOException | DukeMainExceptions errMsg) {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"dunliang0513"},"content":"            System.out.println(errMsg);","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"dunliang0513"},"content":"     * Execute the main program.","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"dunliang0513"},"content":"//        ui.greet();","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"dunliang0513"},"content":"        String input;","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"dunliang0513"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":"        input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"dunliang0513"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"dunliang0513"},"content":"//            parser.parse(input);","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"dunliang0513"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"dunliang0513"},"content":"            command.execute(this.taskList, this.storage, this.ui);","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"dunliang0513"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"dunliang0513"},"content":"        ui.bye();","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"dunliang0513"},"content":"    public static void main(String[] args) throws CommandNotFoundException, IOException {","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"dunliang0513"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"dunliang0513"},"content":"    public String getResponse(String input) throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"dunliang0513"},"content":"        if (this.taskList \u003d\u003d null) {","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"dunliang0513"},"content":"            try {","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"dunliang0513"},"content":"                taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"dunliang0513"},"content":"            } catch (DukeMainExceptions exception) {","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"dunliang0513"},"content":"                System.out.println(exception.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"dunliang0513"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"dunliang0513"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"dunliang0513"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"dunliang0513"},"content":"            return command.execute(taskList, storage, ui);","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"dunliang0513"},"content":"        } catch (DukeMainExceptions exception) {","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"dunliang0513"},"content":"            return exception.toString();","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dunliang0513":75,"-":3}},{"path":"src/main/java/Duke/Exceptions/CommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.Exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"public class CommandNotFoundException extends DukeMainExceptions{","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"    public CommandNotFoundException(String errorMsg) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"        super(errorMsg);","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"dunliang0513":7}},{"path":"src/main/java/Duke/Exceptions/DukeMainExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.Exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"public class DukeMainExceptions extends RuntimeException{","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"    public DukeMainExceptions(String errorMsg) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"        super(errorMsg);","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"        return \"OOPS!!! \" + super.getMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"dunliang0513":12}},{"path":"src/main/java/Duke/Exceptions/FileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.Exceptions;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"public class FileException extends DukeMainExceptions {","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"    private static final String ERRORMSG \u003d \"There is an error in importing the file\";","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"    public FileException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"        super(ERRORMSG);","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"    public String toString() {","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"        return ERRORMSG;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"dunliang0513":13}},{"path":"src/main/java/Duke/Exceptions/InvalidDateFormatExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.Exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"public class InvalidDateFormatExceptions extends DukeMainExceptions{","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"    public InvalidDateFormatExceptions(String errorMsg) {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"        super(errorMsg);","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"dunliang0513":7}},{"path":"src/main/java/Duke/Exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.Exceptions;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"public class InvalidIndexException extends DukeMainExceptions {","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"    private static final String ERRORMSG \u003d \"Sorry, the index is out of bounds!\";","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"    private int maxIndex;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"        super(ERRORMSG);","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"    public InvalidIndexException(int maxIndex) {","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"        super(ERRORMSG);","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"        this.maxIndex \u003d maxIndex;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"    public String toString() {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"        String result \u003d ERRORMSG;","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"        if (this.maxIndex !\u003d 0) {","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"            result +\u003d \"\\nMaximum value: \" + this.maxIndex;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"        return result;","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"dunliang0513":28}},{"path":"src/main/java/Duke/Exceptions/NoDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.Exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"public class NoDeadlineException extends DukeMainExceptions {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"    public NoDeadlineException(String errorMsg) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"        super(errorMsg);","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"dunliang0513":7}},{"path":"src/main/java/Duke/Exceptions/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.Exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"public class NoDescriptionException extends DukeMainExceptions{","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"    public NoDescriptionException(String errorMsg) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"        super(errorMsg);","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"dunliang0513":7}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.InvalidIndexException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.CommandNotFoundException;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"import Duke.command.*;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"    private static TaskList t;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"     * Constructor of the parser class.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"     * @param tasks The task list that is stored inside the file.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"     * @param storage","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"    public Parser(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"        this.t \u003d tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"     * Parses the input by the users to corresponding commands","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"     * @param input The Duke.command inserted by the users.","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"     * @throws CommandNotFoundException","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"    public static Command parse(String input) throws CommandNotFoundException, IOException {","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"        assert (input !\u003d null) : \"The Duke.command cannot be null.\";","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"dunliang0513"},"content":"        String[] splitCommand \u003d input.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"dunliang0513"},"content":"        String command \u003d splitCommand[0].toUpperCase();","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"        String splitDescription;","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"        Command cmd;","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"        switch (command) {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"dunliang0513"},"content":"        case \"BYE\":","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"            cmd \u003d new ExitCommand();","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"dunliang0513"},"content":"        case \"LIST\":","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"dunliang0513"},"content":"            t.list();","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"dunliang0513"},"content":"            cmd \u003d new ListCommand();","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"dunliang0513"},"content":"        case \"MARK\":","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"dunliang0513"},"content":"            t.mark(Integer.parseInt(splitCommand[1]));","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"dunliang0513"},"content":"            cmd \u003d new MarkCommand(Integer.parseInt(splitCommand[1]));","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"dunliang0513"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"dunliang0513"},"content":"        case \"UNMARK\":","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"dunliang0513"},"content":"            t.unmark(Integer.parseInt(splitCommand[1]));","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"dunliang0513"},"content":"            cmd \u003d new UnmarkCommand(Integer.parseInt(splitCommand[1]));","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"dunliang0513"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"dunliang0513"},"content":"        case \"DELETE\":","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"dunliang0513"},"content":"            t.delete(Integer.parseInt(splitCommand[1]));","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"dunliang0513"},"content":"            try {","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"dunliang0513"},"content":"                int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"dunliang0513"},"content":"                cmd \u003d new DeleteCommand(index);","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"dunliang0513"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"dunliang0513"},"content":"                throw new InvalidIndexException();","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"dunliang0513"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"dunliang0513"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"dunliang0513"},"content":"        case \"TODO\":","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"dunliang0513"},"content":"            splitDescription \u003d input.split(\" \", 2).length \u003d\u003d 2","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"dunliang0513"},"content":"                    ? input.split(\" \", 2)[1]","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"dunliang0513"},"content":"                    : \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"dunliang0513"},"content":"            t.addTodo(splitDescription);","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"dunliang0513"},"content":"            cmd \u003d new AddTodoCommand(splitDescription);","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"dunliang0513"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"dunliang0513"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"dunliang0513"},"content":"            splitDescription \u003d input.split(\" \", 2).length \u003d\u003d 2","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"dunliang0513"},"content":"                    ? input.split(\" \", 2)[1]","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"dunliang0513"},"content":"                    : \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"dunliang0513"},"content":"            t.addDeadline(splitDescription);","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"dunliang0513"},"content":"            cmd \u003d new AddDeadlineCommand(splitDescription);","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"dunliang0513"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"dunliang0513"},"content":"        case \"EVENT\":","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"dunliang0513"},"content":"            splitDescription \u003d input.split(\" \", 2).length \u003d\u003d 2","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"dunliang0513"},"content":"                    ? input.split(\" \", 2)[1]","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"dunliang0513"},"content":"                    : \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"dunliang0513"},"content":"            t.addEvent(splitDescription);","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"dunliang0513"},"content":"            cmd \u003d new AddEventCommand(splitDescription);","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"dunliang0513"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"dunliang0513"},"content":"        case \"FIND\":","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"dunliang0513"},"content":"            splitDescription \u003d input.split(\" \", 2).length \u003d\u003d 2","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"dunliang0513"},"content":"                    ? input.split(\" \", 2)[1]","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"dunliang0513"},"content":"                    : \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"dunliang0513"},"content":"            ArrayList\u003cTask\u003e filteredTasks \u003d t.findRelevantTasks(splitDescription);","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"dunliang0513"},"content":"            System.out.println(filteredTasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"dunliang0513"},"content":"            cmd \u003d new FindCommand(splitDescription);","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"dunliang0513"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"dunliang0513"},"content":"        default:","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"dunliang0513"},"content":"            throw new CommandNotFoundException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"dunliang0513"},"content":"//        storage.storeTasks();","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"dunliang0513"},"content":"        return cmd;","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"dunliang0513":100}},{"path":"src/main/java/Duke/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import java.io.*;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import Duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.DukeMainExceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.FileException;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"public class Storage {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"    protected File file;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"    protected String filePath;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"    protected TaskList tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"    protected BufferedReader content;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"    protected FileReader fileReader;","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"     * The constructor of Storage class. Use to create storage instance.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"     * @param filePath The path that directed to the location of the file.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"    public Storage(String filePath) throws  IOException{","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"        // Check whether the file already exist","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"        if (this.file.exists() \u003d\u003d false) {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"            new File(\"data\").mkdir();","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"            this.file.createNewFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"    public BufferedReader load() {","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"        assert this.fileReader !\u003d null \u0026\u0026 this.filePath !\u003d null \u0026\u0026 this.file !\u003d null;","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"dunliang0513"},"content":"        if (this.content !\u003d null) {","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"dunliang0513"},"content":"            return content;","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"        this.content \u003d new BufferedReader(this.fileReader);","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"        return this.content;","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"dunliang0513"},"content":"     * Load the tasks that has been stored inside the file.","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"dunliang0513"},"content":"     * @return Return the task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"dunliang0513"},"content":"     * @throws DukeMainExceptions","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"dunliang0513"},"content":"    public TaskList loadTasks() throws IOException, DukeMainExceptions {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"dunliang0513"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"dunliang0513"},"content":"        Scanner scanner \u003d new Scanner(this.file);","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"dunliang0513"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"dunliang0513"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"dunliang0513"},"content":"            String[] splitInput \u003d input.split(\" \\\\| \");","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"dunliang0513"},"content":"            String splitDescription;","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"dunliang0513"},"content":"            Task task;","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"dunliang0513"},"content":"            if (splitInput[0].equals(\"T\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"dunliang0513"},"content":"                splitDescription \u003d input.split(\" \", 2).length \u003d\u003d 2","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"dunliang0513"},"content":"                        ? input.split(\" \", 2)[1]","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"dunliang0513"},"content":"                        : \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"dunliang0513"},"content":"                task \u003d tasks.addTodo(splitDescription);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"dunliang0513"},"content":"                if  (splitInput[1].equals(\"X\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"dunliang0513"},"content":"                    task.markDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"dunliang0513"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"dunliang0513"},"content":"            } else if (splitInput[0].equals(\"E\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"dunliang0513"},"content":"                splitDescription \u003d input.split(\" \", 2).length \u003d\u003d 2","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"dunliang0513"},"content":"                        ? input.split(\" \", 2)[1]","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"dunliang0513"},"content":"                        : \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"dunliang0513"},"content":"                task \u003d tasks.addEvent(splitDescription);","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"dunliang0513"},"content":"                if  (splitInput[1].equals(\"X\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"dunliang0513"},"content":"                    task.markDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"dunliang0513"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"dunliang0513"},"content":"            } else if (splitInput[0].equals(\"D\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"dunliang0513"},"content":"                splitDescription \u003d input.split(\" \", 2).length \u003d\u003d 2","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"dunliang0513"},"content":"                        ? input.split(\" \", 2)[1]","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"dunliang0513"},"content":"                        : \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"dunliang0513"},"content":"                task \u003d tasks.addDeadline(splitDescription);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"dunliang0513"},"content":"                if  (splitInput[1].equals(\"X\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"dunliang0513"},"content":"                    task.markDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"dunliang0513"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"dunliang0513"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"dunliang0513"},"content":"                throw new DukeMainExceptions(\"Unknown task type. Please check again.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"dunliang0513"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"dunliang0513"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"dunliang0513"},"content":"     * Store the tasks into the specific file.","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"dunliang0513"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"dunliang0513"},"content":"    public void storeTasks() throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"dunliang0513"},"content":"        String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"dunliang0513"},"content":"        File file  \u003d new File(filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"dunliang0513"},"content":"        final FileWriter fw \u003d new FileWriter(file.getAbsoluteFile());","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"dunliang0513"},"content":"        BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"dunliang0513"},"content":"        for (int i \u003d 0; i \u003c this.tasks.getSize(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"dunliang0513"},"content":"            Task currTask \u003d this.tasks.getTask(i);","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"dunliang0513"},"content":"            System.out.println(currTask.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"dunliang0513"},"content":"            bw.append(currTask.printTask());","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"dunliang0513"},"content":"        bw.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"dunliang0513"},"content":"    public void store(TaskList tasks) throws FileException {","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"dunliang0513"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"dunliang0513"},"content":"            this.file.createNewFile();","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"dunliang0513"},"content":"            FileWriter writer \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"dunliang0513"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"dunliang0513"},"content":"                Task task \u003d tasks.getTask(i);","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"dunliang0513"},"content":"                writer.write(task.toString() + \"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"dunliang0513"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"dunliang0513"},"content":"            writer.close();","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"dunliang0513"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"dunliang0513"},"content":"            throw new FileException();","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"dunliang0513":124}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import Duke.Tasks.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import Duke.Tasks.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import Duke.Tasks.Todo;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.CommandNotFoundException;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.FileException;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.NoDeadlineException;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.NoDescriptionException;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"public class TaskList {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"    private static int index;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"    private static final String LINES \u003d \"\\t--------------------------\\n\";","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"     * The constructor that uses to create a TaskList instance.","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"        this.index \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"    public TaskList(BufferedReader strTasks) throws FileException, CommandNotFoundException {","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"        super();","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"        String str;","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"dunliang0513"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"dunliang0513"},"content":"            while ((str \u003d strTasks.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"                this.taskList.add(Task.strToTask(str));","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"dunliang0513"},"content":"            throw new FileException();","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"dunliang0513"},"content":"     * Return the size of the task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"dunliang0513"},"content":"     * @return The size of the list.","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"dunliang0513"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"dunliang0513"},"content":"        return this.index;","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"dunliang0513"},"content":"     * Get the specific task correspond to the given index.","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"dunliang0513"},"content":"     * @param index The index of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"dunliang0513"},"content":"     * @return Return the task of the given index.","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"dunliang0513"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"dunliang0513"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"dunliang0513"},"content":"    public void addToNewList(Task task) {","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"dunliang0513"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"dunliang0513"},"content":"    public String toFormattedString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"dunliang0513"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"dunliang0513"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"dunliang0513"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"dunliang0513"},"content":"            result.append(count++)","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"dunliang0513"},"content":"                    .append(\". \")","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"dunliang0513"},"content":"                    .append(task)","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"dunliang0513"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"dunliang0513"},"content":"        return result.toString();","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"dunliang0513"},"content":"     * Delete the task according to the input index.","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"dunliang0513"},"content":"     * @param input The index of the task that need to be deleted.","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"dunliang0513"},"content":"    public String  delete(int input) {","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"dunliang0513"},"content":"        Task currTask \u003d this.taskList.get(input - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"dunliang0513"},"content":"        this.taskList.remove(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"dunliang0513"},"content":"        this.index--;","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"dunliang0513"},"content":"        String output \u003d String.format(LINES +","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"dunliang0513"},"content":"                \"\\tNoted. I\u0027ve removed this task:\" +","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"dunliang0513"},"content":"                \"\\t\\t\" + currTask.toString() +","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"dunliang0513"},"content":"                \"\\tNow you have \" + this.index + \" tasks in the list.\" +","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"dunliang0513"},"content":"                LINES);","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t\\t\" + currTask.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\tNow you have \" + this.index + \" tasks in the list.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"dunliang0513"},"content":"        System.out.println(output);","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"dunliang0513"},"content":"        return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"dunliang0513"},"content":"     * Add the task of Todo type into the task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"dunliang0513"},"content":"     * @param input A Duke.command by the user which contains task description.","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"dunliang0513"},"content":"     * @throws NoDescriptionException Return error message if there is no task description.","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"dunliang0513"},"content":"    public Task addTodo(String input) throws NoDescriptionException {","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"dunliang0513"},"content":"        if (input.trim().equals(\"\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"dunliang0513"},"content":"            throw new NoDescriptionException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"dunliang0513"},"content":"        Task newTodo \u003d new Todo(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"dunliang0513"},"content":"//        this.taskList.add(newTodo);","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"dunliang0513"},"content":"        this.index++;","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"dunliang0513"},"content":"        String output \u003d String.format(LINES +","lastModifiedDate":"2023-02-15"},{"lineNumber":118,"author":{"gitId":"dunliang0513"},"content":"                \"\\tGot it. I\u0027ve added this task:\" +","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"dunliang0513"},"content":"                \"\\t\\t\" + newTodo.toString() +","lastModifiedDate":"2023-02-15"},{"lineNumber":120,"author":{"gitId":"dunliang0513"},"content":"                \"\\tNow you have \" + this.index  + \" tasks in the list.\" +","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"dunliang0513"},"content":"                LINES);","lastModifiedDate":"2023-02-15"},{"lineNumber":122,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(output);","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-02-15"},{"lineNumber":124,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-15"},{"lineNumber":125,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t\\t\" + newTodo.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":126,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\tNow you have \" + this.index + \" tasks in the list.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":127,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-02-15"},{"lineNumber":128,"author":{"gitId":"dunliang0513"},"content":"        return newTodo;","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"dunliang0513"},"content":"     * Add tasks of Deadline type into the task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"dunliang0513"},"content":"     * @return Task Return the created task.","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"dunliang0513"},"content":"     * @param input A Duke.command by the user which contains task description and due date.","lastModifiedDate":"2023-02-15"},{"lineNumber":136,"author":{"gitId":"dunliang0513"},"content":"     * @throws NoDescriptionException Return error message if there is no task description.","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"dunliang0513"},"content":"     * @throws NoDeadlineException Return error message if there is no specified deadline.","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"dunliang0513"},"content":"    public Task addDeadline(String input) throws NoDescriptionException,","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"dunliang0513"},"content":"            NoDeadlineException {","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"dunliang0513"},"content":"        String[] splitDesWithBy \u003d input.split(\" /by \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"dunliang0513"},"content":"        String description \u003d splitDesWithBy[0].trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":143,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"dunliang0513"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"dunliang0513"},"content":"            throw new NoDescriptionException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"dunliang0513"},"content":"        } else if (splitDesWithBy.length !\u003d 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":147,"author":{"gitId":"dunliang0513"},"content":"            throw new NoDeadlineException(\"The due date cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":149,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":150,"author":{"gitId":"dunliang0513"},"content":"        String dueDate \u003d splitDesWithBy[1].trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":152,"author":{"gitId":"dunliang0513"},"content":"        Task newDeadline \u003d new Deadline(description, dueDate);","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"dunliang0513"},"content":"        this.taskList.add(newDeadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":154,"author":{"gitId":"dunliang0513"},"content":"        this.index++;","lastModifiedDate":"2023-01-31"},{"lineNumber":155,"author":{"gitId":"dunliang0513"},"content":"//        String output \u003d String.format(LINES +","lastModifiedDate":"2023-02-19"},{"lineNumber":156,"author":{"gitId":"dunliang0513"},"content":"//                \"\\tGot it. I\u0027ve added this task:\" +","lastModifiedDate":"2023-02-19"},{"lineNumber":157,"author":{"gitId":"dunliang0513"},"content":"//                \"\\t\\t\" + newDeadline.toString() +","lastModifiedDate":"2023-02-19"},{"lineNumber":158,"author":{"gitId":"dunliang0513"},"content":"//                \"\\tNow you have \" + this.index  + \" tasks in the list.\" +","lastModifiedDate":"2023-02-19"},{"lineNumber":159,"author":{"gitId":"dunliang0513"},"content":"//                LINES);","lastModifiedDate":"2023-02-19"},{"lineNumber":160,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(output);","lastModifiedDate":"2023-02-19"},{"lineNumber":161,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-02-15"},{"lineNumber":162,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-15"},{"lineNumber":163,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t\\t\" + newDeadline.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":164,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\tNow you have \" + this.index  + \" tasks in the list.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":165,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-02-15"},{"lineNumber":166,"author":{"gitId":"dunliang0513"},"content":"        return newDeadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":167,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":168,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":169,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"dunliang0513"},"content":"     * Add task of Event type into the task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":171,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":172,"author":{"gitId":"dunliang0513"},"content":"     * @param input A Duke command by the user which contains task description, event starting","lastModifiedDate":"2023-02-19"},{"lineNumber":173,"author":{"gitId":"dunliang0513"},"content":"     *              date and event ending date.","lastModifiedDate":"2023-01-31"},{"lineNumber":174,"author":{"gitId":"dunliang0513"},"content":"     * @throws NoDeadlineException Return error message if there is no specified starting time or ending time.","lastModifiedDate":"2023-01-31"},{"lineNumber":175,"author":{"gitId":"dunliang0513"},"content":"     * @throws NoDescriptionException Return error message if there is no task description.","lastModifiedDate":"2023-01-31"},{"lineNumber":176,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":177,"author":{"gitId":"dunliang0513"},"content":"    public Task addEvent(String input) throws NoDeadlineException,","lastModifiedDate":"2023-01-31"},{"lineNumber":178,"author":{"gitId":"dunliang0513"},"content":"            NoDescriptionException{","lastModifiedDate":"2023-01-31"},{"lineNumber":179,"author":{"gitId":"dunliang0513"},"content":"        String[] splitDesWithFrom \u003d input.split(\" /from \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":180,"author":{"gitId":"dunliang0513"},"content":"        String description \u003d splitDesWithFrom[0].trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":181,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":182,"author":{"gitId":"dunliang0513"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":183,"author":{"gitId":"dunliang0513"},"content":"            throw new NoDescriptionException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":184,"author":{"gitId":"dunliang0513"},"content":"        } else if (splitDesWithFrom.length !\u003d 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":185,"author":{"gitId":"dunliang0513"},"content":"            throw new NoDeadlineException(\"The starting time cannot be empty\");","lastModifiedDate":"2023-01-31"},{"lineNumber":186,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":187,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":188,"author":{"gitId":"dunliang0513"},"content":"        String[] period \u003d splitDesWithFrom[1].split(\" /to \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":189,"author":{"gitId":"dunliang0513"},"content":"        String startingTime \u003d period[0].trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":190,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":191,"author":{"gitId":"dunliang0513"},"content":"        if (startingTime.equals(\"\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":192,"author":{"gitId":"dunliang0513"},"content":"            throw new NoDeadlineException(\"The starting time cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":193,"author":{"gitId":"dunliang0513"},"content":"        } else if (period.length !\u003d 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":194,"author":{"gitId":"dunliang0513"},"content":"            throw new NoDeadlineException(\"The ending time cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":195,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":196,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":197,"author":{"gitId":"dunliang0513"},"content":"        String endingTime \u003d period[1].trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":198,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":199,"author":{"gitId":"dunliang0513"},"content":"        Task newEvent \u003d new Event(description, startingTime, endingTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":200,"author":{"gitId":"dunliang0513"},"content":"        this.taskList.add(newEvent);","lastModifiedDate":"2023-01-31"},{"lineNumber":201,"author":{"gitId":"dunliang0513"},"content":"        this.index++;","lastModifiedDate":"2023-01-31"},{"lineNumber":202,"author":{"gitId":"dunliang0513"},"content":"        String output \u003d String.format(LINES +","lastModifiedDate":"2023-02-15"},{"lineNumber":203,"author":{"gitId":"dunliang0513"},"content":"                \"\\tGot it. I\u0027ve added this task:\" +","lastModifiedDate":"2023-02-15"},{"lineNumber":204,"author":{"gitId":"dunliang0513"},"content":"                \"\\t\\t\" + newEvent.toString() +","lastModifiedDate":"2023-02-15"},{"lineNumber":205,"author":{"gitId":"dunliang0513"},"content":"                \"\\tNow you have \" + this.index  + \" tasks in the list.\" +","lastModifiedDate":"2023-02-15"},{"lineNumber":206,"author":{"gitId":"dunliang0513"},"content":"                LINES);","lastModifiedDate":"2023-02-15"},{"lineNumber":207,"author":{"gitId":"dunliang0513"},"content":"        System.out.println(output);","lastModifiedDate":"2023-02-15"},{"lineNumber":208,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-02-15"},{"lineNumber":209,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-15"},{"lineNumber":210,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t\\t\" + newEvent.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":211,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\tNow you have \" + this.index + \" tasks in the list.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":212,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-02-15"},{"lineNumber":213,"author":{"gitId":"dunliang0513"},"content":"        return newEvent;","lastModifiedDate":"2023-01-31"},{"lineNumber":214,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":215,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":216,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":217,"author":{"gitId":"dunliang0513"},"content":"     * Print out the current task list that has been stored.","lastModifiedDate":"2023-01-31"},{"lineNumber":218,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":219,"author":{"gitId":"dunliang0513"},"content":"    public String list() {","lastModifiedDate":"2023-02-15"},{"lineNumber":220,"author":{"gitId":"dunliang0513"},"content":"        if (this.index \u003d\u003d 0) {","lastModifiedDate":"2023-01-31"},{"lineNumber":221,"author":{"gitId":"dunliang0513"},"content":"            String output \u003d String.format(LINES +","lastModifiedDate":"2023-02-15"},{"lineNumber":222,"author":{"gitId":"dunliang0513"},"content":"                    \"\\tThere is no task in the list.\" + \"\\n\" +","lastModifiedDate":"2023-02-19"},{"lineNumber":223,"author":{"gitId":"dunliang0513"},"content":"                    LINES);","lastModifiedDate":"2023-02-15"},{"lineNumber":224,"author":{"gitId":"dunliang0513"},"content":"            System.out.println(output);","lastModifiedDate":"2023-02-15"},{"lineNumber":225,"author":{"gitId":"dunliang0513"},"content":"            return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":226,"author":{"gitId":"dunliang0513"},"content":"//            System.out.println(\"\\tThere is no task in the list.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":227,"author":{"gitId":"dunliang0513"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":228,"author":{"gitId":"dunliang0513"},"content":"            String output \u003d String.format(LINES +","lastModifiedDate":"2023-02-15"},{"lineNumber":229,"author":{"gitId":"dunliang0513"},"content":"                    \"\\tHere are the tasks in your list:\\n\" + \"\\n\" +","lastModifiedDate":"2023-02-19"},{"lineNumber":230,"author":{"gitId":"dunliang0513"},"content":"                    this.toFormattedString() +","lastModifiedDate":"2023-02-15"},{"lineNumber":231,"author":{"gitId":"dunliang0513"},"content":"                    LINES);","lastModifiedDate":"2023-02-15"},{"lineNumber":232,"author":{"gitId":"dunliang0513"},"content":"            System.out.println(output);","lastModifiedDate":"2023-02-15"},{"lineNumber":233,"author":{"gitId":"dunliang0513"},"content":"            return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":234,"author":{"gitId":"dunliang0513"},"content":"//            System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-02-15"},{"lineNumber":235,"author":{"gitId":"dunliang0513"},"content":"//            for (int i \u003d 0; i \u003c this.index; i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":236,"author":{"gitId":"dunliang0513"},"content":"//                Task currTask \u003d this.taskList.get(i);","lastModifiedDate":"2023-02-15"},{"lineNumber":237,"author":{"gitId":"dunliang0513"},"content":"//                System.out.println(\"\\t\" + (i + 1) + \". \" + currTask.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":238,"author":{"gitId":"dunliang0513"},"content":"//            }","lastModifiedDate":"2023-02-15"},{"lineNumber":239,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":240,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":241,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":242,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":243,"author":{"gitId":"dunliang0513"},"content":"     * Mark the task as done correspond to the inserted index by the user.","lastModifiedDate":"2023-01-31"},{"lineNumber":244,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":245,"author":{"gitId":"dunliang0513"},"content":"     * @param input The index of the task that is done.","lastModifiedDate":"2023-01-31"},{"lineNumber":246,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":247,"author":{"gitId":"dunliang0513"},"content":"    public Task mark(int input) {","lastModifiedDate":"2023-02-19"},{"lineNumber":248,"author":{"gitId":"dunliang0513"},"content":"        Task currTask \u003d this.taskList.get(input - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":249,"author":{"gitId":"dunliang0513"},"content":"        currTask.markDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":250,"author":{"gitId":"dunliang0513"},"content":"//        String output \u003d String.format(LINES +","lastModifiedDate":"2023-02-19"},{"lineNumber":251,"author":{"gitId":"dunliang0513"},"content":"//                \"\\tNice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-02-19"},{"lineNumber":252,"author":{"gitId":"dunliang0513"},"content":"//                \"\\t\\t\" + currTask.toString() +","lastModifiedDate":"2023-02-19"},{"lineNumber":253,"author":{"gitId":"dunliang0513"},"content":"//                LINES);","lastModifiedDate":"2023-02-19"},{"lineNumber":254,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(output);","lastModifiedDate":"2023-02-19"},{"lineNumber":255,"author":{"gitId":"dunliang0513"},"content":"        return currTask;","lastModifiedDate":"2023-02-19"},{"lineNumber":256,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-02-15"},{"lineNumber":257,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-15"},{"lineNumber":258,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t\\t\" + currTask.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":259,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-02-15"},{"lineNumber":260,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":261,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":262,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":263,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":264,"author":{"gitId":"dunliang0513"},"content":"     * Mark the task as not done yet correspond to the inserted index by the user.","lastModifiedDate":"2023-01-31"},{"lineNumber":265,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":266,"author":{"gitId":"dunliang0513"},"content":"     * @param input The index of the task that is not done yet.","lastModifiedDate":"2023-01-31"},{"lineNumber":267,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":268,"author":{"gitId":"dunliang0513"},"content":"    public Task unmark(int input) {","lastModifiedDate":"2023-02-19"},{"lineNumber":269,"author":{"gitId":"dunliang0513"},"content":"        Task currTask \u003d this.taskList.get(input - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":270,"author":{"gitId":"dunliang0513"},"content":"        currTask.markNotDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":271,"author":{"gitId":"dunliang0513"},"content":"//        String output \u003d String.format(LINES +","lastModifiedDate":"2023-02-19"},{"lineNumber":272,"author":{"gitId":"dunliang0513"},"content":"//                \"\\tNice! I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-02-19"},{"lineNumber":273,"author":{"gitId":"dunliang0513"},"content":"//                \"\\t\\t\" + currTask.toString() +","lastModifiedDate":"2023-02-19"},{"lineNumber":274,"author":{"gitId":"dunliang0513"},"content":"//                LINES);","lastModifiedDate":"2023-02-19"},{"lineNumber":275,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(output);","lastModifiedDate":"2023-02-19"},{"lineNumber":276,"author":{"gitId":"dunliang0513"},"content":"        return currTask;","lastModifiedDate":"2023-02-19"},{"lineNumber":277,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-02-15"},{"lineNumber":278,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\tOK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-15"},{"lineNumber":279,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t\\t\" + currTask.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":280,"author":{"gitId":"dunliang0513"},"content":"//        System.out.println(\"\\t--------------------------\");","lastModifiedDate":"2023-02-15"},{"lineNumber":281,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":282,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":283,"author":{"gitId":"dunliang0513"},"content":"    public void addTask(Task task, Storage storage) throws NoDescriptionException {","lastModifiedDate":"2023-02-15"},{"lineNumber":284,"author":{"gitId":"dunliang0513"},"content":"        assert !task.noDescription();","lastModifiedDate":"2023-02-19"},{"lineNumber":285,"author":{"gitId":"dunliang0513"},"content":"        if (task.noDescription()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":286,"author":{"gitId":"dunliang0513"},"content":"            throw new NoDescriptionException(\"No description is provided, please try again\");","lastModifiedDate":"2023-02-19"},{"lineNumber":287,"author":{"gitId":"dunliang0513"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":288,"author":{"gitId":"dunliang0513"},"content":"            this.taskList.add(task);","lastModifiedDate":"2023-02-15"},{"lineNumber":289,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":290,"author":{"gitId":"dunliang0513"},"content":"        storage.store(this);","lastModifiedDate":"2023-02-19"},{"lineNumber":291,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":292,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":293,"author":{"gitId":"dunliang0513"},"content":"    public Task remove(int index, Storage storage) {","lastModifiedDate":"2023-02-19"},{"lineNumber":294,"author":{"gitId":"dunliang0513"},"content":"        Task output \u003d this.taskList.remove(index);","lastModifiedDate":"2023-02-19"},{"lineNumber":295,"author":{"gitId":"dunliang0513"},"content":"        storage.store(this);","lastModifiedDate":"2023-02-19"},{"lineNumber":296,"author":{"gitId":"dunliang0513"},"content":"        return output;","lastModifiedDate":"2023-02-19"},{"lineNumber":297,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":298,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":299,"author":{"gitId":"dunliang0513"},"content":"    public ArrayList\u003cTask\u003e findRelevantTasks(String keywords) {","lastModifiedDate":"2023-01-31"},{"lineNumber":300,"author":{"gitId":"dunliang0513"},"content":"        if (keywords.trim().equals(\"\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":301,"author":{"gitId":"dunliang0513"},"content":"            throw new NoDescriptionException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":302,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":303,"author":{"gitId":"dunliang0513"},"content":"        return (ArrayList\u003cTask\u003e) this.taskList","lastModifiedDate":"2023-01-31"},{"lineNumber":304,"author":{"gitId":"dunliang0513"},"content":"                .stream().filter(task -\u003e task.toString().contains(keywords))","lastModifiedDate":"2023-01-31"},{"lineNumber":305,"author":{"gitId":"dunliang0513"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-01-31"},{"lineNumber":306,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":307,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":308,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"dunliang0513":308}},{"path":"src/main/java/Duke/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.Tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import java.time.Period;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.InvalidDateFormatExceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"    protected String dueDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"    protected LocalDate localDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"     * The constructor of Deadline class, uses to create Deadline instance.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"     * @param description The description or the name of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"     * @param dueDate The deadline of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"     * @throws InvalidDateFormatExceptions","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"    public Deadline(String description, String dueDate) throws InvalidDateFormatExceptions {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"            this.localDate \u003d LocalDate.parse(dueDate);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"        } catch (InvalidDateFormatExceptions e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"            String errMsg \u003d \"Parse error: \" + e.getMessage() +\"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"                    \"\\tPlease try again with the correct format \\\"YYYY-MM-DD\\\"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"            throw new InvalidDateFormatExceptions(errMsg);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"     * Check whether the task is near the deadline(3 days).","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"dunliang0513"},"content":"     * @return Return true if the task is not done yet and","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"dunliang0513"},"content":"     *         is going to due soon in 3 days.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"    public boolean isDueSoon() {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"        if (this.isComplete) {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"dunliang0513"},"content":"            return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"            LocalDate currentTime \u003d LocalDate.now();","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"dunliang0513"},"content":"            Period interval \u003d Period.between(currentTime, localDate);","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"dunliang0513"},"content":"            int years \u003d interval.getYears();","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"dunliang0513"},"content":"            int months \u003d interval.getMonths();","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":"            int days \u003d interval.getDays();","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"dunliang0513"},"content":"            if (years \u003d\u003d 0 \u0026\u0026 months \u003d\u003d 0 \u0026\u0026 days \u003c\u003d 3) {","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"dunliang0513"},"content":"                return true;","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"dunliang0513"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"dunliang0513"},"content":"            return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"dunliang0513"},"content":"     * Print the task into the specific file.","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"dunliang0513"},"content":"     * @return Return the information of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"dunliang0513"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"dunliang0513"},"content":"        return String.format(\"D | %d | %s | %s \", isComplete ? 1 : 0, description, dueDate);","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"dunliang0513"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"dunliang0513"},"content":"        return \"[D]\" + super.toString() + \" (\" + localDate.getMonth() + \" \"","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"dunliang0513"},"content":"                + localDate.getDayOfMonth() + \" \" + localDate.getYear() + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"dunliang0513":70}},{"path":"src/main/java/Duke/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.Tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.InvalidDateFormatExceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import java.time.Period;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"    protected String startingTime;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"    protected String endingTime;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"    protected LocalDate localStartingDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"    protected LocalDate localEndingDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"    public Event(String description, String startingTime, String endingTime) throws DateTimeParseException {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"        this.startingTime \u003d startingTime;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"        this.endingTime \u003d endingTime;","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"            this.localStartingDate \u003d LocalDate.parse(startingTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"            this.localEndingDate \u003d LocalDate.parse(endingTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"        } catch (InvalidDateFormatExceptions e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"            String errMsg \u003d \"Parse error: \" + e.getMessage() +\"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"                    \"\\tPlease try again with the correct format \\\"YYYY-MM-DD\\\"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"            throw new InvalidDateFormatExceptions(errMsg);","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"        this.localStartingDate \u003d LocalDate.parse(startingTime);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"     * Check whether the event is near starting date(one week before).","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"     * @return Return true if the task is not done yet and","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"     *         the event is one week from now.","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"dunliang0513"},"content":"    public boolean isComingSoon() {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"dunliang0513"},"content":"        if (this.isComplete) {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"            return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"            LocalDate currentTime \u003d LocalDate.now();","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"dunliang0513"},"content":"            Period interval \u003d Period.between(currentTime, localStartingDate);","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"            int years \u003d interval.getYears();","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"            int months \u003d interval.getMonths();","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"dunliang0513"},"content":"            int days \u003d interval.getDays();","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"dunliang0513"},"content":"            if (years \u003d\u003d 0 \u0026\u0026 months \u003d\u003d 0 \u0026\u0026 days \u003c\u003d 7) {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"dunliang0513"},"content":"                return true;","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"dunliang0513"},"content":"            return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"dunliang0513"},"content":"     * Print the task into the specific file.","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"dunliang0513"},"content":"     * @return Return the information of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"dunliang0513"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"dunliang0513"},"content":"        return String.format(\"E | %d | %s | %s-%s \", isComplete ? 1 : 0, description, startingTime, endingTime);","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"dunliang0513"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"dunliang0513"},"content":"        return \"[E]\" + super.toString() + \" (\" + localStartingDate.getDayOfMonth() + \"/\"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"dunliang0513"},"content":"                + localStartingDate.getMonth() + \"/\"","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"dunliang0513"},"content":"                + localStartingDate.getYear() + \" to \"","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"dunliang0513"},"content":"                + localEndingDate.getDayOfMonth() + \"/\"","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"dunliang0513"},"content":"                + localEndingDate.getMonth() + \"/\"","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"dunliang0513"},"content":"                + localEndingDate.getYear() +\")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"dunliang0513":71}},{"path":"src/main/java/Duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.Tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.CommandNotFoundException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"public class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"    protected String description;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"    protected boolean isComplete;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"    public boolean noDescription() {","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"        return this.description \u003d\u003d null || this.description.trim().isEmpty();","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"    public boolean isMatch(String keywords) {","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"        return this.description.contains(keywords);","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"    public static Task strToTask(String strTask) throws CommandNotFoundException {","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"        assert strTask !\u003d null;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"        Task result;","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"        String[] strings \u003d strTask.split(\" \\\\| \");","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"        if (strTask.startsWith(\"T\")) {","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"            result \u003d new Todo(strings[2]);","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"        } else if (strTask.startsWith(\"D\")) {","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"            result \u003d new Deadline(strings[2], strings[3]);","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"        } else if (strTask.startsWith(\"E\")) {","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"            String[] separatedBy \u003d strings[3].split(\"-\");","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"            result \u003d new Event(strings[2], separatedBy[0], separatedBy[1]);","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"        } else {","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"            throw new CommandNotFoundException(\"Invalid command\");","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"dunliang0513"},"content":"            if (strings[1].equals(\"X\")) {","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"dunliang0513"},"content":"                result.markDone();","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"            return result;","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"dunliang0513"},"content":"            throw new CommandNotFoundException(\"Invalid command\");","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"dunliang0513"},"content":"     * Mark the task as completed.","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"dunliang0513"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"dunliang0513"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"dunliang0513"},"content":"     * Mark the task as incomplete.","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"dunliang0513"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"dunliang0513"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"dunliang0513"},"content":"     * Get the status of the task, whether is it completed?","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"dunliang0513"},"content":"     * @return If done return \"X\", else not done return \" \".","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"dunliang0513"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"dunliang0513"},"content":"        return isComplete ? \"X\" : \" \";","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"dunliang0513"},"content":"     * Print the task into the specific file.","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"dunliang0513"},"content":"     * @return Return the information of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"dunliang0513"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"dunliang0513"},"content":"        return String.format(\"NA | %d | %s \", isComplete ? 1 : 0, description);","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"dunliang0513"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"dunliang0513"},"content":"        return \"[\" + this.getTaskStatus() + \"] \" + this.description;","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"dunliang0513":80}},{"path":"src/main/java/Duke/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.Tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"     * Constructor of Todo class, uses to create Todo instance.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"     * @param description The description or the name of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"     * Print the task into the specific file.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"     * @return Return the information of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"        return String.format(\"T | %d | %s \", isComplete ? 1 : 0, description);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"dunliang0513":28}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"public class Ui {","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"    private static final String LINES \u003d \"\\t--------------------------\\n\";","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"    public Ui() {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"     * Greet to the user when first run the program.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"    public static String greet() {","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"        String output \u003d String.format(\"Hello from\\n%s \\nWhat \" +","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"                \"can I do for you?\", logo);","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"        System.out.println(output);","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"        return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"    public String printMarked(Task task) {","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"        String output \u003d String.format(\"Nice! I\u0027ve marked this task as done:%s\", task);","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"        System.out.println(output);","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"        return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"    public String printUnmarked(Task task) {","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"        String output \u003d String.format(\"Nice! I\u0027ve marked this task as not done yet:%s\", task);","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"        System.out.println(output);","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"        return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"dunliang0513"},"content":"    public String printDeletedTask(Task task) {","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"        String output \u003d String.format(\"This task has been deleted successfully\\n%s\", task.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"        System.out.println(output);","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"        return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"    public String printLoadingError() {","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"dunliang0513"},"content":"        String output \u003d \"The directory is not found!\";","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"dunliang0513"},"content":"        System.out.println(output);","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"dunliang0513"},"content":"        return output;","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"dunliang0513"},"content":"    public String printStoredTasks(TaskList taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"dunliang0513"},"content":"        String output \u003d String.format(\"File has been stored!\\n%s\",taskList.toFormattedString());","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"dunliang0513"},"content":"        System.out.println(output);","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"dunliang0513"},"content":"        return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"dunliang0513"},"content":"    public String printAddedTask(Task task, TaskList tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"dunliang0513"},"content":"        String output \u003d String.format(\"Got it. I\u0027ve added this task:\\n%s\", task.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"dunliang0513"},"content":"        output +\u003d String.format(\"\\nNow you have %d tasks in the list.\", tasks.getSize());","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"dunliang0513"},"content":"        System.out.println(output);","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"dunliang0513"},"content":"        return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"dunliang0513"},"content":"    public String printAllTasks(TaskList tasks) {","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"dunliang0513"},"content":"        String output \u003d tasks.toFormattedString();","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"dunliang0513"},"content":"        System.out.println(output);","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"dunliang0513"},"content":"        return output;","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"dunliang0513"},"content":"     * Say goodbye to the user when \"bye\" Duke.command detected.","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"dunliang0513"},"content":"    public String bye() {","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"dunliang0513"},"content":"        String output \u003d String.format(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"dunliang0513"},"content":"        System.out.println(output);","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"dunliang0513"},"content":"        return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"dunliang0513":76}},{"path":"src/main/java/Duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.DukeMainExceptions;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.NoDeadlineException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.NoDescriptionException;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import Duke.Tasks.Deadline;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"import Duke.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"import Duke.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"    private final String description;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"    private final String dueDate;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"    public AddDeadlineCommand(String input) {","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"        String[] splitDesWithBy \u003d input.split(\" /by \", 2);","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"        this.description \u003d splitDesWithBy[0].trim();","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"            throw new NoDescriptionException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"        } else if (splitDesWithBy.length !\u003d 2) {","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"            throw new NoDeadlineException(\"The due date cannot be empty.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"        this.dueDate \u003d splitDesWithBy[1].trim();","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"    public AddDeadlineCommand(String description, String dueDate) {","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws DukeMainExceptions {","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"        Deadline newDeadline \u003d new Deadline(this.description, this.dueDate);","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"dunliang0513"},"content":"        assert this.description !\u003d null;","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"dunliang0513"},"content":"        tasks.addTask(newDeadline, storage);","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"        return ui.printAddedTask(newDeadline, tasks);","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"dunliang0513":40}},{"path":"src/main/java/Duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.command;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.DukeMainExceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.NoDeadlineException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.NoDescriptionException;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import Duke.Tasks.Event;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"import Duke.TaskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"import Duke.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"    private final String description;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"    private final String startingTime;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"    private final String endingTime;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"    public AddEventCommand(String input) {","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"        String[] splitDesWithFrom \u003d input.split(\" /from \", 2);","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"        this.description \u003d splitDesWithFrom[0].trim();","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"            throw new NoDescriptionException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"        } else if (splitDesWithFrom.length !\u003d 2) {","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"            throw new NoDeadlineException(\"The starting time cannot be empty\");","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"        String[] period \u003d splitDesWithFrom[1].split(\" /to \", 2);","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"        this.startingTime \u003d period[0].trim();","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"        if (startingTime.equals(\"\")) {","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"            throw new NoDeadlineException(\"The starting time cannot be empty.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"        } else if (period.length !\u003d 2) {","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"            throw new NoDeadlineException(\"The ending time cannot be empty.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"        this.endingTime \u003d period[1].trim();","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"dunliang0513"},"content":"    public AddEventCommand(String description, String startingTime, String endingTime) {","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"        this.startingTime \u003d startingTime;","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"        this.endingTime \u003d endingTime;","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"dunliang0513"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws DukeMainExceptions {","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"dunliang0513"},"content":"        Event newEvent \u003d new Event(this.description, this.startingTime, this.endingTime);","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"dunliang0513"},"content":"        tasks.addTask(newEvent, storage);","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":"        return ui.printAddedTask(newEvent, tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"dunliang0513":49}},{"path":"src/main/java/Duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.command;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.DukeMainExceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import Duke.Tasks.Todo;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import Duke.TaskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import Duke.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"    private final String description;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws DukeMainExceptions {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"        Todo newTodo \u003d new Todo(this.description);","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"        tasks.addTask(newTodo, storage);","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"        return ui.printAddedTask(newTodo, tasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"dunliang0513":22}},{"path":"src/main/java/Duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.command;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.DukeMainExceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import Duke.TaskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import Duke.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"    protected boolean terminate \u003d false;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"    public boolean isTerminate() {","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"        return terminate;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"    public abstract String execute(TaskList taskList, Storage storage","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"    , Ui ui) throws DukeMainExceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"dunliang0513":17}},{"path":"src/main/java/Duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.DukeMainExceptions;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.InvalidIndexException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import Duke.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"import Duke.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"    private final int selectedIndex;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"    public DeleteCommand(int selectedIndex) {","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"        this.selectedIndex \u003d selectedIndex;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"            DukeMainExceptions, InvalidIndexException {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"            Task task \u003d tasks.remove(this.selectedIndex, storage);","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"            return ui.printDeletedTask(task);","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"            throw new InvalidIndexException(1 + tasks.getSize());","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"dunliang0513":27}},{"path":"src/main/java/Duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import Duke.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import Duke.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"        terminate \u003d true;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"        String output;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"        storage.store(tasks);","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"        output \u003d ui.printStoredTasks(tasks);","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"        output +\u003d ui.bye();","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"        return output;","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"dunliang0513":18}},{"path":"src/main/java/Duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.DukeMainExceptions;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import Duke.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import Duke.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"    private final String keywords;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"    public FindCommand(String keywords) {","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws DukeMainExceptions {","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"        TaskList newTasks \u003d new TaskList();","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"            if (task.isMatch(this.keywords)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"                newTasks.addToNewList(task);","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"        return ui.printAllTasks(newTasks);","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"dunliang0513":28}},{"path":"src/main/java/Duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import Duke.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import Duke.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"        return ui.printAllTasks(tasks);","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"dunliang0513":12}},{"path":"src/main/java/Duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.DukeMainExceptions;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.InvalidIndexException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import Duke.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"import Duke.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"    private final int index;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"    public MarkCommand(int selectedIndex) {","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"        this.index \u003d selectedIndex;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"            DukeMainExceptions, InvalidIndexException {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"            Task task \u003d tasks.mark(this.index);","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"            return ui.printMarked(task);","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"            throw new InvalidIndexException(1 + tasks.getSize());","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"dunliang0513":28}},{"path":"src/main/java/Duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.DukeMainExceptions;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import Duke.Exceptions.InvalidIndexException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import Duke.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"import Duke.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"    private final int index;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"    public UnmarkCommand(int selectedIndex) {","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"        this.index \u003d selectedIndex;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"            DukeMainExceptions {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"            Task task \u003d tasks.unmark(this.index);","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"            return ui.printMarked(task);","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"            throw new InvalidIndexException(1 + tasks.getSize());","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"dunliang0513":27}},{"path":"src/main/java/Duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.gui;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"dunliang0513"},"content":"    private void flip() {","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"dunliang0513"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"dunliang0513"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"dunliang0513"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"dunliang0513"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"dunliang0513"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"dunliang0513"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"dunliang0513"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"dunliang0513"},"content":"        db.flip();","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"dunliang0513"},"content":"        return db;","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"dunliang0513":61}},{"path":"src/main/java/Duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.gui;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"public class Launcher {","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"dunliang0513":12}},{"path":"src/main/java/Duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.gui;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import Duke.Duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":" * A GUI for Duke.Duke using FXML.","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"public class Main extends Application{","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"    private Duke duke  \u003d new Duke(\"tasks.txt\");","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"    public Main() throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"            stage.show();","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"dunliang0513":35}},{"path":"src/main/java/Duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package Duke.gui;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import Duke.Duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import Duke.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpeg\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"dunliang0513"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"dunliang0513"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.greet(), dukeImage));","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"dunliang0513"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"dunliang0513"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke.Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"dunliang0513"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"dunliang0513"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"dunliang0513"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"dunliang0513"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"dunliang0513"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"dunliang0513"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"dunliang0513"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"dunliang0513"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"dunliang0513"},"content":"        );","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"dunliang0513"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"dunliang0513":58}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"dunliang0513":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"Duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"dunliang0513":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"todo read book","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"event project meeting /from Aug 6th /to 4pm","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"todo join sports club","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"todo borrow book","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"mark 1","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"mark 2","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"mark 4","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"delete 3","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"bye","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"dunliang0513":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dunliang0513":1,"-":20}}]
