[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"edures888":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"//    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"//checkstyle {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"//    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"//}","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"edures888":8,"-":38}},{"path":"src/main/java/duke/Controller.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"public class Controller {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    private static final String COMMAND_SEPARATOR \u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    private UserInterface ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    private boolean isExited;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    Controller(UserInterface ui, Storage storage) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"            tasks \u003d storage.recoverList();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"            ui.showExceptionMessage(exception);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"        this.isExited \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    public void runExecutionLoop() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        while(!isExited) {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"                String input \u003d ui.getInput();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"                Command command \u003d parser.parse(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"                executeCommand(command);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"                ui.showExceptionMessage(exception);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        ui.showExitMessage();","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"    public void executeCommand(Command command) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"            isExited \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"            return;","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"        String result \u003d command.execute(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"        ui.displayResult(result);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"        storage.saveTaskChangesToFile(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":49}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"public class Duke {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"    private Controller controller;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    private UserInterface ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    public Duke() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"        ui \u003d new UserInterface();","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"        controller \u003d new Controller(ui, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    public void run() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"        ui.showStartMessage();","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"        controller.runExecutionLoop();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"        new Duke().run();","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":23}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"    private static final String CUSTOM_PREFIX \u003d \"Something\u0027s not right.\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"        super(CUSTOM_PREFIX + message);","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":8}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    public static final String INVALID_COMMAND_EXCEPTION_MESSAGE \u003d \"Invalid Command received.\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"        int firstWhitespaceIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"        String commandWord;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        if (firstWhitespaceIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"            commandWord \u003d input;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"            commandWord \u003d input.substring(0, firstWhitespaceIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"        Command command;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"            command \u003d new TodoCommand(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"            command \u003d new DeadlineCommand(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"            command \u003d new EventCommand(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"            command \u003d new MarkCommand(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"        case UnmarkCommand.COMMAND_FORMAT:","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"            command \u003d new UnmarkCommand(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"            command \u003d new DeleteCommand(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"            command \u003d new ListCommand(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"            case EXIT_COMMAND:","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"            command \u003d null;","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"            throw new DukeException(INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"        return command;","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":57}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import java.io.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"    private static final String SAVED_FILE_PATH \u003d \"./savedTasks.txt\";","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    private static final String IO_EXCEPTION_MESSAGE \u003d \"I/O error occurred while retrieving list from save.\";","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"    private static final String FILE_HANDLING_EXCEPTION_MESSAGE \u003d \"File error occurred while retrieving list from save.\";","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    private String saveFilePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    Storage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"        saveFilePath \u003d SAVED_FILE_PATH;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    public TaskList recoverList() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"        File saveFile \u003d new File(saveFilePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"            return new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"        try (FileInputStream fileInputStream \u003d new FileInputStream(saveFilePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"             ObjectInputStream objectInputStream","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"                     \u003d new ObjectInputStream(fileInputStream)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"            return (TaskList) objectInputStream.readObject();","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"            throw new DukeException(FILE_HANDLING_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"            throw new DukeException(IO_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"    public void saveTaskChangesToFile(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        try (FileOutputStream fileOutputStream","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"                     \u003d new FileOutputStream(SAVED_FILE_PATH);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"             ObjectOutputStream objectOutputStream","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"                     \u003d new ObjectOutputStream(fileOutputStream)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"            objectOutputStream.writeObject(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"            objectOutputStream.flush();","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"            throw new DukeException(FILE_HANDLING_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"            throw new DukeException(IO_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"    // TODO: Wrapper for try-with involving read write to file (Fn)","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":51}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import java.io.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    private static final String INVALID_INDEX_EXCEPTION \u003d \"Invalid task index given for Mark/Unmark/Delete command.\";","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    private static final String LIST_RESPONSE \u003d \"Current tasks in list:\";","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    private static final String ADDED_TASK_RESPONSE \u003d \"Task added:\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    private static final String REMAINING_TASK_RESPONSE \u003d\"\\nRemaining task count: \";","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    private static final String REMOVE_TASK_RESPONSE \u003d \"Task removed:\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    private static final String LIST_INDEX_SEPARATOR \u003d \". \";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"        list.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"        int count \u003d list.size() - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"        return ADDED_TASK_RESPONSE + list.get(count) + REMAINING_TASK_RESPONSE","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"                + list.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"    public String markTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"            return list.get(taskIndex - 1).mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"            throw new DukeException(INVALID_INDEX_EXCEPTION);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"    public String unmarkTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"            return list.get(taskIndex - 1).unmark();","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"            throw new DukeException(INVALID_INDEX_EXCEPTION);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"    public String deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"            Task toRemove \u003d list.get(taskIndex - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"            list.remove(taskIndex - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"            return REMOVE_TASK_RESPONSE + toRemove.toString() + REMAINING_TASK_RESPONSE + list.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"            throw new DukeException(INVALID_INDEX_EXCEPTION);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"        result.append(LIST_RESPONSE);","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"        for (int i\u003d0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"            result.append(\"\\n\").append(i + 1).append(LIST_INDEX_SEPARATOR).append(list.get(i));","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"        return result.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":65}},{"path":"src/main/java/duke/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"public class UserInterface {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"            \" ____        _        \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    public static final String GREET_MESSAGE \u003d \"Hello, I\u0027m Ekud! What can I do for you?\";","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    public static final String EXIT_MESSAGE \u003d \"Farewell. Always at your service.\";","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    private static final String FORMATTER_LEFT_WRAP \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    private static final String FORMATTER_RIGHT_WRAP \u003d \"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    public static final String INDENT \u003d \"    \";","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    UserInterface() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    public String getInput() {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"    public void displayResult(String result) {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        printFormattedMessage(result);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"    public void showExceptionMessage(Exception exception) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        printFormattedMessage(exception.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"    public void showStartMessage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"        printFormattedMessage(GREET_MESSAGE);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"    public void showExitMessage() {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"        printFormattedMessage(EXIT_MESSAGE);","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"    private void printFormattedMessage(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"        System.out.println(FORMATTER_LEFT_WRAP + message + FORMATTER_RIGHT_WRAP);","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":49}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    String input;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"    public Command(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    public abstract String execute(TaskList tasks) throws DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":12}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import duke.tasks.DeadlineTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    private static final String DEADLINE_PREFIX \u003d \"/by \";","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"        super(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"        String input \u003d super.input;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"            int prefixIndex \u003d input.indexOf(DEADLINE_PREFIX);","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"            String taskName \u003d input.substring(COMMAND_WORD.length(), prefixIndex - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"            String deadline \u003d input.substring(prefixIndex + DEADLINE_PREFIX.length());","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"            String result \u003d tasks.addTask(DeadlineTask.createTask(taskName, deadline));","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"            return result;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"            throw new DukeException(Parser.INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":29}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"        super(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"        String input \u003d super.input;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"            String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"            int taskIndex \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"            String result \u003d tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"            return result;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"            throw new DukeException(Parser.INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":26}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    private static final String PERIOD_BEGIN_PREFIX \u003d \"/from \";","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    private static final String PERIOD_END_PREFIX \u003d \"/to \";","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"        super(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"            int firstPrefixIndex \u003d input.indexOf(PERIOD_BEGIN_PREFIX);","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"            int secondPrefixIndex \u003d input.indexOf(PERIOD_END_PREFIX);","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"            if (firstPrefixIndex \u003d\u003d -1 || secondPrefixIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"            String taskName \u003d input.substring(COMMAND_WORD.length(), firstPrefixIndex - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"            String startDateString \u003d input.substring(firstPrefixIndex + PERIOD_BEGIN_PREFIX.length(),","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"                    secondPrefixIndex - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"            String endDateString \u003d input.substring(secondPrefixIndex + PERIOD_END_PREFIX.length());","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"            String result \u003d tasks.addTask(EventTask.createTask(taskName, startDateString, endDateString));","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"            return result;","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"            throw new DukeException(Parser.INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":36}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"        super(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"        if (!input.equals(COMMAND_WORD)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"            throw new DukeException(Parser.INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        return tasks.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":22}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"        super(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"        String input \u003d super.input;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"            String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"            int taskIndex \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"            String result \u003d tasks.markTask(taskIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"            return result;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"            throw new DukeException(Parser.INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":25}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import duke.tasks.TodoTask;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"        super(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"        String input \u003d super.input;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"        String taskName \u003d input.substring(COMMAND_WORD.length());","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"            throw new DukeException(Parser.INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"        String result \u003d tasks.addTask(new TodoTask(taskName));","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"        return result;","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":25}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_FORMAT \u003d \"unmark\";","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"        super(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"        String input \u003d super.input;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"            String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"            int taskIndex \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"            String result \u003d tasks.unmarkTask(taskIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"            return result;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"            throw new DukeException(Parser.INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":26}},{"path":"src/main/java/duke/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    private static final String INDICATOR \u003d \"[Deadline]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    private static final String INVALID_DATE_EXCEPTION \u003d \"Incompatible date format given for Deadline\";","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    static final String DEADLINE_PREFIX_REPLACEMENT \u003d \"BY: \";","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    DeadlineTask(String name, LocalDate deadline) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    public static DeadlineTask createTask(String name, String deadline) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"            LocalDate date \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"            return new DeadlineTask(name, date);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"            throw new DukeException(INVALID_DATE_EXCEPTION);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    private static String formattedDeadline (LocalDate deadline) {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"        String formattedDate \u003d deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"        return String.format(Task.EXTRAS_FORMAT_TEMPLATE, DEADLINE_PREFIX_REPLACEMENT + formattedDate);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"        return INDICATOR + super.toString() + formattedDeadline(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":40}},{"path":"src/main/java/duke/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    static final String INDICATOR \u003d \"[Event]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    private static final String INVALID_DATE_EXCEPTION \u003d \"Incompatible date format given for start/end of Event\";","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    static final String PERIOD_BEGIN_PREFIX_REPLACEMENT \u003d \"FROM: \";","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    static final String PERIOD_END_PREFIX_REPLACEMENT \u003d \" | TO: \";","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    EventTask(String name, LocalDate startDate, LocalDate endDate) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    private static String formattedPeriod (LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"        // TODO: Abstract into util function","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"        String startDateString \u003d  startDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"        String endDateString \u003d  endDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"        return String.format(Task.EXTRAS_FORMAT_TEMPLATE, PERIOD_BEGIN_PREFIX_REPLACEMENT + startDateString","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"                + PERIOD_END_PREFIX_REPLACEMENT + endDateString);","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"    public static EventTask createTask(String taskName, String startDateString, String endDateString) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"            LocalDate startDate \u003d LocalDate.parse(startDateString);","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"            LocalDate endDate \u003d LocalDate.parse(endDateString);","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"            return new EventTask(taskName, startDate, endDate);","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"            throw new DukeException(INVALID_DATE_EXCEPTION);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"        return INDICATOR + super.toString() + formattedPeriod(startDate, endDate);","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":44}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.UserInterface;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    private static final String COMPLETED \u003d \" [O] \";","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    private static final String NOT_COMPLETED \u003d \" [ ] \";","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    static final String EXTRAS_FORMAT_TEMPLATE \u003d \" (%s)\";","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    private static final String FORMAT_EXCEPTION \u003d \"Invalid format for creating Task\";","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    private static final String MARKED_RESPONSE \u003d \"Well done. Task has been marked as completed:\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    private static final String UNMARKED_RESPONSE \u003d \"Got it. Task has been unmarked:\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    private final String name;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    Task(String name) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"            throw new DukeException(FORMAT_EXCEPTION);","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    public String mark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"        isCompleted \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"        return MARKED_RESPONSE + UserInterface.INDENT + this;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"    public String unmark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"        return UNMARKED_RESPONSE + UserInterface.INDENT + this;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        return (isCompleted ? COMPLETED : NOT_COMPLETED) + name;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":39}},{"path":"src/main/java/duke/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    static final String INDICATOR \u003d \"[Todo]\";","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    public TodoTask(String name) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"        return INDICATOR + super.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":17}},{"path":"src/test/java/duke/commmands/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commmands;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import duke.tasks.TodoTask;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"public class ListCommandTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    static final String NORMAL_INPUT \u003d \"list\";","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    static final String SIMPLE_TASK_NAME \u003d \"simpleTask\";","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    static final String CORRECT_TASK_OUTPUT \u003d \"Current tasks in list:\\n1. [Todo] [ ] simpleTask\";","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    void execute_simpleInput_outputsCorrectly() throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"        tasks.addTask(new TodoTask(SIMPLE_TASK_NAME));","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"        ListCommand listCommand \u003d new ListCommand(NORMAL_INPUT);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        assertEquals(CORRECT_TASK_OUTPUT, listCommand.execute(tasks));","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"edures888":22}},{"path":"src/test/java/duke/tasks/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"    static final String SPACED_TASK_NAME \u003d \"deadline test\";","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    static final String VALID_DEADLINE \u003d \"2023-01-27\";","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    static final String CORRECT_TASK_OUTPUT \u003d \"[Deadline] [ ] deadline test (BY: Jan 27 2023)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    void createTask_normalInput_createdCorrectly() throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"        DeadlineTask task \u003d DeadlineTask.createTask(SPACED_TASK_NAME, VALID_DEADLINE);","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"        assertEquals(CORRECT_TASK_OUTPUT, task.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"edures888":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"todo task1","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"deadline task2 /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"event task3 /from FirstDay /to SecondDay","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"edures888":1,"-":20}}]
