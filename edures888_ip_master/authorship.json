[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"edures888":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"javafx {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    version \u003d \"19\"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"checkstyle {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"    archiveBaseName \u003d \"dukeApplication\"","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"edures888":30,"-":38}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"Duke is a Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"## Usage","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar dukeApplication.jar` command to run the application.","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"Type any of the commands below into the user input box and press Enter to execute.","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"### `todo` - Todo task","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"Adds a simple Todo task to the list","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"Format: `todo {task name}`","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"Example of usage: ","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"`todo exampleTask`","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"Task added:","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"[Todo] [] exampleTask","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"Remaining task count: 1","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"Acknowledge and display the added task, alongside the number of tasks in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"### `deadline` - Deadline task","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"Adds a Deadline task with the due date, to the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"Due date should be of the form `YYYY-MM-DD`","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"Format: `deadline {task name} /by {due date}`","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"`deadline exampleTask /by 2023-02-18`","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"Task added:","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"[Deadline] [] exampleTask (BY: Feb 18 2023)","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"Remaining task count: 1","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"Acknowledge and display the added task, alongside the number of tasks in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"Due date is also displayed in a more readable format.","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"### `event` - Event task","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"Adds a Event task with the start date and end date, to the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"Dates should be of the form `YYYY-MM-DD`","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"Format: `event {task name} /from {start date} /to {end date}`","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"`event exampleTask /from 2023-02-18 /to 2023-02-19`","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"Task added:","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"[Event] [] exampleTask (FROM: Feb 18 2023 | TO: Feb 19 2023)","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"Remaining task count: 1","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"Acknowledge and display the added task, alongside the number of tasks in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"Start and end dates are also displayed in a more readable format.","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"### `list` - List all tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"edures888"},"content":"Displays all the tasks in the list","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"edures888"},"content":"`list`","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"edures888"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"edures888"},"content":"Current tasks in list:","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"edures888"},"content":"1. [Todo] [] exampleTask","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"edures888"},"content":"If there are any tasks in the list, they are displayed.","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"edures888"},"content":"### `mark` - Mark task","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"edures888"},"content":"Changes the status of a task to completed in the list","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"edures888"},"content":"Task is specified by its position in the list","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"edures888"},"content":"Format: `mark {position number}`","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"edures888"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"edures888"},"content":"`mark 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"edures888"},"content":"Given the current list below, ","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"edures888"},"content":"Current tasks in list:","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"edures888"},"content":"1. [Todo] [] exampleTask","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"edures888"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"edures888"},"content":"Well done. Task has been marked as completed:","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"edures888"},"content":"[Todo] [O] exampleTask","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"edures888"},"content":"Acknowledge marking of task and displays current details of task.","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"edures888"},"content":"Task should now have an `[O]` indication. ","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"edures888"},"content":"### `unmark` - Unmark task","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"edures888"},"content":"Removes the completed status of a task in the list","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"edures888"},"content":"Task is specified by its position in the list","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"edures888"},"content":"Format: `unmark {position number}`","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"edures888"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"edures888"},"content":"`unmark 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"edures888"},"content":"Given the current list below,","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"edures888"},"content":"Current tasks in list:","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"edures888"},"content":"1. [Todo] [O] exampleTask","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"edures888"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"edures888"},"content":"Got it. Task has been unmarked:","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"edures888"},"content":"[Todo] [] exampleTask","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"edures888"},"content":"Acknowledge marking of task and displays current details of task.","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"edures888"},"content":"Task should now have an `[]` indication instead of `[O]`.","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"edures888"},"content":"### `delete` - Delete task","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"edures888"},"content":" ","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"edures888"},"content":"Removes a task from the list","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"edures888"},"content":"Task is specified by its position in the list","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":148,"author":{"gitId":"edures888"},"content":"Format: `delete {position number}`","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"edures888"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":151,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"edures888"},"content":"`delete 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":154,"author":{"gitId":"edures888"},"content":"Given the current list below,","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"edures888"},"content":"Current tasks in list:","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"edures888"},"content":"1. [Todo] [] exampleTask","lastModifiedDate":"2023-02-18"},{"lineNumber":159,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":160,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":161,"author":{"gitId":"edures888"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":163,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":164,"author":{"gitId":"edures888"},"content":"Task removed:","lastModifiedDate":"2023-02-18"},{"lineNumber":165,"author":{"gitId":"edures888"},"content":"[Todo] [] exampleTask","lastModifiedDate":"2023-02-18"},{"lineNumber":166,"author":{"gitId":"edures888"},"content":"Remaining task count: 0","lastModifiedDate":"2023-02-18"},{"lineNumber":167,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":168,"author":{"gitId":"edures888"},"content":"Acknowledge deleting of task and displays details of removed task.","lastModifiedDate":"2023-02-18"},{"lineNumber":169,"author":{"gitId":"edures888"},"content":"The remaining number of tasks in the list is also shown. ","lastModifiedDate":"2023-02-18"},{"lineNumber":170,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":171,"author":{"gitId":"edures888"},"content":"### `search` - Search amongst task list","lastModifiedDate":"2023-02-18"},{"lineNumber":172,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":173,"author":{"gitId":"edures888"},"content":"Searches through the names of the tasks in the list with a given keyword.","lastModifiedDate":"2023-02-18"},{"lineNumber":174,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":175,"author":{"gitId":"edures888"},"content":"Format: `search {keyword phrase}`","lastModifiedDate":"2023-02-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"edures888"},"content":"`search example`","lastModifiedDate":"2023-02-18"},{"lineNumber":180,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":181,"author":{"gitId":"edures888"},"content":"Given the current list below,","lastModifiedDate":"2023-02-18"},{"lineNumber":182,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":183,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":184,"author":{"gitId":"edures888"},"content":"Current tasks in list:","lastModifiedDate":"2023-02-18"},{"lineNumber":185,"author":{"gitId":"edures888"},"content":"1. [Todo] [] exampleTask","lastModifiedDate":"2023-02-18"},{"lineNumber":186,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":190,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":191,"author":{"gitId":"edures888"},"content":"Here are the search results:","lastModifiedDate":"2023-02-18"},{"lineNumber":192,"author":{"gitId":"edures888"},"content":"1. [Todo] [] exampleTask","lastModifiedDate":"2023-02-18"},{"lineNumber":193,"author":{"gitId":"edures888"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":194,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":195,"author":{"gitId":"edures888"},"content":"Tasks that matches the keyword (even if only partially matching), will be listed out.","lastModifiedDate":"2023-02-18"},{"lineNumber":196,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":197,"author":{"gitId":"edures888"},"content":"### `bye` - Exit","lastModifiedDate":"2023-02-18"},{"lineNumber":198,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":199,"author":{"gitId":"edures888"},"content":"Exits the application","lastModifiedDate":"2023-02-18"},{"lineNumber":200,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":201,"author":{"gitId":"edures888"},"content":"Example of usage:","lastModifiedDate":"2023-02-18"},{"lineNumber":202,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":203,"author":{"gitId":"edures888"},"content":"`bye`","lastModifiedDate":"2023-02-18"},{"lineNumber":204,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":205,"author":{"gitId":"edures888"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":207,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":208,"author":{"gitId":"edures888"},"content":"Farewell, closing in a bit...","lastModifiedDate":"2023-02-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":210,"author":{"gitId":"edures888"},"content":"Displays acknowledgement message and application will close after 2 seconds.","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"edures888":185,"-":25}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":" * Main driver class for Duke","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"public class Duke {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    public static final String TERMINATION_INDICATION \u003d \"TERMINATE\";","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"     * Constructor to initialize required components","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"     * @throws DukeException If failed to recover list of tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    public Duke() throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"        tasks \u003d storage.recoverList();","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"     * Executes commands given user input","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"     * @param input User input","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"     * @return String of result from command execution","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"     * @throws DukeException If command is invalid or there is storage saving issues","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    public String executeCommand(String input) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"        Command command \u003d parser.parse(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"        if (command \u003d\u003d Parser.EXIT_COMMAND) {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"            return TERMINATION_INDICATION;","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        String result \u003d command.execute(tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"        storage.saveTaskChangesToFile(tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"        return result;","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":41}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":" * General exception for the Duke command for displaying messages to user","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    private static final String CUSTOM_PREFIX \u003d \"Something\u0027s not right.\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"     * Constructor for DukeException that adds a prefix to the given message","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"     * @param message Main body of exception message","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"        super(CUSTOM_PREFIX + message);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":17}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import java.util.concurrent.ScheduledExecutorService;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import duke.client.Main;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"public class Launcher {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    private static ScheduledExecutorService scheduledExecutor;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    private static final int EXIT_DELAY \u003d 2;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"     * Executes exiting of the application","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    public static void exit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"        Platform.exit();","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"        scheduledExecutor.shutdown();","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"     * Schedules the exit of the application with a delay","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    public static void scheduleExit() {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"        scheduledExecutor \u003d Executors.newSingleThreadScheduledExecutor();","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"        scheduledExecutor.schedule(Launcher::exit, EXIT_DELAY, TimeUnit.SECONDS);","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"edures888":36}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import duke.commands.SearchCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":" * Class that parses user inputs into commands for Duke","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    public static final String INVALID_COMMAND_EXCEPTION_MESSAGE \u003d \"Invalid Command received.\";","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    public static final Command EXIT_COMMAND \u003d null;","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    static final String EXIT_COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    private String getCommandWord(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"        int firstWhitespaceIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"        if (firstWhitespaceIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"            return input;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"            return input.substring(0, firstWhitespaceIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"     * Parses user input into a Command","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"     * @param input User input","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"     * @return Support Duke command","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"     * @throws DukeException If command keyword in input is invalid","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"        String commandWord \u003d getCommandWord(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"        Command command;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"            command \u003d new TodoCommand(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"            command \u003d new DeadlineCommand(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"            command \u003d new EventCommand(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"            command \u003d new MarkCommand(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"            command \u003d new UnmarkCommand(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"            command \u003d new DeleteCommand(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"            command \u003d new ListCommand(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"        case SearchCommand.COMMAND_WORD:","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"            command \u003d new SearchCommand(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"        case EXIT_COMMAND_WORD:","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"            command \u003d EXIT_COMMAND;","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"            throw new DukeException(INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"edures888"},"content":"        return command;","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":74}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import java.io.File;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":" * Storage class that handles saving and loading of task data","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    private static final String SYSTEM_PATH_PROPERTY \u003d \"user.dir\";","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    private static final String SAVED_FILE_NAME \u003d \"savedTasks.txt\";","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    private static final String SAVED_FILE_PATH \u003d System.getProperty(SYSTEM_PATH_PROPERTY);","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    private static final String IO_EXCEPTION_MESSAGE \u003d \"I/O error occurred while retrieving list from save.\";","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    private static final String FILE_HANDLING_EXCEPTION_MESSAGE \u003d","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"            \"File error occurred while retrieving list from save.\";","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    private Path saveFilePath;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"     * Constructor for Storage to store file path of saved file","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"    Storage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        saveFilePath \u003d Paths.get(SAVED_FILE_PATH, SAVED_FILE_NAME);","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"     * Recovers tasks from save file","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"     * @return List of tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"     * @throws DukeException If save file path or save file itself is invalid","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"    public TaskList recoverList() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"        // Check if file does not exist","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"        File saveFile \u003d saveFilePath.toFile();","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"            return new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"        // Serialize task list from existing file","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"        try (FileInputStream fileInputStream \u003d new FileInputStream(saveFilePath.toString());","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"             ObjectInputStream objectInputStream \u003d new ObjectInputStream(fileInputStream)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"            return (TaskList) objectInputStream.readObject();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"            throw new DukeException(FILE_HANDLING_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"            throw new DukeException(IO_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"     * Saves current list of tasks to file","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"     * @throws DukeException If save file path or save file itself is invalid","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"    public void saveTaskChangesToFile(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"        try (FileOutputStream fileOutputStream \u003d new FileOutputStream(saveFilePath.toString());","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"             ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(fileOutputStream)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"            objectOutputStream.writeObject(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"            objectOutputStream.flush();","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"edures888"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"edures888"},"content":"            throw new DukeException(FILE_HANDLING_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"edures888"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"            throw new DukeException(IO_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":78}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import java.util.List;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":" * List data structure to store the tasks in Duke","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    private static final String INVALID_INDEX_EXCEPTION \u003d \"Invalid task index given for Mark/Unmark/Delete command.\";","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    private static final String ADDED_TASK_RESPONSE \u003d \"Task added:\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    private static final String REMAINING_TASK_RESPONSE \u003d \"\\nRemaining task count: \";","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    private static final String REMOVE_TASK_RESPONSE \u003d \"Task removed:\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    private static final String LIST_INDEX_SEPARATOR \u003d \". \";","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    private ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"        listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"     * Add a task to the list","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"     * @param task Task to be added","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"     * @return String result of adding task","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        int count \u003d listOfTasks.size() - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        return ADDED_TASK_RESPONSE + listOfTasks.get(count) + REMAINING_TASK_RESPONSE","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"                + listOfTasks.size();","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"     * Mark task in list as completed","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"     * @param taskIndex Index of task in list","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"     * @return Result of marking task","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"     * @throws DukeException If index is invalid","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"    public String markTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"            return listOfTasks.get(taskIndex - 1).mark();","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"            throw new DukeException(INVALID_INDEX_EXCEPTION);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"     * Unmark task in list as completed","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"     * @param taskIndex Index of task in list","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"     * @return String result of unmarking task","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"     * @throws DukeException If index is invalid","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"    public String unmarkTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"            return listOfTasks.get(taskIndex - 1).unmark();","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"            throw new DukeException(INVALID_INDEX_EXCEPTION);","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"edures888"},"content":"     * Delete task in list","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"     * @param taskIndex Index of task in list","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"edures888"},"content":"     * @return String result of deleting task","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"edures888"},"content":"     * @throws DukeException If index is invalid","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"edures888"},"content":"    public String deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"edures888"},"content":"            Task toRemove \u003d listOfTasks.get(taskIndex - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"edures888"},"content":"            listOfTasks.remove(taskIndex - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"edures888"},"content":"            return REMOVE_TASK_RESPONSE + toRemove.toString() + REMAINING_TASK_RESPONSE + listOfTasks.size();","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"edures888"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"edures888"},"content":"            throw new DukeException(INVALID_INDEX_EXCEPTION);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"edures888"},"content":"     * Searches list of tasks for any that has similar keyword","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"edures888"},"content":"     * @param keyword Word to be searched amongst tasks","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"edures888"},"content":"     * @return String result of all matched tasks","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"edures888"},"content":"    public String search(String keyword) {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"edures888"},"content":"        Stream\u003cTask\u003e taskStream \u003d listOfTasks.stream();","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"edures888"},"content":"        Stream\u003cTask\u003e filteredTaskStream \u003d taskStream.filter(task -\u003e task.hasKeyword(keyword));","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"edures888"},"content":"        List\u003cTask\u003e list \u003d filteredTaskStream.collect(Collectors.toList());","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"edures888"},"content":"        TaskList filteredTasks \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"edures888"},"content":"        ArrayList\u003cTask\u003e arrayList \u003d new ArrayList\u003c\u003e(list);","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"edures888"},"content":"        filteredTasks.setListOfTasks(arrayList);","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"edures888"},"content":"        return filteredTasks.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"edures888"},"content":"    private void setListOfTasks(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"edures888"},"content":"        this.listOfTasks \u003d list;","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"edures888"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"edures888"},"content":"        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"edures888"},"content":"            result.append(System.lineSeparator())","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"edures888"},"content":"                    .append(i + 1).append(LIST_INDEX_SEPARATOR)","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"edures888"},"content":"                    .append(listOfTasks.get(i));","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"edures888"},"content":"        return result.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":122}},{"path":"src/main/java/duke/client/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":" * Adapted from SE-EDU JavaFX tutorial https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"package duke.client;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import java.net.URL;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import duke.client.components.MainWindow;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    private static final String RESOURCE_PATH \u003d \"/view/MainWindow.fxml\";","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"            Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"            URL mainWindowResource \u003d Main.class.getResource(RESOURCE_PATH);","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(mainWindowResource);","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"            AnchorPane anchorPane \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"            Scene scene \u003d new Scene(anchorPane);","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"            stage.show();","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"        } catch (IOException | DukeException exception) {","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"            exception.printStackTrace();","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"    public void stop() {","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"edures888":46}},{"path":"src/main/java/duke/client/components/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":" * Adapted from SE-EDU JavaFX tutorial https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"package duke.client.components;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import java.net.URL;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    private static final String RESOURCE_PATH \u003d \"/view/DialogBox.fxml\";","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"    private TextFlow dialogText;","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    private DialogBox(String text, Image image) {","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"            URL dialogBoxResource \u003d MainWindow.class.getResource(RESOURCE_PATH);","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(dialogBoxResource);","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"            exception.printStackTrace();","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"        dialogText.getChildren().add(new Text(text));","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"        displayPicture.setImage(image);","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"    private void flip() {","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"        ObservableList\u003cNode\u003e childrenList \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"        FXCollections.reverse(childrenList);","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"        this.getChildren().setAll(childrenList);","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"    public static DialogBox getDialog(String text, Image image, boolean isFlipped) {","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"        DialogBox dialog \u003d new DialogBox(text, image);","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"        if (isFlipped) {","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"            dialog.flip();","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"        return dialog;","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"edures888":67}},{"path":"src/main/java/duke/client/components/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":" * Adapted from SE-EDU JavaFX tutorial https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"package duke.client.components;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import duke.Launcher;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    public static final String EXIT_MESSAGE \u003d \"Farewell, closing in a bit...\";","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    public static final String GREET_MESSAGE \u003d \"Hello, I\u0027m Ekud! What can I do for you?\";","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    enum MessageOwner {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        DUKE,","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"        USER","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    private static final String USER_IMAGE_PATH \u003d \"/images/doomer.jpg\";","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"    private static final String DUKE_IMAGE_PATH \u003d \"/images/chad.jpg\";","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"    private InputStream userImageResource \u003d this.getClass().getResourceAsStream(USER_IMAGE_PATH);","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"    private InputStream dukeImageResource \u003d this.getClass().getResourceAsStream(DUKE_IMAGE_PATH);","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"    private final Image userImage \u003d new Image(userImageResource);","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"    private final Image dukeImage \u003d new Image(dukeImageResource);","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"    private boolean isExiting \u003d false;","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"     * Initializes main window component in GUI","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"        showStartMessage();","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"        // Stop accepting inputs if exit is scheduled","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"edures888"},"content":"        if (isExiting) {","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"edures888"},"content":"            return;","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"edures888"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"edures888"},"content":"        displayMessage(input, MessageOwner.USER);","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"edures888"},"content":"        String response;","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"edures888"},"content":"            response \u003d duke.executeCommand(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"edures888"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"edures888"},"content":"            response \u003d exception.getMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"edures888"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"edures888"},"content":"        if (response.equals(Duke.TERMINATION_INDICATION)) {","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"edures888"},"content":"            isExiting \u003d true;","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"edures888"},"content":"            showExitMessage();","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"edures888"},"content":"            Launcher.scheduleExit();","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"edures888"},"content":"            return;","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"edures888"},"content":"        displayMessage(response, MessageOwner.DUKE);","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"edures888"},"content":"    public void showStartMessage() {","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"edures888"},"content":"        displayMessage(GREET_MESSAGE, MessageOwner.DUKE);","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"edures888"},"content":"    public void showExitMessage() {","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"edures888"},"content":"        displayMessage(EXIT_MESSAGE, MessageOwner.DUKE);","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"edures888"},"content":"    private void displayMessage(String message, MessageOwner owner) {","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"edures888"},"content":"        Image ownerImage \u003d owner.equals(MessageOwner.DUKE) ? dukeImage : userImage;","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"edures888"},"content":"        boolean isFlipped \u003d owner.equals(MessageOwner.DUKE);","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"edures888"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"edures888"},"content":"                DialogBox.getDialog(message, ownerImage, isFlipped)","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"edures888"},"content":"        );","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"edures888":112}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":" * Abstract Parent class for all support commands","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    /** User input with arguments */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    private String input;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"     * Class constructor for this Command class using user input","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"     * @param input User input with arguments for command execution","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    public Command(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"     * Executes the respective command","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"     * @param tasks List of tasks as target for execution","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"     * @return Execution string result","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"     * @throws DukeException If execution encounters","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"    public abstract String execute(TaskList tasks) throws DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"    public String getInput() {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"        return input;","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":34}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import duke.tasks.DeadlineTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":" * Command to create a Deadline task","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    private static final String DEADLINE_PREFIX \u003d \"/by \";","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"     * Constructor for command that creates a Deadline task","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"        super(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        String input \u003d getInput();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"            // Prepare arguments for DeadlineTask","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"            int prefixIndex \u003d input.indexOf(DEADLINE_PREFIX);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"            String taskName \u003d input.substring(COMMAND_WORD.length(), prefixIndex - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"            String deadline \u003d input.substring(prefixIndex + DEADLINE_PREFIX.length());","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"            String result \u003d tasks.addTask(DeadlineTask.createTask(taskName, deadline));","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"            return result;","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"            throw new DukeException(Parser.INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":43}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":" * Command to delete a task from the list","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"     * Constructor for command that deletes a task","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"        super(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"        String input \u003d getInput();","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"            // Prepare argument for deleteTask","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"            String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"            int taskIndex \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"            String result \u003d tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"            return result;","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"            throw new DukeException(Parser.INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":39}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":" * Command to create an Event task","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    private static final String PERIOD_BEGIN_PREFIX \u003d \"/from \";","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    private static final String PERIOD_END_PREFIX \u003d \"/to \";","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"     * Constructor for command that creates an Event task","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"        super(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"        String input \u003d getInput();","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"            // Prepare arguments for EventTask","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"            int firstPrefixIndex \u003d input.indexOf(PERIOD_BEGIN_PREFIX);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"            int secondPrefixIndex \u003d input.indexOf(PERIOD_END_PREFIX);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"            // Check that prefixes exist in input","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"            if (firstPrefixIndex \u003d\u003d -1 || secondPrefixIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"            String taskName \u003d input.substring(COMMAND_WORD.length(), firstPrefixIndex - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"            String startDateString \u003d input.substring(firstPrefixIndex + PERIOD_BEGIN_PREFIX.length(),","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"                    secondPrefixIndex - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"            String endDateString \u003d input.substring(secondPrefixIndex + PERIOD_END_PREFIX.length());","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"            String result \u003d tasks.addTask(EventTask.createTask(taskName, startDateString, endDateString));","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"            return result;","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"            throw new DukeException(Parser.INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":52}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":" * Command to display all tasks in the list","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    private static final String LIST_RESPONSE \u003d \"Current tasks in list:\";","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"     * Constructor for command that lists current tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"        super(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        String input \u003d getInput();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"        if (!input.equals(COMMAND_WORD)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"            throw new DukeException(Parser.INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"        return LIST_RESPONSE + tasks.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":35}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":" * Command to mark a task as completed","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"     * Constructor for command that marks a task","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"        super(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"        String input \u003d getInput();","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"            // Prepare arguments for marking task","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"            String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"            int taskIndex \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"            String result \u003d tasks.markTask(taskIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"            return result;","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"            throw new DukeException(Parser.INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":39}},{"path":"src/main/java/duke/commands/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commands;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":" * Command that allows user to search the list of tasks with keywords","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"search\";","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    private static final String SEARCH_RESPONSE \u003d \"Here are the task search results:\";","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"     * Constructor for command that searches through list of tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    public SearchCommand(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        super(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        String input \u003d getInput();","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"            int firstWhitespaceIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"            if (firstWhitespaceIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"            String keyword \u003d input.substring(firstWhitespaceIndex + 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"            String result \u003d tasks.search(keyword);","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"            return SEARCH_RESPONSE + result;","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"            throw new DukeException(Parser.INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"edures888":42}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import duke.tasks.TodoTask;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":" * Command to create a Todo task","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"     * Constructor for command that creates a Todo task","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        super(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        // Prepare arguments for Todo task","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        String input \u003d getInput();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"        String taskName \u003d input.substring(COMMAND_WORD.length());","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"            throw new DukeException(Parser.INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        String result \u003d tasks.addTask(new TodoTask(taskName));","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        return result;","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":38}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":" * Command to unmark a task","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"     * Constructor for command that unmarks a task","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"        super(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"        String input \u003d getInput();","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"            // Prepare task index argument for unmarking task","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"            String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"            int taskIndex \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"            String result \u003d tasks.unmarkTask(taskIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"            return result;","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"            throw new DukeException(Parser.INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"edures888":39}},{"path":"src/main/java/duke/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":" * Class representing a Deadline task","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    static final String DEADLINE_PREFIX_REPLACEMENT \u003d \"BY: \";","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    private static final String INDICATOR \u003d \"[Deadline]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    private static final String INVALID_DATE_EXCEPTION \u003d \"Incompatible date format given for Deadline\";","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    private static final String DATE_FORMAT \u003d \"MMM dd yyyy\";","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"     * Constructor for a Deadline task","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"     * @param name Task\u0027s name","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"     * @param deadline Deadline date for task","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"     * @throws DukeException If name is empty","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    DeadlineTask(String name, LocalDate deadline) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        assert deadline !\u003d null;","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"     * Creates Deadline task using String arguments","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"     * @param name Task\u0027s name","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"     * @param deadline Deadline date for task in String","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"     * @return The created Deadline task","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"     * @throws DukeException If invalid date string is passed in","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"    public static DeadlineTask createTask(String name, String deadline) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"            LocalDate date \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"            return new DeadlineTask(name, date);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"            throw new DukeException(INVALID_DATE_EXCEPTION);","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"     * Formats deadline date","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"     * @param deadline To be formatted into String","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"     * @return Formatted deadline date string","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"    private static String formattedDeadline(LocalDate deadline) {","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"        String formattedDate \u003d deadline.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"        return String.format(Task.EXTRAS_FORMAT_TEMPLATE, DEADLINE_PREFIX_REPLACEMENT + formattedDate);","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"        return INDICATOR + super.toString() + formattedDeadline(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":65}},{"path":"src/main/java/duke/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":" * Class representing an Event task","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    static final String INDICATOR \u003d \"[Event]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    static final String PERIOD_BEGIN_PREFIX_REPLACEMENT \u003d \"FROM: \";","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    static final String PERIOD_END_PREFIX_REPLACEMENT \u003d \" | TO: \";","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    private static final String INVALID_DATE_EXCEPTION \u003d \"Incompatible date format given for start/end of Event\";","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    private static final String DATE_FORMAT \u003d \"MMM dd yyyy\";","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"     * Constructor for Event task","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"     * @param name Task\u0027s name","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"     * @param startDate Start date for period allocated","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"     * @param endDate End date for period allocated","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"     * @throws DukeException If name is empty","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"    EventTask(String name, LocalDate startDate, LocalDate endDate) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"        assert startDate !\u003d null;","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"        assert endDate !\u003d null;","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"     * Formats period allocated for Event task","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"     * @param startDate start Date of period","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"     * @param endDate end Date of period","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"     * @return Formatted period","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"    private static String formattedPeriod(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"        String startDateString \u003d startDate.format(formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"        String endDateString \u003d endDate.format(formatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"        // (FROM: DATE | TO: DATE)","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"        return String.format(Task.EXTRAS_FORMAT_TEMPLATE, PERIOD_BEGIN_PREFIX_REPLACEMENT + startDateString","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"                + PERIOD_END_PREFIX_REPLACEMENT + endDateString);","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"     * Creates an Event task using String arguments","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"     * @param taskName Task\u0027s name","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"     * @param startDateString Start date for allocated in String","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"     * @param endDateString End date for allocated in String","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"     * @return The created Event task","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"     * @throws DukeException If given date strings are of invalid format","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"    public static EventTask createTask(String taskName, String startDateString, String endDateString)","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"            throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"            LocalDate startDate \u003d LocalDate.parse(startDateString);","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"            LocalDate endDate \u003d LocalDate.parse(endDateString);","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"edures888"},"content":"            return new EventTask(taskName, startDate, endDate);","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"edures888"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"edures888"},"content":"            throw new DukeException(INVALID_DATE_EXCEPTION);","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"edures888"},"content":"        return INDICATOR + super.toString() + formattedPeriod(startDate, endDate);","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":81}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":" * Abstract parent class of task classes","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    static final String EXTRAS_FORMAT_TEMPLATE \u003d \" (%s)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    private static final String COMPLETED \u003d \" [O] \";","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    private static final String NOT_COMPLETED \u003d \" [ ] \";","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    private static final String FORMAT_EXCEPTION \u003d \"Invalid format for creating Task\";","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    private static final String MARKED_RESPONSE \u003d \"Well done. Task has been marked as completed:\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    private static final String UNMARKED_RESPONSE \u003d \"Got it. Task has been unmarked:\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    private final String name;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"     * Constructor for a task","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"     * @param name Given task name","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"     * @throws DukeException if no name is provided","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    Task(String name) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"            throw new DukeException(FORMAT_EXCEPTION);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"     * Sets task\u0027s own status to completed","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"     * @return Task marked response","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"    public String mark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"        isCompleted \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"        return MARKED_RESPONSE + this;","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"     * Sets task\u0027s own status to uncompleted","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"     * @return Task marked response","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"    public String unmark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"        return UNMARKED_RESPONSE + this;","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"     * Checks if name of task contains the keyword","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"     * @param keyword to be checked against the name","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"     * @return Boolean indicating presence of keyword","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"        return name.contains(keyword);","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"        String completionStatus \u003d isCompleted ? COMPLETED : NOT_COMPLETED;","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"        return completionStatus + name;","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":71}},{"path":"src/main/java/duke/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":" * Class representing a Todo task","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    static final String INDICATOR \u003d \"[Todo]\";","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"     * Constructor for a Todo task","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"     * @param name Name of Todo task","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"     * @throws DukeException If name is empty","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    public TodoTask(String name) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"        return INDICATOR + super.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":26}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"\u003c!--Adapted from SE-EDU JavaFX tutorial https://se-education.org/guides/tutorials/javaFx.html--\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"      \u003cTextFlow fx:id\u003d\"dialogText\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"            \u003cInsets left\u003d\"16.0\" right\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"         \u003c/HBox.margin\u003e\u003c/TextFlow\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"edures888":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"\u003c!-- Adapted from SE-EDU JavaFX tutorial https://se-education.org/guides/tutorials/javaFx.html --\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.client.components.MainWindow\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"edures888":20}},{"path":"src/test/java/duke/commmands/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.commmands;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import duke.tasks.TodoTask;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"public class ListCommandTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    static final String NORMAL_INPUT \u003d \"list\";","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    static final String SIMPLE_TASK_NAME \u003d \"simpleTask\";","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    static final String CORRECT_TASK_OUTPUT \u003d \"Current tasks in list:\"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"            + System.lineSeparator() + \"1. [Todo] [ ] simpleTask\";","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    void execute_simpleInput_outputsCorrectly() throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"        tasks.addTask(new TodoTask(SIMPLE_TASK_NAME));","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"        ListCommand listCommand \u003d new ListCommand(NORMAL_INPUT);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"        assertEquals(CORRECT_TASK_OUTPUT, listCommand.execute(tasks));","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"edures888":26}},{"path":"src/test/java/duke/tasks/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    static final String SPACED_TASK_NAME \u003d \"deadline test\";","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    static final String VALID_DEADLINE \u003d \"2023-01-27\";","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    static final String CORRECT_TASK_OUTPUT \u003d \"[Deadline] [ ] deadline test (BY: Jan 27 2023)\";","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    void createTask_normalInput_createdCorrectly() throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"        DeadlineTask task \u003d DeadlineTask.createTask(SPACED_TASK_NAME, VALID_DEADLINE);","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"        assertEquals(CORRECT_TASK_OUTPUT, task.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"edures888":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"todo task1","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"deadline task2 /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"event task3 /from FirstDay /to SecondDay","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"edures888":1,"-":20}}]
