[{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"    private final String deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"    DeadlineTask(String name, String deadline) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"        this(argumentCheck(deadline), name, deadline);","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    private DeadlineTask(Void ignored, String name, String deadline) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"        this.deadline \u003d deadline.replace(\"/by\", \"by:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    private static Void argumentCheck(String deadline) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"        if (deadline.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"            throw new DukeException(\"Empty deadline for deadline task\");","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"        return null;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        return \"[D]\" + super.toString() + \" (\" + deadline + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"    private static Scanner scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"    private static DukeList taskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"    public static void initialiseIO() {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"        System.out.println(DukeIO.LOGO);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"        System.out.println(DukeIO.wrapContent(DukeIO.GREET));","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"        taskList \u003d new DukeList();","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    public static void waitForInput() {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"        while(true) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"                if (input.startsWith(\"mark \")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"                    int taskIndex \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"                    taskList.markTask(taskIndex);","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"                    continue;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"                if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"                    int taskIndex \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"                    taskList.unmarkTask(taskIndex);","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"                    continue;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"                if (input.startsWith(\"delete \")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"                    int taskIndex \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"                    taskList.deleteTask(taskIndex);","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"                    continue;","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"                if (input.equals(DukeIO.terminateString)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"                    System.out.println(DukeIO.wrapContent(DukeIO.FAREWELL));","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"                    return;","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"                if (input.equals(DukeIO.listString)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"                    System.out.println(DukeIO.wrapContent(taskList.toString()));","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"                    continue;","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"                taskList.addTask(input);","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"                System.out.println(DukeIO.wrapContent(e.getMessage()));","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"        initialiseIO();","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"        waitForInput();","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"edures888":46,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"    DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":6}},{"path":"src/main/java/DukeIO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"public interface DukeIO {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"    String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"    String GREET \u003d \"Hello, I\u0027m Ekud! What can I do for you?\";","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    String FAREWELL \u003d \"Bye. Always at your service.\";","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    String terminateString \u003d \"bye\";","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    String listString \u003d \"list\";","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    static String wrapContent(String content) {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"        return \"\\t~~~\\n\\t\" + content + \"\\n\\t~~~\";","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":19}},{"path":"src/main/java/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"public class DukeList {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"    DukeList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"    public void addTask(String input) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"        String taskName;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"        if (input.startsWith(\"todo\")){","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"            taskName \u003d input.substring(5);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"            if (taskName.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"                throw new DukeException(\"Empty description of todo\");","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"            taskList.add(new ToDoTask(taskName));","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"            int firstSlashIndex \u003d input.indexOf(\"/\");","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"            taskName \u003d input.substring(9, firstSlashIndex - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"            String deadline \u003dinput.substring(firstSlashIndex);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"            taskList.add(new DeadlineTask(taskName, deadline));","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"            int firstSlashIndex \u003d input.indexOf(\"/\");","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"            taskName \u003d input.substring(6, firstSlashIndex - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"            String period \u003dinput.substring(firstSlashIndex);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"            taskList.add(new EventTask(taskName, period));","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"            throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        int count \u003d taskList.size() - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"        System.out.println(DukeIO.wrapContent(\"Task added:\\n\\t\\t\" + taskList.get(count) + \"\\n\\tNow you have \"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"                + taskList.size() + \" tasks in the list.\"));","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"    public void markTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        if (taskIndex \u003e taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"            throw new DukeException(\"Invalid task index specified\");","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"        taskList.get(taskIndex - 1).markTask();","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"    public void unmarkTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"        if (taskIndex \u003e taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"            throw new DukeException(\"Invalid task index specified\");","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"        taskList.get(taskIndex - 1).unmarkTask();","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"    public void deleteTask(int taskIndex) throws  DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"        if (taskIndex \u003e taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"            throw new DukeException(\"Invalid task index specified\");","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"        Task toRemove \u003d taskList.get(taskIndex - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"        taskList.remove(taskIndex - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"        System.out.println(DukeIO.wrapContent(\"Task removed:\\n\\t\\t\" + toRemove.toString() + \"\\n\\t\" + taskList.size() + \" tasks remaining in list.\"));","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"        result.append(\"Current tasks in list:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"        for (int i\u003d0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"            result.append(\"\\n\\t\").append(i + 1).append(\". \").append(taskList.get(i));","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"        return result.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":65}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"    private final String period;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"    EventTask(String name, String period) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"        this(argumentCheck(period), name, period);","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"    private EventTask(Void ignored, String name, String period) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"        this.period \u003d period.replace(\"/from\", \"from:\").replace(\"/to\", \"to:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    private static Void argumentCheck(String period) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"        if (period.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"            throw new DukeException(\"Empty period for event task\");","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"        return null;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        return \"[E]\" + super.toString() + \" (\" + period + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":22}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"    private static final String COMPLETED \u003d \"[O]\";","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"    private static final String NOT_COMPLETED \u003d \"[ ]\";","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"    private final String name;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"    Task(String name) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"            throw new DukeException(\"Empty description for task\");","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    public void markTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"        isCompleted \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"        System.out.println(DukeIO.wrapContent(\"Well done. Task has been marked as completed:\\n\\t\\t\" + this));","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"        System.out.println(DukeIO.wrapContent(\"Got it. Task has been unmarked:\\n\\t\\t\" + this));","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"        return (isCompleted ? COMPLETED : NOT_COMPLETED) + \" \" + name;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":27}},{"path":"src/main/java/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"public class ToDoTask extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"    ToDoTask(String name) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"todo task1","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"deadline task2 /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"event task3 /from FirstDay /to SecondDay","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":11}}]
