[{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    private static final String INDICATOR \u003d \"[Deadline]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"    static final String INPUT_PREFIX \u003d \"deadline \";","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    private static final String FORMAT_EXCEPTION_MESSAGE \u003d \"Invalid format for creating Deadline Task\";","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    private static final String INVALID_DATE_EXCEPTION \u003d \"Incompatible date format given for Deadline\";","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    static final String DEADLINE_PREFIX \u003d \"/by \";","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    static final String DEADLINE_PREFIX_REPLACEMENT \u003d \"BY: \";","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    DeadlineTask(String name, LocalDate deadline) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    static DeadlineTask createDeadline(String text) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"        int prefixIndex \u003d text.indexOf(DEADLINE_PREFIX);","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"        if (prefixIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"            throw new DukeException(FORMAT_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"            String taskName \u003d text.substring(INPUT_PREFIX.length(), prefixIndex - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"            String deadline \u003d text.substring(prefixIndex);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"            LocalDate date \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"            return new DeadlineTask(taskName, date);","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"            throw new DukeException(FORMAT_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"            throw new DukeException(INVALID_DATE_EXCEPTION);","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"    private static String formattedDeadline (LocalDate deadline) {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"        String formattedDate \u003d deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"        return String.format(Task.EXTRAS_FORMAT_TEMPLATE, formattedDate);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"        return INDICATOR + super.toString() + formattedDeadline(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":46}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"    private static Scanner scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"    private static DukeList taskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    public static void initialiseDuke() {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"            scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"            System.out.println(DukeIO.LOGO);","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"            System.out.println(DukeIO.wrapContent(DukeIO.GREET));","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"            taskList \u003d new DukeList();","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"            System.out.println(DukeIO.wrapContent(e.getMessage()));","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    static void waitForInput() {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"        while(true) {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"                if (input.startsWith(DukeIO.MARK_COMMAND)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"                    taskList.markTask(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"                    continue;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"                if (input.startsWith(DukeIO.UNMARK_COMMAND)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"                    taskList.unmarkTask(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"                    continue;","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"                if (input.startsWith(DukeIO.DELETE_COMMAND)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"                    taskList.deleteTask(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"                    continue;","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"                if (input.equals(DukeIO.FAREWELL_COMMAND)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"                    System.out.println(DukeIO.wrapContent(DukeIO.FAREWELL));","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"                    return;","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"                if (input.equals(DukeIO.LIST_COMMAND)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"                    System.out.println(DukeIO.wrapContent(taskList.toString()));","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"                    continue;","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"                if (Task.isCreateTaskCommand(input)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"                    taskList.addTask(input);","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"                    continue;","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"                throw new DukeException(DukeIO.INVALID_COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"                System.out.println(DukeIO.wrapContent(e.getMessage()));","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"        initialiseDuke();","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"        waitForInput();","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"edures888":53,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"    private static final String CUSTOM_PREFIX \u003d \"Something\u0027s not right.\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"    DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"        super(CUSTOM_PREFIX + message);","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":6}},{"path":"src/main/java/DukeIO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"public interface DukeIO {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"    String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"    String GREET \u003d \"Hello, I\u0027m Ekud! What can I do for you?\";","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    String FAREWELL \u003d \"Bye. Always at your service.\";","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    String FAREWELL_COMMAND \u003d \"bye\";","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    String MARK_COMMAND \u003d \"mark \";","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    String UNMARK_COMMAND \u003d \"unmark \";","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    String DELETE_COMMAND \u003d \"delete \";","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    String INVALID_COMMAND_EXCEPTION_MESSAGE \u003d \"Invalid Command received.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    String LEFT_WRAP \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    String RIGHT_WRAP \u003d \"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    String INDENT \u003d \"    \";","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    static String wrapContent(String content) {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"        return LEFT_WRAP + content + RIGHT_WRAP;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":25}},{"path":"src/main/java/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"import java.io.*;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"public class DukeList implements Serializable {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"    private static final String SAVED_FILE_PATH \u003d \"./savedTasks.txt\";","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"    private static final String IO_EXCEPTION_MESSAGE \u003d \"I/O error occurred while retrieving list from save.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    private static final String FILE_HANDLING_EXCEPTION \u003d \"File error occurred while retrieving list from save.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    private static final String INVALID_INDEX_EXCEPTION \u003d \"Invalid task index given for Mark/Unmark/Delete command.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    private static final String LIST_RESPONSE \u003d \"Current tasks in list:\";","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    private static final String ADDED_TASK_RESPONSE \u003d \"Task added:\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    private static final String REMAINING_TASK_RESPONSE \u003d\"\\nRemaining task count: \";","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    private static final String REMOVE_TASK_RESPONSE \u003d \"Task removed:\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    private static final String LIST_INDEX_SEPARATOR \u003d \". \";","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    DukeList() throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"        taskList \u003d initialiseListFromFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    private ArrayList\u003cTask\u003e initialiseListFromFile() throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"        File file \u003d new File(SAVED_FILE_PATH);","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"        try (FileInputStream fileInputStream \u003d new FileInputStream(SAVED_FILE_PATH);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"             ObjectInputStream objectInputStream","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"                     \u003d new ObjectInputStream(fileInputStream)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"            return (ArrayList\u003cTask\u003e) objectInputStream.readObject();","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"            throw new DukeException(FILE_HANDLING_EXCEPTION);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"            throw new DukeException(IO_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"    private void saveChangesToFile() throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"        try (FileOutputStream fileOutputStream","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"                \u003d new FileOutputStream(SAVED_FILE_PATH);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"        ObjectOutputStream objectOutputStream","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"                \u003d new ObjectOutputStream(fileOutputStream)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"            objectOutputStream.writeObject(taskList);","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"            objectOutputStream.flush();","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"            throw new DukeException(FILE_HANDLING_EXCEPTION);","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"            throw new DukeException(IO_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"    public void addTask(String input) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"        Task task \u003d Task.parseTaskFromInput(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"        saveChangesToFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"        int count \u003d taskList.size() - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"        System.out.println(DukeIO.wrapContent(ADDED_TASK_RESPONSE + taskList.get(count) + REMAINING_TASK_RESPONSE","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"                + taskList.size()));","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"    public void markTask(String input) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"            String indexString \u003d input.substring(DukeIO.MARK_COMMAND.length());","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"            int taskIndex \u003d Integer.parseInt(indexString);","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"            if (taskIndex \u003e taskList.size()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"                throw new DukeException(INVALID_INDEX_EXCEPTION);","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"            taskList.get(taskIndex - 1).markTask();","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"edures888"},"content":"            saveChangesToFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"edures888"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"edures888"},"content":"            throw new DukeException(INVALID_INDEX_EXCEPTION);","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"edures888"},"content":"    public void unmarkTask(String input) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"edures888"},"content":"            String indexString \u003d input.substring(DukeIO.UNMARK_COMMAND.length());","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"edures888"},"content":"            int taskIndex \u003d Integer.parseInt(indexString);","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"edures888"},"content":"            if (taskIndex \u003e taskList.size()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"edures888"},"content":"                throw new DukeException(INVALID_INDEX_EXCEPTION);","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"edures888"},"content":"            taskList.get(taskIndex - 1).unmarkTask();","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"edures888"},"content":"            saveChangesToFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"edures888"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"edures888"},"content":"            throw new DukeException(INVALID_INDEX_EXCEPTION);","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"edures888"},"content":"    public void deleteTask(String input) throws  DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"edures888"},"content":"            String indexString \u003d input.substring(DukeIO.DELETE_COMMAND.length());","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"edures888"},"content":"            int taskIndex \u003d Integer.parseInt(indexString);","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"edures888"},"content":"            if (taskIndex \u003e taskList.size()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"edures888"},"content":"                throw new DukeException(INVALID_INDEX_EXCEPTION);","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"edures888"},"content":"            Task toRemove \u003d taskList.get(taskIndex - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"edures888"},"content":"            taskList.remove(taskIndex - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"edures888"},"content":"            saveChangesToFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"edures888"},"content":"            System.out.println(DukeIO.wrapContent(","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"edures888"},"content":"                    REMOVE_TASK_RESPONSE + toRemove.toString() + REMAINING_TASK_RESPONSE + taskList.size()));","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"edures888"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"edures888"},"content":"            throw new DukeException(INVALID_INDEX_EXCEPTION);","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"edures888"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"edures888"},"content":"        result.append(LIST_RESPONSE);","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"edures888"},"content":"        for (int i\u003d0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"edures888"},"content":"            result.append(\"\\n\").append(i + 1).append(LIST_INDEX_SEPARATOR).append(taskList.get(i));","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"edures888"},"content":"        return result.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":118}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"    static final String INDICATOR \u003d \"[Event]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    static final String INPUT_PREFIX \u003d \"event \";","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    static final String FORMAT_EXCEPTION_MESSAGE \u003d \"Invalid format for creating Event Task\";","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    private static final String INVALID_DATE_EXCEPTION \u003d \"Incompatible date format given for start/end of Event\";","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    static final String PERIOD_BEGIN_PREFIX \u003d \"/from \";","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    static final String PERIOD_BEGIN_PREFIX_REPLACEMENT \u003d \"FROM: \";","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    static final String PERIOD_END_PREFIX \u003d \"/to \";","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    static final String PERIOD_END_PREFIX_REPLACEMENT \u003d \" |TO: \";","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    EventTask(String name, LocalDate startDate, LocalDate endDate) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    private static String formattedPeriod (LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"        // TODO: Abstract into util function","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"        String startDateString \u003d  startDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"        String endDateString \u003d  endDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"        return String.format(Task.EXTRAS_FORMAT_TEMPLATE, PERIOD_BEGIN_PREFIX_REPLACEMENT + startDateString","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"                + PERIOD_END_PREFIX_REPLACEMENT + endDateString);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"    static EventTask createEvent(String text) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        int firstPrefixIndex \u003d text.indexOf(PERIOD_BEGIN_PREFIX);","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"        int secondPrefixIndex \u003d text.indexOf(PERIOD_END_PREFIX);","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"        if (firstPrefixIndex \u003d\u003d -1 || secondPrefixIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"            throw new DukeException(FORMAT_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"            String taskName \u003d text.substring(INPUT_PREFIX.length(), firstPrefixIndex - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"            String startDateString \u003d text.substring(firstPrefixIndex + PERIOD_BEGIN_PREFIX.length(), secondPrefixIndex - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"            String endDateString \u003d text.substring(secondPrefixIndex + PERIOD_END_PREFIX.length());","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"            LocalDate startDate \u003d LocalDate.parse(startDateString);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"            LocalDate endDate \u003d LocalDate.parse(endDateString);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"            return new EventTask(taskName, startDate, endDate);","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"            throw new DukeException(FORMAT_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"            throw new DukeException(INVALID_DATE_EXCEPTION);","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"        return INDICATOR + super.toString() + formattedPeriod(startDate, endDate);","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":55}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"    private static final String COMPLETED \u003d \" [O] \";","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"    private static final String NOT_COMPLETED \u003d \" [ ] \";","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"    static final String EXTRAS_FORMAT_TEMPLATE \u003d \" (%s)\";","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    private static final String FORMAT_EXCEPTION \u003d \"Invalid format for creating Task\";","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"    private static final String MARKED_RESPONSE \u003d \"Well done. Task has been marked as completed:\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    private static final String UNMARKED_RESPONSE \u003d \"Got it. Task has been unmarked:\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    private final String name;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    Task(String name) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"            throw new DukeException(FORMAT_EXCEPTION);","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    public void markTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"        isCompleted \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"        System.out.println(DukeIO.wrapContent(MARKED_RESPONSE + DukeIO.INDENT + this));","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"        System.out.println(DukeIO.wrapContent(UNMARKED_RESPONSE + DukeIO.INDENT + this));","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"    static Task parseTaskFromInput(String input) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        if (input.startsWith(ToDoTask.INPUT_PREFIX)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"            return ToDoTask.createToDo(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"        } else if (input.startsWith(DeadlineTask.INPUT_PREFIX)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"            return  DeadlineTask.createDeadline(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        } else if (input.startsWith(EventTask.INPUT_PREFIX)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"            return EventTask.createEvent(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"        return null;","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"    static boolean isCreateTaskCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"        return input.startsWith(ToDoTask.INPUT_PREFIX) || input.startsWith(DeadlineTask.INPUT_PREFIX)","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"                || input.startsWith(EventTask.INPUT_PREFIX);","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"        return (isCompleted ? COMPLETED : NOT_COMPLETED) + name;","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":51}},{"path":"src/main/java/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"public class ToDoTask extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"    static final String INDICATOR \u003d \"[ToDo]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"    static final String INPUT_PREFIX \u003d \"todo \";","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"    static final String FORMAT_EXCEPTION_MESSAGE \u003d \"Invalid format for creating ToDo Task\";","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"    ToDoTask(String name) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    static ToDoTask createToDo(String text) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"        String taskName \u003d text.substring(INPUT_PREFIX.length());","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"            throw new DukeException(FORMAT_EXCEPTION_MESSAGE);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"        return new ToDoTask(taskName);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"        return INDICATOR + super.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"todo task1","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"deadline task2 /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"event task3 /from FirstDay /to SecondDay","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"edures888":11}}]
