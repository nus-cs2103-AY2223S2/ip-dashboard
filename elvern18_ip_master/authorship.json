[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"# DukePro","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"\u003e “Your mind is for having ideas, not holding them.” – David Allen ([source](https://dansilvestre.com/productivity-quotes/))","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":"DukePro frees your mind of having to remember things you need to do. ","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"It\u0027s,","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"* text-based","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"* easy to learn","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"* ~FAST~ *SUPER* FAST to use","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"All you need to do is,","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"1. download it from [here](https://github.com/elvern18/ip).","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"2. double-click it.","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":"3. add your tasks.","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":"4. let it manage your tasks for you :smile\"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"And it is **FREE**!","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"Features:","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"elvern18"},"content":"- [x] Managing tasks","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"- [ ] Mangaging deadlines (coming soon)","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"elvern18"},"content":"If you are a Java programmer, you can use it to practise Java too. Here\u0027s the main method:","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"```Java","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"        new Duke(DEFAULT_PATH).run();","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"elvern18":26,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"elvern18":1,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"1.[T][X] a","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"2.[D][ ] b            |by: 2012-12-12T12:21:00","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"3.[E][X] c            |from: 12pm to: 1pm","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":"4.[T][X] d","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":"5.[T][ ] qweasdcasdasd","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"elvern18":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"import parser.Parser;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"    Storage storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":"    Ui ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":"    TaskList list;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":"    Parser parser;","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"    final static String DEFAULT_PATH \u003d System.getProperty(\"user.dir\") + File.separator + \"data\" + File.separator + \"duke.txt\";","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"    Duke(String path) throws IOException {","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"elvern18"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"        this.storage \u003d new Storage(path);","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"        this.list \u003d this.storage.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"        ui.printEntry();","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"        while (!this.ui.isClosed) {","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"elvern18"},"content":"            this.parser.parse(input, this.ui, this.list);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"elvern18"},"content":"        this.storage.save(this.list);","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"elvern18"},"content":"        sc.close();","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"elvern18"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"elvern18"},"content":"        new Duke(DEFAULT_PATH).run();","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"elvern18":48,"-":2}},{"path":"src/main/java/duke_exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package duke_exception;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":" * Encapsulates an Exception that may occur from the chatbot.","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"class DukeException extends Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"     * Constructor.","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"     * @param message Exception message.","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"        super(message);","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"elvern18":16}},{"path":"src/main/java/duke_exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package duke_exception;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":" * Encapsulates an Exception when the description of the task is empty.","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"        super(\"☹ OOPS!!! The description of your task cannot be empty.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"elvern18":10}},{"path":"src/main/java/duke_exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package duke_exception;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":" * Encapsulates an Exception when the input is invalid.","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"     * Constructor.","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"    public InvalidInputException() {","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"elvern18":15}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package parser;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"import duke_exception.InvalidInputException;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"import duke_exception.EmptyDescriptionException;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"import task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"import task.ToDo;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"import task.Event;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":" * Parser Class deals with making sense of the user\u0027s command.","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"public class Parser {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"elvern18"},"content":"    final static String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"    final static String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"    final static String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"    final static String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"elvern18"},"content":"    final static String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"    final static String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"    final static String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"    final static String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"    final static String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"    final static DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/d HHmm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"    final static DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"elvern18"},"content":"     * Handles what to do based on the command input.","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"elvern18"},"content":"     * @param input Command input.","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"elvern18"},"content":"     * @param ui User Interface .","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"elvern18"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"elvern18"},"content":"    public void parse(String input, Ui ui, TaskList list) {","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"elvern18"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"elvern18"},"content":"            String[] inputWords \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"elvern18"},"content":"            String command \u003d inputWords[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"elvern18"},"content":"            if (command.equals(EXIT_COMMAND)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"elvern18"},"content":"                ui.printBye();","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"elvern18"},"content":"                ui.isClosed \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"elvern18"},"content":"            } else if (command.equals(LIST_COMMAND)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"elvern18"},"content":"                ui.printGetList(list);","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"elvern18"},"content":"            } else if (command.equals(FIND_COMMAND)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"elvern18"},"content":"                this.handleFind(inputWords, ui, list);","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"elvern18"},"content":"            } else if (isMark(command)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"elvern18"},"content":"                this.handleMark(inputWords, ui, list);","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"elvern18"},"content":"            } else if (isUnmark(command)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"elvern18"},"content":"                this.handleUnmark(inputWords, ui, list);","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"elvern18"},"content":"            } else if (isToDo(command)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"elvern18"},"content":"                this.handleToDo(inputWords, ui, list);","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"elvern18"},"content":"            } else if (isDeadline(command)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"elvern18"},"content":"                this.handleDeadline(inputWords, ui, list);","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"elvern18"},"content":"            } else if (isEvent(command)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"elvern18"},"content":"                this.handleEvent(inputWords, ui, list);","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"elvern18"},"content":"            } else if (command.equals(DELETE_COMMAND)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"elvern18"},"content":"                this.handleDelete(inputWords, ui, list);","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"elvern18"},"content":"            } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"elvern18"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"elvern18"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"elvern18"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"elvern18"},"content":"            ui.printException(e);","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"elvern18"},"content":"     * Handles finding tasks based on a search word.","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"elvern18"},"content":"     * @param inputWords Command input.","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"elvern18"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"elvern18"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"elvern18"},"content":"    public void handleFind(String[] inputWords, Ui ui, TaskList list) {","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"elvern18"},"content":"        String searchWord \u003d inputWords[1];","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"elvern18"},"content":"        ui.printFind(list, searchWord);","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"elvern18"},"content":"     * Handles deleting of task","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"elvern18"},"content":"     * @param inputWords Command input.","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"elvern18"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"elvern18"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"elvern18"},"content":"    public void handleDelete(String[] inputWords, Ui ui, TaskList list) {","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"elvern18"},"content":"        int index \u003d Integer.parseInt(inputWords[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"elvern18"},"content":"        Task task \u003d list.getTask(index - 1);","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"elvern18"},"content":"        list.removeTask(index-1);","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"elvern18"},"content":"        ui.printHandleDelete(task, list);","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"elvern18"},"content":"     * Handles marking of task","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"elvern18"},"content":"     * @param inputWords Command input.","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"elvern18"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"elvern18"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"elvern18"},"content":"    public  void handleMark(String[] inputWords, Ui ui, TaskList list) {","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"elvern18"},"content":"        int index \u003d Integer.parseInt(inputWords[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"elvern18"},"content":"        Task task \u003d list.getTask(index - 1);","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"elvern18"},"content":"        task.mark();","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"elvern18"},"content":"        ui.printHandleMark(task);","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"elvern18"},"content":"     * Handles unmarking of task","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"elvern18"},"content":"     * @param inputWords Command input.","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"elvern18"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-02-04"},{"lineNumber":116,"author":{"gitId":"elvern18"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":118,"author":{"gitId":"elvern18"},"content":"    public void handleUnmark(String[] inputWords, Ui ui, TaskList list) {","lastModifiedDate":"2023-02-03"},{"lineNumber":119,"author":{"gitId":"elvern18"},"content":"        int index \u003d Integer.parseInt(inputWords[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":120,"author":{"gitId":"elvern18"},"content":"        Task task \u003d list.getTask(index - 1);","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"elvern18"},"content":"        task.unmark();","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"elvern18"},"content":"        ui.printHandleUnmark(task);","lastModifiedDate":"2023-02-03"},{"lineNumber":123,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":126,"author":{"gitId":"elvern18"},"content":"     * Handles ToDo task.","lastModifiedDate":"2023-02-04"},{"lineNumber":127,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":128,"author":{"gitId":"elvern18"},"content":"     * @param inputWords Description of task.","lastModifiedDate":"2023-02-04"},{"lineNumber":129,"author":{"gitId":"elvern18"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-02-04"},{"lineNumber":130,"author":{"gitId":"elvern18"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":131,"author":{"gitId":"elvern18"},"content":"     * @throws EmptyDescriptionException If there is no description of taks.","lastModifiedDate":"2023-02-04"},{"lineNumber":132,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"elvern18"},"content":"    public void handleToDo(String[] inputWords, Ui ui, TaskList list) throws EmptyDescriptionException {","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"elvern18"},"content":"        checkEmptyDescription(inputWords);","lastModifiedDate":"2023-02-03"},{"lineNumber":135,"author":{"gitId":"elvern18"},"content":"        String description \u003d inputWords[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":136,"author":{"gitId":"elvern18"},"content":"        Task newTask \u003d new ToDo(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":137,"author":{"gitId":"elvern18"},"content":"        list.addTask(newTask);","lastModifiedDate":"2023-02-03"},{"lineNumber":138,"author":{"gitId":"elvern18"},"content":"        ui.printAddTask(newTask, list);","lastModifiedDate":"2023-02-03"},{"lineNumber":139,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":140,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":141,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":142,"author":{"gitId":"elvern18"},"content":"     * Handles Deadline task.","lastModifiedDate":"2023-02-04"},{"lineNumber":143,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":144,"author":{"gitId":"elvern18"},"content":"     * @param inputWords Description of task.","lastModifiedDate":"2023-02-04"},{"lineNumber":145,"author":{"gitId":"elvern18"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-02-04"},{"lineNumber":146,"author":{"gitId":"elvern18"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":147,"author":{"gitId":"elvern18"},"content":"     * @throws EmptyDescriptionException If there is no description of task.","lastModifiedDate":"2023-02-04"},{"lineNumber":148,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":149,"author":{"gitId":"elvern18"},"content":"    public void handleDeadline(String[] inputWords, Ui ui, TaskList list) throws EmptyDescriptionException {","lastModifiedDate":"2023-02-03"},{"lineNumber":150,"author":{"gitId":"elvern18"},"content":"        checkEmptyDescription(inputWords);","lastModifiedDate":"2023-02-03"},{"lineNumber":151,"author":{"gitId":"elvern18"},"content":"        String[] splitedString \u003d inputWords[1].split(\" /by \");","lastModifiedDate":"2023-02-03"},{"lineNumber":152,"author":{"gitId":"elvern18"},"content":"        String action \u003d splitedString[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":153,"author":{"gitId":"elvern18"},"content":"        String date \u003d splitedString[1]; // in yyyy/mm/d HHMM format","lastModifiedDate":"2023-02-04"},{"lineNumber":154,"author":{"gitId":"elvern18"},"content":"        LocalDateTime inputDateTime \u003d LocalDateTime.parse(date, inputFormatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":155,"author":{"gitId":"elvern18"},"content":"        String outputDateTime \u003d inputDateTime.format(outputFormatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":156,"author":{"gitId":"elvern18"},"content":"        Task newTask \u003d new Deadline(action, outputDateTime);","lastModifiedDate":"2023-02-03"},{"lineNumber":157,"author":{"gitId":"elvern18"},"content":"        list.addTask(newTask);","lastModifiedDate":"2023-02-03"},{"lineNumber":158,"author":{"gitId":"elvern18"},"content":"        ui.printAddTask(newTask, list);","lastModifiedDate":"2023-02-03"},{"lineNumber":159,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":160,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":161,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":162,"author":{"gitId":"elvern18"},"content":"     * Handles Event task.","lastModifiedDate":"2023-02-04"},{"lineNumber":163,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":164,"author":{"gitId":"elvern18"},"content":"     * @param inputWords Description of task.","lastModifiedDate":"2023-02-04"},{"lineNumber":165,"author":{"gitId":"elvern18"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-02-04"},{"lineNumber":166,"author":{"gitId":"elvern18"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":167,"author":{"gitId":"elvern18"},"content":"     * @throws EmptyDescriptionException If there is no description of task.","lastModifiedDate":"2023-02-04"},{"lineNumber":168,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":169,"author":{"gitId":"elvern18"},"content":"    public void handleEvent(String[] inputWords, Ui ui, TaskList list) throws EmptyDescriptionException {","lastModifiedDate":"2023-02-03"},{"lineNumber":170,"author":{"gitId":"elvern18"},"content":"        checkEmptyDescription(inputWords);","lastModifiedDate":"2023-02-03"},{"lineNumber":171,"author":{"gitId":"elvern18"},"content":"        String[] splitedString \u003d inputWords[1].split(\" /from \");","lastModifiedDate":"2023-02-03"},{"lineNumber":172,"author":{"gitId":"elvern18"},"content":"        String action \u003d splitedString[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":173,"author":{"gitId":"elvern18"},"content":"        String duration \u003d splitedString[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":174,"author":{"gitId":"elvern18"},"content":"        String[] fromTo \u003d duration.split(\" /to \");","lastModifiedDate":"2023-02-03"},{"lineNumber":175,"author":{"gitId":"elvern18"},"content":"        String from \u003d fromTo[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":176,"author":{"gitId":"elvern18"},"content":"        String to \u003d fromTo[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":177,"author":{"gitId":"elvern18"},"content":"        Task newTask \u003d new Event(action, from, to);","lastModifiedDate":"2023-02-03"},{"lineNumber":178,"author":{"gitId":"elvern18"},"content":"        list.addTask(newTask);","lastModifiedDate":"2023-02-03"},{"lineNumber":179,"author":{"gitId":"elvern18"},"content":"        ui.printAddTask(newTask, list);","lastModifiedDate":"2023-02-03"},{"lineNumber":180,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":181,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":182,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":183,"author":{"gitId":"elvern18"},"content":"     * Check if the description of the task is empty.","lastModifiedDate":"2023-02-04"},{"lineNumber":184,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":185,"author":{"gitId":"elvern18"},"content":"     * @param inputWords Description of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":186,"author":{"gitId":"elvern18"},"content":"     * @throws EmptyDescriptionException If there is no description of task.","lastModifiedDate":"2023-02-04"},{"lineNumber":187,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":188,"author":{"gitId":"elvern18"},"content":"    public void checkEmptyDescription(String[] inputWords) throws EmptyDescriptionException {","lastModifiedDate":"2023-02-03"},{"lineNumber":189,"author":{"gitId":"elvern18"},"content":"        if (inputWords.length \u003c 2) {","lastModifiedDate":"2023-02-03"},{"lineNumber":190,"author":{"gitId":"elvern18"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-02-03"},{"lineNumber":191,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":192,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":193,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":194,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":195,"author":{"gitId":"elvern18"},"content":"     * Checks if user wants to mark a task.","lastModifiedDate":"2023-02-04"},{"lineNumber":196,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":197,"author":{"gitId":"elvern18"},"content":"     * @param word First word of the user command.","lastModifiedDate":"2023-02-04"},{"lineNumber":198,"author":{"gitId":"elvern18"},"content":"     * @return Yes or no in the form of a boolean, where true is yes and false is no.","lastModifiedDate":"2023-02-04"},{"lineNumber":199,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":200,"author":{"gitId":"elvern18"},"content":"    public boolean isMark(String word) {","lastModifiedDate":"2023-02-03"},{"lineNumber":201,"author":{"gitId":"elvern18"},"content":"        return word.equals(MARK_COMMAND);","lastModifiedDate":"2023-02-03"},{"lineNumber":202,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":203,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":204,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":205,"author":{"gitId":"elvern18"},"content":"     * Checks if user wants to unmark a task.","lastModifiedDate":"2023-02-04"},{"lineNumber":206,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":207,"author":{"gitId":"elvern18"},"content":"     * @param word First word of the user command.","lastModifiedDate":"2023-02-04"},{"lineNumber":208,"author":{"gitId":"elvern18"},"content":"     * @return Yes or no in the form of a boolean, where true is yes and false is no.","lastModifiedDate":"2023-02-04"},{"lineNumber":209,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":210,"author":{"gitId":"elvern18"},"content":"    public boolean isUnmark(String word) {","lastModifiedDate":"2023-02-03"},{"lineNumber":211,"author":{"gitId":"elvern18"},"content":"        return word.equals(UNMARK_COMMAND);","lastModifiedDate":"2023-02-03"},{"lineNumber":212,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":213,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":214,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":215,"author":{"gitId":"elvern18"},"content":"     * Checks if it is a ToDo command.","lastModifiedDate":"2023-02-04"},{"lineNumber":216,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":217,"author":{"gitId":"elvern18"},"content":"     * @param word First word of the user command.","lastModifiedDate":"2023-02-04"},{"lineNumber":218,"author":{"gitId":"elvern18"},"content":"     * @return Yes or no in the form of a boolean, where true is yes and false is no.","lastModifiedDate":"2023-02-04"},{"lineNumber":219,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":220,"author":{"gitId":"elvern18"},"content":"    public boolean isToDo(String word) {","lastModifiedDate":"2023-02-03"},{"lineNumber":221,"author":{"gitId":"elvern18"},"content":"        return word.equals(TODO_COMMAND);","lastModifiedDate":"2023-02-03"},{"lineNumber":222,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":223,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":224,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":225,"author":{"gitId":"elvern18"},"content":"     * Checks if it is a Deadline command.","lastModifiedDate":"2023-02-04"},{"lineNumber":226,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":227,"author":{"gitId":"elvern18"},"content":"     * @param word First word of the user command.","lastModifiedDate":"2023-02-04"},{"lineNumber":228,"author":{"gitId":"elvern18"},"content":"     * @return Yes or no in the form of a boolean, where true is yes and false is no.","lastModifiedDate":"2023-02-04"},{"lineNumber":229,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":230,"author":{"gitId":"elvern18"},"content":"    public boolean isDeadline(String word) {","lastModifiedDate":"2023-02-03"},{"lineNumber":231,"author":{"gitId":"elvern18"},"content":"        return word.equals(DEADLINE_COMMAND);","lastModifiedDate":"2023-02-03"},{"lineNumber":232,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":233,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":234,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":235,"author":{"gitId":"elvern18"},"content":"     * Checks if it is a Event command.","lastModifiedDate":"2023-02-04"},{"lineNumber":236,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":237,"author":{"gitId":"elvern18"},"content":"     * @param word First word of the user command.","lastModifiedDate":"2023-02-04"},{"lineNumber":238,"author":{"gitId":"elvern18"},"content":"     * @return Yes or no in the form of a boolean, where true is yes and false is no.","lastModifiedDate":"2023-02-04"},{"lineNumber":239,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":240,"author":{"gitId":"elvern18"},"content":"    public boolean isEvent(String word) {","lastModifiedDate":"2023-02-03"},{"lineNumber":241,"author":{"gitId":"elvern18"},"content":"        return word.equals(EVENT_COMMAND);","lastModifiedDate":"2023-02-03"},{"lineNumber":242,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":243,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":244,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"elvern18":244}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"import java.io.File;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"import task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"import task.ToDo;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"import task.Event;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":" * Class which deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"public class Storage {","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"    String path;","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"    File file;","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"elvern18"},"content":"    PrintWriter output;","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"    Scanner sc;","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"elvern18"},"content":"     * Constructor.","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"     * @param path File Path.","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"     * @throws IOException if PrintWriter is unable to find a file from the given path.","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"    public Storage(String path) throws IOException {","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"elvern18"},"content":"        this.file \u003d new File(path);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"elvern18"},"content":"        this.sc \u003d new Scanner(file);","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"elvern18"},"content":"        boolean test \u003d this.sc.hasNextLine(); // for some reason this","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"elvern18"},"content":"        this.output \u003d new PrintWriter(path);","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"elvern18"},"content":"     * Returns the list of tasks from the data file.","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"elvern18"},"content":"     * From the data file, iterate through each line and convert it back to a Task.","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"elvern18"},"content":"     * Add the task into the list of tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"elvern18"},"content":"     * If a file cannot be found from the file path, create a new file. A new, empty list of tasks will be created.","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"elvern18"},"content":"     * @return the list of tasks from the data file.","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"elvern18"},"content":"     * @throws IOException If a I/O error occurs","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"elvern18"},"content":"    public TaskList load() throws IOException {","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"elvern18"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"elvern18"},"content":"            System.out.println(\"cannot find file\");","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"elvern18"},"content":"            file.createNewFile();","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"elvern18"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"elvern18"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"elvern18"},"content":"            String line \u003d sc.nextLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"elvern18"},"content":"            String[] descriptionAndMarkedStatus \u003d this.getDescriptionAndMarkedStatus(line);","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"elvern18"},"content":"            String description \u003d descriptionAndMarkedStatus[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"elvern18"},"content":"            String markedStatus \u003d descriptionAndMarkedStatus[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"elvern18"},"content":"            boolean marked \u003d markedStatus.equals(\"X\") ? true : false;","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"elvern18"},"content":"            char letter \u003d line.charAt(3);","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"elvern18"},"content":"            Task task;","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"elvern18"},"content":"            if (letter \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"elvern18"},"content":"                task \u003d new ToDo(description, marked);","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"elvern18"},"content":"            } else if (letter \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"elvern18"},"content":"                String[] words \u003d description.split(\"\\\\|by: \");","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"elvern18"},"content":"                task \u003d new Deadline(words[0], words[1], marked);","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"elvern18"},"content":"            } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"elvern18"},"content":"                String[] words \u003d description.split(\"\\\\|from: \");","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"elvern18"},"content":"                String[] fromTo \u003d words[1].split(\" to: \");","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"elvern18"},"content":"                task \u003d new Event(words[0], fromTo[0], fromTo[1], marked);","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"elvern18"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"elvern18"},"content":"            list.addTask(task);","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"elvern18"},"content":"        return list;","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"elvern18"},"content":"     * Returns description of task and its marked status in the String form.","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"elvern18"},"content":"     * Manipulates the description from the data file into","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"elvern18"},"content":"     * description of the task and its marked status.","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"elvern18"},"content":"     * @param description Description from the data file.","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"elvern18"},"content":"     * @return A String array, with the zero index as the description of the\u0027 task","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"elvern18"},"content":"     * and the first index as the marked status in String form.","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"elvern18"},"content":"    public String[] getDescriptionAndMarkedStatus(String description) {","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"elvern18"},"content":"        String[] words \u003d description.split(\"] \");","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"elvern18"},"content":"        String newDescription \u003d words[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"elvern18"},"content":"        String firstWord \u003d words[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"elvern18"},"content":"        String marked \u003d firstWord.charAt(firstWord.length()-1) + \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"elvern18"},"content":"        return new String[]{newDescription, marked};","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"elvern18"},"content":"     * Saves the list of tasks into the data file.","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"elvern18"},"content":"     * Iterates through the tasks in the list and write it to the data file.","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"elvern18"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"elvern18"},"content":"    public void save(TaskList list) {","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"elvern18"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"elvern18"},"content":"            Task task \u003d list.getTask(i);","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"elvern18"},"content":"            this.output.println(i+1 + \".\" + task.toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"elvern18"},"content":"        this.output.close();","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"elvern18":106}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":" * Encapsulates a Task with Deadline.","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"    public String by;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"     * Constructor.","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":"        super(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"     * Another Constructor.","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"elvern18"},"content":"     * @param by Deadline of the Task.","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"     * @param marked Status to show if the task is done.","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"    public Deadline(String description, String by, boolean marked) {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"        super(description, marked);","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"elvern18"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"elvern18"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"elvern18"},"content":"        return \"[D]\" + super.toString() + \" |by: \" + by;","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"elvern18":37}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":" * Encapsulates a Task with a duration","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":" *","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"    protected String from;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"    protected String to;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"     * Constructor","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":"     * @param from Start of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":"     * @param to End of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"        super(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"elvern18"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"     * Another Constructor","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"     * @param from Start of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"     * @param to End of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"     * @param marked Status to show if the task is done.","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"elvern18"},"content":"    public Event(String description, String from, String to, boolean marked) {","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"elvern18"},"content":"        super(description, marked);","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"elvern18"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"elvern18"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"elvern18"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"elvern18"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"elvern18"},"content":"        return \"[E]\" + super.toString() + String.format(\" |from: %s to: %s\", this.from, this.to);","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"elvern18":43}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":" * Parent class Task","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":" * Inherited by ToDo, Deadline and Event Class","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"public class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"    public String description;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"    public boolean isDone;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"     * Constructor.","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"     * Another Constructor","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"     * @param description","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"     * @param isDone","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"elvern18"},"content":"     * Returns isDoneStatus in String form.","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"elvern18"},"content":"     * X indicating marked, and whitespace indicating unmarked.","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"elvern18"},"content":"     * @return isDone","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"elvern18"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"elvern18"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"elvern18"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"elvern18"},"content":"    public void mark() {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"elvern18"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"elvern18"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"elvern18"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"elvern18"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"elvern18"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"elvern18"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"elvern18"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"elvern18":61}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":" * Encapsulates a Task without deadline or duration.","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"     * Constructor.","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"        super(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"     * Another constructor.","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"elvern18"},"content":"     * @param marked Status to show if the task is done.","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"    public ToDo(String description, boolean marked) {","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"        super(description,marked);","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"elvern18":31}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package tasklist;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":"import task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":" * Encapsulates the list of tasks inputted by the user.","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"public class TaskList {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"    public ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"     * Constructor.","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"elvern18"},"content":"     * Returns Task from the index number of the list (zero-indexing).","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"     * @param index Index number of the task in the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"     * @return Task of the given index.","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"        return this.list.get(index);","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"     * Removes Task of the given index from the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"elvern18"},"content":"     * @param index Index number of the task in the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"elvern18"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"elvern18"},"content":"        this.list.remove(index);","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"elvern18"},"content":"     * Add the given Task to the list of tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"elvern18"},"content":"     * @param task Index number of the task in the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"elvern18"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"elvern18"},"content":"        this.list.add(task);","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"elvern18"},"content":"     * Returns the number of the task in the list, whether marked or unmarked.","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"elvern18"},"content":"     * @return Number of tasks in the list","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"elvern18"},"content":"    public int size() {","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"elvern18"},"content":"        return this.list.size();","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"elvern18":56}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"import task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":" * User Interface Class that deals with interactions with the user.","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"public class Ui {","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"    final static String ENTRY_OUTPUT \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"    final static String BYE_OUTPUT \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"    final static DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/d HHmm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":"    final static DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":"    public boolean isClosed;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"     * Constructor.","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"elvern18"},"content":"    public Ui() {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"       this.isClosed \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"     * Prints the Exception given.","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"     * @param e Exception.","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"    public void printException(Exception e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"        System.out.println(e);","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"elvern18"},"content":"     * Prints the exit output.","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"elvern18"},"content":"    public void printBye() {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"elvern18"},"content":"        System.out.println(BYE_OUTPUT);","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"elvern18"},"content":"     * Prints the entry welcome.","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"elvern18"},"content":"    public void printEntry() {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"elvern18"},"content":"        System.out.println(ENTRY_OUTPUT);","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"elvern18"},"content":"     * Prints the response of deleting the task from the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"elvern18"},"content":"     * @param task Task that is deleted.","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"elvern18"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"elvern18"},"content":"    public void printHandleDelete(Task task, TaskList list) {","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"elvern18"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"elvern18"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"elvern18"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\", list.size()));","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"elvern18"},"content":"     * Prints the response of marking the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"elvern18"},"content":"     * @param task Task that is marked.","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"elvern18"},"content":"    public void printHandleMark(Task task) {","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"elvern18"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"elvern18"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"elvern18"},"content":"     * Prints the response of unmarking the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"elvern18"},"content":"     * @param task Task that is unmarked.","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"elvern18"},"content":"    public void printHandleUnmark(Task task) {","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"elvern18"},"content":"        System.out.println(\"OK,, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"elvern18"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"elvern18"},"content":"     * Prints the response of adding the task to the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"elvern18"},"content":"     * @param newTask Task is added to the list","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"elvern18"},"content":"     * @param list List of tasks","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"elvern18"},"content":"    public void printAddTask(Task newTask, TaskList list) {","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"elvern18"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"elvern18"},"content":"        System.out.println(\"  \" + newTask.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"elvern18"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\", list.size()));","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"elvern18"},"content":"     * Prints the tasks in the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"elvern18"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"elvern18"},"content":"    public void printGetList(TaskList list) {","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"elvern18"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"elvern18"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"elvern18"},"content":"            Task task \u003d list.getTask(i);","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"elvern18"},"content":"            System.out.println(i+1 + \".\" + task.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"elvern18"},"content":"     * Prints the error if unable to load list from the hard disk.","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"elvern18"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"elvern18"},"content":"        System.out.println(\"Could not load list. Using a new, empty list instead\");","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"elvern18"},"content":"     * Prints the search output.","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"elvern18"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"elvern18"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"elvern18"},"content":"     * @param searchWord Search word.","lastModifiedDate":"2023-02-04"},{"lineNumber":116,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"elvern18"},"content":"    public void printFind(TaskList list, String searchWord) {","lastModifiedDate":"2023-02-04"},{"lineNumber":118,"author":{"gitId":"elvern18"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2023-02-04"},{"lineNumber":119,"author":{"gitId":"elvern18"},"content":"        for (Task task: list.list) {","lastModifiedDate":"2023-02-04"},{"lineNumber":120,"author":{"gitId":"elvern18"},"content":"            if (task.description.contains(searchWord)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":121,"author":{"gitId":"elvern18"},"content":"                System.out.println(task.toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":122,"author":{"gitId":"elvern18"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":123,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":124,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":125,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":126,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"elvern18":126}},{"path":"src/test/java/seedu/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package seedu.task;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"import task.ToDo;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"    @Test","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"    public void testToDoDescription(){","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"        ToDo toDo \u003d new ToDo(\"return book\");","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"        assertEquals(\"[T][ ] return book\", toDo.toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"    @Test","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":"    public void testUnmark() {","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":"        ToDo toDo \u003d new ToDo(\"return book\", true);","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":"        toDo.unmark();","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"        assertEquals(\"[T][ ] return book\", toDo.toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"elvern18"},"content":"    @Test","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"    public void testMark(){","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"        ToDo toDo \u003d new ToDo(\"return book\");","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"        toDo.mark();","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"elvern18"},"content":"        assertEquals(\"[T][X] return book\", toDo.toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"elvern18":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"todo borrow book","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"bye","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"elvern18":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"elvern18":1,"-":20}}]
