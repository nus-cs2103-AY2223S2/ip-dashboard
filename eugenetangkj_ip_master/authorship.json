[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":" * Represents a deadline Task that can be kept track of, having a deadline associated with the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"    /** The deadline of the task. */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"    private String deadlineOfTask;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a Deadline task.","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"     * @param deadlineOfTask The deadline for this given deadline task.","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    public Deadline(String taskName, String deadlineOfTask) {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"        super(taskName);","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"        this.deadlineOfTask \u003d deadlineOfTask;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the status of the deadline task.","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"     * @return a String indicating the type, status and deadline for the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"    public String getStatusOfTaskInString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"        String typeOfTask \u003d \"D\";","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"        return (this.isDone)","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"               ? \"[\" + typeOfTask + \"][X] \" + this.taskName + (\" (by: \") + this.deadlineOfTask + \")\"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"               : \"[\" + typeOfTask + \"][ ] \" + this.taskName + (\" (by: \") + this.deadlineOfTask + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the deadline of the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"     * @return the deadline of the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"    public String getDeadlineOfTask() {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        return deadlineOfTask;","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"eugenetangkj":40}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"import java.io.*;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":" * Represents a chatbot that one can interact with to keep track of tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"    /** Logo for the name of the chatbot. **/","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    private static final String logo \u003d \" |          ______    ______\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"                                     + \" | ____    |      |  |      |\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"                                     + \" |      |  |      |  |      |\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"                                     + \" | ____ |  |______|  |______|\\n\";","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    /** Straight line that separates commands. **/","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    private static final String STRAIGHT_LINE \u003d","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"            \"_______________________________________________________________________________________________\";","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    /** File path where the data file should be stored in. **/","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    private static final String dataFilePath \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"tasks.txt\")","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"            .toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"     * Launches the chatbot.","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"     * @param args The command line arguments that one can type.","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"        //Prints introduction","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"        printIntroductoryMessage();","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        //Checks if user has a data file that stores task history","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        if (isFirstRun()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"            //User\u0027s first time running the bot. Create relevant folder and file.","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"                createFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"                System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"                System.out.println(\"Could not create data file to store task history. The following error occurred:\");","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"                System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"                return;","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"        //Restores task history if present","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"            restoreTaskHistory(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(\"Data file is missing. The following error occurred: \");","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"        //Prepare input source","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"        //Keep taking in user input line by line","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"        while (true) {","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"            //Read in user command","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"            //Determine if user types in a single word or multiple words","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"            String[] inputArray \u003d input.split(\" \");","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"            //User typed in \"bye\".","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"            //User typed in \"list\"","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"            else if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"                printUserTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"                continue;","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"            String firstWord \u003d inputArray[0];","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"            switch (firstWord) {","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"                    if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The mark command must be followed by a single number.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"                    if (! isInteger(inputArray[1])) {","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The mark command must be followed by a single integer.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfTask \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"                    if (! (indexOfTask \u003c\u003d tasks.size() - 1 \u0026\u0026 indexOfTask \u003e\u003d 0)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"Please enter a valid task number. You currently have \" +","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"                                Integer.toString(tasks.size()) + \" tasks.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"                    markAsDone(tasks.get(indexOfTask));","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"                    saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"eugenetangkj"},"content":"                } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(dukeException.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":109,"author":{"gitId":"eugenetangkj"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"eugenetangkj"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"eugenetangkj"},"content":"                    if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The unmark command must be followed by a single number.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"eugenetangkj"},"content":"                    if (! isInteger(inputArray[1])) {","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The unmark command must be followed by a single integer.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfTask \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":118,"author":{"gitId":"eugenetangkj"},"content":"                    if (! (indexOfTask \u003c\u003d tasks.size() - 1 \u0026\u0026 indexOfTask \u003e\u003d 0)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":119,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"Please enter a valid task number. You currently have \" +","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"eugenetangkj"},"content":"                                Integer.toString(tasks.size()) + \" tasks.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":121,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"                    markAsUndone(tasks.get(indexOfTask));","lastModifiedDate":"2023-01-23"},{"lineNumber":123,"author":{"gitId":"eugenetangkj"},"content":"                    saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":124,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":125,"author":{"gitId":"eugenetangkj"},"content":"                } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":127,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(dukeException.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":129,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":130,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":131,"author":{"gitId":"eugenetangkj"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-23"},{"lineNumber":132,"author":{"gitId":"eugenetangkj"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"eugenetangkj"},"content":"                    if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The delete command must be followed by a single number.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"eugenetangkj"},"content":"                    if (! isInteger(inputArray[1])) {","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The delete command must be followed by a single integer.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfTask \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"eugenetangkj"},"content":"                    if (! (indexOfTask \u003c\u003d tasks.size() - 1 \u0026\u0026 indexOfTask \u003e\u003d 0)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":141,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"Please enter a valid task number. You currently have \"","lastModifiedDate":"2023-01-23"},{"lineNumber":142,"author":{"gitId":"eugenetangkj"},"content":"                                + Integer.toString(tasks.size()) + \" tasks.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":143,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"eugenetangkj"},"content":"                    deleteTask(indexOfTask, tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":145,"author":{"gitId":"eugenetangkj"},"content":"                    saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":146,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":147,"author":{"gitId":"eugenetangkj"},"content":"                } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":149,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(dukeException.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":150,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":151,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":152,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"eugenetangkj"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-23"},{"lineNumber":154,"author":{"gitId":"eugenetangkj"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"eugenetangkj"},"content":"                    if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The todo command cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":157,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":158,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfType \u003d input.indexOf(\"todo\");","lastModifiedDate":"2023-01-18"},{"lineNumber":159,"author":{"gitId":"eugenetangkj"},"content":"                    String taskName \u003d input.substring(indexOfType + 5);","lastModifiedDate":"2023-01-18"},{"lineNumber":160,"author":{"gitId":"eugenetangkj"},"content":"                    ToDo newToDoTask \u003d new ToDo(taskName);","lastModifiedDate":"2023-01-18"},{"lineNumber":161,"author":{"gitId":"eugenetangkj"},"content":"                    addTask(newToDoTask, tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":162,"author":{"gitId":"eugenetangkj"},"content":"                    saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":163,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":164,"author":{"gitId":"eugenetangkj"},"content":"                } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-18"},{"lineNumber":165,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":166,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(dukeException.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":167,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":168,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":169,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"eugenetangkj"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-23"},{"lineNumber":171,"author":{"gitId":"eugenetangkj"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":172,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfType \u003d input.indexOf(\"deadline\");","lastModifiedDate":"2023-01-18"},{"lineNumber":173,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfType + 8 \u003e input.length() - 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":174,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The deadline command cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":175,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":176,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfBy \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-01-18"},{"lineNumber":177,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfBy \u003d\u003d -1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":178,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The deadline cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":179,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":180,"author":{"gitId":"eugenetangkj"},"content":"                    //deadline/by","lastModifiedDate":"2023-01-18"},{"lineNumber":181,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfType + 8 \u003d\u003d indexOfBy) {","lastModifiedDate":"2023-01-18"},{"lineNumber":182,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"There seems to be a missing task name.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":183,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":184,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfBy + 4 \u003e input.length() - 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":185,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The deadline cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":186,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":187,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfType + 9 \u003e indexOfBy - 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":188,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"There seems to be a missing task name.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":189,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":190,"author":{"gitId":"eugenetangkj"},"content":"                    String taskName \u003d input.substring(indexOfType + 9, indexOfBy - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":191,"author":{"gitId":"eugenetangkj"},"content":"                    String deadlineOfTask;","lastModifiedDate":"2023-01-18"},{"lineNumber":192,"author":{"gitId":"eugenetangkj"},"content":"                    if (input.charAt(indexOfBy + 3) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2023-01-18"},{"lineNumber":193,"author":{"gitId":"eugenetangkj"},"content":"                        deadlineOfTask \u003d input.substring(indexOfBy + 4);","lastModifiedDate":"2023-01-18"},{"lineNumber":194,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":195,"author":{"gitId":"eugenetangkj"},"content":"                    else {","lastModifiedDate":"2023-01-18"},{"lineNumber":196,"author":{"gitId":"eugenetangkj"},"content":"                        deadlineOfTask \u003d input.substring(indexOfBy + 3);","lastModifiedDate":"2023-01-18"},{"lineNumber":197,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":198,"author":{"gitId":"eugenetangkj"},"content":"                    if (taskName.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":199,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The task name cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":200,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":201,"author":{"gitId":"eugenetangkj"},"content":"                    if (deadlineOfTask.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":202,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The deadline cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":203,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":204,"author":{"gitId":"eugenetangkj"},"content":"                    Deadline newDeadlineTask \u003d new Deadline(taskName, deadlineOfTask);","lastModifiedDate":"2023-01-18"},{"lineNumber":205,"author":{"gitId":"eugenetangkj"},"content":"                    addTask(newDeadlineTask, tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":206,"author":{"gitId":"eugenetangkj"},"content":"                    saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":207,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":208,"author":{"gitId":"eugenetangkj"},"content":"                } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-18"},{"lineNumber":209,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":210,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(dukeException.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":211,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":212,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":213,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":214,"author":{"gitId":"eugenetangkj"},"content":"            case \"event\":","lastModifiedDate":"2023-01-23"},{"lineNumber":215,"author":{"gitId":"eugenetangkj"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":216,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfType \u003d input.indexOf(\"event\");","lastModifiedDate":"2023-01-18"},{"lineNumber":217,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfType + 5 \u003e input.length() - 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":218,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The event command cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":219,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":220,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":221,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfFrom \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-01-18"},{"lineNumber":222,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfFrom \u003d\u003d -1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":223,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"There seems to be a missing from date.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":224,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":225,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":226,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfTo \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-01-18"},{"lineNumber":227,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfTo \u003d\u003d -1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":228,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"There seems to be a missing to date.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":229,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":230,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":231,"author":{"gitId":"eugenetangkj"},"content":"                    //Check taskName","lastModifiedDate":"2023-01-18"},{"lineNumber":232,"author":{"gitId":"eugenetangkj"},"content":"                    if ((indexOfType + 6 \u003e indexOfFrom - 1)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":233,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"There seems to be a missing task name.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":234,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":235,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":236,"author":{"gitId":"eugenetangkj"},"content":"                    String taskName \u003d input.substring(indexOfType + 6, indexOfFrom - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":237,"author":{"gitId":"eugenetangkj"},"content":"                    if (taskName.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":238,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The task name cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":239,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":240,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":241,"author":{"gitId":"eugenetangkj"},"content":"                    //Check startDate","lastModifiedDate":"2023-01-18"},{"lineNumber":242,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfFrom + 6 \u003e indexOfTo - 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":243,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"There seems to be a missing start date.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":244,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":245,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":246,"author":{"gitId":"eugenetangkj"},"content":"                    String startDate \u003d input.substring(indexOfFrom + 6, indexOfTo - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":247,"author":{"gitId":"eugenetangkj"},"content":"                    if (startDate.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":248,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The start date cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":249,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":250,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":251,"author":{"gitId":"eugenetangkj"},"content":"                    //Check endDate","lastModifiedDate":"2023-01-18"},{"lineNumber":252,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfTo + 4 \u003e input.length() - 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":253,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"There seems to be a missing end date.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":254,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":255,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":256,"author":{"gitId":"eugenetangkj"},"content":"                    String endDate \u003d input.substring(indexOfTo + 4);","lastModifiedDate":"2023-01-18"},{"lineNumber":257,"author":{"gitId":"eugenetangkj"},"content":"                    if (endDate.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":258,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The end date cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":259,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":260,"author":{"gitId":"eugenetangkj"},"content":"                    Event newEventTask \u003d new Event(taskName, startDate, endDate);","lastModifiedDate":"2023-01-18"},{"lineNumber":261,"author":{"gitId":"eugenetangkj"},"content":"                    addTask(newEventTask, tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":262,"author":{"gitId":"eugenetangkj"},"content":"                    saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":263,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":264,"author":{"gitId":"eugenetangkj"},"content":"                } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-18"},{"lineNumber":265,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":266,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(dukeException.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":267,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":268,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":269,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":270,"author":{"gitId":"eugenetangkj"},"content":"            default:","lastModifiedDate":"2023-01-23"},{"lineNumber":271,"author":{"gitId":"eugenetangkj"},"content":"                printInvalidMessage();","lastModifiedDate":"2023-01-18"},{"lineNumber":272,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":273,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":274,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":275,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":276,"author":{"gitId":"eugenetangkj"},"content":"        //Exits the bot after printing exit message","lastModifiedDate":"2023-01-23"},{"lineNumber":277,"author":{"gitId":"eugenetangkj"},"content":"        printExitMessage();","lastModifiedDate":"2023-01-17"},{"lineNumber":278,"author":{"gitId":"eugenetangkj"},"content":"        sc.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":280,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":281,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":282,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":283,"author":{"gitId":"eugenetangkj"},"content":"     * Prints the introductory message.","lastModifiedDate":"2023-01-17"},{"lineNumber":284,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":285,"author":{"gitId":"eugenetangkj"},"content":"    public static void printIntroductoryMessage() {","lastModifiedDate":"2023-01-17"},{"lineNumber":286,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-01-17"},{"lineNumber":287,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":288,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Boo! Nice to meet you.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":289,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"I am here to scare all your problems away by keeping track of your tasks.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":290,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"What can I help you with today?\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":291,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Supported Commands:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":292,"author":{"gitId":"eugenetangkj"},"content":"        String commandList \u003d","lastModifiedDate":"2023-01-18"},{"lineNumber":293,"author":{"gitId":"eugenetangkj"},"content":"                \"1. list -\u003e Provides a list of existing tasks.\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":294,"author":{"gitId":"eugenetangkj"},"content":"                + \"2. mark X -\u003e Marks task number X as done.\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":295,"author":{"gitId":"eugenetangkj"},"content":"                + \"3. unmark X -\u003e Marks task number X as undone.\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":296,"author":{"gitId":"eugenetangkj"},"content":"                + \"4. todo taskName -\u003e Creates a todo task with name taskName.\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":297,"author":{"gitId":"eugenetangkj"},"content":"                + \"5. deadline taskName /by date -\u003e Creates a deadline task with name taskName and deadline date.\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":298,"author":{"gitId":"eugenetangkj"},"content":"                + \"6. event taskName /from startDate /to endDate -\u003e Creates an event task with name taskName,\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":299,"author":{"gitId":"eugenetangkj"},"content":"                + \"   start date startDate, and end date endDate.\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":300,"author":{"gitId":"eugenetangkj"},"content":"                + \"7. delete X -\u003e Deletes task number X from the list.\";","lastModifiedDate":"2023-01-23"},{"lineNumber":301,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(commandList);","lastModifiedDate":"2023-01-18"},{"lineNumber":302,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":303,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":304,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":305,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":307,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":308,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":309,"author":{"gitId":"eugenetangkj"},"content":"     * Prints the exit message.","lastModifiedDate":"2023-01-17"},{"lineNumber":310,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":311,"author":{"gitId":"eugenetangkj"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2023-01-17"},{"lineNumber":312,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":313,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Goodbye. Hope that I have managed to scare all your problems away.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":314,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Have a great day! :)\");","lastModifiedDate":"2023-01-17"},{"lineNumber":315,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":316,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":317,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":318,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":319,"author":{"gitId":"eugenetangkj"},"content":"     * Prints out all the user tasks that have been entered by the user thus far.","lastModifiedDate":"2023-01-17"},{"lineNumber":320,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":321,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks The ArrayList that stores the user tasks to be printed out.","lastModifiedDate":"2023-01-23"},{"lineNumber":322,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":323,"author":{"gitId":"eugenetangkj"},"content":"    public static void printUserTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":324,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":325,"author":{"gitId":"eugenetangkj"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-23"},{"lineNumber":326,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(\"There are currently no tasks in your list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":327,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":328,"author":{"gitId":"eugenetangkj"},"content":"            return;","lastModifiedDate":"2023-01-18"},{"lineNumber":329,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":330,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":331,"author":{"gitId":"eugenetangkj"},"content":"        int numberOfTasks\u003d tasks.size();","lastModifiedDate":"2023-01-23"},{"lineNumber":332,"author":{"gitId":"eugenetangkj"},"content":"        //Process each task in the storage","lastModifiedDate":"2023-01-17"},{"lineNumber":333,"author":{"gitId":"eugenetangkj"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i \u003d i + 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":334,"author":{"gitId":"eugenetangkj"},"content":"            String numbering \u003d Integer.toString(i + 1) + \". \";","lastModifiedDate":"2023-01-17"},{"lineNumber":335,"author":{"gitId":"eugenetangkj"},"content":"            String output \u003d numbering + tasks.get(i).getStatusOfTaskInString();","lastModifiedDate":"2023-01-23"},{"lineNumber":336,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(output);","lastModifiedDate":"2023-01-17"},{"lineNumber":337,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":338,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":339,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":340,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":341,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":342,"author":{"gitId":"eugenetangkj"},"content":"     * Adds user task into storage and informs the user.","lastModifiedDate":"2023-01-17"},{"lineNumber":343,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":344,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskToAdd The task to be added to storage.","lastModifiedDate":"2023-01-18"},{"lineNumber":345,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks The ArrayList that stores the tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":346,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":347,"author":{"gitId":"eugenetangkj"},"content":"    public static void addTask(Task taskToAdd, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":348,"author":{"gitId":"eugenetangkj"},"content":"        tasks.add(taskToAdd);","lastModifiedDate":"2023-01-23"},{"lineNumber":349,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":350,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Added task to list:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":351,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(taskToAdd.getStatusOfTaskInString());","lastModifiedDate":"2023-01-18"},{"lineNumber":352,"author":{"gitId":"eugenetangkj"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":353,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(\"Currently, there is 1 task in your list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":354,"author":{"gitId":"eugenetangkj"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":355,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(\"Currently, there are \" + Integer.toString(tasks.size())","lastModifiedDate":"2023-01-23"},{"lineNumber":356,"author":{"gitId":"eugenetangkj"},"content":"                    + \" tasks in your list.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":357,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":358,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":359,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":360,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":361,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":362,"author":{"gitId":"eugenetangkj"},"content":"     * Marks a task as done and informs the user.","lastModifiedDate":"2023-01-17"},{"lineNumber":363,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":364,"author":{"gitId":"eugenetangkj"},"content":"     * @param currentTask The task to be marked as done.","lastModifiedDate":"2023-01-17"},{"lineNumber":365,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":366,"author":{"gitId":"eugenetangkj"},"content":"   public static void markAsDone(Task currentTask) {","lastModifiedDate":"2023-01-17"},{"lineNumber":367,"author":{"gitId":"eugenetangkj"},"content":"       currentTask.setDoneStatus();","lastModifiedDate":"2023-01-17"},{"lineNumber":368,"author":{"gitId":"eugenetangkj"},"content":"       System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":369,"author":{"gitId":"eugenetangkj"},"content":"       System.out.println(\"Poof! One less worry. The following task is now marked as done:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":370,"author":{"gitId":"eugenetangkj"},"content":"       System.out.println(currentTask.getStatusOfTaskInString());","lastModifiedDate":"2023-01-17"},{"lineNumber":371,"author":{"gitId":"eugenetangkj"},"content":"       System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":372,"author":{"gitId":"eugenetangkj"},"content":"   }","lastModifiedDate":"2023-01-17"},{"lineNumber":373,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":374,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":375,"author":{"gitId":"eugenetangkj"},"content":"     * Marks a task as undone and informs the user.","lastModifiedDate":"2023-01-17"},{"lineNumber":376,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":377,"author":{"gitId":"eugenetangkj"},"content":"     * @param currentTask The task to be marked as undone.","lastModifiedDate":"2023-01-17"},{"lineNumber":378,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":379,"author":{"gitId":"eugenetangkj"},"content":"    public static void markAsUndone(Task currentTask) {","lastModifiedDate":"2023-01-17"},{"lineNumber":380,"author":{"gitId":"eugenetangkj"},"content":"        currentTask.setUndoneStatus();","lastModifiedDate":"2023-01-17"},{"lineNumber":381,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":382,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Alright! The following task is now marked as undone. I will help you keep an eye on it.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":383,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(currentTask.getStatusOfTaskInString());","lastModifiedDate":"2023-01-17"},{"lineNumber":384,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":385,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":386,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":387,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":388,"author":{"gitId":"eugenetangkj"},"content":"     * Prints a message indicating to the user that the command is invalid.","lastModifiedDate":"2023-01-18"},{"lineNumber":389,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":390,"author":{"gitId":"eugenetangkj"},"content":"    public static void printInvalidMessage() {","lastModifiedDate":"2023-01-18"},{"lineNumber":391,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":392,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Sorry. I do not understand this command. Please try again.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":393,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":394,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":395,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":396,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":397,"author":{"gitId":"eugenetangkj"},"content":"     * Deletes a task from the given list of task, and informs the user.","lastModifiedDate":"2023-01-18"},{"lineNumber":398,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":399,"author":{"gitId":"eugenetangkj"},"content":"     * @param indexOfTask Index of the task in the list that is to be deleted.","lastModifiedDate":"2023-01-18"},{"lineNumber":400,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks List containing all the tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":401,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":402,"author":{"gitId":"eugenetangkj"},"content":"    public static void deleteTask(int indexOfTask, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":403,"author":{"gitId":"eugenetangkj"},"content":"        Task taskToBeDeleted \u003d tasks.get(indexOfTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":404,"author":{"gitId":"eugenetangkj"},"content":"        tasks.remove(indexOfTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":405,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":406,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Ta-da! The following task has been deleted.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":407,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(taskToBeDeleted.getStatusOfTaskInString());","lastModifiedDate":"2023-01-18"},{"lineNumber":408,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Current number of tasks is: \" + Integer.toString(tasks.size()) + \".\");","lastModifiedDate":"2023-01-23"},{"lineNumber":409,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":410,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":411,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":412,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":413,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":414,"author":{"gitId":"eugenetangkj"},"content":"     * Checks if a string can be converted into an Integer.","lastModifiedDate":"2023-01-18"},{"lineNumber":415,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":416,"author":{"gitId":"eugenetangkj"},"content":"     * @param stringToCheck String to check whether the conversion is possible.","lastModifiedDate":"2023-01-18"},{"lineNumber":417,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if it can be converted, else return false.","lastModifiedDate":"2023-01-18"},{"lineNumber":418,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":419,"author":{"gitId":"eugenetangkj"},"content":"    public static boolean isInteger(String stringToCheck) {","lastModifiedDate":"2023-01-18"},{"lineNumber":420,"author":{"gitId":"eugenetangkj"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":421,"author":{"gitId":"eugenetangkj"},"content":"            int intVersion \u003d Integer.parseInt(stringToCheck);","lastModifiedDate":"2023-01-18"},{"lineNumber":422,"author":{"gitId":"eugenetangkj"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2023-01-18"},{"lineNumber":423,"author":{"gitId":"eugenetangkj"},"content":"            return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":424,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":425,"author":{"gitId":"eugenetangkj"},"content":"        return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":426,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":427,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":428,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":429,"author":{"gitId":"eugenetangkj"},"content":"     * Determines if it is the first time that the user uses the chatbot by checking for","lastModifiedDate":"2023-01-23"},{"lineNumber":430,"author":{"gitId":"eugenetangkj"},"content":"     * the existence of a data file.","lastModifiedDate":"2023-01-23"},{"lineNumber":431,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":432,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if it is the user\u0027s first time running the chatbot,","lastModifiedDate":"2023-01-23"},{"lineNumber":433,"author":{"gitId":"eugenetangkj"},"content":"     *         else return false.","lastModifiedDate":"2023-01-23"},{"lineNumber":434,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":435,"author":{"gitId":"eugenetangkj"},"content":"    public static boolean isFirstRun() {","lastModifiedDate":"2023-01-23"},{"lineNumber":436,"author":{"gitId":"eugenetangkj"},"content":"        //Check if the path to the data file is valid","lastModifiedDate":"2023-01-23"},{"lineNumber":437,"author":{"gitId":"eugenetangkj"},"content":"        java.nio.file.Path desiredPath \u003d  Paths.get(System.getProperty(\"user.dir\"), \"data\", \"tasks.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":438,"author":{"gitId":"eugenetangkj"},"content":"        return ! java.nio.file.Files.exists(desiredPath);","lastModifiedDate":"2023-01-23"},{"lineNumber":439,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":440,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":441,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":442,"author":{"gitId":"eugenetangkj"},"content":"     * Creates the data file for the user to store task history.","lastModifiedDate":"2023-01-23"},{"lineNumber":443,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":444,"author":{"gitId":"eugenetangkj"},"content":"     * @throws IOException if an I/O error occurred during file creation.","lastModifiedDate":"2023-01-23"},{"lineNumber":445,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":446,"author":{"gitId":"eugenetangkj"},"content":"    public static void createFile() throws IOException {","lastModifiedDate":"2023-01-23"},{"lineNumber":447,"author":{"gitId":"eugenetangkj"},"content":"        //Make the directory","lastModifiedDate":"2023-01-23"},{"lineNumber":448,"author":{"gitId":"eugenetangkj"},"content":"        java.nio.file.Path desiredPath \u003d  Paths.get(System.getProperty(\"user.dir\"), \"data\");","lastModifiedDate":"2023-01-23"},{"lineNumber":449,"author":{"gitId":"eugenetangkj"},"content":"        File directory \u003d new File(desiredPath.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":450,"author":{"gitId":"eugenetangkj"},"content":"        if (! directory.exists()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":451,"author":{"gitId":"eugenetangkj"},"content":"            directory.mkdir();","lastModifiedDate":"2023-01-23"},{"lineNumber":452,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":453,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":454,"author":{"gitId":"eugenetangkj"},"content":"        //Create the file","lastModifiedDate":"2023-01-23"},{"lineNumber":455,"author":{"gitId":"eugenetangkj"},"content":"        File dataFile \u003d new File(dataFilePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":456,"author":{"gitId":"eugenetangkj"},"content":"        if (! dataFile.exists()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":457,"author":{"gitId":"eugenetangkj"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":458,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":459,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":460,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":461,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":462,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":463,"author":{"gitId":"eugenetangkj"},"content":"     * Restores the task history stored in the data file.","lastModifiedDate":"2023-01-23"},{"lineNumber":464,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":465,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks The ArrayList that store all the tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":466,"author":{"gitId":"eugenetangkj"},"content":"     * @throws FileNotFoundException if the data file cannot be found.","lastModifiedDate":"2023-01-23"},{"lineNumber":467,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":468,"author":{"gitId":"eugenetangkj"},"content":"    public static void restoreTaskHistory(ArrayList\u003cTask\u003e tasks) throws FileNotFoundException {","lastModifiedDate":"2023-01-23"},{"lineNumber":469,"author":{"gitId":"eugenetangkj"},"content":"        File dataFile \u003d new File(dataFilePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":470,"author":{"gitId":"eugenetangkj"},"content":"        Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2023-01-23"},{"lineNumber":471,"author":{"gitId":"eugenetangkj"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":472,"author":{"gitId":"eugenetangkj"},"content":"            String currentTask \u003d s.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":473,"author":{"gitId":"eugenetangkj"},"content":"            String[] currentTaskArray \u003d currentTask.split(\" \\\\| \");","lastModifiedDate":"2023-01-23"},{"lineNumber":474,"author":{"gitId":"eugenetangkj"},"content":"            String commandType \u003d currentTaskArray[0];","lastModifiedDate":"2023-01-23"},{"lineNumber":475,"author":{"gitId":"eugenetangkj"},"content":"            //Adds each task stored in the data file into tasks","lastModifiedDate":"2023-01-23"},{"lineNumber":476,"author":{"gitId":"eugenetangkj"},"content":"            switch (commandType) {","lastModifiedDate":"2023-01-23"},{"lineNumber":477,"author":{"gitId":"eugenetangkj"},"content":"            case \"T\":","lastModifiedDate":"2023-01-23"},{"lineNumber":478,"author":{"gitId":"eugenetangkj"},"content":"                Task toDoTask \u003d new ToDo(currentTaskArray[2]);","lastModifiedDate":"2023-01-23"},{"lineNumber":479,"author":{"gitId":"eugenetangkj"},"content":"                if (currentTaskArray[1].equals(\"1\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":480,"author":{"gitId":"eugenetangkj"},"content":"                    toDoTask.setDoneStatus();","lastModifiedDate":"2023-01-23"},{"lineNumber":481,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":482,"author":{"gitId":"eugenetangkj"},"content":"                tasks.add(toDoTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":483,"author":{"gitId":"eugenetangkj"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":484,"author":{"gitId":"eugenetangkj"},"content":"            case \"D\":","lastModifiedDate":"2023-01-23"},{"lineNumber":485,"author":{"gitId":"eugenetangkj"},"content":"                Task deadlineTask \u003d new Deadline(currentTaskArray[2], currentTaskArray[3]);","lastModifiedDate":"2023-01-23"},{"lineNumber":486,"author":{"gitId":"eugenetangkj"},"content":"                if (currentTaskArray[1].equals(\"1\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":487,"author":{"gitId":"eugenetangkj"},"content":"                    deadlineTask.setDoneStatus();","lastModifiedDate":"2023-01-23"},{"lineNumber":488,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":489,"author":{"gitId":"eugenetangkj"},"content":"                tasks.add(deadlineTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":490,"author":{"gitId":"eugenetangkj"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":491,"author":{"gitId":"eugenetangkj"},"content":"            case \"E\":","lastModifiedDate":"2023-01-23"},{"lineNumber":492,"author":{"gitId":"eugenetangkj"},"content":"                Task eventTask \u003d new Event(currentTaskArray[2], currentTaskArray[3], currentTaskArray[4]);","lastModifiedDate":"2023-01-23"},{"lineNumber":493,"author":{"gitId":"eugenetangkj"},"content":"                if (currentTaskArray[1].equals(\"1\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":494,"author":{"gitId":"eugenetangkj"},"content":"                    eventTask.setDoneStatus();","lastModifiedDate":"2023-01-23"},{"lineNumber":495,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":496,"author":{"gitId":"eugenetangkj"},"content":"                tasks.add(eventTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":497,"author":{"gitId":"eugenetangkj"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":498,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":499,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":500,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":501,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":502,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":503,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":504,"author":{"gitId":"eugenetangkj"},"content":"     * Saves the tasks that are currently stored in the list into a data file stored in hard disk.","lastModifiedDate":"2023-01-23"},{"lineNumber":505,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":506,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks The list that contains the tasks to be saved.","lastModifiedDate":"2023-01-23"},{"lineNumber":507,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":508,"author":{"gitId":"eugenetangkj"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":509,"author":{"gitId":"eugenetangkj"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":510,"author":{"gitId":"eugenetangkj"},"content":"            File dataFile \u003d new File(dataFilePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":511,"author":{"gitId":"eugenetangkj"},"content":"            FileWriter fw \u003d new FileWriter(dataFilePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":512,"author":{"gitId":"eugenetangkj"},"content":"            //Reset content of file","lastModifiedDate":"2023-01-23"},{"lineNumber":513,"author":{"gitId":"eugenetangkj"},"content":"            fw.write(\"\");","lastModifiedDate":"2023-01-23"},{"lineNumber":514,"author":{"gitId":"eugenetangkj"},"content":"            fw \u003d new FileWriter(dataFilePath, true);","lastModifiedDate":"2023-01-23"},{"lineNumber":515,"author":{"gitId":"eugenetangkj"},"content":"            //Append new content into file","lastModifiedDate":"2023-01-23"},{"lineNumber":516,"author":{"gitId":"eugenetangkj"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i \u003d i + 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":517,"author":{"gitId":"eugenetangkj"},"content":"                Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2023-01-23"},{"lineNumber":518,"author":{"gitId":"eugenetangkj"},"content":"                String taskStatus \u003d (currentTask.getStatusOfTask())","lastModifiedDate":"2023-01-23"},{"lineNumber":519,"author":{"gitId":"eugenetangkj"},"content":"                                    ? \"1 | \"","lastModifiedDate":"2023-01-23"},{"lineNumber":520,"author":{"gitId":"eugenetangkj"},"content":"                                    : \"0 | \";","lastModifiedDate":"2023-01-23"},{"lineNumber":521,"author":{"gitId":"eugenetangkj"},"content":"                String lineToAdd \u003d (currentTask instanceof ToDo)","lastModifiedDate":"2023-01-23"},{"lineNumber":522,"author":{"gitId":"eugenetangkj"},"content":"                                   ? \"T | \" + taskStatus + currentTask.getNameOfTask()","lastModifiedDate":"2023-01-23"},{"lineNumber":523,"author":{"gitId":"eugenetangkj"},"content":"                                   : (currentTask instanceof Deadline)","lastModifiedDate":"2023-01-23"},{"lineNumber":524,"author":{"gitId":"eugenetangkj"},"content":"                                   ? \"D | \" + taskStatus + currentTask.getNameOfTask() + \" | \"","lastModifiedDate":"2023-01-23"},{"lineNumber":525,"author":{"gitId":"eugenetangkj"},"content":"                                           + ((Deadline) currentTask).getDeadlineOfTask()","lastModifiedDate":"2023-01-23"},{"lineNumber":526,"author":{"gitId":"eugenetangkj"},"content":"                                   : \"E | \" + taskStatus + currentTask.getNameOfTask() + \" | \"","lastModifiedDate":"2023-01-23"},{"lineNumber":527,"author":{"gitId":"eugenetangkj"},"content":"                                           + ((Event) currentTask).getStartDate() + \" | \"","lastModifiedDate":"2023-01-23"},{"lineNumber":528,"author":{"gitId":"eugenetangkj"},"content":"                                                   + ((Event) currentTask).getEndDate();","lastModifiedDate":"2023-01-23"},{"lineNumber":529,"author":{"gitId":"eugenetangkj"},"content":"                if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":530,"author":{"gitId":"eugenetangkj"},"content":"                    lineToAdd +\u003d \"\\n\";","lastModifiedDate":"2023-01-23"},{"lineNumber":531,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":532,"author":{"gitId":"eugenetangkj"},"content":"                fw.write(lineToAdd);","lastModifiedDate":"2023-01-23"},{"lineNumber":533,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":534,"author":{"gitId":"eugenetangkj"},"content":"            fw.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":535,"author":{"gitId":"eugenetangkj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":536,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(\"Could not save the tasks. The following error occurred: \");","lastModifiedDate":"2023-01-23"},{"lineNumber":537,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":538,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":539,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":540,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":541,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":542,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-17"},{"lineNumber":544,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":545,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"eugenetangkj":540,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":" * Represents an exception related to the Duke chatbot.","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs an exception message indicating the reason for exception.","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"     * @param exceptionMessage Message to be displayed when the exception occurs","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"    public DukeException(String exceptionMessage) {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"        super(exceptionMessage);","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"eugenetangkj":15}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":" * Represents an Event Task that can be kept track of, starting and ending at a specific date/time.","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"    /** Start date of the event. */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"    private String startDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"    /** End date of the event. */","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"    private String endDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs an Event task.","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"     * @param startDate The start date of the event task.","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"     * @param endDate The end date of the event task.","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    public Event(String taskName, String startDate, String endDate) {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"        super(taskName);","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the status of the event task.","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"     * @return a String indicating the type, status and time period for the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    public String getStatusOfTaskInString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"        String typeOfTask \u003d \"E\";","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        return (this.isDone)","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"                ? \"[\" + typeOfTask + \"][X] \" + this.taskName + (\" (from: \") + this.startDate +","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"                        \" to: \" + this.endDate + \")\"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"                : \"[\" + typeOfTask + \"][ ] \" + this.taskName + (\" (from: \") + this.startDate +","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"                        \" to: \" + this.endDate + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the start date of the event task.","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"     * @return the start date of the event task.","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"    public String getStartDate() {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"        return this.startDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the end date of the event task.","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"     * @return the end date of the event task.","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        return this.endDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"eugenetangkj":55}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":" * Represents a Task that can be kept track of.","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"    /** The name of the task. */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"    protected String taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"    /** The status of the task. **/","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a user task.","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskName The name of the task","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"     * Sets status of task to be done","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    public void setDoneStatus() {","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"     * Sets status of task to be undone","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    public void setUndoneStatus() {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the status of the task with the task name.","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"     * @return a String indicating the type and status of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"    public abstract String getStatusOfTaskInString();","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the status of the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if task is done, else return false.","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"    public boolean getStatusOfTask() {","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        return isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the name of the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"     * @return the name of the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"    public String getNameOfTask() {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"        return this.taskName;","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"eugenetangkj":57}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":" * Represents a to-do Task that can be kept track of, having no date or time attached to it.","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a new ToDo task.","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskName Name of the ToDo task.","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"        super(taskName);","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the status of the task with the task name.","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"     * @return a String indicating the type and status of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    public String getStatusOfTaskInString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"        String typeOfTask \u003d \"T\";","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"        return (this.isDone)","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"               ? \"[\" + typeOfTask + \"][X] \" + this.taskName","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"               : \"[\" + typeOfTask + \"][ ] \" + this.taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"eugenetangkj":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"todo read book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"todo join sports club","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"event conference /from no idea :-p /to no idea :-p","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"todo","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"event","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"list -1","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"mark -1","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"unmark 9","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"delete 3","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"delete 8","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"hello","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"Bye","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"eugenetangkj":25}}]
