[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":" * Represents a deadline Task that can be kept track of, having a deadline associated with the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"    /** The deadline of the task. */","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"    private Temporal deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"    /** A string containing the raw deadline string **/","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"    private String rawDeadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    /** A string where the deadline is formatted in either yyyy-MM-dd HH:mm or yyyy-MM-dd. */","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"    private String formattedDeadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a Deadline task.","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"     * @param deadline The deadline for this given deadline task.","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    public Deadline(String taskName, String rawDeadline, Temporal deadline) {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"        super(taskName);","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"        this.rawDeadline \u003d rawDeadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"        this.deadline\u003d deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"        this.formattedDeadline \u003d Task.formatDate(deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    ","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the status of the deadline task.","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"     * @return a String indicating the type, status and deadline for the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"    public String getStatusOfTaskInString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"        String typeOfTask \u003d \"D\";","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        return (this.isDone)","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"               ? \"[\" + typeOfTask + \"][X] \" + this.taskName + (\" (by: \") + this.formattedDeadline + \")\"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"               : \"[\" + typeOfTask + \"][ ] \" + this.taskName + (\" (by: \") + this.formattedDeadline + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"    /*","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the date object of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"     * @return the Temporal encapsulating the date and time.","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"    public Temporal getDeadline() {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        return deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the raw date of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"     * @return the String containing the raw date and time.","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"    public String getRawDeadline() { return rawDeadline;}","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"eugenetangkj":57}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":" * Represents a chatbot that one can interact with to keep track of tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    /** Logo for the name of the chatbot. **/","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    private static final String logo \u003d \" |          ______    ______\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"                                     + \" | ____    |      |  |      |\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"                                     + \" |      |  |      |  |      |\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"                                     + \" | ____ |  |______|  |______|\\n\";","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    /** Straight line that separates commands. **/","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    private static final String STRAIGHT_LINE \u003d","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"            \"_______________________________________________________________________________________________\";","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"    /** File path where the data file should be stored in. **/","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"    private static final String DATA_FILE_PATH \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"tasks.txt\")","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"            .toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"    ","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"    /** Commands that supported by the chatbot. */","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"    private static final String COMMAND_LIST \u003d","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"            \"1. list -\u003e Provides a list of existing tasks.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"                    + \"2. mark X -\u003e Marks task number X as done.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"                    + \"3. unmark X -\u003e Marks task number X as undone.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"                    + \"4. todo taskName -\u003e Creates a todo task with name taskName.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"                    + \"5. deadline taskName /by date -\u003e Creates a deadline task with name taskName and deadline date.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"                    + \"6. event taskName /from startDate /to endDate -\u003e Creates an event task with name taskName,\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"                    + \"   start date startDate, and end date endDate.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"                    + \"7. delete X -\u003e Deletes task number X from the list.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"                    + \"8. on givenDate -\u003e Displays all the tasks that occur on givenDate.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"                    + \"9. help -\u003e Prints the list of commands supported by this bot.\\n\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"                    + \"Please enter dates in the format of either yyyy-MM-dd hh:mm or yyyy-MM-dd.\";","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"     * Launches the chatbot.","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"     * @param args The command line arguments that one can type.","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"        //Prints introduction","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"        printIntroductoryMessage();","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"        //Checks if user has a data file that stores task history","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"        if (isFirstRun()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"            //User\u0027s first time running the bot. Create relevant folder and file.","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"                createFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"                System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"                System.out.println(\"Could not create data file to store task history. The following error occurred:\");","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"                System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"                return;","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"        //Restores task history if present","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"            boolean isSuccessful \u003d restoreTaskHistory(tasks);","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"            if (! isSuccessful) {","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"                return;","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(\"Data file is missing. The following error occurred: \");","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"        ","lastModifiedDate":"2023-01-17"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"        //Prepare input source","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"        //Keep taking in user input line by line","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"        while (true) {","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"            //Read in user command","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"            //Determine if user types in a single word or multiple words","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"            String[] inputArray \u003d input.split(\" \");","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":103,"author":{"gitId":"eugenetangkj"},"content":"            //User typed in \"bye\".","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"eugenetangkj"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":105,"author":{"gitId":"eugenetangkj"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"            //User typed in \"list\"","lastModifiedDate":"2023-01-17"},{"lineNumber":108,"author":{"gitId":"eugenetangkj"},"content":"            else if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":109,"author":{"gitId":"eugenetangkj"},"content":"                printUserTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"eugenetangkj"},"content":"                continue;","lastModifiedDate":"2023-01-23"},{"lineNumber":111,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":112,"author":{"gitId":"eugenetangkj"},"content":"            //User typed in \"help\"","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"eugenetangkj"},"content":"            else if (input.equals(\"help\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"eugenetangkj"},"content":"                System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"eugenetangkj"},"content":"                System.out.println(\"Supported Commands:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"eugenetangkj"},"content":"                System.out.println(COMMAND_LIST);","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"eugenetangkj"},"content":"                System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"eugenetangkj"},"content":"                continue;","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":121,"author":{"gitId":"eugenetangkj"},"content":"            String firstWord \u003d inputArray[0];","lastModifiedDate":"2023-01-23"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"            switch (firstWord) {","lastModifiedDate":"2023-01-23"},{"lineNumber":123,"author":{"gitId":"eugenetangkj"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-23"},{"lineNumber":124,"author":{"gitId":"eugenetangkj"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"eugenetangkj"},"content":"                    if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The mark command must be followed by a single number.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"eugenetangkj"},"content":"                    if (! isInteger(inputArray[1])) {","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The mark command must be followed by a single integer.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfTask \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":132,"author":{"gitId":"eugenetangkj"},"content":"                    if (! (indexOfTask \u003c\u003d tasks.size() - 1 \u0026\u0026 indexOfTask \u003e\u003d 0)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":133,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"Please enter a valid task number. You currently have \" +","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"eugenetangkj"},"content":"                                Integer.toString(tasks.size()) + \" tasks.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":135,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"eugenetangkj"},"content":"                    markAsDone(tasks.get(indexOfTask));","lastModifiedDate":"2023-01-23"},{"lineNumber":137,"author":{"gitId":"eugenetangkj"},"content":"                    saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":138,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":139,"author":{"gitId":"eugenetangkj"},"content":"                } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":141,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(dukeException.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":143,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":144,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":145,"author":{"gitId":"eugenetangkj"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-23"},{"lineNumber":146,"author":{"gitId":"eugenetangkj"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"eugenetangkj"},"content":"                    if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The unmark command must be followed by a single number.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":149,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":150,"author":{"gitId":"eugenetangkj"},"content":"                    if (! isInteger(inputArray[1])) {","lastModifiedDate":"2023-01-18"},{"lineNumber":151,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The unmark command must be followed by a single integer.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":152,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfTask \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":154,"author":{"gitId":"eugenetangkj"},"content":"                    if (! (indexOfTask \u003c\u003d tasks.size() - 1 \u0026\u0026 indexOfTask \u003e\u003d 0)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":155,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"Please enter a valid task number. You currently have \" +","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"eugenetangkj"},"content":"                                Integer.toString(tasks.size()) + \" tasks.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":157,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":158,"author":{"gitId":"eugenetangkj"},"content":"                    markAsUndone(tasks.get(indexOfTask));","lastModifiedDate":"2023-01-23"},{"lineNumber":159,"author":{"gitId":"eugenetangkj"},"content":"                    saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":160,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":161,"author":{"gitId":"eugenetangkj"},"content":"                } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-18"},{"lineNumber":162,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":163,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(dukeException.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":164,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":165,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":166,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":167,"author":{"gitId":"eugenetangkj"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-23"},{"lineNumber":168,"author":{"gitId":"eugenetangkj"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":169,"author":{"gitId":"eugenetangkj"},"content":"                    if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The delete command must be followed by a single number.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":171,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":172,"author":{"gitId":"eugenetangkj"},"content":"                    if (! isInteger(inputArray[1])) {","lastModifiedDate":"2023-01-18"},{"lineNumber":173,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The delete command must be followed by a single integer.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":174,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":175,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfTask \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":176,"author":{"gitId":"eugenetangkj"},"content":"                    if (! (indexOfTask \u003c\u003d tasks.size() - 1 \u0026\u0026 indexOfTask \u003e\u003d 0)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":177,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"Please enter a valid task number. You currently have \"","lastModifiedDate":"2023-01-23"},{"lineNumber":178,"author":{"gitId":"eugenetangkj"},"content":"                                + Integer.toString(tasks.size()) + \" tasks.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":179,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":180,"author":{"gitId":"eugenetangkj"},"content":"                    deleteTask(indexOfTask, tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":181,"author":{"gitId":"eugenetangkj"},"content":"                    saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":182,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":183,"author":{"gitId":"eugenetangkj"},"content":"                } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-18"},{"lineNumber":184,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":185,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(dukeException.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":186,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":187,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":188,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":189,"author":{"gitId":"eugenetangkj"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-23"},{"lineNumber":190,"author":{"gitId":"eugenetangkj"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":191,"author":{"gitId":"eugenetangkj"},"content":"                    if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":192,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The todo command cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":193,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":194,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfType \u003d input.indexOf(\"todo\");","lastModifiedDate":"2023-01-18"},{"lineNumber":195,"author":{"gitId":"eugenetangkj"},"content":"                    String taskName \u003d input.substring(indexOfType + 5);","lastModifiedDate":"2023-01-18"},{"lineNumber":196,"author":{"gitId":"eugenetangkj"},"content":"                    ToDo newToDoTask \u003d new ToDo(taskName);","lastModifiedDate":"2023-01-18"},{"lineNumber":197,"author":{"gitId":"eugenetangkj"},"content":"                    addTask(newToDoTask, tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":198,"author":{"gitId":"eugenetangkj"},"content":"                    saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":199,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":200,"author":{"gitId":"eugenetangkj"},"content":"                } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-18"},{"lineNumber":201,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":202,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(dukeException.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":203,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":204,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":205,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":206,"author":{"gitId":"eugenetangkj"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-23"},{"lineNumber":207,"author":{"gitId":"eugenetangkj"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":208,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfType \u003d input.indexOf(\"deadline\");","lastModifiedDate":"2023-01-18"},{"lineNumber":209,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfType + 8 \u003e input.length() - 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":210,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The deadline command cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":211,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":212,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfBy \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-01-18"},{"lineNumber":213,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfBy \u003d\u003d -1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":214,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The deadline cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":215,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":216,"author":{"gitId":"eugenetangkj"},"content":"                    //deadline/by","lastModifiedDate":"2023-01-18"},{"lineNumber":217,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfType + 8 \u003d\u003d indexOfBy) {","lastModifiedDate":"2023-01-18"},{"lineNumber":218,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"There seems to be a missing task name.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":219,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":220,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfBy + 4 \u003e input.length() - 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":221,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The deadline cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":222,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":223,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfType + 9 \u003e indexOfBy - 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":224,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"There seems to be a missing task name.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":225,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":226,"author":{"gitId":"eugenetangkj"},"content":"                    String taskName \u003d input.substring(indexOfType + 9, indexOfBy - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":227,"author":{"gitId":"eugenetangkj"},"content":"                    String deadlineOfTask;","lastModifiedDate":"2023-01-18"},{"lineNumber":228,"author":{"gitId":"eugenetangkj"},"content":"                    if (input.charAt(indexOfBy + 3) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2023-01-18"},{"lineNumber":229,"author":{"gitId":"eugenetangkj"},"content":"                        deadlineOfTask \u003d input.substring(indexOfBy + 4);","lastModifiedDate":"2023-01-18"},{"lineNumber":230,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":231,"author":{"gitId":"eugenetangkj"},"content":"                    else {","lastModifiedDate":"2023-01-18"},{"lineNumber":232,"author":{"gitId":"eugenetangkj"},"content":"                        deadlineOfTask \u003d input.substring(indexOfBy + 3);","lastModifiedDate":"2023-01-18"},{"lineNumber":233,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":234,"author":{"gitId":"eugenetangkj"},"content":"                    if (taskName.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":235,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The task name cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":236,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":237,"author":{"gitId":"eugenetangkj"},"content":"                    if (deadlineOfTask.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":238,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The deadline cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":239,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":240,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":241,"author":{"gitId":"eugenetangkj"},"content":"                    //Checks if the deadline is a valid date and time","lastModifiedDate":"2023-01-24"},{"lineNumber":242,"author":{"gitId":"eugenetangkj"},"content":"                    Deadline newDeadlineTask \u003d new Deadline(taskName, deadlineOfTask, getDateObject(deadlineOfTask));","lastModifiedDate":"2023-01-24"},{"lineNumber":243,"author":{"gitId":"eugenetangkj"},"content":"                    addTask(newDeadlineTask, tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":244,"author":{"gitId":"eugenetangkj"},"content":"                    saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":245,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":246,"author":{"gitId":"eugenetangkj"},"content":"                } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-18"},{"lineNumber":247,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":248,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(dukeException.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":249,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":250,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":251,"author":{"gitId":"eugenetangkj"},"content":"                } catch (DateTimeParseException dateTimeException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":252,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":253,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(\"Please check that you entered a valid date, and that the date should be in \"","lastModifiedDate":"2023-01-24"},{"lineNumber":254,"author":{"gitId":"eugenetangkj"},"content":"                            + \"the format of\\nyyyy-MM-dd hh:mm or yyyy-MM-dd.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":255,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":256,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":257,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":258,"author":{"gitId":"eugenetangkj"},"content":"            case \"event\":","lastModifiedDate":"2023-01-23"},{"lineNumber":259,"author":{"gitId":"eugenetangkj"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":260,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfType \u003d input.indexOf(\"event\");","lastModifiedDate":"2023-01-18"},{"lineNumber":261,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfType + 5 \u003e input.length() - 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":262,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The event command cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":263,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":264,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":265,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfFrom \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-01-18"},{"lineNumber":266,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfFrom \u003d\u003d -1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":267,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"There seems to be a missing from date.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":268,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":269,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":270,"author":{"gitId":"eugenetangkj"},"content":"                    int indexOfTo \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-01-18"},{"lineNumber":271,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfTo \u003d\u003d -1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":272,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"There seems to be a missing to date.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":273,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":274,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":275,"author":{"gitId":"eugenetangkj"},"content":"                    //Check taskName","lastModifiedDate":"2023-01-18"},{"lineNumber":276,"author":{"gitId":"eugenetangkj"},"content":"                    if ((indexOfType + 6 \u003e indexOfFrom - 1)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":277,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"There seems to be a missing task name.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":278,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":279,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":280,"author":{"gitId":"eugenetangkj"},"content":"                    String taskName \u003d input.substring(indexOfType + 6, indexOfFrom - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":281,"author":{"gitId":"eugenetangkj"},"content":"                    if (taskName.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":282,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The task name cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":283,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":284,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":285,"author":{"gitId":"eugenetangkj"},"content":"                    //Check startDate","lastModifiedDate":"2023-01-18"},{"lineNumber":286,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfFrom + 6 \u003e indexOfTo - 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":287,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"There seems to be a missing start date.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":288,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":289,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":290,"author":{"gitId":"eugenetangkj"},"content":"                    String startDate \u003d input.substring(indexOfFrom + 6, indexOfTo - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":291,"author":{"gitId":"eugenetangkj"},"content":"                    if (startDate.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":292,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The start date cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":293,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":294,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":295,"author":{"gitId":"eugenetangkj"},"content":"                    //Check endDate","lastModifiedDate":"2023-01-18"},{"lineNumber":296,"author":{"gitId":"eugenetangkj"},"content":"                    if (indexOfTo + 4 \u003e input.length() - 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":297,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"There seems to be a missing end date.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":298,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":299,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":300,"author":{"gitId":"eugenetangkj"},"content":"                    String endDate \u003d input.substring(indexOfTo + 4);","lastModifiedDate":"2023-01-18"},{"lineNumber":301,"author":{"gitId":"eugenetangkj"},"content":"                    if (endDate.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":302,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The end date cannot be left blank.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":303,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":304,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":305,"author":{"gitId":"eugenetangkj"},"content":"                    //Create new event task","lastModifiedDate":"2023-01-24"},{"lineNumber":306,"author":{"gitId":"eugenetangkj"},"content":"                    Temporal start \u003d getDateObject(startDate);","lastModifiedDate":"2023-01-24"},{"lineNumber":307,"author":{"gitId":"eugenetangkj"},"content":"                    Temporal end \u003d getDateObject(endDate);","lastModifiedDate":"2023-01-24"},{"lineNumber":308,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":309,"author":{"gitId":"eugenetangkj"},"content":"                    if (! isValidDuration(start, end)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":310,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"Start date must be before end date.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":311,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":312,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":313,"author":{"gitId":"eugenetangkj"},"content":"                    Event newEventTask \u003d new Event(taskName, startDate, endDate, start, end);","lastModifiedDate":"2023-01-24"},{"lineNumber":314,"author":{"gitId":"eugenetangkj"},"content":"                    addTask(newEventTask, tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":315,"author":{"gitId":"eugenetangkj"},"content":"                    saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":316,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":317,"author":{"gitId":"eugenetangkj"},"content":"                } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-18"},{"lineNumber":318,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":319,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(dukeException.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":320,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":321,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":322,"author":{"gitId":"eugenetangkj"},"content":"                } catch (DateTimeParseException dateTimeException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":323,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":324,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(\"Please check that you entered a valid date, and that the date should be in \"","lastModifiedDate":"2023-01-24"},{"lineNumber":325,"author":{"gitId":"eugenetangkj"},"content":"                            + \"the format of\\nyyyy-MM-dd hh:mm or yyyy-MM-dd.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":326,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":327,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":328,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":329,"author":{"gitId":"eugenetangkj"},"content":"            case \"on\":","lastModifiedDate":"2023-01-24"},{"lineNumber":330,"author":{"gitId":"eugenetangkj"},"content":"                try {","lastModifiedDate":"2023-01-24"},{"lineNumber":331,"author":{"gitId":"eugenetangkj"},"content":"                    String dateString \u003d input.substring(3);","lastModifiedDate":"2023-01-24"},{"lineNumber":332,"author":{"gitId":"eugenetangkj"},"content":"                    if (dateString.equals(\"\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":333,"author":{"gitId":"eugenetangkj"},"content":"                        throw new DukeException(\"The date cannot be left blank.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":334,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":335,"author":{"gitId":"eugenetangkj"},"content":"                    Temporal dateObject \u003d getDateObject(dateString);","lastModifiedDate":"2023-01-24"},{"lineNumber":336,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":337,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(\"Tasks on: \" + Task.formatDate(dateObject));","lastModifiedDate":"2023-01-24"},{"lineNumber":338,"author":{"gitId":"eugenetangkj"},"content":"                    int count \u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":339,"author":{"gitId":"eugenetangkj"},"content":"                    for (int t \u003d 0; t \u003c tasks.size(); t \u003d t + 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":340,"author":{"gitId":"eugenetangkj"},"content":"                        Task currTask \u003d tasks.get(t);","lastModifiedDate":"2023-01-24"},{"lineNumber":341,"author":{"gitId":"eugenetangkj"},"content":"                        if (currTask instanceof Deadline) {","lastModifiedDate":"2023-01-24"},{"lineNumber":342,"author":{"gitId":"eugenetangkj"},"content":"                            if (isEqualDate(dateObject, ((Deadline) currTask).getDeadline())) {","lastModifiedDate":"2023-01-24"},{"lineNumber":343,"author":{"gitId":"eugenetangkj"},"content":"                                System.out.println(Integer.toString(count) + \". \" +","lastModifiedDate":"2023-01-24"},{"lineNumber":344,"author":{"gitId":"eugenetangkj"},"content":"                                        currTask.getStatusOfTaskInString());","lastModifiedDate":"2023-01-24"},{"lineNumber":345,"author":{"gitId":"eugenetangkj"},"content":"                                count +\u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":346,"author":{"gitId":"eugenetangkj"},"content":"                            }","lastModifiedDate":"2023-01-24"},{"lineNumber":347,"author":{"gitId":"eugenetangkj"},"content":"                        }","lastModifiedDate":"2023-01-24"},{"lineNumber":348,"author":{"gitId":"eugenetangkj"},"content":"                        else if (currTask instanceof Event) {","lastModifiedDate":"2023-01-24"},{"lineNumber":349,"author":{"gitId":"eugenetangkj"},"content":"                            if (isValidDuration(((Event) currTask).getStartDate(), dateObject) \u0026\u0026","lastModifiedDate":"2023-01-24"},{"lineNumber":350,"author":{"gitId":"eugenetangkj"},"content":"                                    isValidDuration(dateObject, ((Event) currTask).getEndDate())) {","lastModifiedDate":"2023-01-24"},{"lineNumber":351,"author":{"gitId":"eugenetangkj"},"content":"                                System.out.println(Integer.toString(count) + \". \" +","lastModifiedDate":"2023-01-24"},{"lineNumber":352,"author":{"gitId":"eugenetangkj"},"content":"                                        currTask.getStatusOfTaskInString());","lastModifiedDate":"2023-01-24"},{"lineNumber":353,"author":{"gitId":"eugenetangkj"},"content":"                                count +\u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":354,"author":{"gitId":"eugenetangkj"},"content":"                            }","lastModifiedDate":"2023-01-24"},{"lineNumber":355,"author":{"gitId":"eugenetangkj"},"content":"                        }","lastModifiedDate":"2023-01-24"},{"lineNumber":356,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":357,"author":{"gitId":"eugenetangkj"},"content":"                    if (count \u003d\u003d 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":358,"author":{"gitId":"eugenetangkj"},"content":"                        System.out.println(\"You have no tasks on this day.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":359,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":360,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":361,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":362,"author":{"gitId":"eugenetangkj"},"content":"                } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":363,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":364,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(dukeException.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":365,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":366,"author":{"gitId":"eugenetangkj"},"content":"                } catch (DateTimeParseException dateTimeException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":367,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":368,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(\"Please check that you entered a valid date, and that the date should be in \"","lastModifiedDate":"2023-01-24"},{"lineNumber":369,"author":{"gitId":"eugenetangkj"},"content":"                            + \"the format of\\nyyyy-MM-dd hh:mm or yyyy-MM-dd.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":370,"author":{"gitId":"eugenetangkj"},"content":"                    System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":371,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":372,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":373,"author":{"gitId":"eugenetangkj"},"content":"            default:","lastModifiedDate":"2023-01-23"},{"lineNumber":374,"author":{"gitId":"eugenetangkj"},"content":"                printInvalidMessage();","lastModifiedDate":"2023-01-18"},{"lineNumber":375,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":376,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":377,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":378,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":379,"author":{"gitId":"eugenetangkj"},"content":"        //Exits the bot after printing exit message","lastModifiedDate":"2023-01-23"},{"lineNumber":380,"author":{"gitId":"eugenetangkj"},"content":"        printExitMessage();","lastModifiedDate":"2023-01-17"},{"lineNumber":381,"author":{"gitId":"eugenetangkj"},"content":"        sc.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":382,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":383,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":384,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":385,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":386,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":387,"author":{"gitId":"eugenetangkj"},"content":"     * Prints the introductory message.","lastModifiedDate":"2023-01-17"},{"lineNumber":388,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":389,"author":{"gitId":"eugenetangkj"},"content":"    public static void printIntroductoryMessage() {","lastModifiedDate":"2023-01-17"},{"lineNumber":390,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-01-17"},{"lineNumber":391,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":392,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Boo! Nice to meet you.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":393,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"I am here to scare all your problems away by keeping track of your tasks.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":394,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"What can I help you with today?\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":395,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Supported Commands:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":396,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(COMMAND_LIST);","lastModifiedDate":"2023-01-24"},{"lineNumber":397,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":399,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":400,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":401,"author":{"gitId":"eugenetangkj"},"content":"     * Prints the exit message.","lastModifiedDate":"2023-01-17"},{"lineNumber":402,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":403,"author":{"gitId":"eugenetangkj"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2023-01-17"},{"lineNumber":404,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":405,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Goodbye. Hope that I have managed to scare all your problems away.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":406,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Have a great day! :)\");","lastModifiedDate":"2023-01-17"},{"lineNumber":407,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":408,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":409,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":410,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":411,"author":{"gitId":"eugenetangkj"},"content":"     * Prints out all the user tasks that have been entered by the user thus far.","lastModifiedDate":"2023-01-17"},{"lineNumber":412,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":413,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks The ArrayList that stores the user tasks to be printed out.","lastModifiedDate":"2023-01-23"},{"lineNumber":414,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":415,"author":{"gitId":"eugenetangkj"},"content":"    public static void printUserTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":416,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":417,"author":{"gitId":"eugenetangkj"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-23"},{"lineNumber":418,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(\"There are currently no tasks in your list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":419,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":420,"author":{"gitId":"eugenetangkj"},"content":"            return;","lastModifiedDate":"2023-01-18"},{"lineNumber":421,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":422,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":423,"author":{"gitId":"eugenetangkj"},"content":"        int numberOfTasks\u003d tasks.size();","lastModifiedDate":"2023-01-23"},{"lineNumber":424,"author":{"gitId":"eugenetangkj"},"content":"        //Process each task in the storage","lastModifiedDate":"2023-01-17"},{"lineNumber":425,"author":{"gitId":"eugenetangkj"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i \u003d i + 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":426,"author":{"gitId":"eugenetangkj"},"content":"            String numbering \u003d Integer.toString(i + 1) + \". \";","lastModifiedDate":"2023-01-17"},{"lineNumber":427,"author":{"gitId":"eugenetangkj"},"content":"            String output \u003d numbering + tasks.get(i).getStatusOfTaskInString();","lastModifiedDate":"2023-01-23"},{"lineNumber":428,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(output);","lastModifiedDate":"2023-01-17"},{"lineNumber":429,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":430,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":431,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":432,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":433,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":434,"author":{"gitId":"eugenetangkj"},"content":"     * Adds user task into storage and informs the user.","lastModifiedDate":"2023-01-17"},{"lineNumber":435,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":436,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskToAdd The task to be added to storage.","lastModifiedDate":"2023-01-18"},{"lineNumber":437,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks The ArrayList that stores the tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":438,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":439,"author":{"gitId":"eugenetangkj"},"content":"    public static void addTask(Task taskToAdd, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":440,"author":{"gitId":"eugenetangkj"},"content":"        tasks.add(taskToAdd);","lastModifiedDate":"2023-01-23"},{"lineNumber":441,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":442,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Added task to list:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":443,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(taskToAdd.getStatusOfTaskInString());","lastModifiedDate":"2023-01-18"},{"lineNumber":444,"author":{"gitId":"eugenetangkj"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":445,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(\"Currently, there is 1 task in your list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":446,"author":{"gitId":"eugenetangkj"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":447,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(\"Currently, there are \" + Integer.toString(tasks.size())","lastModifiedDate":"2023-01-23"},{"lineNumber":448,"author":{"gitId":"eugenetangkj"},"content":"                    + \" tasks in your list.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":449,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":450,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":451,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":452,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":453,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":454,"author":{"gitId":"eugenetangkj"},"content":"     * Marks a task as done and informs the user.","lastModifiedDate":"2023-01-17"},{"lineNumber":455,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":456,"author":{"gitId":"eugenetangkj"},"content":"     * @param currentTask The task to be marked as done.","lastModifiedDate":"2023-01-17"},{"lineNumber":457,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":458,"author":{"gitId":"eugenetangkj"},"content":"   public static void markAsDone(Task currentTask) {","lastModifiedDate":"2023-01-17"},{"lineNumber":459,"author":{"gitId":"eugenetangkj"},"content":"       currentTask.setDoneStatus();","lastModifiedDate":"2023-01-17"},{"lineNumber":460,"author":{"gitId":"eugenetangkj"},"content":"       System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":461,"author":{"gitId":"eugenetangkj"},"content":"       System.out.println(\"Poof! One less worry. The following task is now marked as done:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":462,"author":{"gitId":"eugenetangkj"},"content":"       System.out.println(currentTask.getStatusOfTaskInString());","lastModifiedDate":"2023-01-17"},{"lineNumber":463,"author":{"gitId":"eugenetangkj"},"content":"       System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":464,"author":{"gitId":"eugenetangkj"},"content":"   }","lastModifiedDate":"2023-01-17"},{"lineNumber":465,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":466,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":467,"author":{"gitId":"eugenetangkj"},"content":"     * Marks a task as undone and informs the user.","lastModifiedDate":"2023-01-17"},{"lineNumber":468,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":469,"author":{"gitId":"eugenetangkj"},"content":"     * @param currentTask The task to be marked as undone.","lastModifiedDate":"2023-01-17"},{"lineNumber":470,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":471,"author":{"gitId":"eugenetangkj"},"content":"    public static void markAsUndone(Task currentTask) {","lastModifiedDate":"2023-01-17"},{"lineNumber":472,"author":{"gitId":"eugenetangkj"},"content":"        currentTask.setUndoneStatus();","lastModifiedDate":"2023-01-17"},{"lineNumber":473,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":474,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Alright! The following task is now marked as undone. I will help you keep an eye on it.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":475,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(currentTask.getStatusOfTaskInString());","lastModifiedDate":"2023-01-17"},{"lineNumber":476,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":477,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":478,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":479,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":480,"author":{"gitId":"eugenetangkj"},"content":"     * Prints a message indicating to the user that the command is invalid.","lastModifiedDate":"2023-01-18"},{"lineNumber":481,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":482,"author":{"gitId":"eugenetangkj"},"content":"    public static void printInvalidMessage() {","lastModifiedDate":"2023-01-18"},{"lineNumber":483,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":484,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Sorry. I do not understand this command. Please try again.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":485,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":486,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":487,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":488,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":489,"author":{"gitId":"eugenetangkj"},"content":"     * Deletes a task from the given list of task, and informs the user.","lastModifiedDate":"2023-01-18"},{"lineNumber":490,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":491,"author":{"gitId":"eugenetangkj"},"content":"     * @param indexOfTask Index of the task in the list that is to be deleted.","lastModifiedDate":"2023-01-18"},{"lineNumber":492,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks List containing all the tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":493,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":494,"author":{"gitId":"eugenetangkj"},"content":"    public static void deleteTask(int indexOfTask, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":495,"author":{"gitId":"eugenetangkj"},"content":"        Task taskToBeDeleted \u003d tasks.get(indexOfTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":496,"author":{"gitId":"eugenetangkj"},"content":"        tasks.remove(indexOfTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":497,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":498,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Ta-da! The following task has been deleted.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":499,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(taskToBeDeleted.getStatusOfTaskInString());","lastModifiedDate":"2023-01-18"},{"lineNumber":500,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Current number of tasks is: \" + Integer.toString(tasks.size()) + \".\");","lastModifiedDate":"2023-01-23"},{"lineNumber":501,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":502,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":503,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":504,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":505,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":506,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":507,"author":{"gitId":"eugenetangkj"},"content":"     * Checks if a string can be converted into an Integer.","lastModifiedDate":"2023-01-18"},{"lineNumber":508,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":509,"author":{"gitId":"eugenetangkj"},"content":"     * @param stringToCheck String to check whether the conversion is possible.","lastModifiedDate":"2023-01-18"},{"lineNumber":510,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if it can be converted, else return false.","lastModifiedDate":"2023-01-18"},{"lineNumber":511,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":512,"author":{"gitId":"eugenetangkj"},"content":"    public static boolean isInteger(String stringToCheck) {","lastModifiedDate":"2023-01-18"},{"lineNumber":513,"author":{"gitId":"eugenetangkj"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":514,"author":{"gitId":"eugenetangkj"},"content":"            int intVersion \u003d Integer.parseInt(stringToCheck);","lastModifiedDate":"2023-01-18"},{"lineNumber":515,"author":{"gitId":"eugenetangkj"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2023-01-18"},{"lineNumber":516,"author":{"gitId":"eugenetangkj"},"content":"            return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":517,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":518,"author":{"gitId":"eugenetangkj"},"content":"        return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":519,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":520,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":521,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":522,"author":{"gitId":"eugenetangkj"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2023-01-24"},{"lineNumber":523,"author":{"gitId":"eugenetangkj"},"content":"     * Determines if it is the first time that the user uses the chatbot by checking for","lastModifiedDate":"2023-01-23"},{"lineNumber":524,"author":{"gitId":"eugenetangkj"},"content":"     * the existence of a data file.","lastModifiedDate":"2023-01-23"},{"lineNumber":525,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":526,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if it is the user\u0027s first time running the chatbot,","lastModifiedDate":"2023-01-23"},{"lineNumber":527,"author":{"gitId":"eugenetangkj"},"content":"     *         else return false.","lastModifiedDate":"2023-01-23"},{"lineNumber":528,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":529,"author":{"gitId":"eugenetangkj"},"content":"    public static boolean isFirstRun() {","lastModifiedDate":"2023-01-23"},{"lineNumber":530,"author":{"gitId":"eugenetangkj"},"content":"        //Check if the path to the data file is valid","lastModifiedDate":"2023-01-23"},{"lineNumber":531,"author":{"gitId":"eugenetangkj"},"content":"        java.nio.file.Path desiredPath \u003d  Paths.get(System.getProperty(\"user.dir\"), \"data\", \"tasks.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":532,"author":{"gitId":"eugenetangkj"},"content":"        return ! java.nio.file.Files.exists(desiredPath);","lastModifiedDate":"2023-01-23"},{"lineNumber":533,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":534,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":535,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":536,"author":{"gitId":"eugenetangkj"},"content":"     * Creates the data file for the user to store task history.","lastModifiedDate":"2023-01-23"},{"lineNumber":537,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":538,"author":{"gitId":"eugenetangkj"},"content":"     * @throws IOException if an I/O error occurred during file creation.","lastModifiedDate":"2023-01-23"},{"lineNumber":539,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":540,"author":{"gitId":"eugenetangkj"},"content":"    public static void createFile() throws IOException {","lastModifiedDate":"2023-01-23"},{"lineNumber":541,"author":{"gitId":"eugenetangkj"},"content":"        //Make the directory","lastModifiedDate":"2023-01-23"},{"lineNumber":542,"author":{"gitId":"eugenetangkj"},"content":"        java.nio.file.Path desiredPath \u003d  Paths.get(System.getProperty(\"user.dir\"), \"data\");","lastModifiedDate":"2023-01-23"},{"lineNumber":543,"author":{"gitId":"eugenetangkj"},"content":"        File directory \u003d new File(desiredPath.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":544,"author":{"gitId":"eugenetangkj"},"content":"        if (! directory.exists()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":545,"author":{"gitId":"eugenetangkj"},"content":"            directory.mkdir();","lastModifiedDate":"2023-01-23"},{"lineNumber":546,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":547,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":548,"author":{"gitId":"eugenetangkj"},"content":"        //Create the file","lastModifiedDate":"2023-01-23"},{"lineNumber":549,"author":{"gitId":"eugenetangkj"},"content":"        File dataFile \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2023-01-24"},{"lineNumber":550,"author":{"gitId":"eugenetangkj"},"content":"        if (! dataFile.exists()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":551,"author":{"gitId":"eugenetangkj"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":552,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":553,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":554,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":555,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":556,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":557,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":558,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":559,"author":{"gitId":"eugenetangkj"},"content":"     * Restores the task history stored in the data file.","lastModifiedDate":"2023-01-23"},{"lineNumber":560,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":561,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks The ArrayList that store all the tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":562,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if successful, false otherwise.","lastModifiedDate":"2023-01-24"},{"lineNumber":563,"author":{"gitId":"eugenetangkj"},"content":"     * @throws FileNotFoundException if the data file cannot be found.","lastModifiedDate":"2023-01-23"},{"lineNumber":564,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":565,"author":{"gitId":"eugenetangkj"},"content":"    public static boolean restoreTaskHistory(ArrayList\u003cTask\u003e tasks) throws FileNotFoundException {","lastModifiedDate":"2023-01-24"},{"lineNumber":566,"author":{"gitId":"eugenetangkj"},"content":"        File dataFile \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2023-01-24"},{"lineNumber":567,"author":{"gitId":"eugenetangkj"},"content":"        Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2023-01-23"},{"lineNumber":568,"author":{"gitId":"eugenetangkj"},"content":"        boolean isSuccessful \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":569,"author":{"gitId":"eugenetangkj"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":570,"author":{"gitId":"eugenetangkj"},"content":"            String currentTask \u003d s.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":571,"author":{"gitId":"eugenetangkj"},"content":"            String[] currentTaskArray \u003d currentTask.split(\" \\\\| \");","lastModifiedDate":"2023-01-23"},{"lineNumber":572,"author":{"gitId":"eugenetangkj"},"content":"            String commandType \u003d currentTaskArray[0];","lastModifiedDate":"2023-01-23"},{"lineNumber":573,"author":{"gitId":"eugenetangkj"},"content":"            //Adds each task stored in the data file into tasks","lastModifiedDate":"2023-01-23"},{"lineNumber":574,"author":{"gitId":"eugenetangkj"},"content":"            switch (commandType) {","lastModifiedDate":"2023-01-23"},{"lineNumber":575,"author":{"gitId":"eugenetangkj"},"content":"                case \"T\":","lastModifiedDate":"2023-01-23"},{"lineNumber":576,"author":{"gitId":"eugenetangkj"},"content":"                    Task toDoTask \u003d new ToDo(currentTaskArray[2]);","lastModifiedDate":"2023-01-23"},{"lineNumber":577,"author":{"gitId":"eugenetangkj"},"content":"                    if (currentTaskArray[1].equals(\"1\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":578,"author":{"gitId":"eugenetangkj"},"content":"                        toDoTask.setDoneStatus();","lastModifiedDate":"2023-01-23"},{"lineNumber":579,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-23"},{"lineNumber":580,"author":{"gitId":"eugenetangkj"},"content":"                    tasks.add(toDoTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":581,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":582,"author":{"gitId":"eugenetangkj"},"content":"                case \"D\":","lastModifiedDate":"2023-01-23"},{"lineNumber":583,"author":{"gitId":"eugenetangkj"},"content":"                    try {","lastModifiedDate":"2023-01-24"},{"lineNumber":584,"author":{"gitId":"eugenetangkj"},"content":"                        //Checks if the deadline is a valid date and time","lastModifiedDate":"2023-01-24"},{"lineNumber":585,"author":{"gitId":"eugenetangkj"},"content":"                        Task deadlineTask \u003d new Deadline(currentTaskArray[2], currentTaskArray[3],","lastModifiedDate":"2023-01-24"},{"lineNumber":586,"author":{"gitId":"eugenetangkj"},"content":"                                getDateObject(currentTaskArray[3]));","lastModifiedDate":"2023-01-24"},{"lineNumber":587,"author":{"gitId":"eugenetangkj"},"content":"                        if (currentTaskArray[1].equals(\"1\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":588,"author":{"gitId":"eugenetangkj"},"content":"                            deadlineTask.setDoneStatus();","lastModifiedDate":"2023-01-23"},{"lineNumber":589,"author":{"gitId":"eugenetangkj"},"content":"                        }","lastModifiedDate":"2023-01-23"},{"lineNumber":590,"author":{"gitId":"eugenetangkj"},"content":"                        tasks.add(deadlineTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":591,"author":{"gitId":"eugenetangkj"},"content":"                        break;","lastModifiedDate":"2023-01-23"},{"lineNumber":592,"author":{"gitId":"eugenetangkj"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":593,"author":{"gitId":"eugenetangkj"},"content":"                        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":594,"author":{"gitId":"eugenetangkj"},"content":"                        System.out.println(\"Please check that you did not modify the data file. Dates must be valid,\"","lastModifiedDate":"2023-01-24"},{"lineNumber":595,"author":{"gitId":"eugenetangkj"},"content":"                                + \" and in the format of\\nyyyy-MM-dd hh:mm or yyyy-MM-dd.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":596,"author":{"gitId":"eugenetangkj"},"content":"                        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":597,"author":{"gitId":"eugenetangkj"},"content":"                        isSuccessful \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":598,"author":{"gitId":"eugenetangkj"},"content":"                        break;","lastModifiedDate":"2023-01-24"},{"lineNumber":599,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":600,"author":{"gitId":"eugenetangkj"},"content":"                case \"E\":","lastModifiedDate":"2023-01-23"},{"lineNumber":601,"author":{"gitId":"eugenetangkj"},"content":"                    try {","lastModifiedDate":"2023-01-24"},{"lineNumber":602,"author":{"gitId":"eugenetangkj"},"content":"                        //Create new event task","lastModifiedDate":"2023-01-24"},{"lineNumber":603,"author":{"gitId":"eugenetangkj"},"content":"                        Temporal start \u003d getDateObject(currentTaskArray[3]);","lastModifiedDate":"2023-01-24"},{"lineNumber":604,"author":{"gitId":"eugenetangkj"},"content":"                        Temporal end \u003d getDateObject(currentTaskArray[4]);","lastModifiedDate":"2023-01-24"},{"lineNumber":605,"author":{"gitId":"eugenetangkj"},"content":"                        if (!isValidDuration(start, end)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":606,"author":{"gitId":"eugenetangkj"},"content":"                            throw new DukeException(\"Start date must be before end date.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":607,"author":{"gitId":"eugenetangkj"},"content":"                        }","lastModifiedDate":"2023-01-24"},{"lineNumber":608,"author":{"gitId":"eugenetangkj"},"content":"                        Task eventTask \u003d new Event(currentTaskArray[2], currentTaskArray[3], currentTaskArray[4],","lastModifiedDate":"2023-01-24"},{"lineNumber":609,"author":{"gitId":"eugenetangkj"},"content":"                                start, end);","lastModifiedDate":"2023-01-24"},{"lineNumber":610,"author":{"gitId":"eugenetangkj"},"content":"                        if (currentTaskArray[1].equals(\"1\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":611,"author":{"gitId":"eugenetangkj"},"content":"                            eventTask.setDoneStatus();","lastModifiedDate":"2023-01-23"},{"lineNumber":612,"author":{"gitId":"eugenetangkj"},"content":"                        }","lastModifiedDate":"2023-01-23"},{"lineNumber":613,"author":{"gitId":"eugenetangkj"},"content":"                        tasks.add(eventTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":614,"author":{"gitId":"eugenetangkj"},"content":"                        break;","lastModifiedDate":"2023-01-23"},{"lineNumber":615,"author":{"gitId":"eugenetangkj"},"content":"                    } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":616,"author":{"gitId":"eugenetangkj"},"content":"                        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":617,"author":{"gitId":"eugenetangkj"},"content":"                        System.out.println(dukeException.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":618,"author":{"gitId":"eugenetangkj"},"content":"                        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":619,"author":{"gitId":"eugenetangkj"},"content":"                        isSuccessful \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":620,"author":{"gitId":"eugenetangkj"},"content":"                        break;","lastModifiedDate":"2023-01-24"},{"lineNumber":621,"author":{"gitId":"eugenetangkj"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":622,"author":{"gitId":"eugenetangkj"},"content":"                        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":623,"author":{"gitId":"eugenetangkj"},"content":"                        System.out.println(\"Please check that you did not modify the data file. Dates must be valid,\"","lastModifiedDate":"2023-01-24"},{"lineNumber":624,"author":{"gitId":"eugenetangkj"},"content":"                                + \" and in the format of\\nyyyy-MM-dd hh:mm or yyyy-MM-dd.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":625,"author":{"gitId":"eugenetangkj"},"content":"                        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":626,"author":{"gitId":"eugenetangkj"},"content":"                        isSuccessful \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":627,"author":{"gitId":"eugenetangkj"},"content":"                        break;","lastModifiedDate":"2023-01-24"},{"lineNumber":628,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":629,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":630,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":631,"author":{"gitId":"eugenetangkj"},"content":"        s.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":632,"author":{"gitId":"eugenetangkj"},"content":"        return isSuccessful;","lastModifiedDate":"2023-01-24"},{"lineNumber":633,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":634,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":635,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":636,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":637,"author":{"gitId":"eugenetangkj"},"content":"     * Saves the tasks that are currently stored in the list into a data file stored in hard disk.","lastModifiedDate":"2023-01-23"},{"lineNumber":638,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":639,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks The list that contains the tasks to be saved.","lastModifiedDate":"2023-01-23"},{"lineNumber":640,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":641,"author":{"gitId":"eugenetangkj"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":642,"author":{"gitId":"eugenetangkj"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":643,"author":{"gitId":"eugenetangkj"},"content":"            File dataFile \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2023-01-24"},{"lineNumber":644,"author":{"gitId":"eugenetangkj"},"content":"            FileWriter fw \u003d new FileWriter(DATA_FILE_PATH);","lastModifiedDate":"2023-01-24"},{"lineNumber":645,"author":{"gitId":"eugenetangkj"},"content":"            //Reset content of file","lastModifiedDate":"2023-01-23"},{"lineNumber":646,"author":{"gitId":"eugenetangkj"},"content":"            fw.write(\"\");","lastModifiedDate":"2023-01-23"},{"lineNumber":647,"author":{"gitId":"eugenetangkj"},"content":"            fw.flush();","lastModifiedDate":"2023-01-24"},{"lineNumber":648,"author":{"gitId":"eugenetangkj"},"content":"            fw \u003d new FileWriter(DATA_FILE_PATH, true);","lastModifiedDate":"2023-01-24"},{"lineNumber":649,"author":{"gitId":"eugenetangkj"},"content":"            //Append new content into file","lastModifiedDate":"2023-01-23"},{"lineNumber":650,"author":{"gitId":"eugenetangkj"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i \u003d i + 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":651,"author":{"gitId":"eugenetangkj"},"content":"                Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2023-01-23"},{"lineNumber":652,"author":{"gitId":"eugenetangkj"},"content":"                String taskStatus \u003d (currentTask.getStatusOfTask())","lastModifiedDate":"2023-01-23"},{"lineNumber":653,"author":{"gitId":"eugenetangkj"},"content":"                                    ? \"1 | \"","lastModifiedDate":"2023-01-23"},{"lineNumber":654,"author":{"gitId":"eugenetangkj"},"content":"                                    : \"0 | \";","lastModifiedDate":"2023-01-23"},{"lineNumber":655,"author":{"gitId":"eugenetangkj"},"content":"                String lineToAdd \u003d (currentTask instanceof ToDo)","lastModifiedDate":"2023-01-23"},{"lineNumber":656,"author":{"gitId":"eugenetangkj"},"content":"                                   ? \"T | \" + taskStatus + currentTask.getNameOfTask()","lastModifiedDate":"2023-01-23"},{"lineNumber":657,"author":{"gitId":"eugenetangkj"},"content":"                                   : (currentTask instanceof Deadline)","lastModifiedDate":"2023-01-23"},{"lineNumber":658,"author":{"gitId":"eugenetangkj"},"content":"                                   ? \"D | \" + taskStatus + currentTask.getNameOfTask() + \" | \"","lastModifiedDate":"2023-01-23"},{"lineNumber":659,"author":{"gitId":"eugenetangkj"},"content":"                                           + ((Deadline) currentTask).getRawDeadline()","lastModifiedDate":"2023-01-24"},{"lineNumber":660,"author":{"gitId":"eugenetangkj"},"content":"                                   : \"E | \" + taskStatus + currentTask.getNameOfTask() + \" | \"","lastModifiedDate":"2023-01-23"},{"lineNumber":661,"author":{"gitId":"eugenetangkj"},"content":"                                           + ((Event) currentTask).getRawStartDate() + \" | \"","lastModifiedDate":"2023-01-24"},{"lineNumber":662,"author":{"gitId":"eugenetangkj"},"content":"                                                   + ((Event) currentTask).getRawEndDate();","lastModifiedDate":"2023-01-24"},{"lineNumber":663,"author":{"gitId":"eugenetangkj"},"content":"                if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":664,"author":{"gitId":"eugenetangkj"},"content":"                    lineToAdd +\u003d \"\\n\";","lastModifiedDate":"2023-01-23"},{"lineNumber":665,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":666,"author":{"gitId":"eugenetangkj"},"content":"                fw.write(lineToAdd);","lastModifiedDate":"2023-01-23"},{"lineNumber":667,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":668,"author":{"gitId":"eugenetangkj"},"content":"            fw.flush();","lastModifiedDate":"2023-01-24"},{"lineNumber":669,"author":{"gitId":"eugenetangkj"},"content":"            fw.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":670,"author":{"gitId":"eugenetangkj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":671,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(\"Could not save the tasks. The following error occurred: \");","lastModifiedDate":"2023-01-23"},{"lineNumber":672,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":673,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":674,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":675,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":676,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":677,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":678,"author":{"gitId":"eugenetangkj"},"content":"    /*","lastModifiedDate":"2023-01-24"},{"lineNumber":679,"author":{"gitId":"eugenetangkj"},"content":"     * Returns a Temporal that encapsulates date and or time information.","lastModifiedDate":"2023-01-24"},{"lineNumber":680,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":681,"author":{"gitId":"eugenetangkj"},"content":"     * @param rawDateString The raw String that contains date and or time information.","lastModifiedDate":"2023-01-24"},{"lineNumber":682,"author":{"gitId":"eugenetangkj"},"content":"     * @return the Temporal with the date and or time information.","lastModifiedDate":"2023-01-24"},{"lineNumber":683,"author":{"gitId":"eugenetangkj"},"content":"     * @throws DateTimeParseException if the raw String is not of the correct date format","lastModifiedDate":"2023-01-24"},{"lineNumber":684,"author":{"gitId":"eugenetangkj"},"content":"     *                                as requested in the command list of the bot.","lastModifiedDate":"2023-01-24"},{"lineNumber":685,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":686,"author":{"gitId":"eugenetangkj"},"content":"    public static Temporal getDateObject(String rawDateString)","lastModifiedDate":"2023-01-24"},{"lineNumber":687,"author":{"gitId":"eugenetangkj"},"content":"            throws DateTimeParseException {","lastModifiedDate":"2023-01-24"},{"lineNumber":688,"author":{"gitId":"eugenetangkj"},"content":"        //Possible formats, with and without time","lastModifiedDate":"2023-01-24"},{"lineNumber":689,"author":{"gitId":"eugenetangkj"},"content":"        String timePatternOne \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2023-01-24"},{"lineNumber":690,"author":{"gitId":"eugenetangkj"},"content":"        String timePatternTwo \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2023-01-24"},{"lineNumber":691,"author":{"gitId":"eugenetangkj"},"content":"        DateTimeFormatter formatterWithTime \u003d DateTimeFormatter.ofPattern(timePatternOne);","lastModifiedDate":"2023-01-24"},{"lineNumber":692,"author":{"gitId":"eugenetangkj"},"content":"        DateTimeFormatter formatterWithoutTime \u003d DateTimeFormatter.ofPattern(timePatternTwo);","lastModifiedDate":"2023-01-24"},{"lineNumber":693,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":694,"author":{"gitId":"eugenetangkj"},"content":"        //Determine which format","lastModifiedDate":"2023-01-24"},{"lineNumber":695,"author":{"gitId":"eugenetangkj"},"content":"        boolean hasTime \u003d (rawDateString.length() \u003e timePatternTwo.length());","lastModifiedDate":"2023-01-24"},{"lineNumber":696,"author":{"gitId":"eugenetangkj"},"content":"        DateTimeFormatter formatterToUse \u003d (hasTime)","lastModifiedDate":"2023-01-24"},{"lineNumber":697,"author":{"gitId":"eugenetangkj"},"content":"                ? formatterWithTime","lastModifiedDate":"2023-01-24"},{"lineNumber":698,"author":{"gitId":"eugenetangkj"},"content":"                : formatterWithoutTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":699,"author":{"gitId":"eugenetangkj"},"content":"        if (hasTime) {","lastModifiedDate":"2023-01-24"},{"lineNumber":700,"author":{"gitId":"eugenetangkj"},"content":"            //A date with time","lastModifiedDate":"2023-01-24"},{"lineNumber":701,"author":{"gitId":"eugenetangkj"},"content":"            return LocalDateTime.parse(rawDateString, formatterToUse);","lastModifiedDate":"2023-01-24"},{"lineNumber":702,"author":{"gitId":"eugenetangkj"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":703,"author":{"gitId":"eugenetangkj"},"content":"            //A date without time","lastModifiedDate":"2023-01-24"},{"lineNumber":704,"author":{"gitId":"eugenetangkj"},"content":"            return LocalDate.parse(rawDateString, formatterToUse);","lastModifiedDate":"2023-01-24"},{"lineNumber":705,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":706,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":707,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":708,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":709,"author":{"gitId":"eugenetangkj"},"content":"     * Determines if two dates specify a valid duration.","lastModifiedDate":"2023-01-24"},{"lineNumber":710,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":711,"author":{"gitId":"eugenetangkj"},"content":"     * @param start The Temporal encapsulating the start date and time.","lastModifiedDate":"2023-01-24"},{"lineNumber":712,"author":{"gitId":"eugenetangkj"},"content":"     * @param end The Temporal encapsulating the end date and time.","lastModifiedDate":"2023-01-24"},{"lineNumber":713,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if start happens before or is equal to end, else false.","lastModifiedDate":"2023-01-24"},{"lineNumber":714,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":715,"author":{"gitId":"eugenetangkj"},"content":"    public static boolean isValidDuration(Temporal start, Temporal end) {","lastModifiedDate":"2023-01-24"},{"lineNumber":716,"author":{"gitId":"eugenetangkj"},"content":"        if (start instanceof LocalDateTime \u0026\u0026 end instanceof LocalDateTime) {","lastModifiedDate":"2023-01-24"},{"lineNumber":717,"author":{"gitId":"eugenetangkj"},"content":"            return ((LocalDateTime) end).isAfter((LocalDateTime) start) ||","lastModifiedDate":"2023-01-24"},{"lineNumber":718,"author":{"gitId":"eugenetangkj"},"content":"                    ((LocalDateTime) end).equals((LocalDateTime) start);","lastModifiedDate":"2023-01-24"},{"lineNumber":719,"author":{"gitId":"eugenetangkj"},"content":"        } else if (start instanceof LocalDate \u0026\u0026 end instanceof LocalDate) {","lastModifiedDate":"2023-01-24"},{"lineNumber":720,"author":{"gitId":"eugenetangkj"},"content":"            return ((LocalDate) end).isAfter((LocalDate) start) || ((LocalDate) end).equals((LocalDate) start);","lastModifiedDate":"2023-01-24"},{"lineNumber":721,"author":{"gitId":"eugenetangkj"},"content":"        } else if (start instanceof LocalDate \u0026\u0026 end instanceof LocalDateTime) {","lastModifiedDate":"2023-01-24"},{"lineNumber":722,"author":{"gitId":"eugenetangkj"},"content":"            LocalDate endDateOnly \u003d LocalDate.of(((LocalDateTime) end).getYear(),","lastModifiedDate":"2023-01-24"},{"lineNumber":723,"author":{"gitId":"eugenetangkj"},"content":"                    ((LocalDateTime) end).getMonthValue(), ((LocalDateTime) end).getDayOfMonth());","lastModifiedDate":"2023-01-24"},{"lineNumber":724,"author":{"gitId":"eugenetangkj"},"content":"            return (endDateOnly.isAfter((LocalDate) start)) || (endDateOnly.equals((LocalDate) start));","lastModifiedDate":"2023-01-24"},{"lineNumber":725,"author":{"gitId":"eugenetangkj"},"content":"        } else if (start instanceof LocalDateTime \u0026\u0026 end instanceof LocalDate) {","lastModifiedDate":"2023-01-24"},{"lineNumber":726,"author":{"gitId":"eugenetangkj"},"content":"            LocalDate startDateOnly \u003d LocalDate.of(((LocalDateTime) start).getYear(),","lastModifiedDate":"2023-01-24"},{"lineNumber":727,"author":{"gitId":"eugenetangkj"},"content":"                    ((LocalDateTime) start).getMonthValue(), ((LocalDateTime) start).getDayOfMonth());","lastModifiedDate":"2023-01-24"},{"lineNumber":728,"author":{"gitId":"eugenetangkj"},"content":"            return (((LocalDate) end).isAfter(startDateOnly)) || (((LocalDate) end).equals(startDateOnly));","lastModifiedDate":"2023-01-24"},{"lineNumber":729,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":730,"author":{"gitId":"eugenetangkj"},"content":"        return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":731,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":732,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":733,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":734,"author":{"gitId":"eugenetangkj"},"content":"     * Determines if one date is equal to another date, based on year, month and day.","lastModifiedDate":"2023-01-24"},{"lineNumber":735,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":736,"author":{"gitId":"eugenetangkj"},"content":"     * @param start The Temporal encapsulating the start date and time.","lastModifiedDate":"2023-01-24"},{"lineNumber":737,"author":{"gitId":"eugenetangkj"},"content":"     * @param end The Temporal encapsulating the end date and time.","lastModifiedDate":"2023-01-24"},{"lineNumber":738,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if both refer to the same day, else false.","lastModifiedDate":"2023-01-24"},{"lineNumber":739,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":740,"author":{"gitId":"eugenetangkj"},"content":"    public static boolean isEqualDate(Temporal start, Temporal end) {","lastModifiedDate":"2023-01-24"},{"lineNumber":741,"author":{"gitId":"eugenetangkj"},"content":"        if (start instanceof LocalDateTime \u0026\u0026 end instanceof LocalDateTime) {","lastModifiedDate":"2023-01-24"},{"lineNumber":742,"author":{"gitId":"eugenetangkj"},"content":"            return ((LocalDateTime) end).equals((LocalDateTime) start);","lastModifiedDate":"2023-01-24"},{"lineNumber":743,"author":{"gitId":"eugenetangkj"},"content":"        } else if (start instanceof LocalDate \u0026\u0026 end instanceof LocalDate) {","lastModifiedDate":"2023-01-24"},{"lineNumber":744,"author":{"gitId":"eugenetangkj"},"content":"            return ((LocalDate) end).equals((LocalDate) start);","lastModifiedDate":"2023-01-24"},{"lineNumber":745,"author":{"gitId":"eugenetangkj"},"content":"        } else if (start instanceof LocalDate \u0026\u0026 end instanceof LocalDateTime) {","lastModifiedDate":"2023-01-24"},{"lineNumber":746,"author":{"gitId":"eugenetangkj"},"content":"            LocalDate endDateOnly \u003d LocalDate.of(((LocalDateTime) end).getYear(),","lastModifiedDate":"2023-01-24"},{"lineNumber":747,"author":{"gitId":"eugenetangkj"},"content":"                    ((LocalDateTime) end).getMonthValue(), ((LocalDateTime) end).getDayOfMonth());","lastModifiedDate":"2023-01-24"},{"lineNumber":748,"author":{"gitId":"eugenetangkj"},"content":"            return (endDateOnly.equals((LocalDate) start));","lastModifiedDate":"2023-01-24"},{"lineNumber":749,"author":{"gitId":"eugenetangkj"},"content":"        } else if (start instanceof LocalDateTime \u0026\u0026 end instanceof LocalDate) {","lastModifiedDate":"2023-01-24"},{"lineNumber":750,"author":{"gitId":"eugenetangkj"},"content":"            LocalDate startDateOnly \u003d LocalDate.of(((LocalDateTime) start).getYear(),","lastModifiedDate":"2023-01-24"},{"lineNumber":751,"author":{"gitId":"eugenetangkj"},"content":"                    ((LocalDateTime) start).getMonthValue(), ((LocalDateTime) start).getDayOfMonth());","lastModifiedDate":"2023-01-24"},{"lineNumber":752,"author":{"gitId":"eugenetangkj"},"content":"            return (((LocalDate) end).equals(startDateOnly));","lastModifiedDate":"2023-01-24"},{"lineNumber":753,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":754,"author":{"gitId":"eugenetangkj"},"content":"        return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":755,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":756,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-17"},{"lineNumber":757,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":758,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"eugenetangkj":753,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":" * Represents an exception related to the Duke chatbot.","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs an exception message indicating the reason for exception.","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"     * @param exceptionMessage Message to be displayed when the exception occurs","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"    public DukeException(String exceptionMessage) {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"        super(exceptionMessage);","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"eugenetangkj":15}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":" * Represents an Event Task that can be kept track of, starting and ending at a specific date/time.","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"    /** Start date of the event. */","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"    private Temporal startDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"    /** End date of the event. */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"    private Temporal endDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    /** A string containing the raw start date string **/","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    private String rawStartDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    /** A string containing the raw end date string **/","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"    private String rawEndDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    /** A string where the start date is formatted in either yyyy-MM-dd HH:mm or yyyy-MM-dd. */","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    private String formattedStartDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    /** End date of the event. */","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    /** A string where the deadline is formatted in either yyyy-MM-dd HH:mm or yyyy-MM-dd. */","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    private String formattedEndDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs an Event task.","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"     * @param startDate The start date of the event task.","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"     * @param endDate The end date of the event task.","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"    public Event(String taskName, String rawStartDate, String rawEndDate, Temporal startDate, Temporal endDate) {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        super(taskName);","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        this.rawStartDate \u003d rawStartDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"        this.rawEndDate \u003d rawEndDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        formattedStartDate \u003d Task.formatDate(startDate);","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"        formattedEndDate \u003d Task.formatDate(endDate);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the status of the event task.","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"     * @return a String indicating the type, status and time period for the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"    public String getStatusOfTaskInString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        String typeOfTask \u003d \"E\";","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"        return (this.isDone)","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"                ? \"[\" + typeOfTask + \"][X] \" + this.taskName + (\" (from: \") + this.formattedStartDate +","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"                        \" to: \" + this.formattedEndDate + \")\"","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"                : \"[\" + typeOfTask + \"][ ] \" + this.taskName + (\" (from: \") + this.formattedStartDate +","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"                        \" to: \" + this.formattedEndDate + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"    /*","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the start date object of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"     * @return the Temporal encapsulating the date and time of the start date.","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"    public Temporal getStartDate() {","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"        return startDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the end date object of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"     * @return the Temporal encapsulating the date and time of the end date.","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"    public Temporal getEndDate() {","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"        return endDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the raw start date of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"     * @return the String containing the raw start date and time.","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"    public String getRawStartDate() { return rawStartDate;}","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the raw end date of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"     * @return the String containing the raw end date and time.","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"    public String getRawEndDate() { return rawEndDate;}","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"eugenetangkj":93}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":" * Represents a Task that can be kept track of.","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"    /** The name of the task. */","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"    protected String taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"    /** The status of the task. **/","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a user task.","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskName The name of the task","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"     * Sets status of task to be done","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"    public void setDoneStatus() {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"     * Sets status of task to be undone","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"    public void setUndoneStatus() {","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the status of the task with the task name.","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"     * @return a String indicating the type and status of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"    public abstract String getStatusOfTaskInString();","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the status of the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if task is done, else return false.","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"    public boolean getStatusOfTask() {","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"        return isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the name of the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"     * @return the name of the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"    public String getNameOfTask() {","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"        return this.taskName;","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"     * Formats a date, returning a string in either yyyy-MM-dd HH:mm or yyyy-MM-dd format.","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"     * @return a string representing the formatted deadline.","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"    public static String formatDate(Temporal date) {","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"        if (date instanceof LocalDateTime) {","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"            //Case 1: Got date and time","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"            LocalDateTime dateTimeObject \u003d (LocalDateTime) date;","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"            String monthString \u003d dateTimeObject.getMonth().toString().charAt(0) +","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"                    dateTimeObject.getMonth().toString().substring(1).toLowerCase();","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"            String dayString \u003d (dateTimeObject.getDayOfMonth() \u003c 10)","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"                    ? \"0\" + Integer.toString(dateTimeObject.getDayOfMonth())","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"                    : Integer.toString(dateTimeObject.getDayOfMonth());","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"            String hourString \u003d (dateTimeObject.getHour() \u003c 10)","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"                    ? \"0\" + Integer.toString(dateTimeObject.getHour())","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"                    : Integer.toString(dateTimeObject.getHour());","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"            String minuteString \u003d (dateTimeObject.getMinute() \u003c 10)","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"                    ? \"0\" + Integer.toString(dateTimeObject.getMinute())","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"                    : Integer.toString(dateTimeObject.getMinute());","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"            return monthString + \" \" + dayString + \" \" + dateTimeObject.getYear() + \" \" +  hourString + \":\"","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"                    + minuteString;","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"            //Case 2: Got date only","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"            LocalDate dateObject \u003d (LocalDate) date;","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"            String monthString \u003d dateObject.getMonth().toString().charAt(0) +","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"                    dateObject.getMonth().toString().substring(1).toLowerCase();","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"            String dayString \u003d (dateObject.getDayOfMonth() \u003c 10)","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"                    ? \"0\" + Integer.toString(dateObject.getDayOfMonth())","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"                    : Integer.toString(dateObject.getDayOfMonth());","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"            return monthString + \" \" + dayString + \" \" + dateObject.getYear();","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"eugenetangkj":97}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":" * Represents a to-do Task that can be kept track of, having no date or time attached to it.","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a new ToDo task.","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskName Name of the ToDo task.","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"        super(taskName);","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the status of the task with the task name.","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"     * @return a String indicating the type and status of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    public String getStatusOfTaskInString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"        String typeOfTask \u003d \"T\";","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"        return (this.isDone)","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"               ? \"[\" + typeOfTask + \"][X] \" + this.taskName","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"               : \"[\" + typeOfTask + \"][ ] \" + this.taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"eugenetangkj":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"todo read book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"deadline return book /by 2023-06-06","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"event project meeting /from June 7th 2pm /to June 7th 4pm","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"event project meeting /from 2023-06-07 14:00 /to 2023-06-07 18:00","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"event carnival /from 2023-06-05 /to 2023-06-08","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"mark 0","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"mark 5","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"todo buy groceries","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"delete 6","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"delete 5","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"on 2023-06-06","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"event backward /from 2023-06-06 14:00 /to 2023-06-06 08:00","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"help","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"hello","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"eugenetangkj":18}}]
