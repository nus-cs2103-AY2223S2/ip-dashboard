[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"    archiveVersion \u003d \"v0.1\";","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"checkstyle {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"eugenetangkj":7,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import duke.parser.CommandType;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":" * Represents a chatbot that one can interact with to keep track of tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the chatbot instance running.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"    public void run() {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"        //Prepare components","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"        Ui userInterface \u003d new Ui();","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"        Storage storage \u003d new Storage(\"data\", \"tasks.txt\");","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"        Parser parser \u003d new Parser(userInterface, taskList);","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"        //Prepare data file","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"        if (!storage.prepareFile()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"            //Shuts down the bot as data file cannot be created successfully","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"            userInterface.printShutDownMessage();","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"            userInterface.cleanUpUi();","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"            return;","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"        //Load data from data file","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"        if (!storage.loadTasksFromFile(taskList)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"            //Cannot read from data file. Start with new empty task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        //Read in and process user commands","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        while (true) {","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"            //Process command","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"            String rawCommand \u003d userInterface.getUserCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"            CommandType commandType \u003d parser.parseRawCommand(rawCommand);","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"            Command command \u003d parser.parseCommandType(commandType, taskList, storage);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"            //Incorrect format","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"            if (command \u003d\u003d null) {","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"                continue;","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"                //Run command","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"                command.runCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"                //Check for exit command","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"                if (command.isExit()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"     * Launches the chatbot.","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"     * @param args The command line arguments that one can type.","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"        new Duke().run();","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"eugenetangkj":73,"-":1}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":" * Represents a \"bye\" command that is entered by the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a \u003ccode\u003eByeCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    public ByeCommand(Ui ui) {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"        super(ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"        isExit \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"     * Causes the bot to print exit message, and properly exit.","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    public void runCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"        ui.printExitMessage();","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"        ui.cleanUpUi();","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":26}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":" * Represents a command that is entered by the user","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"    /** The Ui for the command to print output. */","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"    protected Ui ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    /** Whether the command should cause the bot to exit. */","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a \u003ccode\u003eCommand\u003c/code\u003e instance.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"     * @param ui The Ui for the command to print output.","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    public Command(Ui ui) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"     * Runs the given command.","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    public abstract void runCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"     * Checks if the command should cause the bot to exit.","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if the command should cause the bot to exit.","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"        return isExit;","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":37}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import duke.datetime.DateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":" * Represents a deadline command that is entered by the user to create a task with a deadline.","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    /** Task name for the deadline task to be created. */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    private String taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    /** Deadline for the given deadline task. */","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"    private String deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    /** Task list containing all the tasks. */","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    /** Storage that allows updating after creating the deadline task. */","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a \u003ccode\u003eDeadlineCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"     * @param ui The Ui to allow the command to print messages to the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskName The name of the deadline task to be created.","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks The lists of all available tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"     * @param storage The Storage object to allow local saving after adding a new deadline task.","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"    public DeadlineCommand(Ui ui, String taskName, String deadline, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        super(ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"     * Creates a deadline task and updates the local data file.","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"    public void runCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        //Creates task and saves it","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"        Deadline newDeadlineTask \u003d new Deadline(taskName, deadline, DateTime.getDateTimeObject(deadline));","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"        tasks.addTask(newDeadlineTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        //Notifies the user","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"        ui.printStatement(\"Added task to list:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"        ui.printStatement(newDeadlineTask.getStatusOfTaskInString());","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"        if (tasks.getSizeOfTaskList() \u003d\u003d 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"            ui.printStatement(\"\\nCurrently, there is 1 task in your list.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"            ui.printStatement(\"\\nCurrently, there are \" + Integer.toString(tasks.getSizeOfTaskList())","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"                    + \" tasks in your list.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":66}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":" * Represents a delete command entered by the user to delete a task from the task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"    /** The task index to be deleted. */","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    private int taskIndex;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    /** Task list containing all the tasks. */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    /** Storage that allows updating after the delete command is completed. */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a \u003ccode\u003eDeleteCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e to allow the command to print messages to the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskIndex The index of the task which is to be deleted.","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e of all available tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e object to allow local saving of the deletion.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    public DeleteCommand(Ui ui, int taskIndex, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"        super(ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    public void runCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        //Updates and print changes","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        Task deletedTask \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"        tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"        ui.printStatement(\"Ta-da! The following task has been deleted.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        ui.printStatement(deletedTask.getStatusOfTaskInString());","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"        //Save changes","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":53}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import duke.datetime.DateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":" * Represents an event command that is entered by the user to create a task with a start and end date.","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    /** Task name for the event task to be created. */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    private String taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    /** Start date for the given event task. */","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"    private String startDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    /** End date for the given event task. */","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    private String endDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    /** Task list containing all the tasks. */","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    /** Storage that allows updating after creating the event task. */","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs an EventCommand.","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e to allow the command to print messages to the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskName The name of the event task to be created.","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"     * @param startDate The start date of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"     * @param endDate The end date of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e\u003e of all available tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e object to allow local saving after adding a new event task.","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"    public EventCommand(Ui ui, String taskName, String startDate, String endDate, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        super(ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"     * Creates an \u003ccode\u003eEvent\u003c/code\u003e task and updates the local data file.","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"    public void runCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        //Creates task and saves it","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"        Event newEventTask \u003d new Event(taskName, startDate, endDate, DateTime.getDateTimeObject(startDate),","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"                DateTime.getDateTimeObject(endDate));","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"        tasks.addTask(newEventTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"        //Notifies the user","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"        ui.printStatement(\"Added task to list:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"        ui.printStatement(newEventTask.getStatusOfTaskInString());","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"        if (tasks.getSizeOfTaskList() \u003d\u003d 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"            ui.printStatement(\"\\nCurrently, there is 1 task in your list.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"            ui.printStatement(\"\\nCurrently, there are \" + Integer.toString(tasks.getSizeOfTaskList())","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"                    + \" tasks in your list.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":72}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":" * Represents a find command that is entered by the user to find tasks related to a key phrase.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"    /** Key phrase with this find command. */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    private String keyPhrase;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    /** Task list containing all the tasks. */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a \u003ccode\u003eFindCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"     * @param ui The Ui to allow the command to print messages to the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"     * @param keyPhrase The phrase to look up in task names.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks The lists of all available tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"    public FindCommand(Ui ui, String keyPhrase, TaskList tasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"        super(ui);","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"        this.keyPhrase \u003d keyPhrase;","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"     * Prints out tasks whose names contain any words mentioned in the key phrase","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"    public void runCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        ui.printStatement(\"Tasks whose name contains \\\"\" + keyPhrase + \"\\\":\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"        //Iterate through each task in the task list","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        for (int i \u003d 0; i \u003c tasks.getSizeOfTaskList(); i \u003d i + 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"            Task currentTask \u003d tasks.getTask(i);","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"            String taskName \u003d currentTask.getNameOfTask();","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"            if (taskName.contains(keyPhrase)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"                ui.printStatement(count + \". \" + currentTask.getStatusOfTaskInString());","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"        //No result","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"            ui.printStatement(\"There is no such task.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"eugenetangkj":56}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":" * Represents a \"help\" command that is entered by the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a \u003ccode\u003eHelpCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    public HelpCommand(Ui ui) {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"        super(ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"     * Causes the bot to print out the list of supported commands.","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    public void runCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"        ui.printCommands();","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":24}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":" * Represents an invalid command that is entered by the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs an \u003ccode\u003eInvalidCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    public InvalidCommand(Ui ui) {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"        super(ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"     * Causes the bot indicate that it cannot understand this invalid command.","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    public void runCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"        ui.printStatement(\"Sorry. I do not understand this command. Please try again.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":26}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":" * Represents a \"list\" command that is entered by the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a \u003ccode\u003eListCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    public ListCommand(Ui ui, TaskList tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"        super(ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"     * Causes the bot to print out the contents of the user\u0027s task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    public void runCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"        tasks.printUserTasks();","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":27}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":" * Represents a mark command that is entered by the user to mark a task as done.","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"    /** Task number associated with this mark command. */","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    private int taskNumber;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    /** Task list containing all the tasks. */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    /** Storage that allows updating after the mark command is completed. */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a MarkCommand.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e to allow the command to print messages to the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskNumber The number of the task which is to be marked as done.","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e of all available tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e object to allow local saving of the mark operation.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    public MarkCommand(Ui ui, int taskNumber, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        super(ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"     * Marks a given task as done.","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"    public void runCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        //Updates and print changes","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"        Task currentTask \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"        currentTask.setDoneStatus();","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        ui.printStatement(\"Poof! One less worry. The following task is now marked as done:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"        ui.printStatement(currentTask.getStatusOfTaskInString());","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"        //Save changes","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":53}},{"path":"src/main/java/duke/command/OnCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import duke.datetime.DateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":" * Represents an on command that is entered by the user to check what tasks are there on a specific day.","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"public class OnCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    /** Task list containing all the tasks. */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    /** Date object representing the date to be checked. */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    private Temporal dateObject;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs an OnCommand","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e to allow the command to print messages to the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e\u003e of all available tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"     * @param date The date to be checked.","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    public OnCommand(Ui ui, String date, TaskList tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"        super(ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        this.dateObject \u003d DateTime.getDateTimeObject(date);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"     * Prints out all the tasks that occur on the given date.","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"    public void runCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Tasks on: \" + DateTime.formatDate(dateObject));","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"        //Iterate through each task and check","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"        for (int t \u003d 0; t \u003c tasks.getSizeOfTaskList(); t \u003d t + 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"            Task currTask \u003d tasks.getTask(t);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"            if (currTask instanceof Deadline) {","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"                if (DateTime.isEqualDate(dateObject, ((Deadline) currTask).getDeadline())) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"                    ui.printStatement(Integer.toString(count) + \". \"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"                            + currTask.getStatusOfTaskInString());","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"                    count +\u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"            } else if (currTask instanceof Event) {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"                if (DateTime.isValidDuration(((Event) currTask).getStartDate(), dateObject)","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"                        \u0026\u0026 DateTime.isValidDuration(dateObject, ((Event) currTask).getEndDate())) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"                    ui.printStatement(Integer.toString(count) + \". \"","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"                            + currTask.getStatusOfTaskInString());","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"                    count +\u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"            ui.printStatement(\"You have no tasks on this day.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":66}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":" * Represents a to-do command that is entered by the user to create a new to-do task.","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"    /** Task name for the to-do task to be created.*/","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    private String taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    /** Task list containing all the tasks. */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    /** Storage that allows updating after creating the to-do task. */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a \u003ccode\u003eToDoCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e to allow the command to print messages to the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskName The name of the to-do task to be created.","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e of all available tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e object to allow local saving after adding the to-do task.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    public ToDoCommand(Ui ui, String taskName, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        super(ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"     * Creates a to-do task and updates the local data file.","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"    public void runCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        //Creates task and saves it","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"        ToDo newToDoTask \u003d new ToDo(taskName);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"        tasks.addTask(newToDoTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"        //Notifies the user","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"        ui.printStatement(\"Added task to list:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"        ui.printStatement(newToDoTask.getStatusOfTaskInString());","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        if (tasks.getSizeOfTaskList() \u003d\u003d 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"            ui.printStatement(\"\\nCurrently, there is 1 task in your list.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"            ui.printStatement(\"\\nCurrently, there are \" + Integer.toString(tasks.getSizeOfTaskList())","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"                    + \" tasks in your list.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":60}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":" * Represents an unmark command that is entered by the user to mark a task as undone.","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"    /** Task number associated with this unmark command. */","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    private int taskNumber;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    /** Task list containing all the tasks. */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    /** Storage that allows updating after the unmark command is completed. */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs an UnmarkCommand.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e to allow the command to print messages to the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskNumber The number of the task which is to be marked as undone.","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e of all available tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e object to allow local saving of the unmark operation.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    public UnmarkCommand(Ui ui, int taskNumber, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        super(ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"     * Marks a given task as undone.","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"    public void runCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        //Updates and print changes","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"        Task currentTask \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"        currentTask.setUndoneStatus();","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        ui.printStatement(\"Alright! The following task is now marked as undone. I will help you keep an eye on it.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"        ui.printStatement(currentTask.getStatusOfTaskInString());","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"        //Save changes","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":53}},{"path":"src/main/java/duke/datetime/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.datetime;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":" * This class provides methods to process dates given by the user, whether it is included with time or not.","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"public abstract class DateTime {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"     * Returns a \u003ccode\u003eTemporal\u003c/code\u003e that encapsulates date and or time information.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"     * @param rawDateString The raw String that contains date and or time information.","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"     * @return the \u003ccode\u003eTemporal\u003c/code\u003e with the date and or time information.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"     * @throws DateTimeParseException if the raw String is not of the correct date format","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"     *                                as requested in the command list of the bot.","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    public static Temporal getDateTimeObject(String rawDateString)","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"            throws DateTimeParseException {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"        //Possible formats, with and without time","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"        String timePatternOne \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"        String timePatternTwo \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"        DateTimeFormatter formatterWithTime \u003d DateTimeFormatter.ofPattern(timePatternOne);","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"        DateTimeFormatter formatterWithoutTime \u003d DateTimeFormatter.ofPattern(timePatternTwo);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"        //Determine which format","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"        boolean hasTime \u003d (rawDateString.length() \u003e timePatternTwo.length());","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        DateTimeFormatter formatterToUse \u003d (hasTime)","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"                ? formatterWithTime","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"                : formatterWithoutTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"        if (hasTime) {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"            //A date with time","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"            return LocalDateTime.parse(rawDateString, formatterToUse);","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"            //A date without time","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"            return LocalDate.parse(rawDateString, formatterToUse);","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"     * Determines if two dates specify a valid duration.","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"     * @param start The \u003ccode\u003eTemporal\u003c/code\u003e encapsulating the start date and time.","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"     * @param end The \u003ccode\u003eTemporal\u003c/code\u003e encapsulating the end date and time.","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if start happens before or is equal to end, else false.","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"    public static boolean isValidDuration(Temporal start, Temporal end) {","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        if (start instanceof LocalDateTime \u0026\u0026 end instanceof LocalDateTime) {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"            return ((LocalDateTime) end).isAfter((LocalDateTime) start)","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"                    || ((LocalDateTime) end).equals((LocalDateTime) start);","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"        } else if (start instanceof LocalDate \u0026\u0026 end instanceof LocalDate) {","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"            return ((LocalDate) end).isAfter((LocalDate) start) || ((LocalDate) end).equals((LocalDate) start);","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"        } else if (start instanceof LocalDate \u0026\u0026 end instanceof LocalDateTime) {","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"            LocalDate endDateOnly \u003d LocalDate.of(((LocalDateTime) end).getYear(), (","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"                    (LocalDateTime) end).getMonthValue(), ((LocalDateTime) end).getDayOfMonth());","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"            return (endDateOnly.isAfter((LocalDate) start)) || (endDateOnly.equals((LocalDate) start));","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"        } else if (start instanceof LocalDateTime \u0026\u0026 end instanceof LocalDate) {","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"            LocalDate startDateOnly \u003d LocalDate.of(((LocalDateTime) start).getYear(), (","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"                    (LocalDateTime) start).getMonthValue(), ((LocalDateTime) start).getDayOfMonth());","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"            return (((LocalDate) end).isAfter(startDateOnly)) || (((LocalDate) end).equals(startDateOnly));","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"        return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"     * Determines if one date is equal to another date, based on year, month and day.","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"     * @param start The Temporal encapsulating the start date and time.","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"     * @param end The Temporal encapsulating the end date and time.","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if both refer to the same day, else false.","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"    public static boolean isEqualDate(Temporal start, Temporal end) {","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"        if (start instanceof LocalDateTime \u0026\u0026 end instanceof LocalDateTime) {","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"            return ((LocalDateTime) end).equals((LocalDateTime) start);","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"        } else if (start instanceof LocalDate \u0026\u0026 end instanceof LocalDate) {","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"            return ((LocalDate) end).equals((LocalDate) start);","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"        } else if (start instanceof LocalDate \u0026\u0026 end instanceof LocalDateTime) {","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"            LocalDate endDateOnly \u003d LocalDate.of(((LocalDateTime) end).getYear(), (","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"                    (LocalDateTime) end).getMonthValue(), ((LocalDateTime) end).getDayOfMonth());","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"            return (endDateOnly.equals((LocalDate) start));","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"        } else if (start instanceof LocalDateTime \u0026\u0026 end instanceof LocalDate) {","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"            LocalDate startDateOnly \u003d LocalDate.of(((LocalDateTime) start).getYear(), (","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"                    (LocalDateTime) start).getMonthValue(), ((LocalDateTime) start).getDayOfMonth());","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"            return (((LocalDate) end).equals(startDateOnly));","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"        return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"     * Formats a date, returning a string in either yyyy-MM-dd HH:mm or yyyy-MM-dd format.","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"     * @return a string representing the formatted deadline.","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"    public static String formatDate(Temporal date) {","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"        if (date instanceof LocalDateTime) {","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"            //Case 1: Got date and time","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"            LocalDateTime dateTimeObject \u003d (LocalDateTime) date;","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"            String monthString \u003d dateTimeObject.getMonth().toString().charAt(0)","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"                    + dateTimeObject.getMonth().toString().substring(1).toLowerCase();","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"eugenetangkj"},"content":"            String dayString \u003d (dateTimeObject.getDayOfMonth() \u003c 10)","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"eugenetangkj"},"content":"                    ? \"0\" + Integer.toString(dateTimeObject.getDayOfMonth())","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"eugenetangkj"},"content":"                    : Integer.toString(dateTimeObject.getDayOfMonth());","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"            String hourString \u003d (dateTimeObject.getHour() \u003c 10)","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"                    ? \"0\" + Integer.toString(dateTimeObject.getHour())","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"eugenetangkj"},"content":"                    : Integer.toString(dateTimeObject.getHour());","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"eugenetangkj"},"content":"            String minuteString \u003d (dateTimeObject.getMinute() \u003c 10)","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"eugenetangkj"},"content":"                    ? \"0\" + Integer.toString(dateTimeObject.getMinute())","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"eugenetangkj"},"content":"                    : Integer.toString(dateTimeObject.getMinute());","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"eugenetangkj"},"content":"            return monthString + \" \" + dayString + \" \" + dateTimeObject.getYear() + \" \" + hourString + \":\"","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"eugenetangkj"},"content":"                    + minuteString;","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"eugenetangkj"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"eugenetangkj"},"content":"            //Case 2: Got date only","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"eugenetangkj"},"content":"            LocalDate dateObject \u003d (LocalDate) date;","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"eugenetangkj"},"content":"            String monthString \u003d dateObject.getMonth().toString().charAt(0)","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"eugenetangkj"},"content":"                    + dateObject.getMonth().toString().substring(1).toLowerCase();","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"eugenetangkj"},"content":"            String dayString \u003d (dateObject.getDayOfMonth() \u003c 10)","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"eugenetangkj"},"content":"                    ? \"0\" + Integer.toString(dateObject.getDayOfMonth())","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"                    : Integer.toString(dateObject.getDayOfMonth());","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"eugenetangkj"},"content":"            return monthString + \" \" + dayString + \" \" + dateObject.getYear();","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":127}},{"path":"src/main/java/duke/datetime/DateTimeStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.datetime;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"/** Represents a stub for DateTime in order to isolate dependencies during unit testing. */","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"public abstract class DateTimeStub {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"     * Returns a hard-coded date-time string.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"     * @param date A \u003ccode\u003eTemporal\u003c/code\u003e object representing 2023-02-02 12:30.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"     * @return a formatted String representing the above date and time.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    public static String formatDate(Temporal date) {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"        if (date.equals(LocalDateTime.of(2023, 2, 2, 12, 30))) {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"            return \"February 02 2023 12:30\";","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"            throw new UnsupportedOperationException();","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"eugenetangkj":22}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.exception;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":" * Represents an exception related to the Duke chatbot.","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs an exception message indicating the reason for exception.","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"     * @param exceptionMessage Message to be displayed when the exception occurs.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    public DukeException(String exceptionMessage) {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"        super(exceptionMessage);","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"eugenetangkj":15}},{"path":"src/main/java/duke/parser/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":" * Represents the type of command entered by the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"public enum CommandType {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"    /** Possible command types. */","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"    BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, ON, HELP, INVALID, NOTHING, FIND;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"    /** Name of task associated with to-do, deadline and event commands. */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"    private String taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    /** Index of task to process, for mark, unmark and delete commands. */","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"    private int index;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    /** Deadline of task associated with deadline command. */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    private String deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    /** Start date of task associated with event command. */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    private String startDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"    /** End date of task associated with event command. */","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    private String endDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    /** Date to check, associated with on command. */","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    private String onDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    /** Phrase to look up in task names. */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    private String keyPhrase;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the name of the task associated with this command. The command is to-do, deadline or event.","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"     * @return the name of the task associated with this command.","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"        return this.taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the index of the task to be processed by this command. The command is mark, unmark or delete.","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"     * @return the index of the task to be processed by this command.","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"    public int getIndex() {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        return this.index;","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the deadline of the task to be processed by this command. The command is deadline.","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"     * @return the deadline of the deadline task associated with this command.","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        return this.deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the start date of the task to be processed by this command. The command is event.","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"     * @return the start date of the event task associated with this command.","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"    public String getStartDate() {","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"        return this.startDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the end date of the task to be processed by this command. The command is event.","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"     * @return the end date of the event task associated with this command.","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"        return this.endDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the date to be checked by this command The command is on.","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"     * @return the date to be checked by this on command.","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"    public String getOnDate() {","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"        return this.onDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the key phrase to be looked up in task names.","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"     * @return the key phrase to be checked.","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"    public String getKeyPhrase() {","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"        return this.keyPhrase;","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"     * Sets the name of the task associated with this command. The command is to-do, deadline or event.","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"     * Sets the index of the task to be processed by this command. The command is mark, unmark or delete.","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"eugenetangkj"},"content":"    public void setIndex(int index) {","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"eugenetangkj"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"eugenetangkj"},"content":"     * Sets the deadline of the task to be processed by this command. The command is deadline.","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"eugenetangkj"},"content":"    public void setDeadline(String deadline) {","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"eugenetangkj"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"eugenetangkj"},"content":"     * Sets the start date of the task to be processed by this command. The command is event.","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"eugenetangkj"},"content":"    public void setStartDate(String startDate) {","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"eugenetangkj"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"     * Sets the end date of the task to be processed by this command. The command is event.","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"eugenetangkj"},"content":"    public void setEndDate(String endDate) {","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"eugenetangkj"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"eugenetangkj"},"content":"     * Sets the date to be checked by this command The command is on.","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"eugenetangkj"},"content":"    public void setOnDate(String onDate) {","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"eugenetangkj"},"content":"        this.onDate \u003d onDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the key phrase to be looked up in task names.","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"eugenetangkj"},"content":"    public void setKeyPhrase(String keyPhrase) {","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"eugenetangkj"},"content":"        this.keyPhrase \u003d keyPhrase;","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":141}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"import duke.command.OnCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"import duke.command.ToDoCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"import duke.datetime.DateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":" * Represents a parser that will parse and process commands entered by the user into the chatbot.","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    /** The Ui object that will be passed into the commands. */","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"    /** The task list required to check whether command is valid. */","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a \u003ccode\u003eParser\u003c/code\u003e instance.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e object that will handle the command messages.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    public Parser(Ui ui, TaskList tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"     * Processes command to determine if it is in the format of any valid commands,","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"     * and checks for invalid input.","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"     * @return the type of command given by the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"    public CommandType parseRawCommand(String rawCommand) {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"        //Single word commands","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        switch (rawCommand) {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"            return CommandType.BYE;","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"        case \"list\":","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"            return CommandType.LIST;","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"        case \"help\":","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"            return CommandType.HELP;","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"        default:","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"            //Do nothing","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"        //Multiple word commands","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"        String[] inputArray \u003d rawCommand.split(\" \");","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"        String firstWord \u003d inputArray[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"        switch (firstWord) {","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"                if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"The mark command must be followed by a single number.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"                if (!isInteger(inputArray[1])) {","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"The mark command must be followed by a single integer.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"                int indexOfTask \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"                if (!(indexOfTask \u003c\u003d tasks.getSizeOfTaskList() - 1 \u0026\u0026 indexOfTask \u003e\u003d 0)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"Please enter a valid task number. You currently have \"","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"                           + Integer.toString(tasks.getSizeOfTaskList()) + \" tasks.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"                CommandType ctMark \u003d CommandType.MARK;","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"                ctMark.setIndex(indexOfTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"                return ctMark;","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"                ui.printStatement(dukeException.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"                return CommandType.NOTHING;","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"                if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"The unmark command must be followed by a single number.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"                if (!isInteger(inputArray[1])) {","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"The unmark command must be followed by a single integer.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"                int indexOfTask \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"                if (!(indexOfTask \u003c\u003d tasks.getSizeOfTaskList() - 1 \u0026\u0026 indexOfTask \u003e\u003d 0)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"Please enter a valid task number. You currently have \"","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"                            + Integer.toString(tasks.getSizeOfTaskList()) + \" tasks.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"eugenetangkj"},"content":"                CommandType ctUnmark \u003d CommandType.UNMARK;","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"eugenetangkj"},"content":"                ctUnmark.setIndex(indexOfTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"                return ctUnmark;","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"eugenetangkj"},"content":"                ui.printStatement(dukeException.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"eugenetangkj"},"content":"                return CommandType.NOTHING;","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"eugenetangkj"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"eugenetangkj"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"eugenetangkj"},"content":"                if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"The delete command must be followed by a single number.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"eugenetangkj"},"content":"                if (!isInteger(inputArray[1])) {","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"The delete command must be followed by a single integer.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"eugenetangkj"},"content":"                int indexOfTask \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"                if (!(indexOfTask \u003c\u003d tasks.getSizeOfTaskList() - 1 \u0026\u0026 indexOfTask \u003e\u003d 0)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"Please enter a valid task number. You currently have \"","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"eugenetangkj"},"content":"                            + Integer.toString(tasks.getSizeOfTaskList()) + \" tasks.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"eugenetangkj"},"content":"                CommandType ctDelete \u003d CommandType.DELETE;","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"eugenetangkj"},"content":"                ctDelete.setIndex((indexOfTask));","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"eugenetangkj"},"content":"                return ctDelete;","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"eugenetangkj"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"eugenetangkj"},"content":"                ui.printStatement(dukeException.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"eugenetangkj"},"content":"                return CommandType.NOTHING;","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"eugenetangkj"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-24"},{"lineNumber":136,"author":{"gitId":"eugenetangkj"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"eugenetangkj"},"content":"                if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"The todo command cannot be left blank.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":139,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":140,"author":{"gitId":"eugenetangkj"},"content":"                int indexOfType \u003d rawCommand.indexOf(\"todo\");","lastModifiedDate":"2023-01-24"},{"lineNumber":141,"author":{"gitId":"eugenetangkj"},"content":"                String taskName \u003d rawCommand.substring(indexOfType + 5);","lastModifiedDate":"2023-01-24"},{"lineNumber":142,"author":{"gitId":"eugenetangkj"},"content":"                CommandType ctToDo \u003d CommandType.TODO;","lastModifiedDate":"2023-01-24"},{"lineNumber":143,"author":{"gitId":"eugenetangkj"},"content":"                ctToDo.setTaskName(taskName);","lastModifiedDate":"2023-01-24"},{"lineNumber":144,"author":{"gitId":"eugenetangkj"},"content":"                return ctToDo;","lastModifiedDate":"2023-01-24"},{"lineNumber":145,"author":{"gitId":"eugenetangkj"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":146,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":147,"author":{"gitId":"eugenetangkj"},"content":"                ui.printStatement(dukeException.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":148,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":149,"author":{"gitId":"eugenetangkj"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":150,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":151,"author":{"gitId":"eugenetangkj"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"eugenetangkj"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":153,"author":{"gitId":"eugenetangkj"},"content":"                int indexOfType \u003d rawCommand.indexOf(\"deadline\");","lastModifiedDate":"2023-01-24"},{"lineNumber":154,"author":{"gitId":"eugenetangkj"},"content":"                if (indexOfType + 8 \u003e rawCommand.length() - 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":155,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"The deadline command cannot be left blank.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":156,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":157,"author":{"gitId":"eugenetangkj"},"content":"                int indexOfBy \u003d rawCommand.indexOf(\"/by\");","lastModifiedDate":"2023-01-24"},{"lineNumber":158,"author":{"gitId":"eugenetangkj"},"content":"                if (indexOfBy \u003d\u003d -1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":159,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"The deadline cannot be left blank.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":160,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":161,"author":{"gitId":"eugenetangkj"},"content":"                //deadline/by","lastModifiedDate":"2023-01-24"},{"lineNumber":162,"author":{"gitId":"eugenetangkj"},"content":"                if (indexOfType + 8 \u003d\u003d indexOfBy) {","lastModifiedDate":"2023-01-24"},{"lineNumber":163,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"There seems to be a missing task name.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":164,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":165,"author":{"gitId":"eugenetangkj"},"content":"                if (indexOfBy + 4 \u003e rawCommand.length() - 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":166,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"The deadline cannot be left blank.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":167,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":168,"author":{"gitId":"eugenetangkj"},"content":"                if (indexOfType + 9 \u003e indexOfBy - 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":169,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"There seems to be a missing task name.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":170,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":171,"author":{"gitId":"eugenetangkj"},"content":"                String taskName \u003d rawCommand.substring(indexOfType + 9, indexOfBy - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":172,"author":{"gitId":"eugenetangkj"},"content":"                String deadlineOfTask;","lastModifiedDate":"2023-01-24"},{"lineNumber":173,"author":{"gitId":"eugenetangkj"},"content":"                if (rawCommand.charAt(indexOfBy + 3) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2023-01-24"},{"lineNumber":174,"author":{"gitId":"eugenetangkj"},"content":"                    deadlineOfTask \u003d rawCommand.substring(indexOfBy + 4);","lastModifiedDate":"2023-01-24"},{"lineNumber":175,"author":{"gitId":"eugenetangkj"},"content":"                } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":176,"author":{"gitId":"eugenetangkj"},"content":"                    deadlineOfTask \u003d rawCommand.substring(indexOfBy + 3);","lastModifiedDate":"2023-01-24"},{"lineNumber":177,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":178,"author":{"gitId":"eugenetangkj"},"content":"                if (taskName.isBlank()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":179,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"The task name cannot be left blank.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":180,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":181,"author":{"gitId":"eugenetangkj"},"content":"                if (deadlineOfTask.isBlank()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":182,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"The deadline cannot be left blank.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":183,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":184,"author":{"gitId":"eugenetangkj"},"content":"                Temporal deadlineObject \u003d DateTime.getDateTimeObject(deadlineOfTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":185,"author":{"gitId":"eugenetangkj"},"content":"                CommandType ctDeadline \u003d CommandType.DEADLINE;","lastModifiedDate":"2023-01-24"},{"lineNumber":186,"author":{"gitId":"eugenetangkj"},"content":"                ctDeadline.setTaskName(taskName);","lastModifiedDate":"2023-01-24"},{"lineNumber":187,"author":{"gitId":"eugenetangkj"},"content":"                ctDeadline.setDeadline(deadlineOfTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":188,"author":{"gitId":"eugenetangkj"},"content":"                return ctDeadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":189,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":190,"author":{"gitId":"eugenetangkj"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":191,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":192,"author":{"gitId":"eugenetangkj"},"content":"                System.out.println(dukeException.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":193,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":194,"author":{"gitId":"eugenetangkj"},"content":"                return CommandType.NOTHING;","lastModifiedDate":"2023-01-24"},{"lineNumber":195,"author":{"gitId":"eugenetangkj"},"content":"            } catch (DateTimeParseException dateTimeException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":196,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":197,"author":{"gitId":"eugenetangkj"},"content":"                ui.printStatement(\"Please check that you entered a valid date, and that the date should be in \"","lastModifiedDate":"2023-01-24"},{"lineNumber":198,"author":{"gitId":"eugenetangkj"},"content":"                        + \"the format of\\nyyyy-MM-dd hh:mm or yyyy-MM-dd.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":199,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":200,"author":{"gitId":"eugenetangkj"},"content":"                return CommandType.NOTHING;","lastModifiedDate":"2023-01-24"},{"lineNumber":201,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":202,"author":{"gitId":"eugenetangkj"},"content":"        case \"event\":","lastModifiedDate":"2023-01-24"},{"lineNumber":203,"author":{"gitId":"eugenetangkj"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":204,"author":{"gitId":"eugenetangkj"},"content":"                int indexOfType \u003d rawCommand.indexOf(\"event\");","lastModifiedDate":"2023-01-24"},{"lineNumber":205,"author":{"gitId":"eugenetangkj"},"content":"                if (indexOfType + 5 \u003e rawCommand.length() - 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":206,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"The event command cannot be left blank.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":207,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":208,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":209,"author":{"gitId":"eugenetangkj"},"content":"                int indexOfFrom \u003d rawCommand.indexOf(\"/from\");","lastModifiedDate":"2023-01-24"},{"lineNumber":210,"author":{"gitId":"eugenetangkj"},"content":"                if (indexOfFrom \u003d\u003d -1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":211,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"There seems to be a missing from date.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":212,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":213,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":214,"author":{"gitId":"eugenetangkj"},"content":"                int indexOfTo \u003d rawCommand.indexOf(\"/to\");","lastModifiedDate":"2023-01-24"},{"lineNumber":215,"author":{"gitId":"eugenetangkj"},"content":"                if (indexOfTo \u003d\u003d -1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":216,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"There seems to be a missing to date.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":217,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":218,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":219,"author":{"gitId":"eugenetangkj"},"content":"                //Check taskName","lastModifiedDate":"2023-01-24"},{"lineNumber":220,"author":{"gitId":"eugenetangkj"},"content":"                if ((indexOfType + 6 \u003e indexOfFrom - 1)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":221,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"There seems to be a missing task name.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":222,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":223,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":224,"author":{"gitId":"eugenetangkj"},"content":"                String taskName \u003d rawCommand.substring(indexOfType + 6, indexOfFrom - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":225,"author":{"gitId":"eugenetangkj"},"content":"                if (taskName.isBlank()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":226,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"The task name cannot be left blank.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":227,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":228,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":229,"author":{"gitId":"eugenetangkj"},"content":"                //Check startDate","lastModifiedDate":"2023-01-24"},{"lineNumber":230,"author":{"gitId":"eugenetangkj"},"content":"                if (indexOfFrom + 6 \u003e indexOfTo - 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":231,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"There seems to be a missing start date.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":232,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":233,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":234,"author":{"gitId":"eugenetangkj"},"content":"                String startDate \u003d rawCommand.substring(indexOfFrom + 6, indexOfTo - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":235,"author":{"gitId":"eugenetangkj"},"content":"                if (startDate.isBlank()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":236,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"The start date cannot be left blank.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":237,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":238,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":239,"author":{"gitId":"eugenetangkj"},"content":"                //Check endDate","lastModifiedDate":"2023-01-24"},{"lineNumber":240,"author":{"gitId":"eugenetangkj"},"content":"                if (indexOfTo + 4 \u003e rawCommand.length() - 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":241,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"There seems to be a missing end date.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":242,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":243,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":244,"author":{"gitId":"eugenetangkj"},"content":"                String endDate \u003d rawCommand.substring(indexOfTo + 4);","lastModifiedDate":"2023-01-24"},{"lineNumber":245,"author":{"gitId":"eugenetangkj"},"content":"                if (endDate.isBlank()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":246,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"The end date cannot be left blank.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":247,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":248,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":249,"author":{"gitId":"eugenetangkj"},"content":"                //Create new event task","lastModifiedDate":"2023-01-24"},{"lineNumber":250,"author":{"gitId":"eugenetangkj"},"content":"                Temporal start \u003d DateTime.getDateTimeObject(startDate);","lastModifiedDate":"2023-01-24"},{"lineNumber":251,"author":{"gitId":"eugenetangkj"},"content":"                Temporal end \u003d DateTime.getDateTimeObject(endDate);","lastModifiedDate":"2023-01-24"},{"lineNumber":252,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":253,"author":{"gitId":"eugenetangkj"},"content":"                if (!DateTime.isValidDuration(start, end)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":254,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"Start date must be before end date.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":255,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":256,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":257,"author":{"gitId":"eugenetangkj"},"content":"                CommandType ctEvent \u003d CommandType.EVENT;","lastModifiedDate":"2023-01-24"},{"lineNumber":258,"author":{"gitId":"eugenetangkj"},"content":"                ctEvent.setTaskName(taskName);","lastModifiedDate":"2023-01-24"},{"lineNumber":259,"author":{"gitId":"eugenetangkj"},"content":"                ctEvent.setStartDate(startDate);","lastModifiedDate":"2023-01-24"},{"lineNumber":260,"author":{"gitId":"eugenetangkj"},"content":"                ctEvent.setEndDate(endDate);","lastModifiedDate":"2023-01-24"},{"lineNumber":261,"author":{"gitId":"eugenetangkj"},"content":"                return ctEvent;","lastModifiedDate":"2023-01-24"},{"lineNumber":262,"author":{"gitId":"eugenetangkj"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":263,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":264,"author":{"gitId":"eugenetangkj"},"content":"                ui.printStatement(dukeException.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":265,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":266,"author":{"gitId":"eugenetangkj"},"content":"                return CommandType.NOTHING;","lastModifiedDate":"2023-01-24"},{"lineNumber":267,"author":{"gitId":"eugenetangkj"},"content":"            } catch (DateTimeParseException dateTimeException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":268,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":269,"author":{"gitId":"eugenetangkj"},"content":"                ui.printStatement(\"Please check that you entered a valid date, and that the date should be in \"","lastModifiedDate":"2023-01-24"},{"lineNumber":270,"author":{"gitId":"eugenetangkj"},"content":"                        + \"the format of\\nyyyy-MM-dd hh:mm or yyyy-MM-dd.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":271,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":272,"author":{"gitId":"eugenetangkj"},"content":"                return CommandType.NOTHING;","lastModifiedDate":"2023-01-24"},{"lineNumber":273,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":274,"author":{"gitId":"eugenetangkj"},"content":"        case \"on\":","lastModifiedDate":"2023-01-24"},{"lineNumber":275,"author":{"gitId":"eugenetangkj"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":276,"author":{"gitId":"eugenetangkj"},"content":"                String dateString \u003d rawCommand.substring(3);","lastModifiedDate":"2023-01-24"},{"lineNumber":277,"author":{"gitId":"eugenetangkj"},"content":"                if (dateString.equals(\"\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":278,"author":{"gitId":"eugenetangkj"},"content":"                    throw new DukeException(\"The date cannot be left blank.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":279,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":280,"author":{"gitId":"eugenetangkj"},"content":"                Temporal dateObject \u003d DateTime.getDateTimeObject(dateString);","lastModifiedDate":"2023-01-24"},{"lineNumber":281,"author":{"gitId":"eugenetangkj"},"content":"                CommandType ctOn \u003d CommandType.ON;","lastModifiedDate":"2023-01-24"},{"lineNumber":282,"author":{"gitId":"eugenetangkj"},"content":"                ctOn.setOnDate(dateString);","lastModifiedDate":"2023-01-24"},{"lineNumber":283,"author":{"gitId":"eugenetangkj"},"content":"                return ctOn;","lastModifiedDate":"2023-01-24"},{"lineNumber":284,"author":{"gitId":"eugenetangkj"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":285,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":286,"author":{"gitId":"eugenetangkj"},"content":"                ui.printStatement(dukeException.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":287,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":288,"author":{"gitId":"eugenetangkj"},"content":"                return CommandType.NOTHING;","lastModifiedDate":"2023-01-24"},{"lineNumber":289,"author":{"gitId":"eugenetangkj"},"content":"            } catch (DateTimeParseException dateTimeException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":290,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":291,"author":{"gitId":"eugenetangkj"},"content":"                ui.printStatement(\"Please check that you entered a valid date, and that the date should be in \"","lastModifiedDate":"2023-01-24"},{"lineNumber":292,"author":{"gitId":"eugenetangkj"},"content":"                        + \"the format of\\nyyyy-MM-dd hh:mm or yyyy-MM-dd.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":293,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":294,"author":{"gitId":"eugenetangkj"},"content":"                return CommandType.NOTHING;","lastModifiedDate":"2023-01-24"},{"lineNumber":295,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":296,"author":{"gitId":"eugenetangkj"},"content":"        case \"find\":","lastModifiedDate":"2023-01-25"},{"lineNumber":297,"author":{"gitId":"eugenetangkj"},"content":"            CommandType ctFind \u003d CommandType.FIND;","lastModifiedDate":"2023-01-25"},{"lineNumber":298,"author":{"gitId":"eugenetangkj"},"content":"            ctFind.setKeyPhrase(rawCommand.substring(5));","lastModifiedDate":"2023-01-25"},{"lineNumber":299,"author":{"gitId":"eugenetangkj"},"content":"            return ctFind;","lastModifiedDate":"2023-01-25"},{"lineNumber":300,"author":{"gitId":"eugenetangkj"},"content":"        default:","lastModifiedDate":"2023-01-24"},{"lineNumber":301,"author":{"gitId":"eugenetangkj"},"content":"            return CommandType.INVALID;","lastModifiedDate":"2023-01-24"},{"lineNumber":302,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":303,"author":{"gitId":"eugenetangkj"},"content":"        return CommandType.INVALID;","lastModifiedDate":"2023-01-24"},{"lineNumber":304,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":305,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":306,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":307,"author":{"gitId":"eugenetangkj"},"content":"     * Returns the appropriate Command object associated with the CommandType.","lastModifiedDate":"2023-01-24"},{"lineNumber":308,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":309,"author":{"gitId":"eugenetangkj"},"content":"     * @return the Command object for the given CommandType.","lastModifiedDate":"2023-01-24"},{"lineNumber":310,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":311,"author":{"gitId":"eugenetangkj"},"content":"    public Command parseCommandType(CommandType command, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":312,"author":{"gitId":"eugenetangkj"},"content":"        switch (command) {","lastModifiedDate":"2023-01-24"},{"lineNumber":313,"author":{"gitId":"eugenetangkj"},"content":"        case BYE:","lastModifiedDate":"2023-01-24"},{"lineNumber":314,"author":{"gitId":"eugenetangkj"},"content":"            return new ByeCommand(ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":315,"author":{"gitId":"eugenetangkj"},"content":"        case LIST:","lastModifiedDate":"2023-01-24"},{"lineNumber":316,"author":{"gitId":"eugenetangkj"},"content":"            return new ListCommand(ui, tasks);","lastModifiedDate":"2023-01-24"},{"lineNumber":317,"author":{"gitId":"eugenetangkj"},"content":"        case MARK:","lastModifiedDate":"2023-01-24"},{"lineNumber":318,"author":{"gitId":"eugenetangkj"},"content":"            return new MarkCommand(ui, command.getIndex(), tasks, storage);","lastModifiedDate":"2023-01-24"},{"lineNumber":319,"author":{"gitId":"eugenetangkj"},"content":"        case UNMARK:","lastModifiedDate":"2023-01-24"},{"lineNumber":320,"author":{"gitId":"eugenetangkj"},"content":"            return new UnmarkCommand(ui, command.getIndex(), tasks, storage);","lastModifiedDate":"2023-01-24"},{"lineNumber":321,"author":{"gitId":"eugenetangkj"},"content":"        case TODO:","lastModifiedDate":"2023-01-24"},{"lineNumber":322,"author":{"gitId":"eugenetangkj"},"content":"            return new ToDoCommand(ui, command.getTaskName(), tasks, storage);","lastModifiedDate":"2023-01-24"},{"lineNumber":323,"author":{"gitId":"eugenetangkj"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-24"},{"lineNumber":324,"author":{"gitId":"eugenetangkj"},"content":"            return new DeadlineCommand(ui, command.getTaskName(), command.getDeadline(), tasks, storage);","lastModifiedDate":"2023-01-24"},{"lineNumber":325,"author":{"gitId":"eugenetangkj"},"content":"        case EVENT:","lastModifiedDate":"2023-01-24"},{"lineNumber":326,"author":{"gitId":"eugenetangkj"},"content":"            return new EventCommand(ui, command.getTaskName(), command.getStartDate(), command.getEndDate(),","lastModifiedDate":"2023-01-24"},{"lineNumber":327,"author":{"gitId":"eugenetangkj"},"content":"                    tasks, storage);","lastModifiedDate":"2023-01-24"},{"lineNumber":328,"author":{"gitId":"eugenetangkj"},"content":"        case DELETE:","lastModifiedDate":"2023-01-24"},{"lineNumber":329,"author":{"gitId":"eugenetangkj"},"content":"            return new DeleteCommand(ui, command.getIndex(), tasks, storage);","lastModifiedDate":"2023-01-24"},{"lineNumber":330,"author":{"gitId":"eugenetangkj"},"content":"        case ON:","lastModifiedDate":"2023-01-24"},{"lineNumber":331,"author":{"gitId":"eugenetangkj"},"content":"            return new OnCommand(ui, command.getOnDate(), tasks);","lastModifiedDate":"2023-01-24"},{"lineNumber":332,"author":{"gitId":"eugenetangkj"},"content":"        case HELP:","lastModifiedDate":"2023-01-24"},{"lineNumber":333,"author":{"gitId":"eugenetangkj"},"content":"            return new HelpCommand(ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":334,"author":{"gitId":"eugenetangkj"},"content":"        case FIND:","lastModifiedDate":"2023-01-25"},{"lineNumber":335,"author":{"gitId":"eugenetangkj"},"content":"            return new FindCommand(ui, command.getKeyPhrase(), tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":336,"author":{"gitId":"eugenetangkj"},"content":"        case INVALID:","lastModifiedDate":"2023-01-24"},{"lineNumber":337,"author":{"gitId":"eugenetangkj"},"content":"            return new InvalidCommand(ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":338,"author":{"gitId":"eugenetangkj"},"content":"        default:","lastModifiedDate":"2023-01-24"},{"lineNumber":339,"author":{"gitId":"eugenetangkj"},"content":"            return null;","lastModifiedDate":"2023-01-24"},{"lineNumber":340,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":341,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":342,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":343,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":344,"author":{"gitId":"eugenetangkj"},"content":"     * Checks if a string can be converted into an \u003ccode\u003eInteger\u003c/code\u003e.","lastModifiedDate":"2023-01-25"},{"lineNumber":345,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":346,"author":{"gitId":"eugenetangkj"},"content":"     * @param stringToCheck \u003ccode\u003eString\u003c/code\u003e to check whether the conversion is possible.","lastModifiedDate":"2023-01-25"},{"lineNumber":347,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if it can be converted, else return false.","lastModifiedDate":"2023-01-24"},{"lineNumber":348,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":349,"author":{"gitId":"eugenetangkj"},"content":"    public boolean isInteger(String stringToCheck) {","lastModifiedDate":"2023-01-24"},{"lineNumber":350,"author":{"gitId":"eugenetangkj"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":351,"author":{"gitId":"eugenetangkj"},"content":"            int intVersion \u003d Integer.parseInt(stringToCheck);","lastModifiedDate":"2023-01-24"},{"lineNumber":352,"author":{"gitId":"eugenetangkj"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":353,"author":{"gitId":"eugenetangkj"},"content":"            return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":354,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":355,"author":{"gitId":"eugenetangkj"},"content":"        return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":356,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":357,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":358,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":358}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import duke.datetime.DateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":" * Responsible for file-related operations, such as reading and writing of the data file when dealing with loading","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":" * and saving of task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"public class Storage {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    //CHECKSTYLE.OFF: Checker","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    /** Absolute file path where the folder containing the data file is stored in. */","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"    private String data_file_folder_path;","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    /** Absolute file path where the data file should be stored in. **/","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"    private String data_file_path;","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"    //CHECKSTYLE.ON: Checker","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a \u003ccode\u003eStorage\u003c/code\u003e instance.","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"     * @param folderName Name of the folder to be created to store data file.","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"     * @param fileName Name of the data file to be created.","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    public Storage(String folderName, String fileName) {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        data_file_folder_path \u003d Paths.get(System.getProperty(\"user.dir\"), folderName).toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        data_file_path \u003d Paths.get(System.getProperty(\"user.dir\"), folderName, fileName).toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"     * Prepares the file for storage of task list data.","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if file was created successfully, else return false.","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"    public boolean prepareFile() {","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        //Make the directory","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"        File directory \u003d new File(data_file_folder_path);","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"            boolean makeDirectoryStatus \u003d directory.mkdir();","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"            if (!makeDirectoryStatus) {","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"                System.out.println(\"Folder cannot be created.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"                Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"                return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"        //Create the file","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"        File dataFile \u003d new File(data_file_path);","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"            Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(\"File cannot be created.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(\"The following error occurred: \");","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(ioException.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"            Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"            return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"        return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"     * Reads and loads task history from the data file.","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to store the tasks read from the data file.","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if loading was successful, else return false.","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"    public boolean loadTasksFromFile(TaskList tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"            File dataFile \u003d new File(data_file_path);","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"            Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"            //Iterate through line by line","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"                String currentTask \u003d s.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"                String[] currentTaskArray \u003d currentTask.split(\" \\\\| \");","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"                String commandType \u003d currentTaskArray[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"                //Convert line into task","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"                switch (commandType) {","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"                case \"T\":","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"                    Task toDoTask \u003d new ToDo(currentTaskArray[2]);","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"                    if (currentTaskArray[1].equals(\"1\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"                        toDoTask.setDoneStatus();","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"                    tasks.addTask(toDoTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"eugenetangkj"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"eugenetangkj"},"content":"                case \"D\":","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"eugenetangkj"},"content":"                    try {","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"                        //Checks if the deadline is a valid date and time","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"                        Task deadlineTask \u003d new Deadline(currentTaskArray[2], currentTaskArray[3],","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"eugenetangkj"},"content":"                                DateTime.getDateTimeObject(currentTaskArray[3]));","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"eugenetangkj"},"content":"                        if (currentTaskArray[1].equals(\"1\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"eugenetangkj"},"content":"                            deadlineTask.setDoneStatus();","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"eugenetangkj"},"content":"                        }","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"eugenetangkj"},"content":"                        tasks.addTask(deadlineTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"eugenetangkj"},"content":"                        break;","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"eugenetangkj"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"eugenetangkj"},"content":"                        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"eugenetangkj"},"content":"                        System.out.println(\"Dates stored in the data file are corrupted. Cannot read.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"eugenetangkj"},"content":"                        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"eugenetangkj"},"content":"                        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"eugenetangkj"},"content":"                case \"E\":","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"eugenetangkj"},"content":"                    try {","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"                        //Create new event task","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"eugenetangkj"},"content":"                        Temporal start \u003d DateTime.getDateTimeObject(currentTaskArray[3]);","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"eugenetangkj"},"content":"                        Temporal end \u003d DateTime.getDateTimeObject(currentTaskArray[4]);","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"eugenetangkj"},"content":"                        if (!DateTime.isValidDuration(start, end)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"eugenetangkj"},"content":"                            throw new DukeException(\"Start date must be before end date.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"eugenetangkj"},"content":"                        }","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"eugenetangkj"},"content":"                        Task eventTask \u003d new Event(currentTaskArray[2], currentTaskArray[3], currentTaskArray[4],","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"eugenetangkj"},"content":"                                start, end);","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"eugenetangkj"},"content":"                        if (currentTaskArray[1].equals(\"1\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"eugenetangkj"},"content":"                            eventTask.setDoneStatus();","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"eugenetangkj"},"content":"                        }","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"eugenetangkj"},"content":"                        tasks.addTask(eventTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"eugenetangkj"},"content":"                        break;","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"eugenetangkj"},"content":"                    } catch (DukeException dukeException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":136,"author":{"gitId":"eugenetangkj"},"content":"                        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"eugenetangkj"},"content":"                        System.out.println(dukeException.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"eugenetangkj"},"content":"                        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":139,"author":{"gitId":"eugenetangkj"},"content":"                        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":140,"author":{"gitId":"eugenetangkj"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":141,"author":{"gitId":"eugenetangkj"},"content":"                        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":142,"author":{"gitId":"eugenetangkj"},"content":"                        System.out.println(\"Dates stored are corrupted. Cannot read from data file.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":143,"author":{"gitId":"eugenetangkj"},"content":"                        System.out.println(\"Create new data file from scratch...\");","lastModifiedDate":"2023-01-24"},{"lineNumber":144,"author":{"gitId":"eugenetangkj"},"content":"                        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":145,"author":{"gitId":"eugenetangkj"},"content":"                        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":146,"author":{"gitId":"eugenetangkj"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":147,"author":{"gitId":"eugenetangkj"},"content":"                default:","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"eugenetangkj"},"content":"                    //Do nothing","lastModifiedDate":"2023-01-31"},{"lineNumber":149,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":150,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":151,"author":{"gitId":"eugenetangkj"},"content":"            s.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"eugenetangkj"},"content":"            return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":153,"author":{"gitId":"eugenetangkj"},"content":"        } catch (FileNotFoundException fileNotFoundException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":154,"author":{"gitId":"eugenetangkj"},"content":"            Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":155,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(\"Cannot read from data file.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":156,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(\"Create new data file from scratch...\");","lastModifiedDate":"2023-01-24"},{"lineNumber":157,"author":{"gitId":"eugenetangkj"},"content":"            Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":158,"author":{"gitId":"eugenetangkj"},"content":"            return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":159,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":160,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":161,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":162,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":163,"author":{"gitId":"eugenetangkj"},"content":"     * Saves the tasks stored in the list into the data file.","lastModifiedDate":"2023-01-24"},{"lineNumber":164,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":165,"author":{"gitId":"eugenetangkj"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e that contains the tasks to be saved.","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if save is successful, else false.","lastModifiedDate":"2023-01-24"},{"lineNumber":167,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":168,"author":{"gitId":"eugenetangkj"},"content":"    public boolean saveTasks(TaskList tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":169,"author":{"gitId":"eugenetangkj"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":170,"author":{"gitId":"eugenetangkj"},"content":"            File dataFile \u003d new File(data_file_path);","lastModifiedDate":"2023-01-24"},{"lineNumber":171,"author":{"gitId":"eugenetangkj"},"content":"            FileWriter fw \u003d new FileWriter(data_file_path);","lastModifiedDate":"2023-01-24"},{"lineNumber":172,"author":{"gitId":"eugenetangkj"},"content":"            //Reset content of file","lastModifiedDate":"2023-01-24"},{"lineNumber":173,"author":{"gitId":"eugenetangkj"},"content":"            fw.write(\"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":174,"author":{"gitId":"eugenetangkj"},"content":"            fw.flush();","lastModifiedDate":"2023-01-24"},{"lineNumber":175,"author":{"gitId":"eugenetangkj"},"content":"            fw \u003d new FileWriter(data_file_path, true);","lastModifiedDate":"2023-01-24"},{"lineNumber":176,"author":{"gitId":"eugenetangkj"},"content":"            //Append new content into file","lastModifiedDate":"2023-01-24"},{"lineNumber":177,"author":{"gitId":"eugenetangkj"},"content":"            for (int i \u003d 0; i \u003c tasks.getSizeOfTaskList(); i \u003d i + 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":178,"author":{"gitId":"eugenetangkj"},"content":"                Task currentTask \u003d tasks.getTask(i);","lastModifiedDate":"2023-01-24"},{"lineNumber":179,"author":{"gitId":"eugenetangkj"},"content":"                String taskStatus \u003d (currentTask.getStatusOfTask())","lastModifiedDate":"2023-01-24"},{"lineNumber":180,"author":{"gitId":"eugenetangkj"},"content":"                        ? \"1 | \"","lastModifiedDate":"2023-01-24"},{"lineNumber":181,"author":{"gitId":"eugenetangkj"},"content":"                        : \"0 | \";","lastModifiedDate":"2023-01-24"},{"lineNumber":182,"author":{"gitId":"eugenetangkj"},"content":"                String lineToAdd \u003d (currentTask instanceof ToDo)","lastModifiedDate":"2023-01-24"},{"lineNumber":183,"author":{"gitId":"eugenetangkj"},"content":"                        ? \"T | \" + taskStatus + currentTask.getNameOfTask()","lastModifiedDate":"2023-01-24"},{"lineNumber":184,"author":{"gitId":"eugenetangkj"},"content":"                        : (currentTask instanceof Deadline)","lastModifiedDate":"2023-01-24"},{"lineNumber":185,"author":{"gitId":"eugenetangkj"},"content":"                        ? \"D | \" + taskStatus + currentTask.getNameOfTask() + \" | \"","lastModifiedDate":"2023-01-24"},{"lineNumber":186,"author":{"gitId":"eugenetangkj"},"content":"                        + ((Deadline) currentTask).getRawDeadline()","lastModifiedDate":"2023-01-24"},{"lineNumber":187,"author":{"gitId":"eugenetangkj"},"content":"                        : \"E | \" + taskStatus + currentTask.getNameOfTask() + \" | \"","lastModifiedDate":"2023-01-24"},{"lineNumber":188,"author":{"gitId":"eugenetangkj"},"content":"                        + ((Event) currentTask).getRawStartDate() + \" | \"","lastModifiedDate":"2023-01-24"},{"lineNumber":189,"author":{"gitId":"eugenetangkj"},"content":"                        + ((Event) currentTask).getRawEndDate();","lastModifiedDate":"2023-01-24"},{"lineNumber":190,"author":{"gitId":"eugenetangkj"},"content":"                if (i !\u003d tasks.getSizeOfTaskList() - 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":191,"author":{"gitId":"eugenetangkj"},"content":"                    lineToAdd +\u003d \"\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":192,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":193,"author":{"gitId":"eugenetangkj"},"content":"                fw.write(lineToAdd);","lastModifiedDate":"2023-01-24"},{"lineNumber":194,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":195,"author":{"gitId":"eugenetangkj"},"content":"            fw.flush();","lastModifiedDate":"2023-01-24"},{"lineNumber":196,"author":{"gitId":"eugenetangkj"},"content":"            fw.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":197,"author":{"gitId":"eugenetangkj"},"content":"            return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":198,"author":{"gitId":"eugenetangkj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":199,"author":{"gitId":"eugenetangkj"},"content":"            Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":200,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(\"Could not save the tasks locally. The following error occurred: \");","lastModifiedDate":"2023-01-24"},{"lineNumber":201,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":202,"author":{"gitId":"eugenetangkj"},"content":"            Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":203,"author":{"gitId":"eugenetangkj"},"content":"            return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":204,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":205,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":206,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":206}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import duke.datetime.DateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":" * Represents a deadline \u003ccode\u003eTask\u003c/code\u003e that can be kept track of, having a deadline associated with the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"    /** The deadline of the task. */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    private Temporal deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    /** A string containing the raw deadline string **/","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    private String rawDeadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    /** A string where the deadline is formatted in either yyyy-MM-dd HH:mm or yyyy-MM-dd. */","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"    private String formattedDeadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a \u003ccode\u003eDeadline\u003c/code\u003e task.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"     * @param rawDeadline The raw deadline string input by user.","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"     * @param deadline The deadline \u003ccode\u003eTemporal\u003c/code\u003e object for this given deadline task.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    public Deadline(String taskName, String rawDeadline, Temporal deadline) {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"        super(taskName);","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"        this.rawDeadline \u003d rawDeadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        this.formattedDeadline \u003d DateTime.formatDate(deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the status of the deadline task.","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"     * @return a \u003ccode\u003eString\u003c/code\u003e indicating the type, status and deadline for the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    public String getStatusOfTaskInString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        String typeOfTask \u003d \"D\";","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        return (this.isDone)","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"               ? \"[\" + typeOfTask + \"][X] \" + this.taskName + (\" (by: \") + this.formattedDeadline + \")\"","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"               : \"[\" + typeOfTask + \"][ ] \" + this.taskName + (\" (by: \") + this.formattedDeadline + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the deadline object of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"     * @return the \u003ccode\u003eTemporal\u003c/code\u003e encapsulating the date and time of the deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"    public Temporal getDeadline() {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"        return deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the raw deadline of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"     * @return the \u003ccode\u003eString\u003c/code\u003e containing the raw date and time of the deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"    public String getRawDeadline() {","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"        return rawDeadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"eugenetangkj":65}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import duke.datetime.DateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":" * Represents an event \u003ccode\u003eTask\u003c/code\u003e that can be kept track of, starting and ending at a specific date/time.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    /** Start date of the event. */","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"    private Temporal startDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    /** End date of the event. */","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    private Temporal endDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    /** A string containing the raw start date string **/","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    private String rawStartDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    /** A string containing the raw end date string **/","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    private String rawEndDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    /** A string where the start date is formatted in either yyyy-MM-dd HH:mm or yyyy-MM-dd. */","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"    private String formattedStartDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    /** A string where the deadline is formatted in either yyyy-MM-dd HH:mm or yyyy-MM-dd. */","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"    private String formattedEndDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs an \u003ccode\u003eEvent\u003c/code\u003e task.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"     * @param rawStartDate The raw start date from the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"     * @param rawEndDate The raw end date from the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"     * @param startDate The start date \u003ccode\u003eTemporal\u003c/code\u003e object for this event.","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"     * @param endDate The end date \u003ccode\u003eTemporal\u003c/code\u003e object for this event.","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"    public Event(String taskName, String rawStartDate, String rawEndDate, Temporal startDate, Temporal endDate) {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"        super(taskName);","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"        this.rawStartDate \u003d rawStartDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"        this.rawEndDate \u003d rawEndDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        formattedStartDate \u003d DateTime.formatDate(startDate);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"        formattedEndDate \u003d DateTime.formatDate(endDate);","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the status of the event task.","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"     * @return a \u003ccode\u003eString\u003c/code\u003e indicating the type, status and time period for the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"    public String getStatusOfTaskInString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"        String typeOfTask \u003d \"E\";","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"        return (this.isDone)","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"                ? \"[\" + typeOfTask + \"][X] \" + this.taskName + (\" (from: \") + this.formattedStartDate","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"                        + \" to: \" + this.formattedEndDate + \")\"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"                : \"[\" + typeOfTask + \"][ ] \" + this.taskName + (\" (from: \") + this.formattedStartDate","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"                        + \" to: \" + this.formattedEndDate + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the start date object of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"     * @return the \u003ccode\u003eTemporal\u003c/code\u003e encapsulating the date and time of the start date.","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"    public Temporal getStartDate() {","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"        return startDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the end date object of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"     * @return the \u003ccode\u003eTemporal\u003c/code\u003e encapsulating the date and time of the end date.","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"    public Temporal getEndDate() {","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"        return endDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the raw start date of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"     * @return the \u003ccode\u003eString\u003c/code\u003e containing the raw start date and time.","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"    public String getRawStartDate() {","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"        return rawStartDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the raw end date of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"     * @return the \u003ccode\u003eString\u003c/code\u003e containing the raw end date and time.","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"    public String getRawEndDate() {","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"        return rawEndDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"eugenetangkj":103}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":" * Represents a task that can be kept track of.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"    /** The name of the task. */","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"    protected String taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"    /** The status of the task. **/","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a user task.","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskName The name of the task","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"     * Sets status of task to be done","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    public void setDoneStatus() {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"     * Sets status of task to be undone","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"    public void setUndoneStatus() {","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the status of the task with the task name.","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"     * @return a \u003ccode\u003eString\u003c/code\u003e indicating the type and status of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    public abstract String getStatusOfTaskInString();","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the status of the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if task is done, else return false.","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"    public boolean getStatusOfTask() {","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        return isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the name of the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"     * @return the name of the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"    public String getNameOfTask() {","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"        return this.taskName;","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"eugenetangkj":59}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":" * Represents a to-do \u003ccode\u003eTask\u003c/code\u003e that can be kept track of, having no date or time attached to it.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a new to-do task.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"     * @param taskName Name of the to-do task.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"        super(taskName);","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the status of the task with the task name.","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"     * @return a \u003ccode\u003eString\u003c/code\u003e indicating the type and status of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    public String getStatusOfTaskInString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"        String typeOfTask \u003d \"T\";","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"        return (this.isDone)","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"               ? \"[\" + typeOfTask + \"][X] \" + this.taskName","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"               : \"[\" + typeOfTask + \"][ ] \" + this.taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"eugenetangkj":29}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.tasklist;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":" * Represents the list of \u003ccode\u003eTasks\u003c/code\u003e that the user has entered into the chatbot.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"public class TaskList {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    /** List that stores all the Task objects. */","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a \u003ccode\u003eTaskList\u003c/code\u003e instance.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"     * Gets number of tasks in the task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"     * @return the number of tasks in the task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    public int getSizeOfTaskList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the task at a specified index of the list.","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"     * @param index The index in the list from which to retrieve the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"     * Adds a \u003ccode\u003eTask\u003c/code\u003einto the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"    public void addTask(Task taskToAdd) {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"        this.tasks.add(taskToAdd);","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"     * Deletes a \u003ccode\u003eTask\u003c/code\u003e from the task List, at a specified index.","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"     * @param index Index of the task which is to be deleted.","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"     * Prints out all the user tasks that have been entered by the user thus far.","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"    public void printUserTasks() {","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(\"There are currently no tasks in your list.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"            Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"            return;","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"        int numberOfTasks \u003d tasks.size();","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"        //Process each task in the storage","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i \u003d i + 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"            String numbering \u003d Integer.toString(i + 1) + \". \";","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"            String output \u003d numbering + tasks.get(i).getStatusOfTaskInString();","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"            System.out.println(output);","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"        Ui.printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":75}},{"path":"src/main/java/duke/tasklist/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.tasklist;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"/** Represents a stub for TaskList to remove dependencies during unit testing. */","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"public class TaskListStub extends TaskList {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"    public TaskListStub() {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"     * Return the value 3.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"     * @return 3.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    public int getSizeOfTaskList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"        return 3;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"eugenetangkj":20}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":" * Represents a user interface that is responsible for getting input and displaying output to the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"public class Ui {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"    /** Logo for the name of the chatbot. **/","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"    private static final String LOGO \u003d \" |          ______    ______\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"                                     + \" | ____    |      |  |      |\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"                                     + \" |      |  |      |  |      |\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"                                     + \" | ____ |  |______|  |______|\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    /** Straight line that separates commands. **/","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    private static final String STRAIGHT_LINE \u003d","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"            \"_______________________________________________________________________________________________\";","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    /** Commands that supported by the chatbot. */","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    private static final String COMMAND_LIST \u003d","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"            \"1.  list -\u003e Provides a list of existing tasks.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"                    + \"2.  mark X -\u003e Marks task number X as done.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"                    + \"3.  unmark X -\u003e Marks task number X as undone.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"                    + \"4.  todo taskName -\u003e Creates a todo task with name taskName.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"                    + \"5.  deadline taskName /by date -\u003e Creates a deadline task with name taskName and deadline\"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"                            + \"date.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"                    + \"6.  event taskName /from startDate /to endDate -\u003e Creates an event task with name taskName,\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"                    + \"    start date startDate, and end date endDate.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"                    + \"7.  delete X -\u003e Deletes task number X from the list.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"                    + \"8.  on givenDate -\u003e Displays all the tasks that occur on givenDate.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"                    + \"9.  find keyPhrase -\u003e Displays all the tasks whose names contain any words from keyPhrase.\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"                    + \"10. help -\u003e Prints the list of commands supported by this bot.\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"                    + \"11. bye -\u003e Exits the bot.\\n\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"                    + \"Please enter dates in the format of either yyyy-MM-dd hh:mm or yyyy-MM-dd.\";","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"    /** Introductory message excluding logo and command list. */","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"    private static final String INTRODUCTORY_BODY \u003d \"Boo! Nice to meet you.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"            + \"I am here to scare all your problems away by keeping track of your tasks.\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"                    + \"What can I help you with today?\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"                            + \"\\nSupported Commands:\";","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"    /** Exit message. */","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"    private static final String EXIT_MESSAGE \u003d \"Goodbye. Hope that I have managed to scare all your problems away.\"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"            + \"\\nHave a great day! :)\";","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"    /** \u003ccode\u003eScanner\u003c/code\u003eto take in user input. */","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"    private Scanner sc;","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs an \u003ccode\u003eUi\u003c/code\u003e instance to read in user input and display output.","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"    public Ui() {","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"        printIntroductoryMessage();","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"     * Prints out the straight line that separates commands.","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"    public static void printStraightLine() {","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(STRAIGHT_LINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"     * Prints the introductory message.","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"    public void printIntroductoryMessage() {","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"        printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(INTRODUCTORY_BODY);","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(COMMAND_LIST);","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"        printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"     * Prints the exit message, used when bot exits normally.","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"    public void printExitMessage() {","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"        printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(EXIT_MESSAGE);","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"        printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"     * Prints abnormal shutdown message, used when bot faces an exception.","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"    public void printShutDownMessage() {","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"        printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Bot shutting down...\");","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"        printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"     * Prints the list of supported commands, used when user calls help.","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"    public void printCommands() {","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"        printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(\"Supported Commands:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(COMMAND_LIST);","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"        printStraightLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"     * Prints the given string.","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"eugenetangkj"},"content":"     * @param statement The string to be printed.","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"eugenetangkj"},"content":"    public void printStatement(String statement) {","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"eugenetangkj"},"content":"        System.out.println(statement);","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"eugenetangkj"},"content":"     * Gets user input for processing.","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"eugenetangkj"},"content":"     * @return the raw command given by the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"eugenetangkj"},"content":"    public String getUserCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"eugenetangkj"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"eugenetangkj"},"content":"     * Cleans up UI resources after bot ends.","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"eugenetangkj"},"content":"    public void cleanUpUi() {","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"eugenetangkj"},"content":"        sc.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"eugenetangkj":129}},{"path":"src/test/java/duke/datetime/DateTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.datetime;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"public class DateTimeTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    public void getDateTimeObject_validString_obtainTemporalObject() {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(LocalDate.of(2023, 2, 2),","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"                    DateTime.getDateTimeObject(\"2023-02-02\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(LocalDateTime.of(2023, 2, 2, 14, 30),","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"                DateTime.getDateTimeObject(\"2023-02-02 14:30\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    public void getDateTimeObject_invalidString_exceptionThrown() {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"            assertEquals(LocalDate.of(2023, 2, 2),","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"                    DateTime.getDateTimeObject(\"02 Feb 2023\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"            //Should not reach here","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"            assertEquals(1, 1); //Should reach here","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"eugenetangkj":31}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import duke.tasklist.TaskListStub;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    public void parseRawCommand_validCommands_success() {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"        Parser ps \u003d new Parser(new Ui(), new TaskListStub());","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"bye\"), CommandType.BYE);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"list\"), CommandType.LIST);","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand((\"help\")), CommandType.HELP);","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"mark 1\"), CommandType.MARK);","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"unmark 2\"), CommandType.UNMARK);","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"delete 1\"), CommandType.DELETE);","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"todo Task1\"), CommandType.TODO);","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"deadline Task2 /by 2023-02-02\"), CommandType.DEADLINE);","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"event Task3 /from 2023-02-02 12:00 /to 2023-02-02 18:00\"), CommandType.EVENT);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"on 2023-02-02\"), CommandType.ON);","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"bye hello\"), CommandType.INVALID);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"bye  \"), CommandType.INVALID);","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"hi hi\"), CommandType.INVALID);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"    public void parseRawCommand_invalidCommands_outputNothing() {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"        Parser ps \u003d new Parser(new Ui(), new TaskListStub());","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"mark -1\"), CommandType.NOTHING);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"unmark 4\"), CommandType.NOTHING);","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"delete 0\"), CommandType.NOTHING);","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"deadline /by 2023-02-02\"), CommandType.NOTHING);","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"deadline TaskName /by\"), CommandType.NOTHING);","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"deadline TaskName by 2023-02-02\"), CommandType.NOTHING);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"event TaskName /from 2023-02-02 /to 2023-01-02\"), CommandType.NOTHING);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(ps.parseRawCommand(\"on 5 Feb\"), CommandType.NOTHING);","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"eugenetangkj":45}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"    public void testSetDoneStatus() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"        ToDo newTask \u003d new ToDo(\"Task 1\");","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"        newTask.setDoneStatus();","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(true, newTask.isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    public void testSetUndoneStatus() {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"        ToDo newTask \u003d new ToDo(\"Task 1\");","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"        newTask.setUndoneStatus();","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(false, newTask.isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    public void testGetNameOfTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"        ToDo newTask \u003d new ToDo(\"Task 1\");","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(\"Task 1\", newTask.taskName);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"eugenetangkj":29}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"    public void testGetStatusOfTaskInString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"        ToDo newToDoTask \u003d new ToDo(\"Task 1\");","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(\"[T][ ] Task 1\", newToDoTask.getStatusOfTaskInString());","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"eugenetangkj":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"todo read book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"deadline return book /by 2023-06-06","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"event project meeting /from June 7th 2pm /to June 7th 4pm","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"event project meeting /from 2023-06-07 14:00 /to 2023-06-07 18:00","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"event carnival /from 2023-06-05 /to 2023-06-08","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"mark 0","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"mark 5","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"todo buy groceries","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"delete 6","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"delete 5","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"on 2023-06-06","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"event backward /from 2023-06-06 14:00 /to 2023-06-06 08:00","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"help","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"hello","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"eugenetangkj":18}}]
