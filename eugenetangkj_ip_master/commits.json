{"authorDailyContributionsMap":{"eugenetangkj":[{"date":"2023-01-17","commitResults":[{"hash":"6ef0c03bb85ad99111e341b03cd6e613d6dd3cf9","messageTitle":"Changed name of bot from Duke to boo.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":5}}},{"hash":"8bcabf165fa4736afe12ed8dfdce3b5877e9742e","messageTitle":"Completed Level 1: Bot greets user, echoes user\u0027s commands, and exits when user types bye.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":10}}},{"hash":"557ef978881853178ff0c57a16692931477cc38d","messageTitle":"Completed Level 2: Bot stores the text that user enters, and displays them when requested.","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":7}}},{"hash":"1ed3770714ba29f1464a48203b638a88112625d6","messageTitle":"Added a new Task class.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":0}}},{"hash":"cc6ae6e22107c7049eea415ee4f74d45fd44e267","messageTitle":"Completed Level 3: Included features to mark tasks as done/undone, and added a new Task class.","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":30}}}]},{"date":"2023-01-18","commitResults":[{"hash":"7dfb882e4bd3bf35c67566a3031c8be21888f80b","messageTitle":"Made Task an abstract class and created ToDo child class.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":11}}},{"hash":"8026f6b3ae72df1b79b825bd7c4d26bdd2570cc6","messageTitle":"Created Deadline child class.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}},{"hash":"23042cb8223f65a3e6f7f9c0d63d61e21ab5837a","messageTitle":"Created Event class.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":4}}},{"hash":"34f4735ff1a386063c7aafffca07edc087483dc3","messageTitle":"Implemented feature to add tasks that are todo, deadline or event.","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":100,"deletions":19}}},{"hash":"0a52efd785a202335be7f6338407e0a76aba1779","messageTitle":"Added content into input.txt and expected.txt, and tested using given script.","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":16,"deletions":0},"java":{"insertions":7,"deletions":7}}},{"hash":"ddc209d57313ee0940b3f0e0cc5e68ba80906ab9","messageTitle":"Created DukeException class and handled the mark command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":2}}},{"hash":"7963ef81350d7a3f9006a2fbb2613dfb3b981b67","messageTitle":"Handled exceptions for unmark command.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":2}}},{"hash":"b14d4799970516acdaf001cd24672fe186790f55","messageTitle":"Handled exceptions for the todo command.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":4}}},{"hash":"7176d2af2683ea50c6a3591f7d3f025b26c189ef","messageTitle":"Handled exceptions for deadline command.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":6}}},{"hash":"bc55d6eb43f1b2f56e2a729f38066fd7986054f6","messageTitle":"Added exception handling for all available commands.","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0},"java":{"insertions":76,"deletions":11}}},{"hash":"6e933a5846793f158f4c842f7d848fc88da0460b","messageTitle":"Added delete feature to delete tasks.","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":40,"deletions":1}}}]},{"date":"2023-01-23","commitResults":[{"hash":"e922efb1a285e28e6813f3a4c0d04e6f066b66a2","messageTitle":"Tidy up the code according to Java code convention","messageBody":"Code does not follow standard Java conventions.\n\nLet\u0027s,\n* add empty line between description and params in Javadoc\n* insert double indentation for lines that overflow\n* break up lines that exceed 120 characters.\n\nFollowing a standard code standard makes it easy for fellow coders\nto read and understand the code.\n","fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":76}}},{"hash":"a5ea14d23c06a28eb1dbd5de2b5584f5c8bc4118","messageTitle":"Add feature to create file to save task history","messageBody":"Feature that saves task history will make it usable for users,\nbecause users do not need to retype all their tasks if they restart\nthe bot.\n\nLet\u0027s,\n* check if data file exists before bot accepts commands\n* read from the data file if it exists\n* create data file if it does not exists\n\nChecking is required because exceptions will occur if we assume that\na data file exists, which is not true for new users.\n","fileTypesAndContributionMap":{"java":{"insertions":180,"deletions":76}}},{"hash":"55d45531d8fb4323f96ce5db8e0db7379ae58ffd","messageTitle":"Add auto-saving feature for task history","messageBody":"Creation of file to store task history needs to be coupled with saving\nof task history when the user changes the task list.\n\nLet\u0027s add a feature that writes the contents of the user\u0027s task list\nto the data file whenever the user makes changes to the list.\n\nIn the event that the program abruptedly terminated, prior changes to\nthe task list before termination would still have been saved.\n","fileTypesAndContributionMap":{"java":{"insertions":95,"deletions":12}}}]},{"date":"2023-01-24","commitResults":[{"hash":"f44a594d52c68de8dd6d93aa59409559dc7d938f","messageTitle":"Encapsulate date/time in either LocalDateTime or LocalDate object.","messageBody":"Previously, we processed date and time as raw strings so the user could\nhave entered invalid values.\n\nLet\u0027s\n* Process user input for date and time and encapsulate them in\nthe Task classes as either LocalDateTime or LocalDate objects.\n* Format the date and time to be more reader-friendly to users.\n\nEnsures that the user types in a valid date and time.\n","fileTypesAndContributionMap":{"java":{"insertions":150,"deletions":41}}},{"hash":"a679b99f2a0c827ee37deddec05ea705ce9c74a5","messageTitle":"Add a help command","messageBody":"With a greater number of commands, it is difficult to remember all\nthe available commands. It is worse for new users of the chatbot.\n\nAdd a help command that will display the list of available commands.\n\nUser can now easily view all available commands if he is unsure of what\nto type into the chatbot.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":13}}},{"hash":"2218ad850874ee7d682faa8a63352e28e538aabf","messageTitle":"Add test to ensure start is before end for Event","messageBody":"Need to validate that start is before end, otherwise duration\nfor an Event will not be valid.\n\nLet\u0027s check the LocalDateTime and/or LocalDate objects to check\nif user entered a valid duration.\n\nThe LocalDateTime and/or LocalDate objects provide API to compare\ndate and time.\n","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":3}}},{"hash":"e2bedc56b03b5d69fc675a79b6aa12f56b9af95d","messageTitle":"Add command to check tasks on a specific day.","messageBody":"Provide users a way to focus on important tasks and narrow down\nthe search.\n\nLet\u0027s add a on date command. Will display all tasks that occur on the\ngiven date. Loop through the ArrayList and process the dates.\n\nHave to check what the type of Task is, and carry out date processing\naccording to the correct type.\n","fileTypesAndContributionMap":{"java":{"insertions":123,"deletions":37}}},{"hash":"c85c5b98144aa5bc085910b79b91c58be64a6b32","messageTitle":"Add straight lines between error messages","messageBody":"To be consistent with the style of the bot.\n\nAdd two print line statements between exception handling.\n\nIn the event of exception, will be handled and message is placed\nbetween 2 straight lines.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"275c6aa9383c36e992994bb529ccfcdc245d24dd","messageTitle":"Modify input.txt and expected.txt","messageBody":"New feature of date and time needs to be tested.\n\nLet\u0027s change the input and expected output to conduct regression\ntesting.\n\nTests old features and new date/time feature.\n","fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":19},"java":{"insertions":3,"deletions":3}}},{"hash":"35444ae4c781f6a99c9f1ed5f84758d72d07f2fe","messageTitle":"Create classes for each command","messageBody":"Each command behaves differently, having its own behaviour.\n\nLet\u0027s abstract out the code from Duke and place the behaviour in\neach command class.\n\nEasier to identify the code for command behaviour and customise\naccordingly.\n","fileTypesAndContributionMap":{"java":{"insertions":973,"deletions":178}}},{"hash":"223889f1a1483c927228be2697cb79853dcef763","messageTitle":"Refactor code into respective classes","messageBody":"Previously, most functionality was in the Duke class, but they do not\nrepresent methods that should belong to Duke bot.\n\nLet\u0027s refactor and create classes. Place respective methods in the\ncorrect class.\n* Create Ui class to handle input and output.\n* Create Storage class to handle saving and loading from local file.\n* Create Parser class to handler input parsing.\n* Create Command classes to handle command execution.\n* Create DateTime class to handle date time processing.\n* Create TaskList class to handle operations on the task list.\n\nPlacing respective methods in the correct classes allow us to easily\nextend and understand our existing program, adhering to OOP principles.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":746,"deletions":701}}},{"hash":"d54e3c955afe5b2fe19e8b592a4e1667ffffbd03","messageTitle":"Remove unnecessary import statements from Task.java","messageBody":"Imported classes were not being used.\n\nLet\u0027s remove the import statements.\n\nAvoid naming conflicts.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":3}}},{"hash":"df461ab38925f4e26f06528aaf3890b46b452ab1","messageTitle":"Set up folders for JUnit test with Gradle","messageBody":"Unit testing is not automated.\n\nLet\u0027s update build.gradle file and create test folders according to\npackage structure.\n\nAllows for automation of unit testing by writing JUnit tests in the\nrespective classes.\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}}]},{"date":"2023-01-25","commitResults":[{"hash":"4f7b41977a0e5825067fb380bcea857481825058","messageTitle":"Create JUnit tests","messageBody":"Unit testing required to test each method independently.\n\nLet\u0027s\n* Create JUnit tests for DateTime, Parser, Task and ToDo.\n* Create TaskListStub class to test Parser independently from TaskList.\n\nJUnit integrates well with Gradle and allows for automated unit\ntesting. Stub classes required to remove dependencies between classes.\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":149,"deletions":12}}},{"hash":"a9a5966c30bed2a47eb6ee7f13cb8c063699d884","messageTitle":"Set version of first JAR as v0.1","messageBody":"Keep track of version numbers of released versions of chatbot.\n\nLet\u0027s set archiveVersion as v0.1 in build.gradle.\n\nEasily track versions of chatbot.\n","tags":["v0.1","A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1},"java":{"insertions":6,"deletions":6}}},{"hash":"d41868ee070f2da37334454733618626f45f9182","messageTitle":"Tidy up JavaDoc comments for classes and methods","messageBody":"Some comments were not properly marked with double aesterisks.\n\nLet\u0027s\n* Ensure JavaDoc comments are properly marked.\n* Add code tag to indicate Java class names in Javadoc comments.\n\nProper documentation for classes and methods.\n","fileTypesAndContributionMap":{"java":{"insertions":83,"deletions":78}}},{"hash":"69fdb9ecfd8b8fc493e46554e224d4ca5f4adab1","messageTitle":"Align case statements with switch","messageBody":"Some were not aligned.\n\nLet\u0027s remove indentations for case within switch blocks.\n\nAdhere to Java coding standards.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"04d0470d466686a063dba8064288fb9db54e8cac","messageTitle":"Add command to find tasks using key phrase.","messageBody":"A long task list makes it difficult for user to narrow down the search\nfor specific tasks.\n\nLet\u0027s add a command to display tasks whose name contains a given key\nphrase by iterating through the tasks and looking at each of their name.\n\nAllows us to print out the tasks whose name contains the key phrase.\n","fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":3}}},{"hash":"c594dd659ba7804b05be25dcd5e8f9dd2bdaec60","messageTitle":"Add new line between import and class name","messageBody":"Consistency with standards.\n\nLet\u0027s add a new line between import and class name.\n\nFollow standards.\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}}]},{"date":"2023-01-31","commitResults":[{"hash":"6724313fc2db3ff61a9b77d2ecb2cbb29c04e1d1","messageTitle":"Attempt to run checkstyle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0}}},{"hash":"29bc32b2340ac9e96c0b7dd6002254a9dff9e206","messageTitle":"Fix coding standard violations from CheckStyle","messageBody":"There are multiple coding standard violations across the files when\nchecked using static analyser CheckStyle.\n\nFixing them would improve readability and consistency.\n\nLet\u0027s fix the violations raised by CheckStyle.\n","fileTypesAndContributionMap":{"java":{"insertions":112,"deletions":83}}},{"hash":"d3398e074f2db78eace455b21b4f2e3c964bc282","messageTitle":"Update gradle file for JavaFX","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0}}},{"hash":"d0fec24f8e764956d39ee536dabb3cc0b2398d7d","messageTitle":"Add echo gui and start command refactor","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":336,"deletions":30}}},{"hash":"cd030214515425c02c77dc434295080d94dad9cd","messageTitle":"Create GUI for chat bot","messageBody":"Previously, there was no GUI and user had to interact with the bot\nvia CLI.\n\nCreate a GUI would improve the aesthetics of the application.\n\nLet\u0027s use JavaFX to create a GUI, and for all Command classes, return\nthe String output to be processed instead of using System.out.println.\n","fileTypesAndContributionMap":{"java":{"insertions":348,"deletions":239}}},{"hash":"fbdfd1426e0b1c9b0d3d918354bbbdbbe9a4379b","messageTitle":"Restructure code for GUI, using FXML","messageBody":"Previously, code for GUI is contained within the Duke class, with\nthe attributes being customised within a single method. This is\nnot scalable when application becomes larger as the method would\nbecome too long.\n\nLet\u0027s factor out the code into new classes and keep information of the\ncontrols in FXML files instead. Then, use SceneBuilder to allow further\ncustomisation such as CSS rules.\n\nThis makes it easier to expand the scale of the application when more\nUI elements are added and abstract away the UI details from the Duke\nclass. Also, customisation is simpler.\n","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2},"fxml":{"insertions":39,"deletions":0},"java":{"insertions":194,"deletions":316}}}]},{"date":"2023-02-02","commitResults":[{"hash":"c5ee083c76b7d9e7a8bc4b5ab3195bb3f8c6f37c","messageTitle":"Reduce size of GUI window","messageBody":"Previous GUI window is too large for laptop screen resolutions, making\nthe text field and button to be out of screen and cannot be clicked on.\n\nLet\u0027s reduce the size of the GUI and arrange the components to make it\nfit in smaller laptop screens.\n","fileTypesAndContributionMap":{"fxml":{"insertions":5,"deletions":5},"java":{"insertions":12,"deletions":13}}}]},{"date":"2023-02-05","commitResults":[{"hash":"27d2f238ef6d23b28920dc8af5d71bafb696481f","messageTitle":"Add assertions for sanity check","messageBody":"There are parts where execution should not reach and where it should\nonly reach once.\n\nLet\u0027s add assertion statements to check the control flow.\n\nProvides a sanity check to ensure to detect possible control flow\nerrors.\n","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":26}}},{"hash":"3375f0b7a410722e682f1d6a8ff63cce35ff1614","messageTitle":"Try update build.gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":10,"deletions":1},"java":{"insertions":2,"deletions":0}}},{"hash":"0f058855d7b0a3638f262179ae58e5802bdfb344","messageTitle":"Modify build.gradle to enable Assertions","messageBody":"Previously, assertions were not enabled.\n\nLet\u0027s set enableAsssertions to be true.\n\nAllows for assertions to run when executing commands.\n","fileTypesAndContributionMap":{"gradle":{"insertions":4,"deletions":0},"java":{"insertions":0,"deletions":3}}}]},{"date":"2023-02-06","commitResults":[{"hash":"20371e9c4dafa700af55946432a4b3d406686181","messageTitle":"Updated code tags","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":57}}},{"hash":"e18e1c1da6c017a2b7950b277933e2fd48adf5cb","messageTitle":"Change names of files from Duke to Boo","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":117,"deletions":117}}},{"hash":"ef2cb75f4e48a1547c666899e3500556a39dcd61","messageTitle":"Remove unused methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":116}}},{"hash":"221594a40c9a9b1071ddb59c1c4229e91a90edaa","messageTitle":"Refactor the parseRawCommand method in Parser","messageBody":"Previously, all parsing and checking of validity was done in the\nparseRawCommand method. This means that the method is very long and\ncontains too much logic.\n\nLet\u0027s extract out the logic for validating each type of command into\nits own method, and call the corresponding validation method depending\non which command it is.\n\nThis simplifies the parseRawCommand method, and makes code neater as\nit is easier to find the logic that validates each type of command,\nand the method will not grow much larger whenever we add a new command\nto the bot.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":303,"deletions":217}}},{"hash":"8fe68a2bbc809dd6d56202ffc54983c0f776b49e","messageTitle":"Simplify code of DataTime by removing complex conditionals","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":21}}},{"hash":"6d71284d9cb3f2cb9fed71ccdd59869e219e8df5","messageTitle":"Refine code quality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":13}}},{"hash":"764c9709be67d2042fcfbc86bc47430bc537440b","messageTitle":"Rename DukeException to BooException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":50}}},{"hash":"59e21cdf53ba25ee4e36653a435bdb1959b903bf","messageTitle":"Remove duke folder","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":355}}},{"hash":"aa5e094743140bd4355e2848c2829401312e118b","messageTitle":"Squash bug regarding assertion","messageBody":"An assertion was previously inserted such that it caused the program\nto crash. Predicted logic was incorrect\n\nLet\u0027s remove the assertion.\n\nThe assertion was placed in a block where execution should flow\nmultiple times instead of just once. Hence, it is redundant.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":4}}},{"hash":"6eb6292e14139f5f5119a06a523db64dbaadda0a","messageTitle":"Fix checkstyle violations","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}},{"hash":"1d500bd5dc2a4a5acfdcf2867f93b324b79a37ea","messageTitle":"Fix style error for ParserTest method name","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"8776503548f348975919ae5c69cb56e61381a047","messageTitle":"Create ReminderCommand handling in Parser","messageBody":"Parser does not currently handle reminder commands.\n\nLet\u0027s create a method to validate reminder commands, and parse it\naccordingly.\n\nAllows us to cater to the reminder commands when user types in raw\ninput.\n","fileTypesAndContributionMap":{"java":{"insertions":97,"deletions":15}}},{"hash":"3a4e15628d867cb3181948d1580ea911e5a000ce","messageTitle":"Add reminder feature","messageBody":"Currently, application does not support providing reminders to users.\n\nLet\u0027s add a reminder feature by creating a ReminderCommand which\ndisplays deadlines and events within a specified duration from the\ncurrent date and time.\n\nThis allows users to easily view upcoming deadlines and events, so\nthey can prioritise tasks accordingly.\n","fileTypesAndContributionMap":{"java":{"insertions":191,"deletions":46}}},{"hash":"7c8f7777907e638a97234aed00df36cf493c1b9a","messageTitle":"Update build.gradle for change of app name","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2},"java":{"insertions":1,"deletions":1}}},{"hash":"1f550af2497e7759b0d4bc7911a8b45c85a41001","messageTitle":"Fix checkstyle errors in classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":12}}}]}]},"authorFileTypeContributionMap":{"eugenetangkj":{"java":2692,"md":0,"fxml":39,"sh":0,"bat":0,"gradle":36,"txt":18}},"authorContributionVariance":{"eugenetangkj":562942.5},"authorDisplayNameMap":{"eugenetangkj":"CS2103T-T14-3 EUGE..GJIE"}}
