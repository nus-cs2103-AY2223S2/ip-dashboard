[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"checkstyle {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"evanpy"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"evanpy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"evanpy":23,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"# User Guide ðŸ“–","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"## Features ðŸ“„","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"### Add task: todo","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"Adds a task without any deadline.","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"### Add deadline task: deadline","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"Adds a task with deadline.","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"### Add event task: event","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"Adds an event occuring within a specific timeline.","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"### Check task: mark","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"Checks off task as completed.","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"### Uncheck task: unmark","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"Unchecks task as incomplete.","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"### Delete task: delete","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"Deletes task.","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"### View all tasks: list","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"Lists all completed and incompleted tasks.","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"### Sort task list: sort","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"Sorts the task list by task name.","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"## Keyword Usage ðŸ”‘","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"### todo","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"Adds a task into task list and outputs success message.","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"Example of usage: ","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"`todo read a book`","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"evanpy"},"content":"Outputs success message.","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"evanpy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"evanpy"},"content":"  Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"evanpy"},"content":"    [T][ ] read a book","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"evanpy"},"content":"  Now you have 1 task in the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"evanpy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"evanpy"},"content":"### deadline","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"evanpy"},"content":"Adds a task with deadline into task list and outputs success message.","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"evanpy"},"content":"Example of usage: ","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"evanpy"},"content":"`deadline return book /by 2050-01-01`","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"evanpy"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"evanpy"},"content":"Outputs success message.","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"evanpy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"evanpy"},"content":"  Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"evanpy"},"content":"    [D][ ] return book (by: Jan 1 2050)","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"evanpy"},"content":"  Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"evanpy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"evanpy"},"content":"### event","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"evanpy"},"content":"Adds an event task occurring over a period into task list and outputs success message.","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"evanpy"},"content":"Example of usage: ","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"evanpy"},"content":"`event reading event /from 2050-01-01 /to 2050-01-02`","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"evanpy"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"evanpy"},"content":"Outputs success message.","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"evanpy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"evanpy"},"content":"  Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"evanpy"},"content":"    [E][ ] reading event (from: Jan 1 2050 to: Jan 2 2050)","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"evanpy"},"content":"  Now you have 3 tasks in the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"evanpy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"evanpy"},"content":"### mark","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"evanpy"},"content":"Marks a task from task list as complete and outputs success message.","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"evanpy"},"content":"Example of usage: ","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"evanpy"},"content":"`mark 1`","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"evanpy"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"evanpy"},"content":"Outputs success message.","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"evanpy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"evanpy"},"content":"  Got it. I\u0027ve marked this task:","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"evanpy"},"content":"    [T][X] read a book","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"evanpy"},"content":"  Now you have 3 task in the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"evanpy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"evanpy"},"content":"### unmark","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"evanpy"},"content":"Unmarks a task from task list as incomplete and outputs success message.","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"evanpy"},"content":"Example of usage: ","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"evanpy"},"content":"`unmark 1`","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"evanpy"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":120,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":121,"author":{"gitId":"evanpy"},"content":"Outputs success message.","lastModifiedDate":"2023-02-16"},{"lineNumber":122,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":123,"author":{"gitId":"evanpy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"evanpy"},"content":"  Got it. I\u0027ve unmarked this task:","lastModifiedDate":"2023-02-16"},{"lineNumber":125,"author":{"gitId":"evanpy"},"content":"    [T][ ] read a book","lastModifiedDate":"2023-02-16"},{"lineNumber":126,"author":{"gitId":"evanpy"},"content":"  Now you have 3 task in the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":127,"author":{"gitId":"evanpy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":128,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"evanpy"},"content":"### delete","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":131,"author":{"gitId":"evanpy"},"content":"Deletes a task from task list and outputs success message.","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"evanpy"},"content":"Example of usage: ","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":135,"author":{"gitId":"evanpy"},"content":"`delete 1`","lastModifiedDate":"2023-02-16"},{"lineNumber":136,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":137,"author":{"gitId":"evanpy"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":138,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":139,"author":{"gitId":"evanpy"},"content":"Outputs success message.","lastModifiedDate":"2023-02-16"},{"lineNumber":140,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":141,"author":{"gitId":"evanpy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":142,"author":{"gitId":"evanpy"},"content":"  Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-16"},{"lineNumber":143,"author":{"gitId":"evanpy"},"content":"    [T][ ] read a book","lastModifiedDate":"2023-02-16"},{"lineNumber":144,"author":{"gitId":"evanpy"},"content":"  Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":145,"author":{"gitId":"evanpy"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":146,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":147,"author":{"gitId":"evanpy"},"content":"### list","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"evanpy"},"content":"Lists all task index from task list as complete and outputs success message.","lastModifiedDate":"2023-02-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":153,"author":{"gitId":"evanpy"},"content":"`list`","lastModifiedDate":"2023-02-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":157,"author":{"gitId":"evanpy"},"content":"Outputs the list of tasks.","lastModifiedDate":"2023-02-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":160,"author":{"gitId":"evanpy"},"content":"  Here are the tasks in your list:","lastModifiedDate":"2023-02-16"},{"lineNumber":161,"author":{"gitId":"evanpy"},"content":"  1.[T][ ] borrow book","lastModifiedDate":"2023-02-16"},{"lineNumber":162,"author":{"gitId":"evanpy"},"content":"  2.[D][ ] return book (by: Jan 1 2050)","lastModifiedDate":"2023-02-16"},{"lineNumber":163,"author":{"gitId":"evanpy"},"content":"  3.[E][ ] book event (from: Jan 1 2050 to: Jan 2 2050)","lastModifiedDate":"2023-02-16"},{"lineNumber":164,"author":{"gitId":"evanpy"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":165,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":166,"author":{"gitId":"evanpy"},"content":"### sort","lastModifiedDate":"2023-02-17"},{"lineNumber":167,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":168,"author":{"gitId":"evanpy"},"content":"Sorts task list by task name and outputs success message.","lastModifiedDate":"2023-02-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-02-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":172,"author":{"gitId":"evanpy"},"content":"`sort`","lastModifiedDate":"2023-02-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":176,"author":{"gitId":"evanpy"},"content":"Outputs the list of tasks.","lastModifiedDate":"2023-02-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":179,"author":{"gitId":"evanpy"},"content":"The list has been sorted.","lastModifiedDate":"2023-02-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"evanpy":152,"-":28}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":" * Creates a new Duke bot that tracks tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":" *","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":" * @author Evan Lee","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":" * @version CS2103 AY22/23 Semester 2","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"public class Duke {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"    private String filePath;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"    /** A public constructor to initialize Duke instance. */","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"    public Duke() {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"        this.filePath \u003d \"./src/main/data/taskData.txt\";","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"        this.storage.loadData(this.tasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"     * Gets the response in regards to user input.","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"     * @param input User input.","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"     * @return Response to user input.","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"        String[] descriptions \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"        String taskType \u003d descriptions[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"        if (taskType.equals(\"bye\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"            this.storage.saveData(this.filePath, this.tasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"            System.exit(0);","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"        return Parser.parseInput(this.tasks, taskType, descriptions);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":38}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":" * Custom exception for duke bot.","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":" *","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":" * @author Evan Lee","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":" * @version CS2103 AY22/23 Semester 2","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize DukeException instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"     * @param message Error message.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"    DukeException(String message) {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"        super(message);","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":18}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"public class Launcher {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"evanpy":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"import duke.controller.MainWindow;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"     * Sets up and begins GUI.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"     * @param stage The main stage of GUI.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"            stage.show();","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"evanpy":36}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":" * Creates a new parser.","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":" *","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":" * @author Evan Lee","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":" * @version CS2103 AY22/23 Semester 2","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"public class Parser {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"     * Creates task and stores it in Task arraylist.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"     * @param taskType Type of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"     * @param descriptions The descriptions of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"     * @return Message containing task result.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    protected static String parseInput(TaskList tasks, String taskType, String[] descriptions) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"            switch (taskType) {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"            case \"list\":","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"                output \u003d tasks.listTasks();","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"                int markTaskIndex \u003d Integer.parseInt(descriptions[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"                if (markTaskIndex \u003c 1 || markTaskIndex \u003e tasks.getTaskList().size()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"                    throw new DukeException(\"There is no item numbered \" + markTaskIndex + \".\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"                output \u003d tasks.markTask(tasks.getTask(markTaskIndex - 1));","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"                int unmarkTaskIndex \u003d Integer.parseInt(descriptions[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"                if (unmarkTaskIndex \u003c 1 || unmarkTaskIndex \u003e tasks.getTaskList().size()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"                    throw new DukeException(\"There is no item numbered \" + unmarkTaskIndex + \".\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"                output \u003d tasks.unmarkTask(tasks.getTask(unmarkTaskIndex - 1));","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"evanpy"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"evanpy"},"content":"                String todoTaskName \u003d descriptions[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"evanpy"},"content":"                if (descriptions.length !\u003d 2 || todoTaskName.equals(\"\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"evanpy"},"content":"                    throw new DukeException(\"The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"evanpy"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"evanpy"},"content":"                output \u003d tasks.addTask(new ToDo(todoTaskName));","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"evanpy"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"evanpy"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"evanpy"},"content":"                String[] deadlineDescription \u003d descriptions[1].split(\"/by \");","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"evanpy"},"content":"                String deadlineTaskName \u003d deadlineDescription[0];","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"evanpy"},"content":"                if (deadlineDescription.length !\u003d 2 || deadlineTaskName.equals(\"\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"evanpy"},"content":"                    throw new DukeException(\"The description of a deadline cannot be empty.\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"evanpy"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"evanpy"},"content":"                output \u003d tasks.addTask(new Deadline(deadlineTaskName, deadlineDescription[1]));","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"evanpy"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"evanpy"},"content":"            case \"event\":","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"evanpy"},"content":"                String[] eventDescription \u003d descriptions[1].split(\"/from | /to \");","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"evanpy"},"content":"                String eventTaskName \u003d eventDescription[0];","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"evanpy"},"content":"                if (eventDescription.length !\u003d 3 || eventTaskName.equals(\"\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"evanpy"},"content":"                    throw new DukeException(\"The description of an event cannot be empty.\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"evanpy"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"evanpy"},"content":"                output \u003d tasks.addTask(new Event(eventTaskName, eventDescription[1], eventDescription[2]));","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"evanpy"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"evanpy"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"evanpy"},"content":"                int deleteTaskIndex \u003d Integer.parseInt(descriptions[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"evanpy"},"content":"                if (deleteTaskIndex \u003c 1 || deleteTaskIndex \u003e tasks.getTaskList().size()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"evanpy"},"content":"                    throw new DukeException(\"There is no item numbered \" + deleteTaskIndex + \".\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"evanpy"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"evanpy"},"content":"                output \u003d tasks.removeTask(deleteTaskIndex - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"evanpy"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"evanpy"},"content":"            case \"find\":","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"evanpy"},"content":"                TaskList filteredTasks \u003d new TaskList(tasks.filteredTaskList(descriptions[1]));","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"evanpy"},"content":"                output \u003d filteredTasks.listTasks();","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"evanpy"},"content":"                break;","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"evanpy"},"content":"            case \"sort\":","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"evanpy"},"content":"                output \u003d tasks.sort();","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"evanpy"},"content":"                break;","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"evanpy"},"content":"            default:","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"evanpy"},"content":"                output \u003d Ui.unknownInputMsg();","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"evanpy"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"evanpy"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"evanpy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"evanpy"},"content":"            output \u003d Ui.errorMsg(e.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"evanpy"},"content":"        return output;","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"evanpy":104}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import java.io.File;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":" * Creates a new storage.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":" *","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":" * @author Evan Lee","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":" * @version CS2103 AY22/23 Semester 2","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"public class Storage {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"    private File file;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"    private String path;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize Storage instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"     * @param path The path of the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"    Storage(String path) {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"        this.file \u003d new File(path);","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"     * Opens file containing task data and loads them into Task arraylist.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"    protected void loadData(TaskList tasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"            File f \u003d new File(path);","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"                throw new DukeException(\"File does not exists!\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"                String[] descriptions \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"evanpy"},"content":"                Parser.parseInput(tasks, descriptions[0], descriptions);","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"evanpy"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"evanpy"},"content":"            tasks.finishInitialization();","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"evanpy"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"evanpy"},"content":"            tasks.finishInitialization();","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"evanpy"},"content":"            Ui.errorMsg(error.getMessage());","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"evanpy"},"content":"        } catch (FileNotFoundException error) {","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"evanpy"},"content":"            tasks.finishInitialization();","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"evanpy"},"content":"            Ui.errorMsg(error.getMessage());","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"evanpy"},"content":"     * Saves task description into file.","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"evanpy"},"content":"     * @param path The path of the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"evanpy"},"content":"     * @param tasks List of task objects.","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"evanpy"},"content":"    protected void saveData(String path, TaskList tasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"evanpy"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"evanpy"},"content":"            FileWriter fileWriter \u003d new FileWriter(path);","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"evanpy"},"content":"            for (Task task : tasks.getTaskList()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"evanpy"},"content":"                fileWriter.write(task.getDescription());","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"evanpy"},"content":"                fileWriter.write(System.lineSeparator());","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"evanpy"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"evanpy"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"evanpy"},"content":"        } catch (IOException error) {","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"evanpy"},"content":"            Ui.errorMsg(\"Something went wrong: \" + error.getMessage());","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":82}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import static java.util.stream.Collectors.toCollection;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":" * Creates a new task list.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":" *","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":" * @author Evan Lee","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":" * @version CS2103 AY22/23 Semester 2","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"public class TaskList {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"    private boolean isInitializingData \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"    /** A public constructor to initialize TaskList instance. */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    TaskList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize TaskList instance.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"     * */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"    /** Adds new task to task list and outputs success message. */","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"    protected void finishInitialization() {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"        assert this.isInitializingData : \"Duke has already been initialized.\";","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"        this.isInitializingData \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"     * Gets specific task.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"     * @param taskIndex The index of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"    protected Task getTask(int taskIndex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"        return this.tasks.get(taskIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"evanpy"},"content":"     * Gets list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"evanpy"},"content":"     * @return Task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"evanpy"},"content":"    protected ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"evanpy"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"evanpy"},"content":"     * Adds new task to task list and outputs success message.","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"evanpy"},"content":"     * @param task Task to be added to task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"evanpy"},"content":"     * @return Success message.","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"evanpy"},"content":"    protected String addTask(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"evanpy"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"evanpy"},"content":"        if (this.isInitializingData) {","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"evanpy"},"content":"            return \"initializing\";","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"evanpy"},"content":"        assert this.tasks.size() !\u003d 0 : \"Task list is empty.\";","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"evanpy"},"content":"        return Ui.addTaskMsg(task, this.tasks.size());","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"evanpy"},"content":"     * Removes task from task list and outputs success message.","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"evanpy"},"content":"     * @param taskIndex Index of task to be removed.","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"evanpy"},"content":"     * @return Success message.","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"evanpy"},"content":"    protected String removeTask(int taskIndex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"evanpy"},"content":"        Task task \u003d this.tasks.remove(taskIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"evanpy"},"content":"        return Ui.removeTaskMsg(task, this.tasks.size());","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"evanpy"},"content":"     * Outputs all the tasks stored in task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"evanpy"},"content":"     * @return List of tasks message.","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"evanpy"},"content":"    protected String listTasks() {","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"evanpy"},"content":"        String listOfTasks \u003d \"\";","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"evanpy"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"evanpy"},"content":"            return \"No tasks found!\";","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"evanpy"},"content":"        for (int idx \u003d 0; idx \u003c tasks.size(); idx++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"evanpy"},"content":"            Task task \u003d this.tasks.get(idx);","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"evanpy"},"content":"            listOfTasks \u003d listOfTasks + \"  \" + (idx + 1) + \".\" + task + \"\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"evanpy"},"content":"        return Ui.listTasksMsg(listOfTasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"evanpy"},"content":"     * Marks task as completed and outputs success message.","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"evanpy"},"content":"     * @param task Task to be marked.","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"evanpy"},"content":"     * @return Success message.","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"evanpy"},"content":"    protected String markTask(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"evanpy"},"content":"        task.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"evanpy"},"content":"        return Ui.markTaskMsg(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"evanpy"},"content":"     * Marks task as uncompleted and outputs success message.","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"evanpy"},"content":"     * @param task Task to be unmarked.","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"evanpy"},"content":"     * @return Success message.","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"evanpy"},"content":"    protected String unmarkTask(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"evanpy"},"content":"        task.unmark();","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"evanpy"},"content":"        return Ui.unmarkTaskMsg(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":131,"author":{"gitId":"evanpy"},"content":"     * Filters task list by a given query.","lastModifiedDate":"2023-02-07"},{"lineNumber":132,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":133,"author":{"gitId":"evanpy"},"content":"     * @param query Query that will be used to filter task list.","lastModifiedDate":"2023-02-07"},{"lineNumber":134,"author":{"gitId":"evanpy"},"content":"     * @return Filtered task list.","lastModifiedDate":"2023-02-07"},{"lineNumber":135,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":136,"author":{"gitId":"evanpy"},"content":"    protected ArrayList\u003cTask\u003e filteredTaskList(String query) {","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"evanpy"},"content":"        return tasks.stream()","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"evanpy"},"content":"                .filter(task -\u003e task.toString().contains(query))","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"evanpy"},"content":"                .collect(toCollection(ArrayList::new));","lastModifiedDate":"2023-01-28"},{"lineNumber":140,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":141,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"evanpy"},"content":"     * Sorts task list by task name.","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"evanpy"},"content":"     * @return Success message.","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"evanpy"},"content":"    protected String sort() {","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"evanpy"},"content":"        Collections.sort(tasks, (task1, task2) -\u003e task1.getTaskName().compareTo(task2.getTaskName()));","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":150,"author":{"gitId":"evanpy"},"content":"        return Ui.sortedMessage();","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":152}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":" * Creates a new UI.","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":" *","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":" * @author Evan Lee","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":" * @version CS2103 AY22/23 Semester 2","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"public class Ui {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"     * Outputs welcome message.","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"     * @return Welcome message.","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"    public static String welcomeMsg() {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"        return \"Hello! I\u0027m Duke\\n  Can you show me da wae?\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"     * Outputs success message when task has been added to task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"     * @param task Message regarding the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"     * @param taskListSize Size of task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"     * @return Success and add task detail message.","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"    public static String addTaskMsg(Task task, int taskListSize) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"        return \"Got it. I\u0027ve added this task:\\n    \"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"                + task + \"\\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"                + \"Now you have \" + taskListSize + (taskListSize \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"     * Outputs success message when task has been removed from task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"     * @param task Message regarding the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"     * @param taskListSize Size of task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"     * @return Success and remove task detail message.","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"    public static String removeTaskMsg(Task task, int taskListSize) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"        return \"Noted. I\u0027ve removed this task:\\n    \"","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"                + task + \"\\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"                + \"Now you have \" + taskListSize + (taskListSize \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"evanpy"},"content":"     * Outputs all the tasks stored in task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"evanpy"},"content":"     * @param listOfTasks String of the list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"evanpy"},"content":"     * @return List of tasks message.","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"evanpy"},"content":"    public static String listTasksMsg(String listOfTasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"evanpy"},"content":"        String listMessage \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"evanpy"},"content":"        return listMessage + listOfTasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"evanpy"},"content":"     * Outputs success message when task has been marked.","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"evanpy"},"content":"     * @param task Message regarding the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"evanpy"},"content":"     * @return Success message.","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"evanpy"},"content":"    public static String markTaskMsg(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"evanpy"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n    \" + task + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"evanpy"},"content":"     * Outputs success message when task has been unmarked.","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"evanpy"},"content":"     * @param task Message regarding the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"evanpy"},"content":"     * @return Success message.","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"evanpy"},"content":"    public static String unmarkTaskMsg(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"evanpy"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n    \" + task + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"evanpy"},"content":"     * Outputs success message when task list has been sorted.","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"evanpy"},"content":"     * @return Success message.","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"evanpy"},"content":"    public static String sortedMessage() {","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"evanpy"},"content":"        return \"The list has been sorted.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"evanpy"},"content":"     * Handles unknown input.","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"evanpy"},"content":"     * @return Unknown input message.","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"evanpy"},"content":"    public static String unknownInputMsg() {","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"evanpy"},"content":"        return \"Dat is not da wae\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"evanpy"},"content":"     * Outputs error message.","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"evanpy"},"content":"     * @param message Error message.","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"evanpy"},"content":"     * @return Error message.","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"evanpy"},"content":"    public static String errorMsg(String message) {","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"evanpy"},"content":"        return message;","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"evanpy":107}},{"path":"src/main/java/duke/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke.controller;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"     * A private constructor to initialize DialogBox instance.","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"     * @param text Message to be displayed.","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"     * @param img Image to be displayed.","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"        dialog.setTranslateY(10);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"evanpy"},"content":"        displayPicture.setFitHeight(100);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"evanpy"},"content":"        displayPicture.setClip(new Circle(50, 50, 45));","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"evanpy"},"content":"    /** Flips the dialog box such that the ImageView is on the left and text on the right. */","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"evanpy"},"content":"    private void flip() {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"evanpy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"evanpy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"evanpy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"evanpy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"evanpy"},"content":"     * Creates a dialog box for user.","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"evanpy"},"content":"     * @param text Message to be displayed.","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"evanpy"},"content":"     * @param img Image to be displayed.","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"evanpy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"evanpy"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"evanpy"},"content":"     * Creates a dialog box for duke bot.","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"evanpy"},"content":"     * @param text Message to be displayed.","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"evanpy"},"content":"     * @param img Image to be displayed.","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"evanpy"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"evanpy"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"evanpy"},"content":"        db.flip();","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"evanpy"},"content":"        return db;","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"evanpy":81}},{"path":"src/main/java/duke/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke.controller;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"    @FXML","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"    private Duke duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/daUser.png\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/daDuke.png\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"    /** Initializes the scroll pane and dialog container. */","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"                DialogBox.getDukeDialog(Ui.welcomeMsg(), dukeImage)","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"        );","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"        BackgroundFill backgroundFill \u003d new BackgroundFill(Color.SNOW,","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"                null, null);","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"        dialogContainer.setBackground(new Background(backgroundFill));","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"        duke \u003d d;","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"evanpy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"evanpy"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"evanpy"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"evanpy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"evanpy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"evanpy"},"content":"        String dukeResponse \u003d duke.getResponse(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"evanpy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"evanpy"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"evanpy"},"content":"                DialogBox.getDukeDialog(dukeResponse, dukeImage)","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"evanpy"},"content":"        );","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"evanpy"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"evanpy":64}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":" * Creates a new deadline task.","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":" *","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":" * @author Evan Lee","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":" * @version CS2103 AY22/23 Semester 2","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize Deadline instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"     * @param task Task name.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"     * @param deadline Task deadline.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"    public Deadline(String task, String deadline) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"        super(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"     * Returns the description of Deadline.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"     * @return Deadline description.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"        return \"deadline \" + super.getTaskName() + \"/by \" + this.deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"        return \"[D]\"","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"                + super.toString()","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"                + \"(by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":47}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":" * Creates a new event task.","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":" *","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":" * @author Evan Lee","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":" * @version CS2103 AY22/23 Semester 2","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"    private LocalDate startTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"    private LocalDate endTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize Event instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"     * @param task Task name.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"     * @param startTime Task start time.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"     * @param endTime Task end time.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"    public Event(String task, String startTime, String endTime) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"        super(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"        this.startTime \u003d LocalDate.parse(startTime);;","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"        this.endTime \u003d LocalDate.parse(endTime);;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"     * Returns the description of Event.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"     * @return Event description.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"        return \"event \" + super.getTaskName() + \"/from \" + this.startTime + \" /to \" + this.endTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"            + \"(from: \" + this.startTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"evanpy"},"content":"            + \" to: \" + this.endTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":" * Creates a new task.","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":" *","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":" * @author Evan Lee","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":" * @version CS2103 AY22/23 Semester 2","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"public class Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"    private String task;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"    private boolean isMarked \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize Task instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"     * @param task Task name.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"    Task(String task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    /** Marks the task as completed. */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"    public void mark() {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"    /** Marks the task as uncompleted. */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"     * Checks mark status and returns appropriate icon.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"     * @return Icon.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"        return (isMarked ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"     * Returns the name of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"     * @return Task name.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"        return task;","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"evanpy"},"content":"     * Returns the description of Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"evanpy"},"content":"     * @return Task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"evanpy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"evanpy"},"content":"        return getTaskName();","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"evanpy"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"evanpy"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"evanpy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"evanpy"},"content":"        return this.getStatusIcon() + \" \" + this.task.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":68}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":" * Creates a new ToDo task.","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":" *","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":" * @author Evan Lee","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":" * @version CS2103 AY22/23 Semester 2","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize Todo instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"     * @param task Task name.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"    public ToDo(String task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"        super(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"     * Returns the description of Todo.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"     * @return Todo description.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"        return \"todo \" + super.getTaskName();","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":39}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"evanpy":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controller.MainWindow\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"evanpy":19}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"    /** Test the creation of deadline task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"    public void addDeadlineTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"        Deadline deadline \u003d new Deadline(\"Finish Single\u0027s Inferno s2 \", \"2019-10-15\");","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[D][ ] Finish Single\u0027s Inferno s2 (by: Oct 15 2019)\", deadline.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"    /** Test the marking of deadline task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"    public void markTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"        Deadline deadline \u003d new Deadline(\"Finish Single\u0027s Inferno s2 \", \"2019-10-15\");","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"        deadline.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[D][X] Finish Single\u0027s Inferno s2 (by: Oct 15 2019)\", deadline.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"    /** Test the unmarking of deadline task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"    public void unmarkTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"        Deadline deadline \u003d new Deadline(\"Finish Single\u0027s Inferno s2 \", \"2019-10-15\");","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"        deadline.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"        deadline.unmark();","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[D][ ] Finish Single\u0027s Inferno s2 (by: Oct 15 2019)\", deadline.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":34}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"public class EventTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"    /** Test the creation of event task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"    public void addEventTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"        Event event \u003d new Event(\"HDL eating competition \", \"2019-10-16\", \"2019-10-17\");","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[E][ ] HDL eating competition (from: Oct 16 2019 to: Oct 17 2019)\", event.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"    /** Test the marking of event task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"    public void markTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"        Event event \u003d new Event(\"HDL eating competition \", \"2019-10-16\", \"2019-10-17\");","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"        event.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[E][X] HDL eating competition (from: Oct 16 2019 to: Oct 17 2019)\", event.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"    /** Test the unmarking of event task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"    public void unmarkTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"        Event event \u003d new Event(\"HDL eating competition \", \"2019-10-16\", \"2019-10-17\");","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"        event.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"        event.unmark();","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[E][ ] HDL eating competition (from: Oct 16 2019 to: Oct 17 2019)\", event.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":34}},{"path":"src/test/java/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"    /** Test the creation of to do task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"    public void addToDoTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"        ToDo todo \u003d new ToDo(\"Eat HDL!!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[T][ ] Eat HDL!!\", todo.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"    /** Test the marking of to do task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"    public void markTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"        ToDo todo \u003d new ToDo(\"Eat HDL!!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"        todo.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[T][X] Eat HDL!!\", todo.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"    /** Test the unmarking of to do task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"    public void unmarkTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"        ToDo todo \u003d new ToDo(\"Eat HDL!!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"        todo.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"        todo.unmark();","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[T][ ] Eat HDL!!\", todo.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"event project meeting /from 2019-10-16 /to 2019-10-17","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"blah","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"delete 3","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"evanpy":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"evanpy":2,"-":19}}]
