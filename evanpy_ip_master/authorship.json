[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"checkstyle {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"evanpy":6,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":" * Creates a new Duke bot that tracks tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":" *","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":" * @author Evan Lee","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":" * @version CS2103 AY22/23 Semester 2","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"public class Duke {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"    private String filePath;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize Duke instance.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"     * @param filePath Path of file.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"    /** Runs Duke bot. */","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"    public void run() {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"        this.storage.loadData(this.tasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"        Ui.welcomeMsg();","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"        while (true) {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"            String[] descriptions \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"            String taskType \u003d descriptions[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"            if (taskType.equals(\"bye\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"                this.storage.saveData(this.filePath, this.tasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"                Ui.exitMsg();","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"                return;","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"            Parser.parseInput(this.tasks, taskType, descriptions);","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"evanpy"},"content":"        new Duke(\"../data/taskData.txt\").run();","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":50}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize DukeException instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"     * @param message Error message.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"    DukeException(String message) {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"        super(message);","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"public class Parser {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"\t/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"\t * Creates task and stores it in Task arraylist.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"\t *","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"\t * @param tasks List of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"\t * @param taskType Type of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"\t * @param descriptions The descriptions of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"\t */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"\tprotected static void parseInput(TaskList tasks, String taskType, String[] descriptions) {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"\t\tswitch (taskType) {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"\t\tcase \"list\":","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"\t\t\ttasks.listTasks();","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"\t\t\tbreak;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"\t\tcase \"mark\":","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"\t\t\ttasks.markTask(tasks.getTask(Integer.parseInt(descriptions[1]) - 1));","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"\t\t\tbreak;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"\t\tcase \"unmark\":","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"\t\t\ttasks.unmarkTask(tasks.getTask(Integer.parseInt(descriptions[1]) - 1));","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"\t\t\tbreak;","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"\t\tcase \"todo\":","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"\t\t\ttry {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"\t\t\t\tif (descriptions.length !\u003d 2) {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"\t\t\t\t\tthrow new DukeException(\"OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"\t\t\t\t}","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"\t\t\t\ttasks.addTask(new ToDo(descriptions[1]));","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"\t\t\t} catch (DukeException error) {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"\t\t\t\tUi.errorMsg(error.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"\t\t\t}","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"\t\t\tbreak;","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"\t\tcase \"deadline\":","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"\t\t\ttry {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"\t\t\t\tString[] deadlineDescription \u003d descriptions[1].split(\"/by \");","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"\t\t\t\tif (deadlineDescription.length !\u003d 2) {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"\t\t\t\t\tthrow new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"\t\t\t\t}","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"                tasks.addTask(new Deadline(deadlineDescription[0], deadlineDescription[1]));","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"            } catch (DukeException error) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"                Ui.errorMsg(error.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"evanpy"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"evanpy"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"evanpy"},"content":"        case \"event\":","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"evanpy"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"evanpy"},"content":"                String[] eventDescription \u003d descriptions[1].split(\"/from | /to \");","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"evanpy"},"content":"                if (eventDescription.length !\u003d 3) {","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"evanpy"},"content":"                    throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"evanpy"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"evanpy"},"content":"\t\t\t\ttasks.addTask(new Event(eventDescription[0], eventDescription[1], eventDescription[2]));","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"evanpy"},"content":"\t\t\t} catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"evanpy"},"content":"\t\t\t\tUi.errorMsg(e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"evanpy"},"content":"\t\t\t}","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"evanpy"},"content":"\t\t\tbreak;","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"evanpy"},"content":"\t\tcase \"delete\":","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"evanpy"},"content":"\t\t\ttasks.removeTask(Integer.parseInt(descriptions[1]) - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"evanpy"},"content":"\t\t\tbreak;","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"evanpy"},"content":"        case \"find\":","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"evanpy"},"content":"\t\t\tTaskList filteredTasks \u003d new TaskList(tasks.filteredTaskList(descriptions[1]));","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"evanpy"},"content":"\t\t\tfilteredTasks.listTasks();","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"evanpy"},"content":"\t\t\tbreak;","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"evanpy"},"content":"\t\tdefault:","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"evanpy"},"content":"\t\t\tUi.unknownInputMsg();","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"evanpy"},"content":"\t\t\tbreak;","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"evanpy"},"content":"\t\t}","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"evanpy"},"content":"\t}","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":75}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"import java.io.File;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"public class Storage {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"    File file;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize Storage instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"     * @param path The path of the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"    Storage(String path) {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"        this.file \u003d new File(path);","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"     * Opens file containing task data and loads them into Task arraylist.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"    protected void loadData(TaskList tasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"                throw new DukeException(\"File does not exists!\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"            ","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"                String[] descriptions \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"                Parser.parseInput(tasks, descriptions[0], descriptions);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"            tasks.finishInitialization();","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"            tasks.finishInitialization();","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"            // Ui.errorMsg(error.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"evanpy"},"content":"        } catch (FileNotFoundException error) {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"evanpy"},"content":"            tasks.finishInitialization();","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"evanpy"},"content":"            // Ui.errorMsg(error.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"evanpy"},"content":"     * Saves task description into file. ","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"evanpy"},"content":"     * @param path The path of the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"evanpy"},"content":"     * @param tasks List of task objects.","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"evanpy"},"content":"    protected void saveData(String path, TaskList tasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"evanpy"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"evanpy"},"content":"            FileWriter fileWriter \u003d new FileWriter(path);","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"evanpy"},"content":"            for (Task task : tasks.getTaskList()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"evanpy"},"content":"                fileWriter.write(task.getDescription());","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"evanpy"},"content":"                fileWriter.write(System.lineSeparator());","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"evanpy"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"evanpy"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"evanpy"},"content":"        } catch (IOException error) {","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"evanpy"},"content":"            // Ui.errorMsg(\"Something went wrong: \" + error.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":75}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import static java.util.stream.Collectors.toCollection;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"public class TaskList {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"    private boolean isInitializingData \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"    /** A public constructor to initialize TaskList instance. */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"    TaskList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize TaskList instance.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"     * */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"    /** Adds new task to task list and outputs success message. */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"    protected void finishInitialization() {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"        this.isInitializingData \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"     * Gets specific task.","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"     * @param taskIndex The index of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"    protected Task getTask(int taskIndex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"        return this.tasks.get(taskIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"     * Gets list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"     * @return Task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"    protected ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"evanpy"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"evanpy"},"content":"     * Adds new task to task list and outputs success message.","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"evanpy"},"content":"     * @param task Task to be added to task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"evanpy"},"content":"    protected void addTask(Task task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"evanpy"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"evanpy"},"content":"        if (this.isInitializingData) {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"evanpy"},"content":"            return;","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"evanpy"},"content":"        Ui.addTaskMsg(task, this.tasks.size());","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"evanpy"},"content":"     * Removes task from task list and outputs success message.","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"evanpy"},"content":"     * @param taskIndex Index of task to be removed.","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"evanpy"},"content":"    protected void removeTask(int taskIndex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"evanpy"},"content":"        Task task \u003d this.tasks.remove(taskIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"evanpy"},"content":"        Ui.removeTaskMsg(task, this.tasks.size());","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"evanpy"},"content":"    /** Outputs all the tasks stored in task list. */","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"evanpy"},"content":"    protected void listTasks() {","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"evanpy"},"content":"        String listOfTasks \u003d \"\";","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"evanpy"},"content":"        for(int idx \u003d 0; idx \u003c tasks.size(); idx++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"evanpy"},"content":"            Task task \u003d this.tasks.get(idx);","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"evanpy"},"content":"            listOfTasks \u003d listOfTasks + \"  \" + (idx + 1) + \".\" + task + \"\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"evanpy"},"content":"        Ui.listTasksMsg(listOfTasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"evanpy"},"content":"     * Marks task as completed and outputs success message.","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"evanpy"},"content":"     * @param task Task to be marked.","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"evanpy"},"content":"    protected void markTask(Task task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"evanpy"},"content":"        task.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"evanpy"},"content":"        Ui.markTaskMsg(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"evanpy"},"content":"     * Marks task as uncompleted and outputs success message.","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"evanpy"},"content":"     * @param task Task to be unmarked.","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"evanpy"},"content":"    protected void unmarkTask(Task task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"evanpy"},"content":"        task.unmark();","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"evanpy"},"content":"        Ui.unmarkTaskMsg(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"evanpy"},"content":"    protected ArrayList\u003cTask\u003e filteredTaskList(String query) {","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"evanpy"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d tasks.stream()","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"evanpy"},"content":"                .filter(task -\u003e task.toString().contains(query))","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"evanpy"},"content":"                .collect(toCollection(ArrayList::new));","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"evanpy"},"content":"        return filteredList;","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":116}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"public class Ui {","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"     * Outputs given string with formatting.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"     * @param string String to be outputted.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"    private static void output(String string) {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"                            \"  \" + string + ","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"                            \"____________________________________________________________\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"    /** Outputs welcome message. */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"    protected static void welcomeMsg() {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"        output(\"Hello! I\u0027m Duke\\n  What can I do for you?\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    // Outputs exit message.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"    protected static void exitMsg() {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"        output(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"     * Outputs success message when task has been added to task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"     * @param task Message regarding the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"     * @param taskListSize Size of task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"    protected static void addTaskMsg(Task task, int taskListSize) {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"        output(\"Got it. I\u0027ve added this task:\\n    \" ","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"                + task + \"\\n  \"","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"                + \"Now you have \" + taskListSize + (taskListSize \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"     * Outputs success message when task has been removed from task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"     * @param task Message regarding the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"     * @param taskListSize Size of task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"    protected static void removeTaskMsg(Task task, int taskListSize) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"        output(\"Noted. I\u0027ve removed this task:\\n    \" ","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"evanpy"},"content":"                + task + \"\\n  \"","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"evanpy"},"content":"                + \"Now you have \" + taskListSize + (taskListSize \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"evanpy"},"content":"     * Outputs all the tasks stored in task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"evanpy"},"content":"     * @param listOfTasks String of the list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"evanpy"},"content":"    protected static void listTasksMsg(String listOfTasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"evanpy"},"content":"        String listMessage \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"evanpy"},"content":"        output(listMessage + listOfTasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"evanpy"},"content":"     * Outputs success message when task has been marked.","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"evanpy"},"content":"     * @param task Message regarding the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"evanpy"},"content":"    protected static void markTaskMsg(Task task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"evanpy"},"content":"        output(\"Nice! I\u0027ve marked this task as done:\\n    \" + task + \"\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"evanpy"},"content":"     * Outputs success message when task has been unmarked.","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"evanpy"},"content":"     * @param task Message regarding the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"evanpy"},"content":"    protected static void unmarkTaskMsg(Task task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"evanpy"},"content":"        output(\"OK, I\u0027ve marked this task as not done yet:\\n    \" + task + \"\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"evanpy"},"content":"    /** Handles unknown input. */","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"evanpy"},"content":"    protected static void unknownInputMsg() {","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"evanpy"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"evanpy"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"evanpy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"evanpy"},"content":"            errorMsg(e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"evanpy"},"content":"     * Outputs error message.","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"evanpy"},"content":"     * @param message Error message.","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"evanpy"},"content":"    protected static void errorMsg(String message) {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"evanpy"},"content":"        output(message);","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":97}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize Deadline instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"     * @param task Task name.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"     * @param deadline Task deadline.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"    public Deadline(String task, String deadline) {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"        super(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"     * Returns the description of Deadline.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"     * @return Deadline description.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"        return \"deadline \" + super.getTaskName() + \"/by \" + this.deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":38}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"    private LocalDate startTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"    private LocalDate endTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize Event instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"     * @param task Task name.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"     * @param startTime Task start time.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"     * @param endTime Task end time.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"    public Event(String task, String startTime, String endTime) {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"        super(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"        this.startTime \u003d LocalDate.parse(startTime);;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"        this.endTime \u003d LocalDate.parse(endTime);;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"     * Returns the description of Event.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"     * @return Event description.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"        return \"event \" + super.getTaskName() + \"/from \" + this.startTime + \" /to \" + this.endTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"        return \"[E]\" + super.toString() ","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"            + \"(from: \" + this.startTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) ","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"            + \" to: \" + this.endTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":43}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"public class Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"    private String task;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"    private boolean isMarked \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize Task instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"     * @param task Task name.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"    Task(String task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"    /** Marks the task as completed. */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"    public void mark() {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"    /** Marks the task as uncompleted. */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"     * Checks mark status and returns appropriate icon.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"     * @return Icon.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"        return (isMarked ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"     * Returns the name of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"     * @return Task name.","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"        return task;","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"     * Returns the description of Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"     * @return Task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"evanpy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"evanpy"},"content":"        return getTaskName();","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"evanpy"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"evanpy"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"evanpy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"evanpy"},"content":"        return this.getStatusIcon() + \" \" + this.task.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":62}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize Todo instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"     * @param task Task name.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"    public ToDo(String task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"        super(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"     * Returns the description of Todo.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"     * @return Todo description.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"        return \"todo \" + super.getTaskName();","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":33}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"    /** Test the creation of deadline task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"    public void addDeadlineTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"        Deadline deadline \u003d new Deadline(\"Finish Single\u0027s Inferno s2 \", \"2019-10-15\");","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[D][ ] Finish Single\u0027s Inferno s2 (by: Oct 15 2019)\", deadline.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"    /** Test the marking of deadline task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"    public void markTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"        Deadline deadline \u003d new Deadline(\"Finish Single\u0027s Inferno s2 \", \"2019-10-15\");","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"        deadline.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[D][X] Finish Single\u0027s Inferno s2 (by: Oct 15 2019)\", deadline.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"    /** Test the unmarking of deadline task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"    public void unmarkTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"        Deadline deadline \u003d new Deadline(\"Finish Single\u0027s Inferno s2 \", \"2019-10-15\");","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"        deadline.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"        deadline.unmark();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[D][ ] Finish Single\u0027s Inferno s2 (by: Oct 15 2019)\", deadline.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":33}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"public class EventTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"    /** Test the creation of event task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"    public void addEventTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"        Event event \u003d new Event(\"HDL eating competition \", \"2019-10-16\", \"2019-10-17\");","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[E][ ] HDL eating competition (from: Oct 16 2019 to: Oct 17 2019)\", event.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"    /** Test the marking of event task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"    public void markTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"        Event event \u003d new Event(\"HDL eating competition \", \"2019-10-16\", \"2019-10-17\");","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"        event.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[E][X] HDL eating competition (from: Oct 16 2019 to: Oct 17 2019)\", event.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"    /** Test the unmarking of event task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"    public void unmarkTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"        Event event \u003d new Event(\"HDL eating competition \", \"2019-10-16\", \"2019-10-17\");","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"        event.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"        event.unmark();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[E][ ] HDL eating competition (from: Oct 16 2019 to: Oct 17 2019)\", event.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":33}},{"path":"src/test/java/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"    /** Test the creation of to do task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"    public void addToDoTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"        ToDo todo \u003d new ToDo(\"Eat HDL!!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[T][ ] Eat HDL!!\", todo.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"    /** Test the marking of to do task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"    public void markTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"        ToDo todo \u003d new ToDo(\"Eat HDL!!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"        todo.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[T][X] Eat HDL!!\", todo.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"    /** Test the unmarking of to do task. */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"    public void unmarkTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"        ToDo todo \u003d new ToDo(\"Eat HDL!!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"        todo.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"        todo.unmark();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"        assertEquals(\"[T][ ] Eat HDL!!\", todo.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"evanpy":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"event project meeting /from 2019-10-16 /to 2019-10-17","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"blah","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"delete 3","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"evanpy":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"evanpy":2,"-":19}}]
