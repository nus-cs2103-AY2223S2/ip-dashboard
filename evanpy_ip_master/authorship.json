[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"    private String deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize Deadline instance.","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"     * @param task Task name.","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"     * @param deadline Task deadline.","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"    Deadline(String task, String deadline) {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"        super(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"     * Returns the description of Deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"     * @return Deadline description.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"        return \"deadline \" + super.getTaskName() + \"/by\" + this.deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + this.deadline + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"evanpy":34}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"     * Outputs given string with formatting.","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"     * @param string String to be outputted.","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"    private static void output(String string) {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"                            \"  \" + string + ","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"                            \"____________________________________________________________\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"    /** Outputs welcome message. */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"    private static void welcomeMsg() {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"        output(\"Hello! I\u0027m Duke\\n  What can I do for you?\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"    ","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"    // Outputs exit message.","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"    private static void exitMsg() {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"        output(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"     * Echoes the input given by the user.","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"     * @param input User input.","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"    private static void echo(String input) {","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"        output(input);","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"     * Adds new task to task list and outputs success message.","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"     * @param task Task to be added to task list.","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"    private static void addTask(Task task) {","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"        output(\"Got it. I\u0027ve added this task:\\n    \" ","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"                + task + \"\\n  \"","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"                + \"Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"evanpy"},"content":"     * Removes task from task list and outputs success message.","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"evanpy"},"content":"     * @param taskIndex Index of task to be removed.","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"evanpy"},"content":"    private static void removeTask(int taskIndex) {","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"evanpy"},"content":"        Task task \u003d tasks.remove(taskIndex);","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"evanpy"},"content":"        output(\"Noted. I\u0027ve removed this task:\\n    \" ","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"evanpy"},"content":"                + task + \"\\n  \"","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"evanpy"},"content":"                + \"Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"evanpy"},"content":"    /** Outputs all the tasks stored in task list. */","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"evanpy"},"content":"    private static void listTasks() {","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"evanpy"},"content":"        String listOfTasks \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"evanpy"},"content":"        for(int idx \u003d 0; idx \u003c tasks.size(); idx++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"evanpy"},"content":"            Task task \u003d tasks.get(idx);","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"evanpy"},"content":"            listOfTasks \u003d listOfTasks + \"  \" + (idx + 1) + \".\" + task + \"\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"evanpy"},"content":"        output(listOfTasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"evanpy"},"content":"     * Marks task as completed and outputs success message.","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"evanpy"},"content":"     * @param task Task to be marked.","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"evanpy"},"content":"    private static void markTask(Task task) {","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"evanpy"},"content":"        task.mark();","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"evanpy"},"content":"        output(\"Nice! I\u0027ve marked this task as done:\\n    \" + task + \"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"evanpy"},"content":"     * Marks task as uncompleted and outputs success message.","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"evanpy"},"content":"     * @param task Task to be unmarked.","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"evanpy"},"content":"    private static void unmarkTask(Task task) {","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"evanpy"},"content":"        task.unmark();","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"evanpy"},"content":"        output(\"OK, I\u0027ve marked this task as not done yet:\\n    \" + task + \"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":91,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"evanpy"},"content":"    /** Handles unknown input. */","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"evanpy"},"content":"    private static void handleUnknownInput() {","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"evanpy"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"evanpy"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"evanpy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"evanpy"},"content":"            output(e.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"evanpy"},"content":"     * Creates task and stores it in Task arraylist.","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"evanpy"},"content":"     * @param taskType Type of task.","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"evanpy"},"content":"     * @param description The descriptions of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"evanpy"},"content":"    private static void createTask(String taskType, String[] descriptions) {","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"evanpy"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"evanpy"},"content":"        case \"list\":","lastModifiedDate":"2023-01-17"},{"lineNumber":110,"author":{"gitId":"evanpy"},"content":"            listTasks();","lastModifiedDate":"2023-01-17"},{"lineNumber":111,"author":{"gitId":"evanpy"},"content":"            break;","lastModifiedDate":"2023-01-17"},{"lineNumber":112,"author":{"gitId":"evanpy"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-17"},{"lineNumber":113,"author":{"gitId":"evanpy"},"content":"            markTask(tasks.get(Integer.parseInt(descriptions[1]) - 1));","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"evanpy"},"content":"            break;","lastModifiedDate":"2023-01-17"},{"lineNumber":115,"author":{"gitId":"evanpy"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-17"},{"lineNumber":116,"author":{"gitId":"evanpy"},"content":"            unmarkTask(tasks.get(Integer.parseInt(descriptions[1]) - 1));","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"evanpy"},"content":"            break;","lastModifiedDate":"2023-01-17"},{"lineNumber":118,"author":{"gitId":"evanpy"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"evanpy"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"evanpy"},"content":"                if (descriptions.length !\u003d 2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"evanpy"},"content":"                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"evanpy"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"evanpy"},"content":"                addTask(new Todo(descriptions[1]));","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"evanpy"},"content":"            } catch (DukeException error) {","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"evanpy"},"content":"                output(error.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"evanpy"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"evanpy"},"content":"            break;","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"evanpy"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"evanpy"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"evanpy"},"content":"                String[] deadlineDescription \u003d descriptions[1].split(\"/by\");","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"evanpy"},"content":"                if (deadlineDescription.length !\u003d 2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"evanpy"},"content":"                    throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"evanpy"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"evanpy"},"content":"                addTask(new Deadline(deadlineDescription[0], deadlineDescription[1]));","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"evanpy"},"content":"            } catch (DukeException error) {","lastModifiedDate":"2023-01-24"},{"lineNumber":136,"author":{"gitId":"evanpy"},"content":"                output(error.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"evanpy"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"evanpy"},"content":"            break;","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"evanpy"},"content":"        case \"event\":","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"evanpy"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"evanpy"},"content":"                String[] eventDescription \u003d descriptions[1].split(\"/from|/to\");","lastModifiedDate":"2023-01-24"},{"lineNumber":142,"author":{"gitId":"evanpy"},"content":"                if (eventDescription.length !\u003d 3) {","lastModifiedDate":"2023-01-24"},{"lineNumber":143,"author":{"gitId":"evanpy"},"content":"                    throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"evanpy"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":145,"author":{"gitId":"evanpy"},"content":"                addTask(new Event(eventDescription[0], eventDescription[1], eventDescription[2]));","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"evanpy"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"evanpy"},"content":"                output(e.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"evanpy"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"evanpy"},"content":"            break;","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"evanpy"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"evanpy"},"content":"            removeTask(Integer.parseInt(descriptions[1]) - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"evanpy"},"content":"            break;","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"evanpy"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-17"},{"lineNumber":154,"author":{"gitId":"evanpy"},"content":"            exitMsg();","lastModifiedDate":"2023-01-17"},{"lineNumber":155,"author":{"gitId":"evanpy"},"content":"            return;","lastModifiedDate":"2023-01-17"},{"lineNumber":156,"author":{"gitId":"evanpy"},"content":"        default:","lastModifiedDate":"2023-01-17"},{"lineNumber":157,"author":{"gitId":"evanpy"},"content":"            handleUnknownInput();","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"evanpy"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":159,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":160,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":161,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":163,"author":{"gitId":"evanpy"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-24"},{"lineNumber":164,"author":{"gitId":"evanpy"},"content":"        welcomeMsg();","lastModifiedDate":"2023-01-24"},{"lineNumber":165,"author":{"gitId":"evanpy"},"content":"        while (true) {","lastModifiedDate":"2023-01-24"},{"lineNumber":166,"author":{"gitId":"evanpy"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":167,"author":{"gitId":"evanpy"},"content":"            String[] descriptions \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":168,"author":{"gitId":"evanpy"},"content":"            String taskType \u003d descriptions[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":169,"author":{"gitId":"evanpy"},"content":"            createTask(taskType, descriptions);","lastModifiedDate":"2023-01-24"},{"lineNumber":170,"author":{"gitId":"evanpy"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"evanpy":168,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize DukeException instance.","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"     * @param message Error message.","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"    DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"evanpy":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"    private String startTime;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"    private String endTime;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize Event instance.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"     * @param task Task name.","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"     * @param startTime Task start time.","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"     * @param endTime Task end time.","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"    Event(String task, String startTime, String endTime) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"        super(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"     * Returns the description of Event.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"     * @return Event description.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"        return \"event \" + super.getTaskName() + \"/from\" + this.startTime + \"/to\" + this.endTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"        return \"[E]\" + super.toString() + \"(from:\" + this.startTime + \"to:\" + this.endTime + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"evanpy":37}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"    private String task;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"    private boolean isMarked \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize Task instance.","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"     * @param task Task name.","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"    Task(String task) {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"    /** Marks the task as completed. */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"    public void mark() {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"    /** Marks the task as uncompleted. */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"     * Checks mark status and returns appropriate icon.","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"     * @return Icon.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"        return (isMarked ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"evanpy"},"content":"     * Returns the name of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"evanpy"},"content":"     * @return Task name.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"evanpy"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"evanpy"},"content":"        return task;","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"evanpy"},"content":"     * Returns the description of Task.","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"evanpy"},"content":"     * @return Task description.","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"evanpy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"evanpy"},"content":"        return getTaskName();","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"evanpy"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"evanpy"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"evanpy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"evanpy"},"content":"        return this.getStatusIcon() + \" \" + this.task.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"evanpy":60}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"     * A public constructor to initialize Todo instance.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"     * @param task Task name.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"    Todo(String task) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"evanpy"},"content":"        super(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"evanpy"},"content":"     * Returns the description of Todo.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"evanpy"},"content":"     * ","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"evanpy"},"content":"     * @return Todo description.","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"evanpy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"evanpy"},"content":"        return \"todo \" + super.getTaskName();","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"evanpy"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"evanpy"},"content":"    /** ","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"evanpy"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"evanpy"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"evanpy"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"evanpy"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"evanpy"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"evanpy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"evanpy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"evanpy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"evanpy"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"evanpy":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"evanpy"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"evanpy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"evanpy"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"evanpy"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"evanpy"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"evanpy"},"content":"blah","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"evanpy"},"content":"delete 3","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"evanpy"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"evanpy":8}}]
