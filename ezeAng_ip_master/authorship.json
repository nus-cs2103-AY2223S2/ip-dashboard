[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"    archiveBaseName \u003d \"Launcher\"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ezeAng":17,"-":39}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"@rem Unless required byRec applicable law or agreed to in writing, software","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":":init","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":":win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2020-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"set _SKIP\u003d2","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":":win9xME_args_slurp","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2020-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2020-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ezeAng":1,"-":102}},{"path":"src/main/java/C4PO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"import src.main.c4po.*;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"public class C4PO {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"    private final Parser parser;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"    protected static final String FILE_P \u003d \"./data/tasks.txt\";","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"    public String introduction;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"     * for JavaFX Tutorial, temp","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    public C4PO() {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"        this.storage \u003d new Storage(C4PO.FILE_P);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"        StringBuilder intro \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"            intro.append(Ui.showLoadedMsg(true)).append(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"            intro.append(tasks.printList(true, true));","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"            //Ui.print(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"            intro.append(Ui.showLoadingError(true));","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"        this.introduction \u003d intro.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"     * C4PO instance initialises with a filepath to the data storage file location","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"     * @param filePath","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"    public C4PO(String filePath) {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"            tasks.printList(true);","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"            Ui.print(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"            Ui.showLoadingError();","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"     * Runs the main loop of the bot interaction, run this to start bot","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"    public void run() {","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"        //Introduce the bot","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"        Ui.showIntroduction();","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"        //Main Loop","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"        //From here, append newly added Tasks to the file","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"                String receive \u003d ui.getNextInput(); //reads user input","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"                Command c \u003d parser.parse(receive);","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"                Ui.print(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"                Ui.showCommandError();","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"            } finally {","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"ezeAng"},"content":"                Ui.printDashLine(1);","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"ezeAng"},"content":"     * Starts the run of the bot","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"ezeAng"},"content":"     * @param args","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"ezeAng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"ezeAng"},"content":"        //new C4PO(FILE_P).run();","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"ezeAng"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"ezeAng"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"ezeAng"},"content":"    protected String getResponse(String input) throws BotException {","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"ezeAng"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"ezeAng"},"content":"            Command c \u003d parser.parse(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"ezeAng"},"content":"            String response \u003d c.execute(tasks, ui, storage, true);","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"ezeAng"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"ezeAng"},"content":"            return response;","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"ezeAng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"ezeAng"},"content":"            throw new BotException(Ui.UNABLE_TO_UNDERSTAND_QUOTE","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"ezeAng"},"content":"                    + \"\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"ezeAng"},"content":"                    + Ui.showCommandError(true));","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ezeAng":109,"-":2}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"    private void flip() {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"    public static DialogBox getC4poDialog(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"        db.flip();","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"        return db;","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ezeAng":59}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"public class Launcher {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ezeAng":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":" * A GUI for C4PO using FXML.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"    private C4PO c4po \u003d new C4PO();","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setC4PO(c4po);","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"            stage.show();","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ezeAng":31}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"import src.main.c4po.BotException;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"import src.main.c4po.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"    private C4PO c4po;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ash.png\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"    private Image c4poImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/c4pocirc.png\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"    public MainWindow() {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"    public void setC4PO(C4PO d) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"        c4po \u003d d;","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"        addDialog(Ui.showIntroduction(true));","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"        addDialog(c4po.introduction);","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing c4po\u0027s reply and then appends them to","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"            String response \u003d c4po.getResponse(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"                    DialogBox.getC4poDialog(response, c4poImage)","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"            );","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"        } catch (BotException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"                    DialogBox.getC4poDialog(e.getMessage(), c4poImage)","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"            );","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"     * Creates dialog boxes. Clears the user input after processing.","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"ezeAng"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"ezeAng"},"content":"    private void addDialog(String response) {","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"ezeAng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"ezeAng"},"content":"                DialogBox.getC4poDialog(response, c4poImage)","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"ezeAng"},"content":"        );","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"ezeAng"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ezeAng":85}},{"path":"src/main/java/src/main/c4po/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"    private final Task task;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"    private final boolean toAppendFile;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"    public AddTaskCommand(Task taskToAdd, boolean toAppend) {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"        task \u003d taskToAdd;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"        toAppendFile \u003d toAppend;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"     * @param tasks are the list of tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"     * @param ui is the instance of UI","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"     * @param storage the instance of Storage which holds and writes to the data file","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"     * @throws BotException","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws BotException {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"            tasks.addItem(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"            //error here","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"            if (toAppendFile) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"                storage.writeToFile(task.getTaskFileFormat());","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"                storage.writeToFile(\"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"            Ui.showTaskAdded();","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"            Ui.printTask(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"            Ui.print(tasks.getTaskCount());","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"            throw new BotException(e.getMessage() + \"Add command failed\");","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"     * Executes the command with actions specific to each extension of this","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"     * class Command","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"     * @param tasks          are the list of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"     * @param ui             is the instance of UI","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"     * @param storage        the instance of Storage which holds and writes to the data file","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"     * @param isStringOutput","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"     * @throws BotException","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, boolean isStringOutput) throws BotException {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"        StringBuilder addTaskResponse \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"            tasks.addItem(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"            if (toAppendFile) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"                storage.writeToFile(task.getTaskFileFormat());","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"                storage.writeToFile(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"            addTaskResponse.append(Ui.showTaskAdded(true)).append(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"            addTaskResponse.append(Ui.printTask(task, true)).append(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"            addTaskResponse.append(tasks.getTaskCount());","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"            throw new BotException(e.getMessage() + \"Add command failed\");","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"        return addTaskResponse.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"     * @return","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"ezeAng"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ezeAng":77}},{"path":"src/main/java/src/main/c4po/BotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"public class BotException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"    public BotException(String errorMessage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"ezeAng":7}},{"path":"src/main/java/src/main/c4po/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"     * Executes the command with actions specific to each extension of this","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"     * class Command","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"     * @param tasks are the list of tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"     * @param ui is the instance of UI","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"     * @param storage the instance of Storage which holds and writes to the data file","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"     * @throws BotException","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws BotException;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"     * Executes the command with actions specific to each extension of this","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"     * class Command","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"     * @param tasks are the list of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"     * @param ui is the instance of UI","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"     * @param storage the instance of Storage which holds and writes to the data file","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"     * @throws BotException","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage, boolean isStringOutput) throws BotException;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"     * Returns whether a command should cause bot to end interaction","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"     * @return boolean to be used in the main loop","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ezeAng":36}},{"path":"src/main/java/src/main/c4po/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":" * Deadline task keeps tracks of deadlines using date-time format","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":" * The constructor takes in a string of Date {yyyy-mm-dd}","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":" *  and optionally {HHmm} as time after including a space separator","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":" *","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    protected String byRec;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"    protected String byStr;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"    protected String byTimeStr \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"    protected LocalTime byTime \u003d LocalTime.now();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"    public static String dateTimeParseErrMsg \u003d \"Could not parse date time format, please write yyyy-MM-dd [HHmm]. \" +","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"            \"Include 0s in the tenths place. Optionally include time, separated byRec a space\";","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"     * Instantiates a instance of Deadline Task object with description and a deadline","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"     * which will be parsed into a DateTime format","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"     * @param description describes the task","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"     * @param byRec details the deadline in yyyy-mm-dd hhmm","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"     * @param isDone specifies whether the deadline task is done","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"    public Deadline(String description, String byRec, boolean isDone) {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"        this.byRec \u003d byRec;","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"        ArrayList\u003cString\u003e arr \u003d new ArrayList\u003c\u003e(List.of(byRec.split(\" \")));","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"            this.byDate \u003d LocalDate.parse(arr.get(0));","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"            this.byStr \u003d byDate.format(DateTimeFormatter.ofPattern(\"EEEE MMM d yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"            if (arr.size() \u003e 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"                this.byTime \u003d LocalTime.parse(arr.get(1), DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"                byTimeStr \u003d byTime.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"            System.out.println(dateTimeParseErrMsg);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"     * Creates a new Deadline task with description and formatted-time input","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"     * @param description describes the task details","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"     * @param byRec a String which details the deadline date-time in yyyy-mm-dd hhmm format","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"     * @throws BotException if the datetime cannot be parsed","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"    public Deadline(String description, String byRec) throws BotException {","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"        super(description, false);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"        this.byRec \u003d byRec;","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"        ArrayList\u003cString\u003e arr \u003d new ArrayList\u003c\u003e(List.of(byRec.split(\" \")));","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"            this.byDate \u003d LocalDate.parse(arr.get(0));","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"            this.byStr \u003d byDate.format(DateTimeFormatter.ofPattern(\"EEEE MMM d yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"            if (arr.size() \u003e 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"                this.byTime \u003d LocalTime.parse(arr.get(1), DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"                byTimeStr \u003d byTime.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"            throw new BotException(dateTimeParseErrMsg);","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"ezeAng"},"content":"    protected String getTaskFileFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"ezeAng"},"content":"        return \"D\" + \" | \" + super.getTaskFileFormat() + \" | \" + byRec;","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"ezeAng"},"content":"     * Returns an inline String that details the task type (Deadline) and the","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"ezeAng"},"content":"     * task details","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"ezeAng"},"content":"     * @return String","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline() {","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"ezeAng"},"content":"        return \"[D]\" + super.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"ezeAng"},"content":"     * Returns an inline String that details the index of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"ezeAng"},"content":"     * in the task list, the task type (Deadline) and the task details","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"ezeAng"},"content":"     * @return String with index of task, deadline and description","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline(Integer index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"ezeAng"},"content":"        return index.toString() + \". [D]\" + super.getTaskInline() + \" (byRec: \" + byStr + \" \" + byTimeStr + \")\";","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"ezeAng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"ezeAng"},"content":"        return \"[D] \" + super.toString() + \" (byRec: \" + byStr + \" \" + byTimeStr + \")\";","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":109}},{"path":"src/main/java/src/main/c4po/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"    private final Integer toDeletePosition;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"     * Creates a new delete command, an executable which deletes item at","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"     * specified position (1-indexed)","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"     * @param index","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"    public DeleteCommand(Integer index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"        this.toDeletePosition \u003d index;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws BotException {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"            Task toDelete \u003d tasks.getItem(toDeletePosition);","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"            boolean isSuccess \u003d tasks.deleteItem(toDelete);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"            if (isSuccess) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"                Ui.showTaskDeletedQuote();","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"                Ui.printTask(toDelete);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"                Ui.showNoSuchTask();","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"            Ui.print(tasks.getTaskCount());","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"            storage.writeToFile(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"            throw new BotException(e.getMessage() + \"Delete Failed\");","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"     * Executes the command with actions specific to each extension of this","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"     * class Command","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"     * @param tasks          are the list of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"     * @param ui             is the instance of UI","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"     * @param storage        the instance of Storage which holds and writes to the data file","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"     * @param isStringOutput","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"     * @throws BotException","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage,","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"                          boolean isStringOutput) throws BotException {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"        StringBuilder deleteTaskResponse \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"            Task toDelete \u003d tasks.getItem(toDeletePosition);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"            boolean isSuccess \u003d tasks.deleteItem(toDelete);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"            if (isSuccess) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"                deleteTaskResponse.append(Ui.showTaskDeletedQuote(true))","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"                        .append(\"\\n\")","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"                        .append(Ui.printTask(toDelete, true))","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"                deleteTaskResponse.append(Ui.showNoSuchTask(true));","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"            deleteTaskResponse.append(tasks.getTaskCount());","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"            storage.writeToFile(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"            throw new BotException(e.getMessage() + \"Delete Failed\");","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"        return deleteTaskResponse.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ezeAng":74}},{"path":"src/main/java/src/main/c4po/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"    protected String start;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"    protected String end;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"     * Instantiates a new instance of Event task, specifying description, start time and end time as strings","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"     * @param description String of task description","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"     * @param start String of start time","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"     * @param end String of end time","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"        super(description, false);","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"     * Instantiates a new instance of Event task, specifying description, start time and end time as strings","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"     * @param description String of task description","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"     * @param start String of start time","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"     * @param end String of end time","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"     * @param isDone boolean of whether task is done","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"    public Event(String description, String start, String end, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"    protected String getTaskFileFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"        return \"E\" + \" | \" + super.getTaskFileFormat() + \" | \" + start + \" | \" + end;","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"     * Returns an inline String that details the task type (Event) and the","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"     * task details","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"     * @return String","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline() {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"        return \"[E]\" + super.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"     * Returns an inline String that details the task type (Event) and the","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"     * task details and the list index","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"     * @return String","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline(Integer index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"        return index.toString() + \". [E]\" + super.getTaskInline() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + this.start + \" to \" + this.end + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":63}},{"path":"src/main/java/src/main/c4po/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"    private final ArrayList\u003cString\u003e keywordsSplit;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"     * Instance of executable FindCommand. Takes an arraylist string of keywords,","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"     * instantiates a find command to find all tasks with those keywords","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"    public FindCommand(ArrayList\u003cString\u003e keywords) {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"        this.keywordsSplit \u003d keywords;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"     * Executes the command with actions specific to each extension of this","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"     * class Command","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"     * @param tasks   are the list of tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"     * @param ui      is the instance of UI","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"     * @param storage the instance of Storage which holds and writes to the data file","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"     * @throws BotException","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws BotException {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"        Ui.showTasksFound();","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"        for ( String keyword: keywordsSplit ) {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"            //Search for tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"            Ui.print(\"keyword(s) typed: \" + keyword);","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"            ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTask(keyword);","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"            if (!(foundTasks \u003d\u003d null || foundTasks.isEmpty())) {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"                tasksFound.addAll(foundTasks);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"        if (tasksFound.isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"            Ui.showNoTasksFound();","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"            TaskList tempTaskList \u003d new TaskList(tasksFound);","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"            tempTaskList.printList(false);","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"     * Executes the command with actions specific to each extension of this","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"     * class Command","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"     * @param tasks          are the list of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"     * @param ui             is the instance of UI","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"     * @param storage        the instance of Storage which holds and writes to the data file","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"     * @param isStringOutput specifing this will allow users to access the String output method","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"     * @throws BotException","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, boolean isStringOutput) throws BotException {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"        StringBuilder findTaskResponse \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"        findTaskResponse.append(Ui.showTasksFound(true));","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"        for ( String keyword: keywordsSplit ) {","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"            //Search for tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"            findTaskResponse.append(\"keyword(s) typed: \").append(keyword).append(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"            ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTask(keyword);","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"            if (!(foundTasks \u003d\u003d null || foundTasks.isEmpty())) {","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"                tasksFound.addAll(foundTasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"ezeAng"},"content":"        if (tasksFound.isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"ezeAng"},"content":"            Ui.showNoTasksFound(true);","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"ezeAng"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"ezeAng"},"content":"            TaskList tempTaskList \u003d new TaskList(tasksFound);","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"ezeAng"},"content":"            findTaskResponse.append(tempTaskList.printList(false, true));","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"ezeAng"},"content":"        return findTaskResponse.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"ezeAng"},"content":"     * Returns whether a command should cause bot to end interaction","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"ezeAng"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"ezeAng"},"content":"     * @return boolean to be used in the main loop","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"ezeAng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"ezeAng"},"content":"        return this.isExit;","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"ezeAng":94}},{"path":"src/main/java/src/main/c4po/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"     * Executes the command with actions specific to each extension of this","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"     * class Command","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"     * @param tasks   are the list of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"     * @param ui      is the instance of UI","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"     * @param storage the instance of Storage which holds and writes to the data file","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"     * @throws BotException","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws BotException {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"     * Executes the command with actions specific to each extension of this","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"     * class Command","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"     * @param tasks          are the list of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"     * @param ui             is the instance of UI","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"     * @param storage        the instance of Storage which holds and writes to the data file","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"     * @param isStringOutput","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"     * @throws BotException","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, boolean isStringOutput) throws BotException {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"        return Ui.showCommandList(true);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"     * Returns whether a command should cause bot to end interaction","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"     * @return boolean to be used in the main loop","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"        return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ezeAng":44}},{"path":"src/main/java/src/main/c4po/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"     * An executable Command which lists all tasks in the task list","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"     * @param tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"     * @param ui","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"     * @param storage","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"        tasks.printList(true);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"     * Executes the command with actions specific to each extension of this","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"     * class Command","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"     * @param tasks          are the list of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"     * @param ui             is the instance of UI","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"     * @param storage        the instance of Storage which holds and writes to the data file","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"     * @param isStringOutput","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"     * @throws BotException","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, boolean isStringOutput) throws BotException {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"        return tasks.printList(true,true);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"     * @return boolean","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ezeAng":46}},{"path":"src/main/java/src/main/c4po/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"    Integer indexToMark;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"    public MarkCommand(Integer index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"        assert(index \u003e 0) : \"index must be larger than 0\";","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"        indexToMark \u003d index;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"     * @param tasks are the list of tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"     * @param ui is the instance of UI","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"     * @param storage the instance of Storage which holds and writes to the data file","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"     * @throws BotException","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws BotException {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"            boolean isSuccess \u003d tasks.mark(indexToMark, \"mark\");","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"            if (isSuccess) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"                Ui.showMarkedDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"                //override storage file with all new tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"                Ui.showMarkFail();","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"            Ui.print(tasks.getItem(indexToMark).getTaskInline());","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"            String markErr \u003d \"Sir! Index for toggling mark cannot be empty\";","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"            throw new BotException(markErr);","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"     * Executes the command with actions specific to each extension of this","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"     * class Command","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"     * @param tasks          are the list of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"     * @param ui             is the instance of UI","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"     * @param storage        the instance of Storage which holds and writes to the data file","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"     * @param isStringOutput","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"     * @throws BotException","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, boolean isStringOutput) throws BotException {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"        StringBuilder markResponse \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"            boolean isSuccess \u003d tasks.mark(indexToMark, \"mark\");","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"            if (isSuccess) {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"                markResponse.append(Ui.showMarkedDone(true));","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"                //override storage file with all new tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"                markResponse.append(Ui.showMarkFail(true));","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"            markResponse.append(\"\\n\").append(tasks.getItem(indexToMark).getTaskInline());","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"            String markErr \u003d \"Sir! Index for toggling mark cannot be empty\";","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"            throw new BotException(markErr);","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"        return markResponse.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"     * @return","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"ezeAng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"ezeAng"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ezeAng":80}},{"path":"src/main/java/src/main/c4po/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"import java.util.List;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":" * Parser class allows the bot to understand user commands and provides","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":" * the right commands for execution in main loop","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"public class Parser {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"     * Instantiates an instance of Parser","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"     * Parser helps make sense of user commands and creates an instance of executable command","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"     * for the bot to execute","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    public Parser() {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"     * Makes sense of user input and returns an appropriate executable command","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"     * @param receive is a String of user input","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"     * @return a Command which is executable","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"     * @throws BotException","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"    public Command parse(String receive) throws BotException {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"        if (receive.length() \u003e 2 \u0026\u0026 \"bye\".equalsIgnoreCase(receive.strip())) {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"            return new QuitCommand();","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"        } else if (receive.length() \u003e 3 \u0026\u0026 \"list\".equalsIgnoreCase(receive.strip())) {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"        } else if (receive.length() \u003e 3 \u0026\u0026 \"mark\".equalsIgnoreCase(receive.substring(0,4))) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"            Integer index \u003d Integer.valueOf(receive.substring(4).strip());","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"        } else if (receive.length() \u003e 5 \u0026\u0026 \"unmark\".equalsIgnoreCase(receive.substring(0,6))) {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"            Integer index \u003d Integer.valueOf(receive.substring(6).strip());","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"        } else if (receive.length() \u003e 3 \u0026\u0026 \"todo\".equalsIgnoreCase(receive.substring(0,4))) {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"            String desc \u003d receive.substring(4).strip();","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"            String errToDo \u003d \"Sir!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"            if (desc.isBlank()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"                throw new BotException(errToDo);","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"            ToDo newTodo \u003d new ToDo(desc);","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"            return new AddTaskCommand(newTodo, true);","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"        } else if (receive.length() \u003e 7 \u0026\u0026 \"deadline\".equalsIgnoreCase(receive.substring(0,8))) {","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"            String desc \u003d receive.substring(8).strip();","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"            String errDeadline \u003d \"Sir!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"            if (desc.isBlank()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"                throw new BotException(errDeadline);","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"            String[] stringArr \u003d desc.split(\" /by \");","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"            ArrayList\u003cString\u003e arr \u003d new ArrayList\u003c\u003e(List.of(stringArr));","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"            String description \u003d arr.get(0);","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"            arr.remove(0);","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"            String dateTimeString \u003d String.join(\" \", arr);","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"            try {","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"                Deadline newDeadline \u003d new Deadline(description, dateTimeString);","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"                return new AddTaskCommand(newDeadline, true);","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"            } catch (BotException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"                Ui.print(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"                throw new BotException(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"        } else if (receive.length() \u003e 4 \u0026\u0026 \"event\".equalsIgnoreCase(receive.substring(0,5))) {","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"            String desc \u003d receive.substring(5).strip();","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"            String errEvent \u003d \"Sir!!! The description of a event cannot be empty.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"            if (desc.isBlank()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"ezeAng"},"content":"                throw new BotException(errEvent);","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"ezeAng"},"content":"            String[] stringArr \u003d desc.split(\" /from \");","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"ezeAng"},"content":"            String[] strArr \u003d stringArr[1].split(\" /to \");","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"ezeAng"},"content":"            Event newEvent \u003d new Event(stringArr[0], strArr[0], strArr[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"ezeAng"},"content":"            return new AddTaskCommand(newEvent, true);","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"ezeAng"},"content":"        } else if (receive.length() \u003e 5 \u0026\u0026 \"delete\".equalsIgnoreCase(receive.substring(0,6))) {","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"ezeAng"},"content":"            Integer index \u003d Integer.valueOf(receive.substring(6).strip());","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"ezeAng"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"ezeAng"},"content":"        } else if (receive.length() \u003e 8 \u0026\u0026 \"/commands\".equalsIgnoreCase(receive.substring(0,9))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"ezeAng"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"ezeAng"},"content":"        } else if (receive.length() \u003e 3 \u0026\u0026 \"find\".equalsIgnoreCase(receive.substring(0,4))) {","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"ezeAng"},"content":"            String keywords \u003d receive.substring(4).strip();","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"ezeAng"},"content":"            Ui.print(keywords);","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"ezeAng"},"content":"            String errKeyword \u003d \"Sir!!! The keywords to find cannot be empty.\";","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"ezeAng"},"content":"            if (keywords.isBlank()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"ezeAng"},"content":"                throw new BotException(errKeyword);","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"ezeAng"},"content":"            String[] stringArr \u003d keywords.split(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"ezeAng"},"content":"            return new FindCommand( new ArrayList\u003c\u003e(List.of(stringArr)));","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"ezeAng"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"ezeAng"},"content":"            throw new BotException(Ui.UNABLE_TO_UNDERSTAND_QUOTE);","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ezeAng":102}},{"path":"src/main/java/src/main/c4po/QuitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"public class QuitCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"    protected boolean toQuit;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"    public QuitCommand() {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"        toQuit \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"     * @param tasks are the list of tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"     * @param ui is the instance of UI","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"     * @param storage the instance of Storage which holds and writes to the data file","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"        Ui.showFarewell();","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"     * Executes the command with actions specific to each extension of this","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"     * class Command","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"     * @param tasks          are the list of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"     * @param ui             is the instance of UI","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"     * @param storage        the instance of Storage which holds and writes to the data file","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"     * @param isStringOutput","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"     * @throws BotException","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, boolean isStringOutput) throws BotException {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"        return Ui.showFarewell(true);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"     * Returns whether command is a quitting command","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"     * @return","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"        return this.toQuit;","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ezeAng":45}},{"path":"src/main/java/src/main/c4po/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"import java.util.List;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"public class Storage {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"    String filePath;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"    String directoryPath;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"    File storageFile;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"     * Creates a Storage object, which stores information of file path, directory path and","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"     * handles writing to the file. Upon","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"     * @param filePath","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"        List\u003cString\u003e direPath \u003d Arrays.asList(filePath.split(\"/\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"        ArrayList\u003cString\u003e dirPath \u003d new ArrayList\u003c\u003e(direPath);","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"        dirPath.remove(dirPath.size()-1);","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"        this.directoryPath \u003d String.join(\"/\", dirPath);","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"            //----- Init directory and storage","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"            Files.createDirectories(Paths.get(directoryPath));","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"            storageFile \u003d new File(filePath);","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"            if (!storageFile.exists()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"                boolean isSuccess \u003d storageFile.createNewFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"                if (isSuccess) {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"                    Ui.showCreatedDbMsg();","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"                } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"                    Ui.showCreateDbError();","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"     * Loads the tasks from the given file path, into a ArrayList\u003cTask\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"     * to be accepted byRec TaskList constructor","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"        Scanner s \u003d new Scanner(storageFile); // create a Scanner using the File as the source","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"        ArrayList\u003cTask\u003e taskItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"            String[] lineItems \u003d line.split(Task.delimiter);","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"            String tag \u003d lineItems[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"            String isDone \u003d lineItems[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"            boolean isDoneBool \u003d isDone.equals(\"1\");","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"            String desc \u003d lineItems[2];","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"            switch (tag) {","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"                case \"D\":","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"                    String by \u003d lineItems[3];","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"                    Deadline newDl \u003d new Deadline(desc, by, isDoneBool);","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"                    taskItems.add(newDl);","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"                    break;","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"ezeAng"},"content":"                case \"E\":","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"ezeAng"},"content":"                    String start \u003d lineItems[3];","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"ezeAng"},"content":"                    String end \u003d lineItems[4];","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"ezeAng"},"content":"                    Event newEv \u003d new Event(desc, start, end, isDoneBool);","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"ezeAng"},"content":"                    taskItems.add(newEv);","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"ezeAng"},"content":"                    break;","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"ezeAng"},"content":"                case \"T\":","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"ezeAng"},"content":"                    ToDo newTd \u003d new ToDo(desc, isDoneBool);","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"ezeAng"},"content":"                    taskItems.add(newTd);","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"ezeAng"},"content":"                    break;","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"ezeAng"},"content":"                default:","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"ezeAng"},"content":"                    System.out.println(\"Error creating task\");","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"ezeAng"},"content":"                    break;","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"ezeAng"},"content":"        return taskItems;","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"ezeAng"},"content":"     * Writes all tasks (overriding) to the data file","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"ezeAng"},"content":"     * @param tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"ezeAng"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"ezeAng"},"content":"    public void writeToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"ezeAng"},"content":"        String toWrite \u003d tasks.getListFileFormat();","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"ezeAng"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"ezeAng"},"content":"        fw.write(toWrite);","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"ezeAng"},"content":"        fw.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"ezeAng"},"content":"     * Appends to end of file, content. Does not override old content","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"ezeAng"},"content":"     * @param content","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"ezeAng"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"ezeAng"},"content":"    public void writeToFile(String content) throws IOException {","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"ezeAng"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"ezeAng"},"content":"        fw.write(content);","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"ezeAng"},"content":"        fw.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ezeAng":119}},{"path":"src/main/java/src/main/c4po/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"import java.util.List;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"    protected static Integer listSize \u003d 0; //or just increment accordingly","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"    protected static String delimiter \u003d Pattern.quote(\" | \");","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"    public Integer index;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"     * Task item with a description and a boolean representing the done status of the task","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"     * @param description","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"     * @param isDone","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"        this.index \u003d listSize + 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"        //add to taskList","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"        listSize++;","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"     * Returns a String formatted for writing to file, using vertical bar as","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"     * the delimiter","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"     * @return","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"    protected String getTaskFileFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"        String isDone \u003d statusIcon.equals(\"X\") ? \"1\" : \"0\";","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"        return isDone + \" | \" + this.description;","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"     * Returns the done status of the Task","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"     * @return a string of \"X\" for done and \" \" if undone","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"     * Mark as done","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"     * Mark as undone","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"     * Returns a ArrayList of Strings of the task\u0027s description split into keywords","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"     * @return","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"    protected ArrayList\u003cString\u003e getDescInArray() {","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"        String str \u003d this.description;","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"        String[] stringArr \u003d str.split(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"        return new ArrayList\u003c\u003e(List.of(stringArr));","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"ezeAng"},"content":"     * Returns an inline String that details the task type and the","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"ezeAng"},"content":"     * task details","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"ezeAng"},"content":"     * @return String","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline(Integer index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"ezeAng"},"content":"        return index.toString() + \". \" + this.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline() {","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"ezeAng"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"ezeAng"},"content":"        return \"[\" + statusIcon + \"] \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"ezeAng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"ezeAng"},"content":"        return this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":102}},{"path":"src/main/java/src/main/c4po/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"public class TaskList {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"    private HashMap\u003cString,ArrayList\u003cTask\u003e\u003e keywordMap;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"    private Integer taskCount \u003d 0;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"     * Creates new instance of Task List, with non-empty input.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"     * @param taskListInput","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskListInput) {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"        this.keywordMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"        for (Task task: taskListInput) {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"            this.addItem(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"        this.taskCount \u003d taskList.size();","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"     * Creates new instance of Task List, with empty input.","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"     * clean tasklist and clean keyword map","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"        this.keywordMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"     * Finds tasks with descriptions containing the keywords","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"     * @param keyword a String which represents the keyword to find","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"     * Prints the list of found tasks using TaskList.printList()","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d keywordMap.get(keyword);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"        //return tasksFound or ui print","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"        return tasksFound;","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"//        if (tasksFound \u003d\u003d null || tasksFound.isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"//","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"//        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"//","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"//        }","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"     * Useful for debugging, shows the keys in the keyword map","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"    public void showTaskMapKeys() {","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"        for (String item :  keywordMap.keySet()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"            Ui.print(item);","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"     * Decreases count of tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"    private void decrementTaskCount() {","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"        taskCount -\u003d 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"     * Adds task to the taskList","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"     * @param task is a task object","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"    public void addItem(Task task) {","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"        taskCount +\u003d 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"ezeAng"},"content":"        //Calls getDescInArray to get keywords to add,","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"ezeAng"},"content":"        //then add task to the relevant arraylists","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"ezeAng"},"content":"        addItemToKeywordMap(task.getDescInArray(), task);","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"ezeAng"},"content":"     * Adds task to the relevant keywords\u0027 list of tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"ezeAng"},"content":"    private void addItemToKeywordMap(ArrayList\u003cString\u003e descKeywords, Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"ezeAng"},"content":"        for (String keyword: descKeywords) {","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"ezeAng"},"content":"            if (keywordMap.containsKey(keyword)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"ezeAng"},"content":"                //contains key already","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"ezeAng"},"content":"                keywordMap.get(keyword).add(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"ezeAng"},"content":"            } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"ezeAng"},"content":"                ArrayList\u003cTask\u003e newTaskArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"ezeAng"},"content":"                newTaskArr.add(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"ezeAng"},"content":"                keywordMap.put(keyword, newTaskArr);","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"ezeAng"},"content":"     * Returns item at specified position","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"ezeAng"},"content":"     * @param index is position specified - 1","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"ezeAng"},"content":"     * @return","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"ezeAng"},"content":"    public Task getItem(Integer index) throws BotException {","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"ezeAng"},"content":"        assert(index \u003e 0) : \"index must be larger than 0\";","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"ezeAng"},"content":"            Task res \u003d taskList.get(index - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"ezeAng"},"content":"            return res;","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"ezeAng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"ezeAng"},"content":"            throw new BotException(\"No such task\");","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"ezeAng"},"content":"     * Deletes an item from the task list with actual index \u003d paramindex - 1","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"ezeAng"},"content":"     * @param toDelete is a Task which you want to delete","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"ezeAng"},"content":"     * @return","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"ezeAng"},"content":"    public boolean deleteItem(Task toDelete) throws BotException {","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"ezeAng"},"content":"            this.removeFromKeywords(toDelete);","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"ezeAng"},"content":"            taskList.remove(toDelete);","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"ezeAng"},"content":"            decrementTaskCount();","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"ezeAng"},"content":"            return true;","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"ezeAng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":126,"author":{"gitId":"ezeAng"},"content":"            throw new BotException(\"Task may not exist\");","lastModifiedDate":"2023-01-30"},{"lineNumber":127,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":130,"author":{"gitId":"ezeAng"},"content":"    public void removeFromKeywords(Task taskToDelete) {","lastModifiedDate":"2023-01-30"},{"lineNumber":131,"author":{"gitId":"ezeAng"},"content":"        for (String keyword :taskToDelete.getDescInArray()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"ezeAng"},"content":"            keywordMap.get(keyword).remove(taskToDelete);","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":138,"author":{"gitId":"ezeAng"},"content":"     * Returns String of all tasks, line-byRec-line formatted","lastModifiedDate":"2023-02-07"},{"lineNumber":139,"author":{"gitId":"ezeAng"},"content":"     * for writing to file","lastModifiedDate":"2023-01-28"},{"lineNumber":140,"author":{"gitId":"ezeAng"},"content":"     * @return","lastModifiedDate":"2023-01-28"},{"lineNumber":141,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"ezeAng"},"content":"    public String getListFileFormat() {","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"ezeAng"},"content":"        StringBuilder build \u003d new StringBuilder();","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"ezeAng"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"ezeAng"},"content":"            build.append(task.getTaskFileFormat());","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"ezeAng"},"content":"            build.append(\"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"ezeAng"},"content":"        return build.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":150,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"ezeAng"},"content":"     * Marks the task as done or undone","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"ezeAng"},"content":"     * @param index specifies which task to toggle mark","lastModifiedDate":"2023-01-28"},{"lineNumber":154,"author":{"gitId":"ezeAng"},"content":"     * @param markOption specifies to unmark or mark task","lastModifiedDate":"2023-01-28"},{"lineNumber":155,"author":{"gitId":"ezeAng"},"content":"     * @return","lastModifiedDate":"2023-01-28"},{"lineNumber":156,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":157,"author":{"gitId":"ezeAng"},"content":"    public boolean mark(Integer index, String markOption) {","lastModifiedDate":"2023-01-28"},{"lineNumber":158,"author":{"gitId":"ezeAng"},"content":"        assert(index \u003e 0) : \"index must be larger than 0\";","lastModifiedDate":"2023-02-07"},{"lineNumber":159,"author":{"gitId":"ezeAng"},"content":"        if (index \u003e taskList.size()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":160,"author":{"gitId":"ezeAng"},"content":"            return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":161,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":162,"author":{"gitId":"ezeAng"},"content":"        Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":163,"author":{"gitId":"ezeAng"},"content":"        if (markOption.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":164,"author":{"gitId":"ezeAng"},"content":"            task.markDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":165,"author":{"gitId":"ezeAng"},"content":"        } else if (markOption.equalsIgnoreCase(\"unmark\")){","lastModifiedDate":"2023-01-28"},{"lineNumber":166,"author":{"gitId":"ezeAng"},"content":"            task.markUndone();","lastModifiedDate":"2023-01-28"},{"lineNumber":167,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":168,"author":{"gitId":"ezeAng"},"content":"        return true;","lastModifiedDate":"2023-01-28"},{"lineNumber":169,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":170,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":171,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":172,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":173,"author":{"gitId":"ezeAng"},"content":"    /**Gets the size of the task list, in a String.","lastModifiedDate":"2023-01-28"},{"lineNumber":174,"author":{"gitId":"ezeAng"},"content":"     * @return String that details size of task list","lastModifiedDate":"2023-01-28"},{"lineNumber":175,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":176,"author":{"gitId":"ezeAng"},"content":"    public String getTaskCount() {","lastModifiedDate":"2023-01-28"},{"lineNumber":177,"author":{"gitId":"ezeAng"},"content":"        return \"Now you have \" + taskCount.toString() + \" tasks in the list.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":178,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":179,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":180,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":181,"author":{"gitId":"ezeAng"},"content":"     * Prints all the Tasks in the list with or without index n.o as per specification.","lastModifiedDate":"2023-01-30"},{"lineNumber":182,"author":{"gitId":"ezeAng"},"content":"     * This is useful for creating multiple task lists and printing them out together without","lastModifiedDate":"2023-01-30"},{"lineNumber":183,"author":{"gitId":"ezeAng"},"content":"     * having a mess of repeated numbering.","lastModifiedDate":"2023-01-30"},{"lineNumber":184,"author":{"gitId":"ezeAng"},"content":"     * @param toShowIndex determines if index number in list is printed","lastModifiedDate":"2023-01-30"},{"lineNumber":185,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":186,"author":{"gitId":"ezeAng"},"content":"    public void printList(boolean toShowIndex) {","lastModifiedDate":"2023-01-30"},{"lineNumber":187,"author":{"gitId":"ezeAng"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":188,"author":{"gitId":"ezeAng"},"content":"            Ui.showNothingInList();","lastModifiedDate":"2023-01-28"},{"lineNumber":189,"author":{"gitId":"ezeAng"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":190,"author":{"gitId":"ezeAng"},"content":"            int i \u003d 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":191,"author":{"gitId":"ezeAng"},"content":"            if (toShowIndex) {","lastModifiedDate":"2023-01-30"},{"lineNumber":192,"author":{"gitId":"ezeAng"},"content":"                Ui.showListPre();","lastModifiedDate":"2023-01-30"},{"lineNumber":193,"author":{"gitId":"ezeAng"},"content":"                for (Task task: taskList) {","lastModifiedDate":"2023-01-28"},{"lineNumber":194,"author":{"gitId":"ezeAng"},"content":"                    String listInline \u003d task.getTaskInline(i);","lastModifiedDate":"2023-01-28"},{"lineNumber":195,"author":{"gitId":"ezeAng"},"content":"                    i++;","lastModifiedDate":"2023-01-28"},{"lineNumber":196,"author":{"gitId":"ezeAng"},"content":"                    System.out.println(listInline);","lastModifiedDate":"2023-01-28"},{"lineNumber":197,"author":{"gitId":"ezeAng"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":198,"author":{"gitId":"ezeAng"},"content":"            } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":199,"author":{"gitId":"ezeAng"},"content":"                for (Task task: taskList) {","lastModifiedDate":"2023-01-30"},{"lineNumber":200,"author":{"gitId":"ezeAng"},"content":"                    String listInline \u003d task.getTaskInline();","lastModifiedDate":"2023-01-30"},{"lineNumber":201,"author":{"gitId":"ezeAng"},"content":"                    System.out.println(listInline);","lastModifiedDate":"2023-01-30"},{"lineNumber":202,"author":{"gitId":"ezeAng"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":203,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":204,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":205,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":206,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":207,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":208,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":209,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":210,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":211,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":212,"author":{"gitId":"ezeAng"},"content":"     * Prints all the Tasks in the list with or without index n.o as per specification.","lastModifiedDate":"2023-01-31"},{"lineNumber":213,"author":{"gitId":"ezeAng"},"content":"     * This is useful for creating multiple task lists and printing them out together without","lastModifiedDate":"2023-01-31"},{"lineNumber":214,"author":{"gitId":"ezeAng"},"content":"     * having a mess of repeated numbering.","lastModifiedDate":"2023-01-31"},{"lineNumber":215,"author":{"gitId":"ezeAng"},"content":"     * @param toShowIndex determines if index number in list is printed","lastModifiedDate":"2023-01-31"},{"lineNumber":216,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":217,"author":{"gitId":"ezeAng"},"content":"    public String printList(boolean toShowIndex, boolean isStringOutput) {","lastModifiedDate":"2023-01-31"},{"lineNumber":218,"author":{"gitId":"ezeAng"},"content":"        StringBuilder printListOutput \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":219,"author":{"gitId":"ezeAng"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-31"},{"lineNumber":220,"author":{"gitId":"ezeAng"},"content":"            printListOutput.append(Ui.showNothingInList(true));","lastModifiedDate":"2023-01-31"},{"lineNumber":221,"author":{"gitId":"ezeAng"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":222,"author":{"gitId":"ezeAng"},"content":"            int i \u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":223,"author":{"gitId":"ezeAng"},"content":"            if (toShowIndex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":224,"author":{"gitId":"ezeAng"},"content":"                printListOutput.append(Ui.showListPre(true)).append(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":225,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":226,"author":{"gitId":"ezeAng"},"content":"                for (Task task: taskList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":227,"author":{"gitId":"ezeAng"},"content":"                    String listInline \u003d task.getTaskInline(i);","lastModifiedDate":"2023-01-31"},{"lineNumber":228,"author":{"gitId":"ezeAng"},"content":"                    i++;","lastModifiedDate":"2023-01-31"},{"lineNumber":229,"author":{"gitId":"ezeAng"},"content":"                    printListOutput.append(listInline).append(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":230,"author":{"gitId":"ezeAng"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":231,"author":{"gitId":"ezeAng"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":232,"author":{"gitId":"ezeAng"},"content":"                for (Task task: taskList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":233,"author":{"gitId":"ezeAng"},"content":"                    String listInline \u003d task.getTaskInline();","lastModifiedDate":"2023-01-31"},{"lineNumber":234,"author":{"gitId":"ezeAng"},"content":"                    printListOutput.append(listInline).append(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":235,"author":{"gitId":"ezeAng"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":236,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":237,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":238,"author":{"gitId":"ezeAng"},"content":"        return printListOutput.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":239,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":240,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":241,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":242,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":243,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":244,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":245,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":246,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ezeAng":246}},{"path":"src/main/java/src/main/c4po/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"     * Instantiates a To.Do task","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"     * @param description a String describing the task","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"        super(description, false);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"     * @return","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"    protected String getTaskFileFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"        return \"T\" + \" | \" + super.getTaskFileFormat();","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"     * @return","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline() {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"        return \"[T]\" + super.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"     * @return","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline(Integer index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"        return index.toString() + \". [T]\" + super.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":46}},{"path":"src/main/java/src/main/c4po/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"public class Ui {","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"    private static final String QUOTE_TASKS_FOUND \u003d \"Sir, here are the tasks found which match your input:\";","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"    private static final String QUOTE_NO_TASKS_FOUND \u003d \"Sir, there were no tasks found which matched the keyword(s)\" ;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"    Scanner userInputScan;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"    //Text print constants","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"    private static final String NAME \u003d \"C4PO-Storage\";","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"    private static final String LINE \u003d \"-----------------------------------------------\";","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"    private static final String QUOTE \u003d \"Hello. I don’t believe we have been introduced. A pleasure to meet you. I am \" + NAME + \" Human-Computer Relations.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"    private static final String JOB_QUOTE \u003d \"I collect words which you say.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"    private static final String CALL_TO_ACTION \u003d \": Master, please type your response below.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"    private static final String FORGOT_QUOTE \u003d \"Oh! It seems I do not remember your past tasks... silly me! Let me organise my circuits.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"    private static final String REMEMBER_QUOTE \u003d \"Oh! It seems I do remember your past tasks... thank goodness! Let me see...\";","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"    private static final String INIT_MEMORY_QUOTE \u003d \"Thank you for waiting sir. Successfully initiated memory\";","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"    private static final String FAREWELL_QUOTE \u003d \": Goodbye! I\u0027ll miss all of you, especially you R3-D3.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"    private static final String NO_SUCH_TASK_QUOTE \u003d \"No such item exists in list\";","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"    public static final String UNABLE_TO_UNDERSTAND_QUOTE \u003d \"My apologies sir, my program forbids me from translating anything other than command words.\" + \"\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"            + \"input /commands for the list of available commands!\";","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"    private static final String MARKED_DONE_QUOTE \u003d \"Great work sir! I\u0027ve marked this task as done. Task:\";","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"    public static final String MARK_ERR \u003d \"Failed to delete! Index for deletion may be empty or does not exist.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"    private static final String UNMARKED_QUOTE \u003d \"Ahhh I see ...  I shall unmark that task then. *beep* Done. Task:\";","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"    private static final String DATA_FILE_CREATE_ERROR \u003d \"Error creating data file\";","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"    private static final String NOTHING_LIST \u003d \"Master, there seems to be nothing in your list! Goodness me! Has my circuitry failed me again?!\";","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"    private static final String ITEMS_IN_LIST_PREFIX \u003d \"Master, here are the items in your list:\";","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"    private static final String TASK_ADDED \u003d \"Excellent sir, I\u0027ve added the task: \";","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"    private static final String TASK_DEL_QUOTE \u003d \"Ahhh I see ...  I shall delete that task then. *beep* Done. Task deleted:\";","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"    private static final String MARK_FAIL \u003d \"Operation failed. The task may not exist.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"    private static final String COMMAND_LIST \u003d \"(command follows after \u0027|\u0027, { } encloses your input, [ ] refers to optional inputs)\"","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"            + \"\\n\" + \"Adding Tasks: \"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"            + \"\\n\" + \"  Todo | todo {desc}\"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"            + \"\\n\" + \"  Deadline | deadline {desc} /byRec {yyyy-mm-dd} [{HHmm}]\"","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"            + \"\\n\" + \"  Event | event {desc} /from {start_desc} /to {end_desc}\"","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"            + \"\\n\" + \"Listing all tasks: | list\"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"            + \"\\n\" + \"Deleting task | delete {task_index}\"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"            + \"\\n\" + \"Finding tasks with keywords | find {task_keyword}\"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"            + \"\\n\" + \"Mark or Unmark tasks | mark {task_index} | unmark {task_index}\"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"            + \"\\n\" + \"Help | /commands \";","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"    public Ui() {","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"        userInputScan \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"    public static void showCommandError() {","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"        System.out.println(\"Failed to execute command\");","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"    public static String showCommandError(boolean isStringOutput) {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"        return (\"Failed to execute command\");","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"    public static String showUnderstandError(boolean isStringOutput) {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"        return UNABLE_TO_UNDERSTAND_QUOTE;","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"    public static void showTasksFound() {","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"        print(QUOTE_TASKS_FOUND);","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"    public static String showTasksFound(boolean isStringOut) {","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"        return (QUOTE_TASKS_FOUND);","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"ezeAng"},"content":"    public static void showNoTasksFound() {","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"ezeAng"},"content":"        print(QUOTE_NO_TASKS_FOUND);","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"ezeAng"},"content":"     * returns string quoting no tasks found","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"ezeAng"},"content":"    public static String showNoTasksFound(boolean isStringOutput) {","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"ezeAng"},"content":"        return (QUOTE_NO_TASKS_FOUND);","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"ezeAng"},"content":"    public static String showCommandList(boolean b) {","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"ezeAng"},"content":"        return COMMAND_LIST;","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"ezeAng"},"content":"     * Returns a string containing the user input","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"ezeAng"},"content":"     * @return","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"ezeAng"},"content":"    public String getNextInput() {","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"ezeAng"},"content":"        return userInputScan.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"ezeAng"},"content":"     * Prints a specified number of dashed lines to the console output","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"ezeAng"},"content":"     * @param num","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"ezeAng"},"content":"    public static void printDashLine(Integer num) {","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"ezeAng"},"content":"        for (int i \u003d 0; i \u003c num; i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"ezeAng"},"content":"            System.out.println(LINE);","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"ezeAng"},"content":"    public static void showNoSuchTask() {","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"ezeAng"},"content":"        System.out.println(NO_SUCH_TASK_QUOTE);","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"ezeAng"},"content":"    public static String showNoSuchTask(boolean isStringOut) {","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"ezeAng"},"content":"        return (NO_SUCH_TASK_QUOTE);","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"ezeAng"},"content":"     * Prints welcomes messages to the output terminal","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"ezeAng"},"content":"    public static void showIntroduction() {","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"ezeAng"},"content":"        //Introductory Responses","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"ezeAng"},"content":"        System.out.println(QUOTE);","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"ezeAng"},"content":"        System.out.println(JOB_QUOTE);","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"ezeAng"},"content":"        System.out.println(NAME + CALL_TO_ACTION);","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"ezeAng"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"ezeAng"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"ezeAng"},"content":"     * Returns String of welcomes messages to the output terminal","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"ezeAng"},"content":"    public static String showIntroduction(boolean b) {","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"ezeAng"},"content":"        //Introductory Responses","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"ezeAng"},"content":"        StringBuilder intro \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"ezeAng"},"content":"        intro.append(QUOTE).append(\"\\n\")","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"ezeAng"},"content":"                .append(JOB_QUOTE).append(\"\\n\")","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"ezeAng"},"content":"                .append(NAME)","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"ezeAng"},"content":"                .append(CALL_TO_ACTION);","lastModifiedDate":"2023-01-31"},{"lineNumber":143,"author":{"gitId":"ezeAng"},"content":"        return intro.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"ezeAng"},"content":"     * Prints string str to the output console","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"ezeAng"},"content":"     * @param str","lastModifiedDate":"2023-01-28"},{"lineNumber":150,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"ezeAng"},"content":"    public static void print(String str) {","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"ezeAng"},"content":"        System.out.println(str);","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":154,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":155,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":156,"author":{"gitId":"ezeAng"},"content":"    ","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"ezeAng"},"content":"    public static void showTaskDeletedQuote() {","lastModifiedDate":"2023-01-28"},{"lineNumber":158,"author":{"gitId":"ezeAng"},"content":"        System.out.println(TASK_DEL_QUOTE);","lastModifiedDate":"2023-01-28"},{"lineNumber":159,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":160,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":161,"author":{"gitId":"ezeAng"},"content":"    public static String showTaskDeletedQuote(boolean isStringOut) {","lastModifiedDate":"2023-01-31"},{"lineNumber":162,"author":{"gitId":"ezeAng"},"content":"        return (TASK_DEL_QUOTE);","lastModifiedDate":"2023-01-31"},{"lineNumber":163,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":164,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":165,"author":{"gitId":"ezeAng"},"content":"    public static void printTask(Task task) {","lastModifiedDate":"2023-01-28"},{"lineNumber":166,"author":{"gitId":"ezeAng"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":167,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":168,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":169,"author":{"gitId":"ezeAng"},"content":"    public static String printTask(Task task, boolean isStringOutput) {","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"ezeAng"},"content":"        return (task.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":171,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":172,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":173,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":174,"author":{"gitId":"ezeAng"},"content":"     * Prints loading error message","lastModifiedDate":"2023-01-28"},{"lineNumber":175,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":176,"author":{"gitId":"ezeAng"},"content":"    public static void showLoadingError() {","lastModifiedDate":"2023-01-28"},{"lineNumber":177,"author":{"gitId":"ezeAng"},"content":"        System.out.println(FORGOT_QUOTE);","lastModifiedDate":"2023-01-28"},{"lineNumber":178,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":179,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":180,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":181,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":182,"author":{"gitId":"ezeAng"},"content":"     * Returns loading error message","lastModifiedDate":"2023-01-31"},{"lineNumber":183,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":184,"author":{"gitId":"ezeAng"},"content":"    public static String showLoadingError(boolean b) {","lastModifiedDate":"2023-01-31"},{"lineNumber":185,"author":{"gitId":"ezeAng"},"content":"        return (FORGOT_QUOTE);","lastModifiedDate":"2023-01-31"},{"lineNumber":186,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":187,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":188,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":189,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":190,"author":{"gitId":"ezeAng"},"content":"     * Prints initialised db message","lastModifiedDate":"2023-01-28"},{"lineNumber":191,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":192,"author":{"gitId":"ezeAng"},"content":"    public static void showCreatedDbMsg() {","lastModifiedDate":"2023-01-28"},{"lineNumber":193,"author":{"gitId":"ezeAng"},"content":"        System.out.println(INIT_MEMORY_QUOTE);","lastModifiedDate":"2023-01-28"},{"lineNumber":194,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":195,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":196,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":197,"author":{"gitId":"ezeAng"},"content":"    public static void showLoadedMsg() {","lastModifiedDate":"2023-01-28"},{"lineNumber":198,"author":{"gitId":"ezeAng"},"content":"        System.out.println(REMEMBER_QUOTE);","lastModifiedDate":"2023-01-28"},{"lineNumber":199,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":200,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":201,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":202,"author":{"gitId":"ezeAng"},"content":"     * Returns loaded-message String","lastModifiedDate":"2023-01-31"},{"lineNumber":203,"author":{"gitId":"ezeAng"},"content":"     * @param b","lastModifiedDate":"2023-01-31"},{"lineNumber":204,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":205,"author":{"gitId":"ezeAng"},"content":"    public static String showLoadedMsg(boolean b) {","lastModifiedDate":"2023-01-31"},{"lineNumber":206,"author":{"gitId":"ezeAng"},"content":"        return (REMEMBER_QUOTE);","lastModifiedDate":"2023-01-31"},{"lineNumber":207,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":208,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":209,"author":{"gitId":"ezeAng"},"content":"    public static void showCreateDbError() {","lastModifiedDate":"2023-01-28"},{"lineNumber":210,"author":{"gitId":"ezeAng"},"content":"        System.out.println(DATA_FILE_CREATE_ERROR);","lastModifiedDate":"2023-01-28"},{"lineNumber":211,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":212,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":213,"author":{"gitId":"ezeAng"},"content":"    public static void showFarewell() {","lastModifiedDate":"2023-01-28"},{"lineNumber":214,"author":{"gitId":"ezeAng"},"content":"        System.out.println(NAME + FAREWELL_QUOTE);","lastModifiedDate":"2023-01-28"},{"lineNumber":215,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":216,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":217,"author":{"gitId":"ezeAng"},"content":"    public static String showFarewell(boolean isStringOutput) {","lastModifiedDate":"2023-01-31"},{"lineNumber":218,"author":{"gitId":"ezeAng"},"content":"        return (NAME + FAREWELL_QUOTE);","lastModifiedDate":"2023-01-31"},{"lineNumber":219,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":220,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":221,"author":{"gitId":"ezeAng"},"content":"    public static void showMarkedDone() {","lastModifiedDate":"2023-01-28"},{"lineNumber":222,"author":{"gitId":"ezeAng"},"content":"        System.out.println(MARKED_DONE_QUOTE);","lastModifiedDate":"2023-01-28"},{"lineNumber":223,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":224,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":225,"author":{"gitId":"ezeAng"},"content":"    public static String showMarkedDone(boolean isStringOutput) {","lastModifiedDate":"2023-01-31"},{"lineNumber":226,"author":{"gitId":"ezeAng"},"content":"        return (MARKED_DONE_QUOTE);","lastModifiedDate":"2023-01-31"},{"lineNumber":227,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":228,"author":{"gitId":"ezeAng"},"content":"    ","lastModifiedDate":"2023-01-31"},{"lineNumber":229,"author":{"gitId":"ezeAng"},"content":"    public static void showNothingInList() {","lastModifiedDate":"2023-01-28"},{"lineNumber":230,"author":{"gitId":"ezeAng"},"content":"        System.out.println(NOTHING_LIST);","lastModifiedDate":"2023-01-28"},{"lineNumber":231,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":232,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":233,"author":{"gitId":"ezeAng"},"content":"    public static String showNothingInList(boolean isStringOutput) {","lastModifiedDate":"2023-01-31"},{"lineNumber":234,"author":{"gitId":"ezeAng"},"content":"        return (NOTHING_LIST);","lastModifiedDate":"2023-01-31"},{"lineNumber":235,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":236,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":237,"author":{"gitId":"ezeAng"},"content":"    public static void showUnmarked() {","lastModifiedDate":"2023-01-28"},{"lineNumber":238,"author":{"gitId":"ezeAng"},"content":"        System.out.println(UNMARKED_QUOTE);","lastModifiedDate":"2023-01-28"},{"lineNumber":239,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":240,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":241,"author":{"gitId":"ezeAng"},"content":"    public static String showUnmarked(boolean isStringOutput) {","lastModifiedDate":"2023-01-31"},{"lineNumber":242,"author":{"gitId":"ezeAng"},"content":"        return (UNMARKED_QUOTE);","lastModifiedDate":"2023-01-31"},{"lineNumber":243,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":244,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":245,"author":{"gitId":"ezeAng"},"content":"    public static void showTaskAdded(){","lastModifiedDate":"2023-01-28"},{"lineNumber":246,"author":{"gitId":"ezeAng"},"content":"        System.out.println(TASK_ADDED);","lastModifiedDate":"2023-01-28"},{"lineNumber":247,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":248,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":249,"author":{"gitId":"ezeAng"},"content":"    public static String showTaskAdded(boolean isStringDisplay){","lastModifiedDate":"2023-01-31"},{"lineNumber":250,"author":{"gitId":"ezeAng"},"content":"        return (TASK_ADDED);","lastModifiedDate":"2023-01-31"},{"lineNumber":251,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":252,"author":{"gitId":"ezeAng"},"content":"    ","lastModifiedDate":"2023-01-31"},{"lineNumber":253,"author":{"gitId":"ezeAng"},"content":"    public static void showListPre() {","lastModifiedDate":"2023-01-28"},{"lineNumber":254,"author":{"gitId":"ezeAng"},"content":"        System.out.println(ITEMS_IN_LIST_PREFIX);","lastModifiedDate":"2023-01-28"},{"lineNumber":255,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":256,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":257,"author":{"gitId":"ezeAng"},"content":"    public static String showListPre(boolean isStringOutput) {","lastModifiedDate":"2023-01-31"},{"lineNumber":258,"author":{"gitId":"ezeAng"},"content":"        return (ITEMS_IN_LIST_PREFIX);","lastModifiedDate":"2023-01-31"},{"lineNumber":259,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":260,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":261,"author":{"gitId":"ezeAng"},"content":"    public static void showMarkFail() {","lastModifiedDate":"2023-01-28"},{"lineNumber":262,"author":{"gitId":"ezeAng"},"content":"        System.out.println(MARK_FAIL);","lastModifiedDate":"2023-01-28"},{"lineNumber":263,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":264,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":265,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":266,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":267,"author":{"gitId":"ezeAng"},"content":"    public static String showMarkFail(boolean isStrOut) {","lastModifiedDate":"2023-01-31"},{"lineNumber":268,"author":{"gitId":"ezeAng"},"content":"        return (MARK_FAIL);","lastModifiedDate":"2023-01-31"},{"lineNumber":269,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":270,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ezeAng":270}},{"path":"src/main/java/src/main/c4po/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.main.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"    private Integer indexToUnmark;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"    public UnmarkCommand(Integer index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"        assert(index \u003e 0) : \"index must be larger than 0\";","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"        this.indexToUnmark \u003d index;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"     * In this case, UnmarkCommand unmarks the task specified","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"     * @param tasks are the list of tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"     * @param ui is the instance of UI","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"     * @param storage the instance of Storage which holds and writes to the data file","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"     * @throws BotException","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws BotException {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"            boolean isSuccess \u003d tasks.mark(indexToUnmark, \"unmark\");","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"            if (isSuccess) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"                Ui.showUnmarked();","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"                Ui.showMarkFail();","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"            Ui.print(tasks.getItem(indexToUnmark).getTaskInline());","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"            String markErr \u003d \"Sir! Index for toggling mark cannot be empty\";","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"            throw new BotException(e.getMessage() + markErr);","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"     * Executes the command with actions specific to each extension of this","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"     * class Command","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"     * @param tasks          are the list of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"     * @param ui             is the instance of UI","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"     * @param storage        the instance of Storage which holds and writes to the data file","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"     * @param isStringOutput","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"     * @throws BotException","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, boolean isStringOutput) throws BotException {","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"        StringBuilder unmarkResponse \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"            boolean isSuccess \u003d tasks.mark(indexToUnmark, \"unmark\");","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"            if (isSuccess) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"                unmarkResponse.append(Ui.showUnmarked(true)).append(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"                unmarkResponse.append(Ui.showMarkFail(true)).append(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"            unmarkResponse.append(tasks.getItem(indexToUnmark).getTaskInline());","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"            String markErr \u003d \"Sir! Index for toggling mark cannot be empty\";","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"            throw new BotException(e.getMessage() + markErr);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"        return unmarkResponse.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"     * @return","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ezeAng":76}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"400.0\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ezeAng":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Input here\" style\u003d\"-fx-background-color: #CACCCB;\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" AnchorPane.topAnchor\u003d\"558.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: EB7700;\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #343433;\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ezeAng":23}},{"path":"src/test/java/src/test/java/c4po/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.test.java.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"import src.main.c4po.Event;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"public class EventTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"    public void getTaskInlineFormatTest(){","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"        Event newEvent \u003d new Event(\"dummydesc\", \"1pm\", \"3pm\");","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"        String expected \u003d \"1. [E][ ] dummydesc (from: 1pm to: 3pm)\";","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"        assertEquals(expected, newEvent.getTaskInline(1));","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ezeAng":15}},{"path":"src/test/java/src/test/java/c4po/QuitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.test.java.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"import src.main.c4po.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"import src.main.c4po.QuitCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"public class QuitCommandTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"    public void exitQueTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"        Command quitCommand \u003d new QuitCommand();","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"        assertTrue(quitCommand.isExit());","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ezeAng":17}},{"path":"src/test/java/src/test/java/c4po/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"package src.test.java.c4po;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"import src.main.c4po.BotException;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"import src.main.c4po.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"import src.main.c4po.ToDo;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"    public void testAddedTask() throws BotException {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"        ToDo newTodo \u003d new ToDo(\"testTodo\");","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"        tasks.addItem(newTodo);","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"        assertEquals(newTodo, tasks.getItem(1));","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ezeAng":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"todo todo_1","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"deadline dead_1 /byRec tonight","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"event es2002 /from thurs 3pm /to thurs 6pm","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"bye","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":10}},{"path":"text-ui-test/runtest-copy.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"then","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"    mkdir ../bin","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"fi","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"# delete output from previous run","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"then","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"fi","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"then","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"    exit 1","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"fi","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"# convert to UNIX format","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"#cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"# compare the output to the expected output","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"then","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"    exit 0","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"else","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"    exit 1","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"fi","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":38}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"#edited","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"java -classpath ../bin C4PO \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ezeAng":3,"-":36}}]
