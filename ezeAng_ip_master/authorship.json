[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"T | 1 | this","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"E | 1 | eve2 | now | then","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"D | 0 | cs | tmr","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"ezeAng":3}},{"path":"src/main/java/BotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"public class BotException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"    public BotException(String errorMessage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"ezeAng":5}},{"path":"src/main/java/C4PO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"public class C4PO {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"    public static String name \u003d \"C4PO-Storage\";","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"    public static String line \u003d \"-----------------------------------------------\";","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"    public static String quote \u003d \"Hello. I donâ€™t believe we have been introduced. A pleasure to meet you. I am \" + name + \" Human-Computer Relations.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"    public static String job \u003d \"I collect words which you say.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    public static String callToAction \u003d \": Master, please type your response below.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"    protected static String fileP \u003d \"./data/tasks.txt\";","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"    protected static String dirP \u003d \"./data\";","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"    public static String forgetQuote \u003d \"Oh! It seems I do not remember your past tasks... silly me! Let me organise my circuits.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"    public static String rememberQuote \u003d \"Oh! It seems I do remember your past tasks... thank goodness! Let me see, the tasks are:\";","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"    public static String initMemory \u003d \"Thank you for waiting sir. Successfully initiated memory\";","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"    public static String farewellQuote \u003d \": Goodbye! I\u0027ll miss all of you, especially you R3-D3.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"    public static String taskAddedQuote \u003d \"Excellent sir, I\u0027ve added the task: \";","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"    public static String unableToUnderstandQuote \u003d \"My apologies sir, my program forbids me from translating anything other than command words.\";","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"    public static String markedAsDoneQuote \u003d \"Great work sir! I\u0027ve marked this task as done. Task:\";","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"    public static String markErr \u003d \"Sir! Index for deletion cannot be empty\";","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"        //Introductory Responses","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"        System.out.println(quote);","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"        System.out.println(job);","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"        System.out.println(name + callToAction);","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"        System.out.println(line);","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"        System.out.println(line);","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"        //Init scanner","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"        Scanner newScan \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"        //Init Database retrieval","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"        //Create directories if not exist","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"        Files.createDirectories(Paths.get(dirP));","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"        File f \u003d new File(fileP);","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"            System.out.println(forgetQuote);","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"            boolean success \u003d f.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"            if (success) {","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"                System.out.println(initMemory);","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"            System.out.println(rememberQuote);","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"            //Else, if exists then load it all into Tasks.list","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"            Task.loadFromFile(fileP);","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"            Task.printList();","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"        //Main Loop","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"        //From here, append newly added Tasks to the file","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"        boolean taskFileAppend \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"        while (true) {","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"            String receive \u003d newScan.nextLine(); //reads user input","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"                if (receive.length() \u003e 2 \u0026\u0026 \"bye\".equalsIgnoreCase(receive.strip())) {","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"                    System.out.println(name + farewellQuote);","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"ezeAng"},"content":"                } else if (receive.length() \u003e 3 \u0026\u0026 \"list\".equalsIgnoreCase(receive.strip())) {","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"ezeAng"},"content":"                    Task.printList();","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"ezeAng"},"content":"                } else if (receive.length() \u003e 3 \u0026\u0026 \"mark\".equalsIgnoreCase(receive.substring(0,4))) {","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"ezeAng"},"content":"                    try {","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"ezeAng"},"content":"                        Integer index \u003d Integer.valueOf(receive.substring(4).strip());","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"ezeAng"},"content":"                        String out \u003d Task.mark(index, \"mark\");","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"ezeAng"},"content":"                        if (!out.equals(\"No such item exists in list\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"ezeAng"},"content":"                            System.out.println(markedAsDoneQuote);","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"ezeAng"},"content":"                            Task.writeToFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"ezeAng"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(out);","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"ezeAng"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"ezeAng"},"content":"                        String markErr \u003d \"Sir! Index for toggling mark cannot be empty\";","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"ezeAng"},"content":"                        throw new BotException(markErr);","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"ezeAng"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"ezeAng"},"content":"                } else if (receive.length() \u003e 5 \u0026\u0026 \"unmark\".equalsIgnoreCase(receive.substring(0,6))) {","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"ezeAng"},"content":"                    try {","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"ezeAng"},"content":"                        Integer index \u003d Integer.valueOf(receive.substring(6).strip());","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"ezeAng"},"content":"                        String out \u003d Task.mark(index, \"unmark\");","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"ezeAng"},"content":"                        if (!out.equals(\"No such item exists in list\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"ezeAng"},"content":"                            System.out.println(\"Ahhh I see ...  I shall unmark that task then. *beep* Done. Task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"ezeAng"},"content":"                            Task.writeToFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"ezeAng"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(out);","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"ezeAng"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"ezeAng"},"content":"                        String markErr \u003d \"Sir! Index for toggling mark cannot be empty\";","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"ezeAng"},"content":"                        throw new BotException(markErr);","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"ezeAng"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"ezeAng"},"content":"                } else if (receive.length() \u003e 3 \u0026\u0026 \"todo\".equalsIgnoreCase(receive.substring(0,4))) {","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"ezeAng"},"content":"                    String desc \u003d receive.substring(4).strip();","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"ezeAng"},"content":"                    String errToDo \u003d \"Sir!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"ezeAng"},"content":"                    if (desc.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"ezeAng"},"content":"                        throw new BotException(errToDo);","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"ezeAng"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"ezeAng"},"content":"                    ToDo newTodo \u003d new ToDo(desc);","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"ezeAng"},"content":"                    if (taskFileAppend) {","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"ezeAng"},"content":"                        Task.writeToFile(newTodo.getTaskFileFormat());","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"ezeAng"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"ezeAng"},"content":"                    System.out.println(\"Excellent sir, I\u0027ve added the task: \");","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"ezeAng"},"content":"                    System.out.println(newTodo);","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"ezeAng"},"content":"                    System.out.println(Task.getTaskCount());","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"ezeAng"},"content":"                } else if (receive.length() \u003e 7 \u0026\u0026 \"deadline\".equalsIgnoreCase(receive.substring(0,8))) {","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"ezeAng"},"content":"                    String desc \u003d receive.substring(8).strip();","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"ezeAng"},"content":"                    String errDeadline \u003d \"Sir!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"ezeAng"},"content":"                    if (desc.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"ezeAng"},"content":"                        throw new BotException(errDeadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"ezeAng"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"ezeAng"},"content":"                    try {","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"ezeAng"},"content":"                        String[] stringArr \u003d desc.split(\" /by \");","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"ezeAng"},"content":"                        ArrayList\u003cString\u003e arr \u003d new ArrayList\u003cString\u003e(List.of(stringArr));","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"ezeAng"},"content":"                        String description \u003d arr.get(0);","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"ezeAng"},"content":"                        arr.remove(0);","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"ezeAng"},"content":"                        String dateTimeString \u003d String.join(\" \", arr);","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"ezeAng"},"content":"                        Deadline newDeadline \u003d new Deadline(description, dateTimeString);","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"ezeAng"},"content":"                        if (taskFileAppend) {","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"ezeAng"},"content":"                            Task.writeToFile(newDeadline.getTaskFileFormat());","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"ezeAng"},"content":"                        }","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(taskAddedQuote);","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(newDeadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(Task.getTaskCount());","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"ezeAng"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"ezeAng"},"content":"                        String eventErr \u003d \"Sir, there seems to be an error in your deadline details input.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"ezeAng"},"content":"                        throw new BotException(eventErr);","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"ezeAng"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":150,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":151,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":152,"author":{"gitId":"ezeAng"},"content":"                } else if (receive.length() \u003e 4 \u0026\u0026 \"event\".equalsIgnoreCase(receive.substring(0,5))) {","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"ezeAng"},"content":"                    String desc \u003d receive.substring(5).strip();","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"ezeAng"},"content":"                    String errEvent \u003d \"Sir!!! The description of a event cannot be empty.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"ezeAng"},"content":"                    if (desc.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"ezeAng"},"content":"                        throw new BotException(errEvent);","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"ezeAng"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":158,"author":{"gitId":"ezeAng"},"content":"                    try {","lastModifiedDate":"2023-01-18"},{"lineNumber":159,"author":{"gitId":"ezeAng"},"content":"                        String[] stringarr \u003d desc.split(\" /from \");","lastModifiedDate":"2023-01-18"},{"lineNumber":160,"author":{"gitId":"ezeAng"},"content":"                        String[] strarr \u003d stringarr[1].split(\" /to \");","lastModifiedDate":"2023-01-18"},{"lineNumber":161,"author":{"gitId":"ezeAng"},"content":"                        Event newEvent \u003d new Event(stringarr[0], strarr[0], strarr[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":162,"author":{"gitId":"ezeAng"},"content":"                        //If we want to append the task to the file","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"ezeAng"},"content":"                        if (taskFileAppend) {","lastModifiedDate":"2023-01-25"},{"lineNumber":164,"author":{"gitId":"ezeAng"},"content":"                            Task.writeToFile(newEvent.getTaskFileFormat());","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"ezeAng"},"content":"                        }","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(\"Excellent sir, I\u0027ve added the task: \");","lastModifiedDate":"2023-01-18"},{"lineNumber":167,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(newEvent);","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(Task.getTaskCount());","lastModifiedDate":"2023-01-18"},{"lineNumber":169,"author":{"gitId":"ezeAng"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(e);","lastModifiedDate":"2023-01-25"},{"lineNumber":171,"author":{"gitId":"ezeAng"},"content":"                        String eventErr \u003d \"Sir, there seems to be an error in your event details input.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":172,"author":{"gitId":"ezeAng"},"content":"                        throw new BotException(eventErr);","lastModifiedDate":"2023-01-25"},{"lineNumber":173,"author":{"gitId":"ezeAng"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":174,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":175,"author":{"gitId":"ezeAng"},"content":"                } else if (receive.length() \u003e 5 \u0026\u0026 \"delete\".equalsIgnoreCase(receive.substring(0,6))) {","lastModifiedDate":"2023-01-18"},{"lineNumber":176,"author":{"gitId":"ezeAng"},"content":"                    try {","lastModifiedDate":"2023-01-18"},{"lineNumber":177,"author":{"gitId":"ezeAng"},"content":"                        Integer index \u003d Integer.valueOf(receive.substring(6).strip());","lastModifiedDate":"2023-01-18"},{"lineNumber":178,"author":{"gitId":"ezeAng"},"content":"                        String out \u003d Task.delete(index);","lastModifiedDate":"2023-01-18"},{"lineNumber":179,"author":{"gitId":"ezeAng"},"content":"                        if (!out.equals(\"No such item exists in list\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":180,"author":{"gitId":"ezeAng"},"content":"                            System.out.println(\"Ahhh I see ...  I shall delete that task then. *beep* Done. Task deleted:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":181,"author":{"gitId":"ezeAng"},"content":"                        }","lastModifiedDate":"2023-01-25"},{"lineNumber":182,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(out);","lastModifiedDate":"2023-01-18"},{"lineNumber":183,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":184,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(Task.getTaskCount());","lastModifiedDate":"2023-01-18"},{"lineNumber":185,"author":{"gitId":"ezeAng"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":186,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":187,"author":{"gitId":"ezeAng"},"content":"                        throw new BotException(markErr);","lastModifiedDate":"2023-01-25"},{"lineNumber":188,"author":{"gitId":"ezeAng"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":189,"author":{"gitId":"ezeAng"},"content":"                } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":190,"author":{"gitId":"ezeAng"},"content":"                    String takFaham \u003d unableToUnderstandQuote;","lastModifiedDate":"2023-01-25"},{"lineNumber":191,"author":{"gitId":"ezeAng"},"content":"                    throw new BotException(takFaham);","lastModifiedDate":"2023-01-25"},{"lineNumber":192,"author":{"gitId":"ezeAng"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":193,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":194,"author":{"gitId":"ezeAng"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":195,"author":{"gitId":"ezeAng"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":196,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":197,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":198,"author":{"gitId":"ezeAng"},"content":"            System.out.println(line);","lastModifiedDate":"2023-01-18"},{"lineNumber":199,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ezeAng":199,"-":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"    protected String by;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"    protected String byTimeStr \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"    protected LocalTime byTime \u003d LocalTime.now();","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"    public static String dateTimeParseErrMsg \u003d \"Could not parse date time format, please write yyyy-MM-dd [HHmm]. \" +","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"            \"Include 0s in the tenths place. Optionally include time, separated by a space\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"        ArrayList\u003cString\u003e arr \u003d new ArrayList\u003c\u003e(List.of(by.split(\" \")));","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"            this.byDate \u003d LocalDate.parse(arr.get(0));","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"            this.by \u003d byDate.format(DateTimeFormatter.ofPattern(\"EEEE MMM d yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"            if (arr.size() \u003e 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"                this.byTime \u003d LocalTime.parse(arr.get(1), DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"                byTimeStr \u003d byTime.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"//            System.out.println(\"Excellent sir, I\u0027ve added the task: \");","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"//            System.out.println(this.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"            System.out.println(dateTimeParseErrMsg);","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"        super(description, false);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"        ArrayList\u003cString\u003e arr \u003d new ArrayList\u003c\u003e(List.of(by.split(\" \")));","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"            this.byDate \u003d LocalDate.parse(arr.get(0));","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"            this.by \u003d byDate.format(DateTimeFormatter.ofPattern(\"EEEE MMM d yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"            if (arr.size() \u003e 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"                this.byTime \u003d LocalTime.parse(arr.get(1), DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"                byTimeStr \u003d byTime.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"            System.out.println(\"Excellent sir, I\u0027ve added the task: \");","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"            System.out.println(this);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"            System.out.println(dateTimeParseErrMsg);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"    protected String getTaskFileFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"        return \"D\" + \" | \" + super.getTaskFileFormat() + \" | \" + by;","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline() {","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"        return \"[D]\" + super.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline(Integer index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"//        System.out.println(getDateTimeFormatted());","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"        return index.toString() + \". [D]\" + super.getTaskInline() + \" (by: \" + by + \" \" + byTimeStr + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"ezeAng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"ezeAng"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + by + \" \" + byTimeStr + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":81}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"    protected String start;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"    protected String end;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"        super(description, false);","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"    public Event(String description, String start, String end, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"    protected String getTaskFileFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"        return \"E\" + \" | \" + super.getTaskFileFormat() + \" | \" + start + \" | \" + end;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline() {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"        return \"[E]\" + super.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline(Integer index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"        return index.toString() + \". [E]\" + super.getTaskInline() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + this.start + \" to \" + this.end + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":37}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"    protected static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"    protected static Integer listSize \u003d 0; //or just increment accordingly","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"    protected static String delimiter \u003d Pattern.quote(\" | \");","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    public Integer index;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"    //Constructor","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"        this.index \u003d listSize + 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"        //add to taskList","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"        taskList.add(this);","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"        listSize++;","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"    public static void decrementTaskCount() {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"        listSize -\u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"     * Appends to end of file, content. Does not override old content","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"     * @param content","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"    public static void writeToFile(String content) throws IOException {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"        FileWriter fw \u003d new FileWriter(C4PO.fileP, true);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"        fw.write(content);","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"        fw.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"     * Writes all tasks to the file, overwriting the old data","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"    public static void writeToFile() throws IOException {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"        StringBuilder build \u003d new StringBuilder();","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"            build.append(task.getTaskFileFormat());","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"            build.append(\"\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"        FileWriter fw \u003d new FileWriter(C4PO.fileP);","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"        fw.write(build.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"        fw.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"    protected String getTaskFileFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"        String isDone \u003d statusIcon.equals(\"X\") ? \"1\" : \"0\";","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"        return isDone + \" | \" + this.description;","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"     * Loads file data from filePath and creates task objects from line read","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"     * @param fileP","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"    public static void loadFromFile(String fileP) throws FileNotFoundException {","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"        File f \u003d new File(fileP); // create a File for the given file path","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"ezeAng"},"content":"        //For each line, demultiplex line by line","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"ezeAng"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"ezeAng"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"ezeAng"},"content":"            String[] lineItems \u003d line.split(Task.delimiter);","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"ezeAng"},"content":"            String tag \u003d lineItems[0];","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"ezeAng"},"content":"            String isDone \u003d lineItems[1];","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"ezeAng"},"content":"            boolean isDoneBool \u003d isDone.equals(\"1\");","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"ezeAng"},"content":"            String desc \u003d lineItems[2];","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"ezeAng"},"content":"            switch (tag) {","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"ezeAng"},"content":"            case \"D\":","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"ezeAng"},"content":"                String by \u003d lineItems[3];","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"ezeAng"},"content":"                new Deadline(desc, by, isDoneBool);","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"ezeAng"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"ezeAng"},"content":"            case \"E\":","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"ezeAng"},"content":"                String start \u003d lineItems[3];","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"ezeAng"},"content":"                String end \u003d lineItems[4];","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"ezeAng"},"content":"                new Event(desc, start, end, isDoneBool);","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"ezeAng"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"ezeAng"},"content":"            case \"T\":","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"ezeAng"},"content":"                new ToDo(desc, isDoneBool);","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"ezeAng"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"ezeAng"},"content":"            default:","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"ezeAng"},"content":"                System.out.println(\"Error creating task\");","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"ezeAng"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"ezeAng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"ezeAng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"ezeAng"},"content":"    public static String mark(Integer index, String markOption) {","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"ezeAng"},"content":"        if (index \u003e taskList.size() || index \u003c 0) {","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"ezeAng"},"content":"            return \"No such item exists in list\";","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"ezeAng"},"content":"        Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"ezeAng"},"content":"        if (markOption.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"ezeAng"},"content":"            task.markDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"ezeAng"},"content":"        } else if (markOption.equalsIgnoreCase(\"unmark\")){","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"ezeAng"},"content":"            task.markUndone();","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"ezeAng"},"content":"        return task.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"ezeAng"},"content":"     * Deletes Task object at index specified and decrements task count","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"ezeAng"},"content":"     * @param index","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"ezeAng"},"content":"     * @return","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"ezeAng"},"content":"    public static String delete(Integer index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"ezeAng"},"content":"        if (index \u003e taskList.size() || index \u003c 0 ) {","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"ezeAng"},"content":"            return \"No such item exists in list\";","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"ezeAng"},"content":"        Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"ezeAng"},"content":"        Task.taskList.remove(index - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"ezeAng"},"content":"        decrementTaskCount();","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"ezeAng"},"content":"        String deletedTaskDesc \u003d task.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"ezeAng"},"content":"        return deletedTaskDesc;","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"ezeAng"},"content":"    //Mark as done","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"ezeAng"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":141,"author":{"gitId":"ezeAng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"ezeAng"},"content":"    //Mark undone","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"ezeAng"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"ezeAng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":149,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":150,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":151,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":152,"author":{"gitId":"ezeAng"},"content":"    //Get inline print of task description with specified index","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline(Integer index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"ezeAng"},"content":"        return index.toString() + \". \" + this.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":157,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline() {","lastModifiedDate":"2023-01-18"},{"lineNumber":158,"author":{"gitId":"ezeAng"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2023-01-18"},{"lineNumber":159,"author":{"gitId":"ezeAng"},"content":"        return \"[\" + statusIcon + \"] \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":160,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":161,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":162,"author":{"gitId":"ezeAng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":163,"author":{"gitId":"ezeAng"},"content":"        return this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":164,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":165,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":166,"author":{"gitId":"ezeAng"},"content":"    /**Gets the size of the task list, in a String.","lastModifiedDate":"2023-01-18"},{"lineNumber":167,"author":{"gitId":"ezeAng"},"content":"     * @return String that details size of task list","lastModifiedDate":"2023-01-18"},{"lineNumber":168,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":169,"author":{"gitId":"ezeAng"},"content":"    public static String getTaskCount() {","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"ezeAng"},"content":"        return \"Now you have \" + Task.listSize.toString() + \" tasks in the list.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":171,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":172,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":173,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":174,"author":{"gitId":"ezeAng"},"content":"     * Prints all the Tasks in the list","lastModifiedDate":"2023-01-18"},{"lineNumber":175,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":176,"author":{"gitId":"ezeAng"},"content":"    public static void printList() {","lastModifiedDate":"2023-01-18"},{"lineNumber":177,"author":{"gitId":"ezeAng"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-18"},{"lineNumber":178,"author":{"gitId":"ezeAng"},"content":"            System.out.println(\"Master, there seems to be nothing in your list! Goodness me! Has my circuitry failed me again?!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":179,"author":{"gitId":"ezeAng"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":180,"author":{"gitId":"ezeAng"},"content":"            System.out.println(\"Master, here are the items in your list:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":181,"author":{"gitId":"ezeAng"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":182,"author":{"gitId":"ezeAng"},"content":"                Integer val \u003d i+1;","lastModifiedDate":"2023-01-18"},{"lineNumber":183,"author":{"gitId":"ezeAng"},"content":"                String listInline \u003d taskList.get(i).getTaskInline(val);","lastModifiedDate":"2023-01-18"},{"lineNumber":184,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":185,"author":{"gitId":"ezeAng"},"content":"                System.out.println(listInline);","lastModifiedDate":"2023-01-18"},{"lineNumber":186,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":187,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":188,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":189,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":190,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":190}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"        super(description, false);","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"    protected String getTaskFileFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"        return \"T\" + \" | \" + super.getTaskFileFormat();","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline() {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"        return \"[T]\" + super.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline(Integer index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"        return index.toString() + \". [T]\" + super.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"todo todo_1","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"deadline dead_1 /by tonight","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"event es2002 /from thurs 3pm /to thurs 6pm","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"bye","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":10}},{"path":"text-ui-test/runtest-copy.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"then","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"    mkdir ../bin","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"fi","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"# delete output from previous run","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"then","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"fi","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"then","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"    exit 1","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"fi","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"# convert to UNIX format","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"#cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"# compare the output to the expected output","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"then","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"    exit 0","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"else","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"    exit 1","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"fi","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":38}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"#edited","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ezeAng":2,"-":37}}]
