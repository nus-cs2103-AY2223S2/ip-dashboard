[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"    protected String by;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline() {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"        return \"[D]\" + super.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline(Integer index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"        return index.toString() + \". [D]\" + super.getTaskInline() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"        //Introductory Responses","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"        String name \u003d \"C4PO-Storage-Duke\";","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"        String line \u003d \"-----------------------------------------------\";","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"        String quote \u003d \"Hello. I donâ€™t believe we have been introduced. A pleasure to meet you. I am \" + name + \" Human-Computer Relations.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"        String job \u003d \"I collect words which you say.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"        System.out.println(quote);","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"        System.out.println(job);","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"        System.out.println(name + \": Master, please type your response below.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"        System.out.println(line);","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"        System.out.println(line);","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"        //Init scanner","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"        Scanner newScan \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"        //Main Loop","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"        while (true) {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"            String receive \u003d newScan.nextLine(); //reads user input","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"                if (receive.length() \u003e 2 \u0026\u0026 \"bye\".equalsIgnoreCase(receive.strip())) {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"                    System.out.println(name + \": Goodbye! I\u0027ll miss all of you, especially you R3-D3.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"                } else if (receive.length() \u003e 3 \u0026\u0026 \"list\".equalsIgnoreCase(receive.strip())) {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"                    Task.printList();","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"                } else if (receive.length() \u003e 3 \u0026\u0026 \"mark\".equalsIgnoreCase(receive.substring(0,4))) {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"                    try {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"                        Integer index \u003d Integer.valueOf(receive.substring(4).strip());","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"                        String out \u003d Task.mark(index, \"mark\");","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"                        if (!out.equals(\"No such item exists in list\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"                            System.out.println(\"Great work sir! I\u0027ve marked this task as done. Task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(out);","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"                        String markErr \u003d \"Sir! Index for toggling mark cannot be empty\";","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"                        throw new DukeException(markErr);","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"                } else if (receive.length() \u003e 5 \u0026\u0026 \"unmark\".equalsIgnoreCase(receive.substring(0,6))) {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"                    try {","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"                        Integer index \u003d Integer.valueOf(receive.substring(6).strip());","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"                        String out \u003d Task.mark(index, \"unmark\");","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"                        if (!out.equals(\"No such item exists in list\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"                            System.out.println(\"Ahhh I see ...  I shall unmark that task then. *beep* Done. Task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(out);","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"                        String markErr \u003d \"Sir! Index for toggling mark cannot be empty\";","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"                        throw new DukeException(markErr);","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"                } else if (receive.length() \u003e 3 \u0026\u0026 \"todo\".equalsIgnoreCase(receive.substring(0,4))) {","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"                    String desc \u003d receive.substring(4);","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"                    String errToDo \u003d \"Sir!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"                    if (desc.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"                        throw new DukeException(errToDo);","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"                    ToDo newTodo \u003d new ToDo(desc);","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"                    System.out.println(\"Excellent sir, I\u0027ve added the task: \");","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"                    System.out.println(newTodo.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"ezeAng"},"content":"                    System.out.println(Task.getTaskCount());","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"ezeAng"},"content":"                } else if (receive.length() \u003e 7 \u0026\u0026 \"deadline\".equalsIgnoreCase(receive.substring(0,8))) {","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"ezeAng"},"content":"                    String desc \u003d receive.substring(8).strip();","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"ezeAng"},"content":"                    String errDeadline \u003d \"Sir!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"ezeAng"},"content":"                    if (desc.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"ezeAng"},"content":"                        throw new DukeException(errDeadline);","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"ezeAng"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"ezeAng"},"content":"                    try {","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"ezeAng"},"content":"                        String[] stringarr \u003d desc.split(\" /by \");","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"ezeAng"},"content":"                        Deadline newDeadline \u003d new Deadline(stringarr[0], stringarr[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(\"Excellent sir, I\u0027ve added the task: \");","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(newDeadline.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(Task.getTaskCount());","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"ezeAng"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"ezeAng"},"content":"                        String eventErr \u003d \"Sir, there seems to be an error in your deadline details input.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"ezeAng"},"content":"                        throw new DukeException(eventErr);","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"ezeAng"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"ezeAng"},"content":"                } else if (receive.length() \u003e 4 \u0026\u0026 \"event\".equalsIgnoreCase(receive.substring(0,5))) {","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"ezeAng"},"content":"                    String desc \u003d receive.substring(5).strip();","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"ezeAng"},"content":"                    String errEvent \u003d \"Sir!!! The description of a event cannot be empty.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"ezeAng"},"content":"                    if (desc.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"ezeAng"},"content":"                        throw new DukeException(errEvent);","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"ezeAng"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"ezeAng"},"content":"                    try {","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"ezeAng"},"content":"                        String[] stringarr \u003d desc.split(\" /from \");","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"ezeAng"},"content":"                        String[] strarr \u003d stringarr[1].split(\" /to \");","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"ezeAng"},"content":"                        Event newEvent \u003d new Event(stringarr[0], strarr[0], strarr[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(\"Excellent sir, I\u0027ve added the task: \");","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(newEvent.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(Task.getTaskCount());","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"ezeAng"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"ezeAng"},"content":"                        String eventErr \u003d \"Sir, there seems to be an error in your event details input.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"ezeAng"},"content":"                        throw new DukeException(eventErr);","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"ezeAng"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"ezeAng"},"content":"                } else if (receive.length() \u003e 5 \u0026\u0026 \"delete\".equalsIgnoreCase(receive.substring(0,6))) {","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"ezeAng"},"content":"                    try {","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"ezeAng"},"content":"                        Integer index \u003d Integer.valueOf(receive.substring(6).strip());","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"ezeAng"},"content":"                        String out \u003d Task.delete(index);","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(\"Ahhh I see ...  I shall delete that task then. *beep* Done. Task deleted:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(out);","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"ezeAng"},"content":"                        System.out.println(Task.getTaskCount());","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"ezeAng"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"ezeAng"},"content":"                        String markErr \u003d \"Sir! Index for deletion cannot be empty\";","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"ezeAng"},"content":"                        throw new DukeException(markErr);","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"ezeAng"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"ezeAng"},"content":"                } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"ezeAng"},"content":"                    String takFaham \u003d \"My apologies sir, my program forbids me from translating anything other than command words.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"ezeAng"},"content":"                    throw new DukeException(takFaham);","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"ezeAng"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"ezeAng"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"ezeAng"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"ezeAng"},"content":"            System.out.println(line);","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ezeAng":133,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"    protected String start;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"    protected String end;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline() {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"        return \"[E]\" + super.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline(Integer index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"        return index.toString() + \". [E]\" + super.getTaskInline() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + this.start + \" to \" + this.end + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":26}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"    protected static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"    protected static Integer listSize \u003d 0; //or just increment accordingly","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"    public Integer index;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"    //Constructor","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"        this.index \u003d listSize + 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"        //add to taskList","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"        taskList.add(this);","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"        listSize++;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"    public static String mark(Integer index, String markOption) {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"        if (index \u003e taskList.size() || index \u003c 0) {","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"            return \"No such item exists in list\";","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"        Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"        if (markOption.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"            task.markDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"        } else if (markOption.equalsIgnoreCase(\"unmark\")){","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"            task.markUndone();","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"        return task.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"ezeAng"},"content":"    public static String delete(Integer index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"ezeAng"},"content":"        if (index \u003e taskList.size() || index \u003c 0 ) {","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"ezeAng"},"content":"            return \"No such item exists in list\";","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"ezeAng"},"content":"        Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"ezeAng"},"content":"        Task.taskList.remove(index - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"ezeAng"},"content":"        String deletedTaskDesc \u003d task.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"ezeAng"},"content":"        return deletedTaskDesc;","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"ezeAng"},"content":"    //Mark as done","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"ezeAng"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"ezeAng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"ezeAng"},"content":"    //Mark undone","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"ezeAng"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"ezeAng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"ezeAng"},"content":"    //Get inline print of task description with specified index","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline(Integer index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"ezeAng"},"content":"        return index.toString() + \". \" + this.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline() {","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"ezeAng"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"ezeAng"},"content":"        return \"[\" + statusIcon + \"] \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"ezeAng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"ezeAng"},"content":"        return this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"ezeAng"},"content":"    /**Gets the size of the task list, in a String.","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"ezeAng"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"ezeAng"},"content":"     * @return String that details size of task list","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"ezeAng"},"content":"    public static String getTaskCount() {","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"ezeAng"},"content":"        return \"Now you have \" + Task.listSize.toString() + \" tasks in the list.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"ezeAng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"ezeAng"},"content":"     * Prints all the Tasks in the list","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"ezeAng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"ezeAng"},"content":"    public static void printList() {","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"ezeAng"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"ezeAng"},"content":"            System.out.println(\"Master, there seems to be nothing in your list! Goodness me! Has my circuitry failed me again?!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"ezeAng"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"ezeAng"},"content":"            System.out.println(\"Master, here are the items in your list:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"ezeAng"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"ezeAng"},"content":"                Integer val \u003d i+1;","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"ezeAng"},"content":"                String listInline \u003d taskList.get(i).getTaskInline(val);","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"ezeAng"},"content":"                System.out.println(listInline);","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"ezeAng"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"ezeAng"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":102}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline() {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"        return \"[T]\" + super.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    public String getTaskInline(Integer index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"        return index.toString() + \". [T]\" + super.getTaskInline();","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"todo todo_1","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"deadline dead_1 /by tonight","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"event es2002 /from thurs 3pm /to thurs 6pm","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"bye","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":10}},{"path":"text-ui-test/runtest-copy.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"ezeAng"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ezeAng"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ezeAng"},"content":"then","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ezeAng"},"content":"    mkdir ../bin","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ezeAng"},"content":"fi","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ezeAng"},"content":"# delete output from previous run","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ezeAng"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ezeAng"},"content":"then","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ezeAng"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ezeAng"},"content":"fi","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ezeAng"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ezeAng"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ezeAng"},"content":"then","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ezeAng"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ezeAng"},"content":"    exit 1","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ezeAng"},"content":"fi","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ezeAng"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ezeAng"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ezeAng"},"content":"# convert to UNIX format","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ezeAng"},"content":"#cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ezeAng"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ezeAng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ezeAng"},"content":"# compare the output to the expected output","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ezeAng"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"ezeAng"},"content":"then","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"ezeAng"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"ezeAng"},"content":"    exit 0","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"ezeAng"},"content":"else","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ezeAng"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"ezeAng"},"content":"    exit 1","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"ezeAng"},"content":"fi","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ezeAng":38}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"ezeAng"},"content":"#edited","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"ezeAng"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ezeAng":2,"-":37}}]
