{"authorDailyContributionsMap":{"ezeAng":[{"date":"2023-01-18","commitResults":[{"hash":"03bf9a2cc2a5e48f7392c57f6179b517ad5185f2","messageTitle":"Level-1","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":1}}},{"hash":"4940d798279905c94ed8817de3ff2e65aafc4c0b","messageTitle":"Level-2","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":2}}},{"hash":"c01853911a5099165d43a6576a5efecba7fb51fb","messageTitle":"Level-3","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":14}}},{"hash":"96ca846f67d216677217ffb878b2c1e2f200b8cc","messageTitle":"Level-3.1 Task class","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":1}}},{"hash":"930f242ce5c67678a8c147d40a0bed72176d251e","messageTitle":"Level-4","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":103,"deletions":3}}},{"hash":"9d3c324701d0d74b631b327135df85f29620cf7d","messageTitle":"Level-5","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"java":{"insertions":91,"deletions":63},"sh":{"insertions":40,"deletions":2}}},{"hash":"9e547f8b4e56c18a1d37ea14a4673490c64f7c3f","messageTitle":"Level-6","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":16}}}]},{"date":"2023-01-21","commitResults":[{"hash":"dfef6873a834ade665cacb6a13ccaafdd551dfe9","messageTitle":"A-TextUiTesting","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":0}}}]},{"date":"2023-01-25","commitResults":[{"hash":"02b4369a24b59433089dafd13b4ae1c9e6ce8ee8","messageTitle":"branch-Level-7","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":214,"deletions":43}}}]},{"date":"2023-01-26","commitResults":[{"hash":"54eb38975d952100dda2607c435c423e9446acd1","messageTitle":"branch-Level-8","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":59,"deletions":10}}}]},{"date":"2023-01-28","commitResults":[{"hash":"959509cdede5cb444c56ebdc9e633cc420dcdf3f","messageTitle":"A-MoreOOP","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":3},"java":{"insertions":711,"deletions":308},"sh":{"insertions":1,"deletions":1}}},{"hash":"40f19d15deac8a863c54befdbf031a5cd3ed3352","messageTitle":"Packaged all classes except C4PO public class","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":20}}},{"hash":"4fc60ba44373d4a286ee6cf588f2c570a4962bb0","messageTitle":"Recommit","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}},{"hash":"f29b12f96a778e1c36a876d5dc0a43e53d37f90b","messageTitle":"Add JUnit tests tests","messageBody":"","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":0}}},{"hash":"77088d5d69f65f18fca351a39a141aecb251bfaa","messageTitle":"Fix deadline and storage printing introduction and loading bug","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":8,"deletions":6}}}]},{"date":"2023-01-29","commitResults":[{"hash":"c04afa858ec6255dab6bd077724a1931bba2dcab","messageTitle":"Add javaDoc comments","messageBody":"","tags":["branch-A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":156,"deletions":11}}},{"hash":"bb11a08f3b7110093d4d606930d484df5d9398ee","messageTitle":"Follow coding standard","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":15}}}]},{"date":"2023-01-30","commitResults":[{"hash":"7fc83581293597956c6e86705765e8f98ce10706","messageTitle":"Create new feature Find","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":206,"deletions":25}}}]},{"date":"2023-01-31","commitResults":[{"hash":"bb1ca543ebdc203494b5d74fd73374fa1148b915","messageTitle":"Add GUI to C4PO(Duke)","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":17,"deletions":2},"fxml":{"insertions":45,"deletions":0},"java":{"insertions":640,"deletions":8}}}]},{"date":"2023-02-07","commitResults":[{"hash":"986b869cece97a0aacd2ee0d5a56fa508c104364","messageTitle":"Add assertions to parts of the code.","messageBody":"There are serveral parts where assertions were used. These are as follows:\nUnmarkCommand\nMarkCommand\nTaskList\n\nThey check that the index number provided is \u003e0, in other words, \u003e\u003d 1\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":5,"deletions":1}}},{"hash":"169cf38af89c40b700d7af356158db8a805b1e8e","messageTitle":"Add Assertions to parts of code","messageBody":"Assertions are needed to check that the value persisted downwards\ninto other deeper functions are not wrong\n\nAssertions to add:\n- index value - check that index input to the commands:\n*MarkCommand\n*UnmarkCommand\nTasklist.get__ commands\n\nIndex values are 0-indexed usually, but the user input index starts from the\nconvention from 1. We want to make sure the value is not equal to 0 by the time\nit reaches the deeper nested functions, which account for the 1-index by subtracting\nthe received index by 1.\n","tags":["branch-A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"61cf6fdabfce3bcebafbe26e6d38259f5a17e5a2","messageTitle":"dummy PR","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"9422f71dc35a4b90e30b5d524b4c59c3c4204cff","messageTitle":"dummy commit for PR practice","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":16,"deletions":16}}},{"hash":"8a5c2eace6e3c3e87c8e87726be1e71f37a09ae3","messageTitle":"Create Priority sorting functionality","messageBody":"To allow users to add a priority to their tasks\n\nSince the original list is already sorted by chronological order (in order of creation)\nwe need another way to sort the tasks to see the most important tasks\n\nHere we shall define a new command class - GetPrioritySortedCommand\nwhich when executed, will poll a priority Queue, sorting the tasks\nand returning a temporary array\n","fileTypesAndContributionMap":{"java":{"insertions":217,"deletions":249}}}]}]},"authorFileTypeContributionMap":{"ezeAng":{"java":1950,"md":0,"fxml":45,"sh":41,"bat":0,"gradle":17,"txt":10}},"authorContributionVariance":{"ezeAng":78869.87},"authorDisplayNameMap":{"ezeAng":"CS2103-F10-4 ANG ..KIEL"}}
