[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"filbertphang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"filbertphang"},"content":"    private String deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"filbertphang"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"filbertphang"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"filbertphang"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"filbertphang"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"filbertphang"},"content":"    protected String getTaskType() {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"filbertphang"},"content":"        return \"D\";","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"filbertphang"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"filbertphang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"filbertphang"},"content":"        String s \u003d String.format(","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"filbertphang"},"content":"            \"%s (by: %s)\",","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"filbertphang"},"content":"            super.toString(),","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"filbertphang"},"content":"            this.deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"filbertphang"},"content":"        );","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"filbertphang"},"content":"        return s;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"filbertphang"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"filbertphang":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"filbertphang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"filbertphang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"filbertphang"},"content":"    // pretty prints a given string","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"filbertphang"},"content":"    public static void prettyPrint(String text) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"filbertphang"},"content":"        System.out.println(","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"filbertphang"},"content":"            \"____________________________________________________________\"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"filbertphang"},"content":"        );","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"filbertphang"},"content":"        System.out.println(text);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"filbertphang"},"content":"        System.out.println(","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"filbertphang"},"content":"            \"____________________________________________________________\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"filbertphang"},"content":"        );","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"filbertphang"},"content":"    // adds a task to the list","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"filbertphang"},"content":"    public static void addTaskToList(Task task, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"filbertphang"},"content":"        list.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"filbertphang"},"content":"        String s \u003d String.format(","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"filbertphang"},"content":"            \"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"filbertphang"},"content":"            task.toString(),","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"filbertphang"},"content":"            list.size()","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"filbertphang"},"content":"        );","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"filbertphang"},"content":"        Duke.prettyPrint(s);","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"filbertphang"},"content":"        String logo \u003d","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"filbertphang"},"content":"            \" ____        _        \\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"filbertphang"},"content":"            \"|  _ \\\\ _   _| | _____ \\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"filbertphang"},"content":"            \"| | | | | | | |/ / _ \\\\\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"filbertphang"},"content":"            \"| |_| | |_| |   \u003c  __/\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"filbertphang"},"content":"            \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"filbertphang"},"content":"        Duke.prettyPrint(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"filbertphang"},"content":"        // parse user input","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"filbertphang"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"filbertphang"},"content":"        String rawInput;","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"filbertphang"},"content":"        String[] rawSplit;","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"filbertphang"},"content":"        String[] arguments \u003d {};","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"filbertphang"},"content":"        String command;","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"filbertphang"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"filbertphang"},"content":"        // level 3 functionality:","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"filbertphang"},"content":"        while (true) {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"filbertphang"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"filbertphang"},"content":"                // scan for user input","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"filbertphang"},"content":"                rawInput \u003d scanner.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"filbertphang"},"content":"                rawSplit \u003d rawInput.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"filbertphang"},"content":"                command \u003d rawSplit[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"filbertphang"},"content":"                if (rawSplit.length \u003e 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"filbertphang"},"content":"                    arguments \u003d rawSplit[1].split(\"\\\\W\\\\/[a-zA-Z]+\\\\W\");","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"filbertphang"},"content":"                } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"filbertphang"},"content":"                    arguments \u003d new String[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"filbertphang"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"filbertphang"},"content":"                // parse commands with no arguments","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"filbertphang"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"filbertphang"},"content":"                    Duke.prettyPrint(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"filbertphang"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"filbertphang"},"content":"                } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"filbertphang"},"content":"                    if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"filbertphang"},"content":"                        Duke.prettyPrint(\"You have no tasks! Try adding some.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"filbertphang"},"content":"                    } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"filbertphang"},"content":"                        StringBuilder sb \u003d new StringBuilder(","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"filbertphang"},"content":"                            \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"filbertphang"},"content":"                        );","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"filbertphang"},"content":"                        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"filbertphang"},"content":"                            Task currentTask \u003d list.get(i);","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"filbertphang"},"content":"                            String s \u003d String.format(","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"filbertphang"},"content":"                                \"%d: %s\\n\",","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"filbertphang"},"content":"                                i + 1,","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"filbertphang"},"content":"                                currentTask.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"filbertphang"},"content":"                            );","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"filbertphang"},"content":"                            sb.append(s);","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"filbertphang"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"filbertphang"},"content":"                        // pprint string","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"filbertphang"},"content":"                        Duke.prettyPrint(sb.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"filbertphang"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"filbertphang"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"filbertphang"},"content":"                // parse commands with arguments","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"filbertphang"},"content":"                else if (command.equals(\"mark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"filbertphang"},"content":"                    // possible errors for mark and unmark and delete","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"filbertphang"},"content":"                    // 1. invalid # arguments (no mark target given)","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"filbertphang"},"content":"                    // 2. mark target doesnt exist (out of range)","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"filbertphang"},"content":"                    int index \u003d Integer.parseInt(arguments[0]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"filbertphang"},"content":"                    Task currentTask \u003d list.get(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"filbertphang"},"content":"                    currentTask.markAsDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"filbertphang"},"content":"                    String s \u003d String.format(","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"filbertphang"},"content":"                        \"Nice! I\u0027ve marked this task as done:\\n %s\",","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"filbertphang"},"content":"                        currentTask.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"filbertphang"},"content":"                    );","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"filbertphang"},"content":"                    Duke.prettyPrint(s);","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"filbertphang"},"content":"                } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"filbertphang"},"content":"                    int index \u003d Integer.parseInt(arguments[0]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"filbertphang"},"content":"                    Task currentTask \u003d list.get(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"filbertphang"},"content":"                    currentTask.unmarkAsDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"filbertphang"},"content":"                    String s \u003d String.format(","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"filbertphang"},"content":"                        \"Ok, I\u0027ve marked this task as not done yet:\\n %s\",","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"filbertphang"},"content":"                        currentTask.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"filbertphang"},"content":"                    );","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"filbertphang"},"content":"                    Duke.prettyPrint(s);","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"filbertphang"},"content":"                } else if (command.equals(\"delete\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"filbertphang"},"content":"                    int index \u003d Integer.parseInt(arguments[0]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"filbertphang"},"content":"                    Task currentTask \u003d list.get(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"filbertphang"},"content":"                    list.remove(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"filbertphang"},"content":"                    String s \u003d String.format(","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"filbertphang"},"content":"                        \"Noted. I\u0027ve removed this task:\\n %s\",","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"filbertphang"},"content":"                        currentTask.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"filbertphang"},"content":"                    );","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"filbertphang"},"content":"                    Duke.prettyPrint(s);","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"filbertphang"},"content":"                } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"filbertphang"},"content":"                    // implicitly handles todo commands with empty descriptions","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"filbertphang"},"content":"                    // as those will have 0 arguments","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"filbertphang"},"content":"                    if (arguments.length !\u003d 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"filbertphang"},"content":"                        throw new InvalidArgumentException(","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"filbertphang"},"content":"                            command,","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"filbertphang"},"content":"                            arguments.length,","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"filbertphang"},"content":"                            1","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"filbertphang"},"content":"                        );","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"filbertphang"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"filbertphang"},"content":"                    Task currentTask \u003d new ToDo(arguments[0]);","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"filbertphang"},"content":"                    Duke.addTaskToList(currentTask, list);","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"filbertphang"},"content":"                } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"filbertphang"},"content":"                    // possible errors for deadline \u0026 event","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"filbertphang"},"content":"                    // 1. arguments may not have the proper format.","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"filbertphang"},"content":"                    //    code currently reads any string starting with \u0027/\u0027 as","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"filbertphang"},"content":"                    //    the start of an argument. not necessarily \u0027/by\u0027","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"filbertphang"},"content":"                    //    or \u0027/from\u0027 or \u0027/to\u0027, as expected","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"filbertphang"},"content":"                    if (arguments.length !\u003d 2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"filbertphang"},"content":"                        throw new InvalidArgumentException(","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"filbertphang"},"content":"                            command,","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"filbertphang"},"content":"                            arguments.length,","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"filbertphang"},"content":"                            2","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"filbertphang"},"content":"                        );","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"filbertphang"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"filbertphang"},"content":"                    Task currentTask \u003d new Deadline(arguments[0], arguments[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"filbertphang"},"content":"                    Duke.addTaskToList(currentTask, list);","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"filbertphang"},"content":"                } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"filbertphang"},"content":"                    if (arguments.length !\u003d 3) {","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"filbertphang"},"content":"                        throw new InvalidArgumentException(","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"filbertphang"},"content":"                            command,","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"filbertphang"},"content":"                            arguments.length,","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"filbertphang"},"content":"                            3","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"filbertphang"},"content":"                        );","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"filbertphang"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"filbertphang"},"content":"                    Task currentTask \u003d new Event(","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"filbertphang"},"content":"                        arguments[0],","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"filbertphang"},"content":"                        arguments[1],","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"filbertphang"},"content":"                        arguments[2]","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"filbertphang"},"content":"                    );","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"filbertphang"},"content":"                    Duke.addTaskToList(currentTask, list);","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"filbertphang"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"filbertphang"},"content":"                // undefined commands","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"filbertphang"},"content":"                else {","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"filbertphang"},"content":"                    throw new UnknownCommandException(rawInput);","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"filbertphang"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"filbertphang"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"filbertphang"},"content":"                Duke.prettyPrint(e.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"filbertphang"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"filbertphang"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"filbertphang":161,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"filbertphang"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"filbertphang"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"filbertphang"},"content":"        super(msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"filbertphang"},"content":"    public abstract String getExceptionName();","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"filbertphang"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"filbertphang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"filbertphang"},"content":"        String s \u003d String.format(","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"filbertphang"},"content":"            \"%s: %s\",","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"filbertphang"},"content":"            this.getExceptionName(),","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"filbertphang"},"content":"            super.getMessage()","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"filbertphang"},"content":"        );","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"filbertphang"},"content":"        return s;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"filbertphang"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"filbertphang":18}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"filbertphang"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"filbertphang"},"content":"    private String start;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"filbertphang"},"content":"    private String end;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"filbertphang"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"filbertphang"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"filbertphang"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"filbertphang"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"filbertphang"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"filbertphang"},"content":"    protected String getTaskType() {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"filbertphang"},"content":"        return \"E\";","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"filbertphang"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"filbertphang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"filbertphang"},"content":"        String s \u003d String.format(","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"filbertphang"},"content":"            \"%s (from: %s to: %s)\",","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"filbertphang"},"content":"            super.toString(),","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"filbertphang"},"content":"            this.start,","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"filbertphang"},"content":"            this.end","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"filbertphang"},"content":"        );","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"filbertphang"},"content":"        return s;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"filbertphang"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"filbertphang":27}},{"path":"src/main/java/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"filbertphang"},"content":"class InvalidArgumentException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"filbertphang"},"content":"    public InvalidArgumentException(String command, int actual, int expects) {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"filbertphang"},"content":"        super(","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"filbertphang"},"content":"            String.format(","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"filbertphang"},"content":"                \"%d argument(s), expected %d for command %s\",","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"filbertphang"},"content":"                actual,","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"filbertphang"},"content":"                expects,","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"filbertphang"},"content":"                command","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"filbertphang"},"content":"            )","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"filbertphang"},"content":"        );","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"filbertphang"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"filbertphang"},"content":"    public String getExceptionName() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"filbertphang"},"content":"        return \"Invalid Argument(s)\";","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"filbertphang"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"filbertphang":18}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"filbertphang"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"filbertphang"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"filbertphang"},"content":"    private String name;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"filbertphang"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"filbertphang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"filbertphang"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"filbertphang"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"filbertphang"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"filbertphang"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"filbertphang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"filbertphang"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"filbertphang"},"content":"        return (isDone ? \"x\" : \" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"filbertphang"},"content":"    protected abstract String getTaskType();","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"filbertphang"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"filbertphang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"filbertphang"},"content":"        String s \u003d String.format(","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"filbertphang"},"content":"            \"[%s][%s] %s\",","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"filbertphang"},"content":"            this.getTaskType(),","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"filbertphang"},"content":"            this.getStatusIcon(),","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"filbertphang"},"content":"            this.name","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"filbertphang"},"content":"        );","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"filbertphang"},"content":"        return s;","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"filbertphang"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"filbertphang":35}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"filbertphang"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"filbertphang"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"filbertphang"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"filbertphang"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"filbertphang"},"content":"    protected String getTaskType() {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"filbertphang"},"content":"        return \"T\";","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"filbertphang"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"filbertphang":11}},{"path":"src/main/java/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"filbertphang"},"content":"class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"filbertphang"},"content":"    public UnknownCommandException(String cmd) {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"filbertphang"},"content":"        super(cmd);","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"filbertphang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"filbertphang"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"filbertphang"},"content":"    public String getExceptionName() {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"filbertphang"},"content":"        return \"Unknown Command\";","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"filbertphang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"filbertphang"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"filbertphang":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"filbertphang"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"filbertphang"},"content":"todo task 1","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"filbertphang"},"content":"deadline task 2 /by some time","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"filbertphang"},"content":"event task 3 /from some day /to another day","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"filbertphang"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"filbertphang"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"filbertphang":6}}]
