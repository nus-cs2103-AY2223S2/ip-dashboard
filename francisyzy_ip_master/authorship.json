[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"checkstyle {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"sourceSets {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    main {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"        java {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"            srcDirs \u0027src/main/java\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"tasks.named(\u0027test\u0027, Test) {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    systemProperty(\"junit.platform.output.capture.stdout\", true)","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"francisyzy":20}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":" * Main class that runs the chatbot","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     * @param filePath","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"        // TODO use filePath","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     * Runs the chatbot","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    public void run() {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"francisyzy":49,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":" * Exception for Duke methods to throw","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"     * Default exception thrown","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    public DukeException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"        super();","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     * Exception with custom message","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * @param message","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        super(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     * Exception with custom message and cause","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     * @param message","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     * @param cause","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    public DukeException(String message, Throwable cause) {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        super(message, cause);","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     * Exception with custom cause","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     * @param cause","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    public DukeException(Throwable cause) {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        super(cause);","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"francisyzy":41}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.command.ClearCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Commands;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":" * Parses the input given from the user and returns the appropriate commands","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"public class Parser {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     * Given the user input, sort it out and returns the command associated with the","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     * input","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     * @param input string from the user","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * @return Command object that matches the user input","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        switch (input) {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        case \"list\":","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        case \"clear\":","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"            return new ClearCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        case \"exit\":","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        default:","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            // Have to do it at the starts with because what if \"todo mark this as done\"","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            if (input.startsWith(Commands.MARK.cmd())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"                int taskNo \u003d getNumbers(input) - 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"                return new MarkCommand(taskNo);","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"            } else if (input.startsWith(Commands.UNMARK.cmd())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"                int taskNo \u003d getNumbers(input) - 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"                return new UnmarkCommand(taskNo);","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"            } else if (input.startsWith(Commands.TODO.cmd())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"                String title \u003d input.substring(Commands.TODO.cmd().length());","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"                return new TodoCommand(title);","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"            } else if (input.startsWith(Commands.DEADLINE.cmd())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"                if (input.indexOf(Commands.BY.cmd()) \u003d\u003d -1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"                    throw new DukeException(Views.MISSING_ARGS_ERR_STRING.eng());","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"                String title \u003d input.substring(Commands.DEADLINE.cmd().length(), input.indexOf(Commands.BY.cmd()));","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"                String deadline \u003d input.substring(input.indexOf(Commands.BY.cmd()));","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"                return new DeadlineCommand(title, deadline);","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"            } else if (input.startsWith(Commands.EVENT.cmd())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"                if (input.indexOf(Commands.FROM.cmd()) \u003d\u003d -1 || input.indexOf(Commands.TO.cmd()) \u003d\u003d -1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"                    throw new DukeException(Views.MISSING_ARGS_ERR_STRING.eng());","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"                String title \u003d input.substring(Commands.EVENT.cmd().length(), input.indexOf(Commands.FROM.cmd()));","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"                String from \u003d input.substring(input.indexOf(Commands.FROM.cmd()), input.indexOf(Commands.TO.cmd()));","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"                String to \u003d input.substring(input.indexOf(Commands.TO.cmd()));","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"                return new EventCommand(title, from, to);","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"            } else if (input.startsWith(Commands.DEL.cmd())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"                int taskNo \u003d getNumbers(input) - 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"                return new DeleteCommand(taskNo);","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"            } else if (input.startsWith(Commands.FIND.cmd())) {","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"                String query \u003d input.substring(Commands.FIND.cmd().length());","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"                return new FindCommand(query);","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"            } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"                throw new DukeException(Views.UNKNOWN_CMD_ERR_STRING.eng());","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"     * Gathers the numbers found from a string","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"     * @param input string from the user","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"     * @return int number found from regex","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException when no number is found","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"    private static int getNumbers(String input) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"        Pattern pattern \u003d Pattern.compile(\"\\\\d+\");","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"            String numberString \u003d matcher.group();","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"            int number \u003d Integer.parseInt(numberString);","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"            return number;","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.NO_INT_ERR_STRING.eng());","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":97}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.io.File;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Commands;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":" * Class to manage storage of persistent files","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"public class Storage {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    // private final String filePath;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    // Storage(String filePath) {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    // this.filePath \u003d filePath;","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    // }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     * Given a list of tasks, it will save it into a txt file","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * @param tasks TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        File dukeData \u003d new File(\"duke_data.txt\");","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        try (PrintWriter writer \u003d new PrintWriter(new FileWriter(dukeData));) {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"            for (Task item : tasks.getList()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"                writer.println(item.toExport()","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"                        .replace(\"[T]\", \"todo\")","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"                        .replace(\"[D]\", \"deadline\")","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"                        .replace(\"(by:\", \"/by\")","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"                        .replace(\"[E]\", \"event\")","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"                        .replace(\"(from:\", \"/from\")","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"                        .replace(\"to:\", \"/to\")","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"                        .replace(\")\", \"\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"     * Loads the items from storage","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"     * @return Array of tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"            Scanner scanner \u003d new Scanner(new File(\"duke_data.txt\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"                boolean isDone \u003d line.indexOf(\"[X]\") \u003d\u003d -1 ? false : true;","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"                line \u003d line.replace(\"[ ]\", \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"                line \u003d line.replace(\"[X]\", \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"                if (line.startsWith(Commands.TODO.cmd())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"                    String title \u003d line.substring(Commands.TODO.cmd().length());","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"                    Task newTask \u003d new Todo(title, isDone);","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"                    tasksList.add(newTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"                } else if (line.startsWith(Commands.DEADLINE.cmd())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"                    if (line.indexOf(Commands.BY.cmd()) \u003d\u003d -1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"                        throw new DukeException(Views.MISSING_ARGS_ERR_STRING.eng());","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"                    String title \u003d line.substring(Commands.DEADLINE.cmd().length(),","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"                            line.indexOf(Commands.BY.cmd()));","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"                    Task newTask \u003d new Deadline(title,","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"                            line.substring(line.indexOf(Commands.BY.cmd())), isDone);","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"                    tasksList.add(newTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"                } else if (line.startsWith(Commands.EVENT.cmd())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"                    if (line.indexOf(Commands.FROM.cmd()) \u003d\u003d -1 || line.indexOf(Commands.TO.cmd()) \u003d\u003d -1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"                        throw new DukeException(Views.MISSING_ARGS_ERR_STRING.eng());","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"                    String title \u003d line.substring(Commands.EVENT.cmd().length(),","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"                            line.indexOf(Commands.FROM.cmd()));","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"                    Task newTask \u003d new Event(title,","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"                            line.substring(line.indexOf(Commands.FROM.cmd()),","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"                                    line.indexOf(Commands.TO.cmd())),","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"                            line.substring(line.indexOf(Commands.TO.cmd())), isDone);","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"                    tasksList.add(newTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"            scanner.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"            // System.out.println(e);","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"        return tasksList;","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":97}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" * TaskList object to store the list of tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class TaskList {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    private ArrayList\u003cTask\u003e tasksList;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     * For creating a taskList from storage","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * @param tasksList as an ArrayList","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    TaskList(ArrayList\u003cTask\u003e tasksList) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        this.tasksList \u003d tasksList;","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     * Creates a empty task list","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    TaskList() {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        this.tasksList \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     * Gets the Task at the index specified","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     * @param index of the task in the ArrayList","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     * @return Task found from the ArrayList","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    public Task get(int index) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"            return tasksList.get(index);","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.OUT_RANGE_ERR_STRING.eng());","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     * Gets the array list for the list of items","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"     * @return ArrayList of tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        return tasksList;","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"     * Searches and returns an arraylist for results","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"     * @return ArrayList of found task","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"    public ArrayList\u003cTask\u003e search(String query) {","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        for (Task task : this.tasksList) {","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"            if (task.getTitle().toLowerCase().contains(query.trim().toLowerCase())) {","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"                result.add(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        return result;","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"     * @return int size of the taskList","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"    public int size() {","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"        return tasksList.size();","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"     * Adds a new task into the list","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"     * @param newTask new Task object to be added into the list","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        this.tasksList.add(newTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"     * Removes the task given the index of it","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"     * @param taskNo int index of task in the ArrayList","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"    public void remove(int taskNo) {","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"        this.tasksList.remove(taskNo);","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"     * Clears out the task list. Useful for testing","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"    public void clear() {","lastModifiedDate":"2023-01-22"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"        this.tasksList.clear();","lastModifiedDate":"2023-01-22"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":102}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" * Class to interact with the user via commands and messages","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"public class Ui {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     * Constructs the UI","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    Ui() {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     * Reads the input given by the user","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     * @return String input from the user","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     * Prints out the welcome message","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"                + \"|  _ / _   _| | _____ \\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"                + \"| | | | | | | |/ / _ /\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"                + \"|____/ /__,_|_|/_/___|\\n\";","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        printer(Views.WELCOME_STRING.eng());","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"     * Takes in a list of tasks and prints it all out","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     * @param tasks TaskList object to print the list","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException when the task is not found in the list","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    public void showList(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"            printer(Views.EMPTY_LIST_STRING.eng());","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"            String toPrint \u003d \"\";","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"                toPrint +\u003d ((i + 1) + \".\" + tasks.get(i)) + \"\\n      \";","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"            printer(toPrint.substring(0, toPrint.length() - 7));","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"     * Takes in a ArrayList of tasks and prints it all out","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"     * @param tasks TaskList object to print the list","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"    public void showList(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"            printer(Views.CANNOT_FIND_STRING.eng());","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"            String toPrint \u003d Views.FOUND_LIST_STRING.eng();","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"                toPrint +\u003d ((i + 1) + \".\" + tasks.get(i)) + \"\\n      \";","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"            printer(toPrint.substring(0, toPrint.length() - 7));","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is marked done","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"     * @param tasks  TaskList object to get the task","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"     * @param taskNo int index of task in the ArrayList","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException when the task is not found in the list","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"    public void showMarkDone(TaskList tasks, int taskNo) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"        printer(Views.MARK_DONE_STRING.eng() + tasks.get(taskNo));","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is marked undone","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"     * @param tasks  TaskList object to get the task","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"     * @param taskNo int index of task in the ArrayList","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException when the task is not found in the list","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"    public void showUnmarkDone(TaskList tasks, int taskNo) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"        printer(Views.UNMARK_DONE_STRING.eng() + tasks.get(taskNo));","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is newly added","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"     * @param newTask new Task object to be printed","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"    public void showAdd(Task newTask) {","lastModifiedDate":"2023-01-22"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"        printer(\"added: \" + newTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is deleted and show the number of tasks left","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"     * @param delTask task that is deleted","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"     * @param task    TaskList object to get the count","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"    public void showDel(Task delTask, TaskList task) {","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"        String returnString \u003d Views.DELETE_DONE_STRING.eng();","lastModifiedDate":"2023-01-22"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"        returnString +\u003d delTask.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":121,"author":{"gitId":"francisyzy"},"content":"        returnString +\u003d \"\\n      \";","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"francisyzy"},"content":"        returnString +\u003d Views.TASK_COUNT_1_STRING.eng();","lastModifiedDate":"2023-01-22"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"        returnString +\u003d task.size();","lastModifiedDate":"2023-01-22"},{"lineNumber":124,"author":{"gitId":"francisyzy"},"content":"        returnString +\u003d Views.TASK_COUNT_2_STRING.eng();","lastModifiedDate":"2023-01-22"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"        printer(returnString);","lastModifiedDate":"2023-01-22"},{"lineNumber":126,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":127,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":128,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"francisyzy"},"content":"     * Prints out to user to show that the task has been cleared","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"francisyzy"},"content":"    public void showClear() {","lastModifiedDate":"2023-01-22"},{"lineNumber":132,"author":{"gitId":"francisyzy"},"content":"        printer(Views.CLEAR_LIST_STRING.eng());","lastModifiedDate":"2023-01-22"},{"lineNumber":133,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"francisyzy"},"content":"     * Prints out bye message","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":138,"author":{"gitId":"francisyzy"},"content":"    public void showEnd() {","lastModifiedDate":"2023-01-22"},{"lineNumber":139,"author":{"gitId":"francisyzy"},"content":"        printer(Views.END_STRING.eng());","lastModifiedDate":"2023-01-22"},{"lineNumber":140,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":141,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":142,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"francisyzy"},"content":"     * Prints out the error given in as a String","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"francisyzy"},"content":"     * @param err","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"francisyzy"},"content":"    public void showError(String err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":148,"author":{"gitId":"francisyzy"},"content":"        printer(err);","lastModifiedDate":"2023-01-22"},{"lineNumber":149,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":150,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":151,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"francisyzy"},"content":"     * Print out load error when loading from a file","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":154,"author":{"gitId":"francisyzy"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-22"},{"lineNumber":155,"author":{"gitId":"francisyzy"},"content":"        printer(\"File load has error\");","lastModifiedDate":"2023-01-22"},{"lineNumber":156,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":157,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":158,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":159,"author":{"gitId":"francisyzy"},"content":"     * Private method to print with lines and indents","lastModifiedDate":"2023-01-28"},{"lineNumber":160,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":161,"author":{"gitId":"francisyzy"},"content":"     * @param to of the event ending datePrint","lastModifiedDate":"2023-01-28"},{"lineNumber":162,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":163,"author":{"gitId":"francisyzy"},"content":"    private static void printer(String toPrint) {","lastModifiedDate":"2023-01-22"},{"lineNumber":164,"author":{"gitId":"francisyzy"},"content":"        System.out.println(\"    \" + Views.LINE_STRING.eng());","lastModifiedDate":"2023-01-22"},{"lineNumber":165,"author":{"gitId":"francisyzy"},"content":"        System.out.println(\"      \" + toPrint);","lastModifiedDate":"2023-01-22"},{"lineNumber":166,"author":{"gitId":"francisyzy"},"content":"        System.out.println(\"    \" + Views.LINE_STRING.eng());","lastModifiedDate":"2023-01-22"},{"lineNumber":167,"author":{"gitId":"francisyzy"},"content":"        System.out.println();","lastModifiedDate":"2023-01-22"},{"lineNumber":168,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":169,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":169}},{"path":"src/main/java/duke/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":" * Command: Clears the task list","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     * @param ui      object to reply to user after the command has executed","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        tasks.clear();","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        ui.showClear();","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":32}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" * Abstract parent class for the other commands","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     * @param ui      object to reply to user after the command has executed","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":28}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" * Command: creates a deadline Task","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    private String title;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    private String deadline;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     * Creates a deadline command given a title and deadline String","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     * @param title    of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * @param deadline String input from the user","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    public DeadlineCommand(String title, String deadline) {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     * @param ui      object to reply to user after the command has executed","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        Task newTask \u003d new Deadline(this.title,","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"                this.deadline);","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        ui.showAdd(newTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":52}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" * Command: Deletes the Task given","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    private int taskNo;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     * Creates Delete Command","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * @param taskNo int index of task in the ArrayList","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    public DeleteCommand(int taskNo) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     * @param ui      object to reply to user after the command has executed","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        Task delTask \u003d tasks.get(taskNo);","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        tasks.remove(taskNo);","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        ui.showDel(delTask, tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":46}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" * Command: Creates a Event Task","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    private String title;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    private String to;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    private String from;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     * Creates an event command with the given title and to and from","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * @param title of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * @param to    of the event ending date","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     * @param from  of the event starting date","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    public EventCommand(String title, String to, String from) {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     * @param ui      object to reply to user after the command has executed","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        Task newTask \u003d new Event(this.title, this.to, this.from);","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        ui.showAdd(newTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":54}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":" * Command: Creates a command to exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     * @param ui      object to reply to user after the command has executed","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        ui.showEnd();","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":31}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" * Command: Finds a list of task that matches the query","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    private String query;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     * Creates Find Command","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     * @param query string from user","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"        this.query \u003d query;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * @param ui      object to reply to user after the command has executed","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        ArrayList\u003cTask\u003e result \u003d tasks.search(query);","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        ui.showList(result);","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"francisyzy":46}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" * Command: to list out the commands","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     * @param ui      object to reply to user after the command has executed","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        ui.showList(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":32}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" * Command: Marks the Task as complete","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    private int taskNo;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     * Takes in the task number to mark as complete","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * @param taskNo int index of task in the ArrayList","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    public MarkCommand(int taskNo) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     * @param ui      object to reply to user after the command has executed","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        tasks.get(taskNo).markAsDone();","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        ui.showMarkDone(tasks, taskNo);","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":45}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" * Command: Creates a Todo Task","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    private String title;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * Creates a todo task command","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     * @param title of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    public TodoCommand(String title) {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     * @param tasks TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * @param ui object to reply to user after the command has executed","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        Task newTask \u003d new Todo(this.title);","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        ui.showAdd(newTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":48}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" * Command: mark the item as undone","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    private int taskNo;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     * Creates the command to unmark task as done","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * @param taskNo int index of task in the ArrayList","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    public UnmarkCommand(int taskNo) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     * @param ui      object to reply to user after the command has executed","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        tasks.get(taskNo).unmarkAsDone();","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        ui.showUnmarkDone(tasks, taskNo);","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":45}},{"path":"src/main/java/duke/enums/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.enums;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":" * Command strings","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"public enum Commands {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    BY(\"/by\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    FROM(\"/from\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    TO(\"/to\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    DEL(\"del\"),","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    FIND(\"find\");","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    private final String cmd;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * @param cmd given in the enum","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    Commands(String cmd) {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * Change the command to the user input thing","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * @return String of the command","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    public String cmd() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        return cmd;","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"francisyzy":36}},{"path":"src/main/java/duke/enums/Views.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.enums;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":" * Enum for every spoken line from Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"public enum Views {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"    LINE_STRING(\"____________________________________________________________\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"    WELCOME_STRING(\"Hello! I\u0027m Duke\\n      What can I do for grades?\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    END_STRING(\"Bye. Hope to see you again soon!\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    EMPTY_LIST_STRING(\"Hey, the list is empty!\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    CLEAR_LIST_STRING(\"Ive cleared the list!\"),","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    MARK_DONE_STRING(\"Nice! I\u0027ve marked this task as done\\n       \"),","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    UNMARK_DONE_STRING(\"OK, I\u0027ve marked this task as not done yet\\n       \"),","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    DELETE_DONE_STRING(\"Noted. I\u0027ve removed this task:\\n       \"),","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    TASK_COUNT_1_STRING(\"Now you have \"),","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    TASK_COUNT_2_STRING(\" tasks in the list.\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    FOUND_LIST_STRING(\"Here are the matching tasks in your list:\\n      \"),","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    CANNOT_FIND_STRING(\"Hey, I can\u0027t find what you\u0027re searching for\"),","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    NO_INT_ERR_STRING(\"Hey, you did not enter any numbers\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    OUT_RANGE_ERR_STRING(\"Hey, the number you\u0027ve entered is not valid\"),","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    UNKNOWN_ERR_STRING(\"Hey, an unknown error happened, oh no\"),","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    EMPTY_ERR_STRING(\"Hey, ☹ The description of a task cannot be empty.\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    UNKNOWN_CMD_ERR_STRING(\"Hey, ☹ I\u0027m sorry, but I don\u0027t know what that means :-(\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    MISSING_ARGS_ERR_STRING(\"Hey, ☹ I\u0027m sorry, but you are missing some arguments\"),","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    DATE_WRONG_ORDER_STRING(\"Hey, ☹ you seem to have ordered the /to and /from wrongly\"),","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    DATE_PARSE_ERR_STRING(","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"            \"Hey, ☹ please enter the date in this format YYYY-MM-DDTHH:MM like this: \u00272023-01-20T18:00\u0027\");","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    private final String englishString;","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    Views(String english) {","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        this.englishString \u003d english;","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    public String eng() {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        return englishString;","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"francisyzy":39}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" * Deadline, task with a date","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     * Creates a Deadline","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     * Will try and parse it as date and throw exception when it cannot","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     * @param title of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * @param by    the deadline of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public Deadline(String title, String by) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        this(title, by, false);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * Creates a Deadline, with isDone field. Mostly used by Storage","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * @param title  of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     * @param by     the deadline of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     * @param isDone status of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    public Deadline(String title, String by, boolean isDone) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        super(title, isDone);","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"            this.by \u003d LocalDateTime.parse(by.replace(\"/by\", \"\").trim());","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.DATE_PARSE_ERR_STRING.eng());","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"     * Method for formatting the Task to store in a txt file","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"     * @return String of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    public String toExport() {","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"     * Get a String representation to display to user of a Task","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"francisyzy":64}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" * Event object that has a to and from date object","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * Takes in title and from and to to create an event","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     * Will try and parse it as date and throw exception when it cannot","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * @param title of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * @param from  of the event starting date","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     * @param to    of the event ending date","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    public Event(String title, String from, String to) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        this(title, from, to, false);","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * This method sets the isDone status directly. Mostly used from Storage","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     * @param title  of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     * @param from   of the event starting date","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     * @param to     of the event ending date","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     * @param isDone status of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    public Event(String title, String from, String to, boolean isDone) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        super(title, isDone);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            this.from \u003d LocalDateTime.parse(from.replace(\"/from\", \"\").trim());","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            this.to \u003d LocalDateTime.parse(to.replace(\"/to\", \"\").trim());","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.DATE_PARSE_ERR_STRING.eng());","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        if (this.to.isBefore(this.from)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.DATE_WRONG_ORDER_STRING.eng());","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"     * Method for formatting the Task to store in a txt file","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"     * @return String of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"    public String toExport() {","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"     * Get a String representation to display to user of a Task","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"))","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"                + \" to: \"","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"                + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"francisyzy":73}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" * Abstract class for the Task. Every todo / deadline / event item is here","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    private String title;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"     * Creates a task, throws error if its empty string","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     * @param title of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    Task(String title) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        this(title, false);","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     * Creates a task, with isDone field. Mostly used by Storage","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     * @param title  of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     * @param isDone status of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    Task(String title, boolean isDone) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        if (title.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.EMPTY_ERR_STRING.eng());","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        this.title \u003d title.trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     * Mark the task as done","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"     * Mark the task as not done","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"     * Getter for title of Task","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"     * @return String of the Task title","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"    public String getTitle() {","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        return this.title;","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"     * Method for formatting the Task to store in a txt file","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"     * @return String of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"    public String toExport() {","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        return this.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"     * Get a String representation to display to user of a Task","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"            returnString \u003d \"[X] \";","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"            returnString \u003d \"[ ] \";","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        return returnString + title;","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"francisyzy":85}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":" * Todo, default and most generic of a Task item","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"     * Creates a Todo","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"     * @param title of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    public Todo(String title) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"        this(title, false);","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     * Creates a Todo, with isDone field. Mostly used by Storage","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * @param title  of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     * @param isDone status of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    public Todo(String title, boolean isDone) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        super(title, isDone);","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * Get a String representation to display to user of a Task","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"francisyzy":39}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import java.util.Random;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"public class UiTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    public void testPrintBye() {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"        String expected \u003d \"    ____________________________________________________________\\n      Bye. Hope to see you again soon!\\n    ____________________________________________________________\\n\\n\";","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"        // Test","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        ui.showEnd();","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        System.out.flush();","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        // Assert output","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(expected, outContent.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    public void testPrintRandom() {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        String randomString \u003d \"\";","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"            char c \u003d (char) (random.nextInt(26) + \u0027a\u0027);","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"            randomString +\u003d c;","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        String expected \u003d \"    ____________________________________________________________\\n      \" + randomString","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"                + \"\\n    ____________________________________________________________\\n\\n\";","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        // Test","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        ui.showError(randomString);","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        System.out.flush();","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        // Assert output","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(expected, outContent.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"francisyzy":52}},{"path":"src/test/java/duke/command/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"public class TodoCommandTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"    public void testTodoCommandExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"        Command test \u003d new TodoCommand(\"TEST\");","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(false, test.isExit());","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"francisyzy":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"clear","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"mark1","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"todo one","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"todotwo","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"mark2","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"unmark2","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"deadline ip project /by 2023-01-19T18:00","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"deadlineip project2 /by2023-01-20T18:00","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"deadlineip project2 /by tmr","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"delete1","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"event hack and roll /from 2023-01-14T12:30 /to 2023-01-15T12:30","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"eventhack and roll2 /from2023-01-24T12:30 /to2023-01-25T12:30","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"eventerror3 /from2023-01-30T12:30 /to2023-01-25T12:30","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"mark1","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"todo","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"event","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"deadline /by","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"event /from /to","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"deadline test","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"event test","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"del 1","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"del1","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"clear","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"asdf","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"francisyzy":35}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"java -classpath ../bin/ duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"# cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT ","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":33,"francisyzy":5}}]
