[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"## Image Credits","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"Image credited to Stable Diffusion. Images are generated using [Diffusion Bee](https://diffusionbee.com), GUI Wrapper of Stable Diffusion","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"![Duke](src/main/resources/images/Duke.png)","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"![User](src/main/resources/images/User.png)","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"![Gen1](src/main/resources/images/Bee_SS_1.png)","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"![Gen2](src/main/resources/images/Bee_SS_2.png)","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":24,"francisyzy":9}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"checkstyle {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"tasks.named(\u0027test\u0027, Test) {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    systemProperty(\"junit.platform.output.capture.stdout\", true)","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"francisyzy":27}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Languages;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":" * Main class that runs the chatbot","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"public class Duke {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    private static Languages language \u003d Languages.ENG;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     * Default constructor for Duke","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    public Duke() {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"            Ui.showError(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     * Static variable to get the language of Duke","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    public static Languages getLang() {","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        return language;","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"     * Static variable to set the language of Duke","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    public static void setLang(Languages input) {","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        language \u003d input;","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"     * Runs the chatbot","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    public void run() {","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        Ui.showWelcome();","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"                c.execute(tasks, storage);","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"                if (e instanceof DukeException) {","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"                    Ui.showError(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"                } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"                    Ui.showError(Views.UNKNOWN_ERR_STRING.str());","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"     * Main method for running the text Version for Duke.","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"     * Suitable for text-ui-test","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"     * ","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"     * @param args None will be used","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"        duke.run();","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"     * Generate response from Duke to put into UI","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"     * @param input","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"     * @return String response from Duke","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"    public String getResponse(String input) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"        Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"        return c.executeString(tasks, storage);","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"francisyzy":93}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":" * Exception for Duke methods to throw","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"     * Default exception thrown without any message","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    public DukeException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"        super();","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * Exception with custom message","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     * @param message","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    public DukeException(Views view) {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"        super(view.str());","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     * Exception with custom message","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     * @param message","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        super(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     * Exception with custom message and cause","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     * @param message","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"     * @param cause","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    public DukeException(String message, Throwable cause) {","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        super(message, cause);","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"     * Exception with custom cause","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     * @param cause","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    public DukeException(Throwable cause) {","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        super(cause);","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"francisyzy":52}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"public class Launcher {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"francisyzy":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"            stage.show();","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"francisyzy":32}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.command.ClearCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"import duke.command.SetCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Commands;","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":" * Parses the input given from the user and returns the appropriate commands","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"public class Parser {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * Given the user input, sort it out and returns the command associated with the","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     * input","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     * @param input string from the user","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     * @return Command object that matches the user input","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        switch (input) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        case \"list\":","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        case \"clear\":","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            return new ClearCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        case \"help\":","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        case \"exit\":","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        default:","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"            // Have to do it at the starts with because what if \"todo mark this as done\"","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"            if (input.startsWith(Commands.MARK.cmd())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"                int[] taskNumbers \u003d subtractInt(getNumbers(input), 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"                return new MarkCommand(taskNumbers);","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"            } else if (input.startsWith(Commands.UNMARK.cmd())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"                int[] taskNumbers \u003d subtractInt(getNumbers(input), 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"                return new UnmarkCommand(taskNumbers);","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"            } else if (input.startsWith(Commands.TODO.cmd())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"                String[] parsed \u003d handleTaskInput(input);","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"                return new TodoCommand(parsed);","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"            } else if (input.startsWith(Commands.DEADLINE.cmd())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"                String[] parsed \u003d handleTaskInput(input);","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"                return new DeadlineCommand(parsed);","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"            } else if (input.startsWith(Commands.EVENT.cmd())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"                String[] parsed \u003d handleTaskInput(input);","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"                return new EventCommand(parsed);","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"            } else if (input.startsWith(Commands.DEL.cmd())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"                int[] taskNumbers \u003d subtractInt(getNumbers(input), 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"                return new DeleteCommand(taskNumbers);","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"            } else if (input.startsWith(Commands.FIND.cmd())) {","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"                String query \u003d input.substring(Commands.FIND.len());","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"                return new FindCommand(query);","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"            } else if (input.startsWith(Commands.SET.cmd())) {","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"                return new SetCommand(input);","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"            } else if (input.startsWith(Commands.HELP.cmd())) {","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"                String query \u003d input.substring(Commands.HELP.len());","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"                return new HelpCommand(query);","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"            } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"                throw new DukeException(Views.UNKNOWN_CMD_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"     * Centralised parser to parse Tasks input and sort out the specific args for","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"     * the 3 types of task: Todo Deadline Event","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"     * @param input","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"     * @return String[] to be added todo deadline and event objects/command","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"    public static String[] handleTaskInput(String input) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"        String[] returnString \u003d new String[3];","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"        String title;","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"        if (input.startsWith(Commands.TODO.cmd())) {","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"            if (!isValidTaskInput(input, Commands.TODO)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"                throw new DukeException(Views.MISSING_ARGS_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"            title \u003d input.substring(Commands.TODO.len());","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"        } else if (input.startsWith(Commands.DEADLINE.cmd())) {","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"            if (!isValidTaskInput(input, Commands.DEADLINE)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"                throw new DukeException(Views.MISSING_ARGS_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"            int indexOfBy \u003d input.indexOf(Commands.BY.cmd());","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"            assert indexOfBy !\u003d -1 : Views.MISSING_ARGS_ERR_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"            title \u003d input.substring(Commands.DEADLINE.len(), indexOfBy);","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"            String deadline \u003d input.substring(indexOfBy);","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"            returnString[1] \u003d deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"        } else if (input.startsWith(Commands.EVENT.cmd())) {","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"            if (!isValidTaskInput(input, Commands.EVENT)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"                throw new DukeException(Views.MISSING_ARGS_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"            int indexOfFrom \u003d input.indexOf(Commands.FROM.cmd());","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"            int indexOfTo \u003d input.indexOf(Commands.TO.cmd());","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"            assert indexOfFrom !\u003d -1 \u0026\u0026 indexOfTo !\u003d -1 : Views.MISSING_ARGS_ERR_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"            title \u003d input.substring(Commands.EVENT.len(), indexOfFrom);","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"            String from \u003d input.substring(indexOfFrom, indexOfTo);","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"            String to \u003d input.substring(indexOfTo);","lastModifiedDate":"2023-02-03"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"            returnString[1] \u003d from;","lastModifiedDate":"2023-02-03"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"            returnString[2] \u003d to;","lastModifiedDate":"2023-02-03"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.UNKNOWN_CMD_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"francisyzy"},"content":"        returnString[0] \u003d title;","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"francisyzy"},"content":"        return returnString;","lastModifiedDate":"2023-02-03"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"francisyzy"},"content":"     * Centralised checker to validate input string.","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"francisyzy"},"content":"     * @param input","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"francisyzy"},"content":"     * @param command to match input requirement","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"     * @return boolean if the task input string is valid","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"francisyzy"},"content":"    public static boolean isValidTaskInput(String input, Commands command) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"        switch (command) {","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"        case TODO:","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"francisyzy"},"content":"            return true;","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"francisyzy"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"francisyzy"},"content":"            int indexOfBy \u003d input.indexOf(Commands.BY.cmd());","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"francisyzy"},"content":"            if (indexOfBy \u003d\u003d -1) {","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"francisyzy"},"content":"                return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"francisyzy"},"content":"            assert indexOfBy !\u003d -1 : Views.MISSING_ARGS_ERR_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"francisyzy"},"content":"            return true;","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"francisyzy"},"content":"        case EVENT:","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"francisyzy"},"content":"            int indexOfFrom \u003d input.indexOf(Commands.FROM.cmd());","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"francisyzy"},"content":"            int indexOfTo \u003d input.indexOf(Commands.TO.cmd());","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"francisyzy"},"content":"            if (indexOfFrom \u003d\u003d -1 || indexOfTo \u003d\u003d -1) {","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"francisyzy"},"content":"                return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"francisyzy"},"content":"            assert indexOfFrom !\u003d -1 \u0026\u0026 indexOfTo !\u003d -1 : Views.MISSING_ARGS_ERR_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"francisyzy"},"content":"            return true;","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"francisyzy"},"content":"        default:","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"francisyzy"},"content":"            // Should not reach this case","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.UNKNOWN_CMD_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":158,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":159,"author":{"gitId":"francisyzy"},"content":"     * Gathers the numbers found from a string","lastModifiedDate":"2023-01-28"},{"lineNumber":160,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":161,"author":{"gitId":"francisyzy"},"content":"     * @param input string from the user","lastModifiedDate":"2023-01-28"},{"lineNumber":162,"author":{"gitId":"francisyzy"},"content":"     * @return int number found from regex","lastModifiedDate":"2023-01-28"},{"lineNumber":163,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException when no number is found","lastModifiedDate":"2023-01-28"},{"lineNumber":164,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":165,"author":{"gitId":"francisyzy"},"content":"    private static int getNumber(String input) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":166,"author":{"gitId":"francisyzy"},"content":"        Pattern pattern \u003d Pattern.compile(\"\\\\d+\");","lastModifiedDate":"2023-01-22"},{"lineNumber":167,"author":{"gitId":"francisyzy"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-01-22"},{"lineNumber":168,"author":{"gitId":"francisyzy"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":169,"author":{"gitId":"francisyzy"},"content":"            String numberString \u003d matcher.group();","lastModifiedDate":"2023-01-22"},{"lineNumber":170,"author":{"gitId":"francisyzy"},"content":"            int number \u003d Integer.parseInt(numberString);","lastModifiedDate":"2023-01-22"},{"lineNumber":171,"author":{"gitId":"francisyzy"},"content":"            return number;","lastModifiedDate":"2023-01-22"},{"lineNumber":172,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":173,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.NO_INT_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":174,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":175,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":176,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":177,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":178,"author":{"gitId":"francisyzy"},"content":"     * Gathers the numbers found from a string","lastModifiedDate":"2023-02-06"},{"lineNumber":179,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":180,"author":{"gitId":"francisyzy"},"content":"     * @param input string from the user","lastModifiedDate":"2023-02-06"},{"lineNumber":181,"author":{"gitId":"francisyzy"},"content":"     * @return int number found from regex","lastModifiedDate":"2023-02-06"},{"lineNumber":182,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException when no number is found","lastModifiedDate":"2023-02-06"},{"lineNumber":183,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":184,"author":{"gitId":"francisyzy"},"content":"    private static int[] getNumbers(String input) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":185,"author":{"gitId":"francisyzy"},"content":"        String[] inputArray \u003d TaskList.removeEmptyStrings(input.split(\" \"));","lastModifiedDate":"2023-02-06"},{"lineNumber":186,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":187,"author":{"gitId":"francisyzy"},"content":"        // Use hash set to ensure no duplicated numbers","lastModifiedDate":"2023-02-06"},{"lineNumber":188,"author":{"gitId":"francisyzy"},"content":"        HashSet\u003cInteger\u003e results \u003d new HashSet\u003cInteger\u003e();","lastModifiedDate":"2023-02-06"},{"lineNumber":189,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":190,"author":{"gitId":"francisyzy"},"content":"        for (String inputString : inputArray) {","lastModifiedDate":"2023-02-06"},{"lineNumber":191,"author":{"gitId":"francisyzy"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":192,"author":{"gitId":"francisyzy"},"content":"                results.add(getNumber(inputString));","lastModifiedDate":"2023-02-06"},{"lineNumber":193,"author":{"gitId":"francisyzy"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":194,"author":{"gitId":"francisyzy"},"content":"                // Particular string is not int, moving on to next","lastModifiedDate":"2023-02-06"},{"lineNumber":195,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":196,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":197,"author":{"gitId":"francisyzy"},"content":"        if (results.size() !\u003d 0) {","lastModifiedDate":"2023-02-06"},{"lineNumber":198,"author":{"gitId":"francisyzy"},"content":"            // Convert it back to int array","lastModifiedDate":"2023-02-06"},{"lineNumber":199,"author":{"gitId":"francisyzy"},"content":"            int[] converted \u003d results.stream().mapToInt(Integer::intValue).toArray();","lastModifiedDate":"2023-02-06"},{"lineNumber":200,"author":{"gitId":"francisyzy"},"content":"            Arrays.sort(converted);","lastModifiedDate":"2023-02-06"},{"lineNumber":201,"author":{"gitId":"francisyzy"},"content":"            return converted;","lastModifiedDate":"2023-02-06"},{"lineNumber":202,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":203,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.NO_INT_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":204,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":205,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":206,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":207,"author":{"gitId":"francisyzy"},"content":"    private static int[] subtractInt(int[] input, int subtractAmt) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":208,"author":{"gitId":"francisyzy"},"content":"        int[] results \u003d new int[input.length];","lastModifiedDate":"2023-02-06"},{"lineNumber":209,"author":{"gitId":"francisyzy"},"content":"        for (int i \u003d 0; i \u003c input.length; i++) {","lastModifiedDate":"2023-02-06"},{"lineNumber":210,"author":{"gitId":"francisyzy"},"content":"            int subtracted \u003d input[i] - subtractAmt;","lastModifiedDate":"2023-02-06"},{"lineNumber":211,"author":{"gitId":"francisyzy"},"content":"            if (subtracted \u003c 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":212,"author":{"gitId":"francisyzy"},"content":"                throw new DukeException(Views.OUT_RANGE_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":213,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":214,"author":{"gitId":"francisyzy"},"content":"            assert subtracted \u003e\u003d 0 : Views.OUT_RANGE_ERR_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":215,"author":{"gitId":"francisyzy"},"content":"            results[i] \u003d subtracted;","lastModifiedDate":"2023-02-06"},{"lineNumber":216,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":217,"author":{"gitId":"francisyzy"},"content":"        return results;","lastModifiedDate":"2023-02-06"},{"lineNumber":218,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":219,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":219}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.io.File;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Commands;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":" * Class to manage storage of persistent files","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"public class Storage {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * Given a list of tasks, it will save it into a txt file","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     * @param tasks TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        File dukeData \u003d new File(\"duke_data.txt\"); // Magic Strings","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        try (PrintWriter writer \u003d new PrintWriter(new FileWriter(dukeData));) {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"            for (Task item : tasks.getList()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"                writer.println(item.toExport()","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"                        .replace(\"[T]\", \"todo\")","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"                        .replace(\"[D]\", \"deadline\")","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"                        .replace(\"(by:\", \"/by\")","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"                        .replace(\"[E]\", \"event\")","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"                        .replace(\"(from:\", \"/from\")","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"                        .replace(\"to:\", \"/to\")","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"                        .replace(\")\", \"\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"     * Loads the items from storage","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     * @return Array of tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"            Scanner scanner \u003d new Scanner(new File(\"duke_data.txt\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"                boolean isDone \u003d line.indexOf(\"[X]\") \u003d\u003d -1 ? false : true;","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"                line \u003d line.replace(\"[ ]\", \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"                line \u003d line.replace(\"[X]\", \"\");","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"                String[] parsed \u003d Parser.handleTaskInput(line);","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"                String title \u003d parsed[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"                if (line.startsWith(Commands.TODO.cmd())) {","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"                    tasksList.add(new Todo(title, isDone));","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"                } else if (line.startsWith(Commands.DEADLINE.cmd())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"                    String deadline \u003d parsed[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"                    tasksList.add(new Deadline(title, deadline, isDone));","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"                } else if (line.startsWith(Commands.EVENT.cmd())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"                    String from \u003d parsed[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"                    String to \u003d parsed[2];","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"                    tasksList.add(new Event(title, from, to, isDone));","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"                } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"                    throw new DukeException(Views.LOAD_EXTRA_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"            scanner.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"            if (e instanceof DukeException) {","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"            // Silent fail if cannot load previous file","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"        return tasksList;","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":84}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import java.util.List;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":" * TaskList object to store the list of tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"public class TaskList {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    private ArrayList\u003cTask\u003e tasksList;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     * For creating a taskList from storage","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * @param tasksList as an ArrayList","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    TaskList(ArrayList\u003cTask\u003e tasksList) {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        this.tasksList \u003d tasksList;","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * Creates a empty task list","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    TaskList() {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        this.tasksList \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     * Gets the Task at the index specified","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"     * @param index of the task in the ArrayList","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     * @return Task found from the ArrayList","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    public Task get(int index) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"            return tasksList.get(index);","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.OUT_RANGE_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"     * Gets the array list for the list of items","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"     * @return ArrayList of tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        return tasksList;","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"     * Searches and returns an arraylist for results","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"     * @return ArrayList of found task","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"    public ArrayList\u003cTask\u003e search(String... query) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        query \u003d removeEmptyStrings(query);","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        HashSet\u003cTask\u003e results \u003d new HashSet\u003cTask\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        // Inefficient O(N^2) search method. Fix this whenever","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        for (Task task : this.tasksList) {","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"            for (String word : query) {","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"                if (task.getTitle().toLowerCase().contains(word.trim().toLowerCase())) {","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"                    results.add(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"        if (results.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.CANNOT_FIND_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        ArrayList\u003cTask\u003e toSort \u003d new ArrayList\u003cTask\u003e(results);","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"        Collections.sort(toSort);","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"        return toSort;","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"     * @return int size of the taskList","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"    public int size() {","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"        return tasksList.size();","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"     * @return int size of the taskList","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"        return tasksList.size() \u003d\u003d 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"     * Adds a new task into the list","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"     * @param newTask new Task object to be added into the list","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"        this.tasksList.add(newTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"     * Removes the task given the index of it","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"     * @param taskNum int index of task in the ArrayList","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"    public void remove(int taskNum) {","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"        this.tasksList.remove(taskNum);","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"     * Clears out the task list. Useful for testing","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"    public void clear() {","lastModifiedDate":"2023-01-22"},{"lineNumber":121,"author":{"gitId":"francisyzy"},"content":"        this.tasksList.clear();","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"     * Utility method to remove empty String in an array of strings","lastModifiedDate":"2023-02-06"},{"lineNumber":126,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":127,"author":{"gitId":"francisyzy"},"content":"     * @param input String[] that may or may not have empty Strings","lastModifiedDate":"2023-02-06"},{"lineNumber":128,"author":{"gitId":"francisyzy"},"content":"     * @return new String[] without empty Strings","lastModifiedDate":"2023-02-06"},{"lineNumber":129,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"    public static String[] removeEmptyStrings(String... input) {","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"francisyzy"},"content":"        // Solution below adapted from https://stackoverflow.com/q/40605998","lastModifiedDate":"2023-02-06"},{"lineNumber":132,"author":{"gitId":"francisyzy"},"content":"        // Removes empty string from query","lastModifiedDate":"2023-02-06"},{"lineNumber":133,"author":{"gitId":"francisyzy"},"content":"        List\u003cString\u003e filteredList \u003d Arrays.stream(input)","lastModifiedDate":"2023-02-06"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"                .filter(string -\u003e !string.isEmpty())","lastModifiedDate":"2023-02-06"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-06"},{"lineNumber":136,"author":{"gitId":"francisyzy"},"content":"        return filteredList.toArray(new String[0]);","lastModifiedDate":"2023-02-06"},{"lineNumber":137,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":138,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":139,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":139}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Commands;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Languages;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" * Class to interact with the user via commands and messages","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"public class Ui {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    private Scanner sc;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     * Constructs the UI Scanner","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    Ui() {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     * Reads the input given by the user","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     * @return String input from the user","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"            return sc.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        } catch (java.util.NoSuchElementException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"            printer(Views.END_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"            System.exit(0);","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"            return \"\";","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     * Prints out the welcome message","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    public static void showWelcome() {","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"                + \"|  _ / _   _| | _____ \\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"                + \"| | | | | | | |/ / _ /\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"                + \"|____/ /__,_|_|/_/___|\\n\";","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        printer(Views.WELCOME_STRING.str());","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"     * Takes in a list of tasks and prints it all out","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"     * @param tasks TaskList object to print the list","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException when the task is not found in the list","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"    public static void showList(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        printer(stringList(tasks));","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"     * Takes in a ArrayList of tasks and prints it all out","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"     * @param tasks TaskList object to print the list","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"    public static void showList(ArrayList\u003cTask\u003e tasks, boolean isQuery) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        printer(stringList(tasks, isQuery));","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"     * Takes in a list of tasks and turn it into String","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"     * @param tasks TaskList object to print the list","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of list of tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException when the task is not found in the list","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"    public static String stringList(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        return stringList(tasks.getList(), false);","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"     * Takes in a list of tasks and turn it into String","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"     * @param tasks TaskList object to print the list","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of list of tasks","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException when the task is not found in the list","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"    public static String stringList(TaskList tasks, boolean isGui, boolean isQuery) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"        return stringList(tasks.getList(), isGui, isQuery);","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"     * Takes in a ArrayList of tasks and Strings it","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"     * @param tasks TaskList object to print the list","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of list of tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"    public static String stringList(ArrayList\u003cTask\u003e tasks, boolean isQuery) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"        return stringList(tasks, false, isQuery);","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"     * Takes in a ArrayList of tasks and Strings it","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"     * @param tasks TaskList object to print the list","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of list of tasks","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"    public static String stringList(ArrayList\u003cTask\u003e tasks, boolean isGui, boolean isQuery) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"        // If Size \u003d\u003d 0 \u0026\u0026 isQuery \u003d throw error of cannot find","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"        // Apply de morgan Size !\u003d 0 || !isQuery \u003d !throw error of cannot find","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"        assert tasks.size() !\u003d 0 || !isQuery : Views.CANNOT_FIND_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"        assert tasks.size() !\u003d 0 : Views.EMPTY_LIST_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"        String returnString \u003d Views.LIST_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"        if (isQuery) {","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"            returnString \u003d Views.FOUND_LIST_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"francisyzy"},"content":"        if (isGui) {","lastModifiedDate":"2023-02-04"},{"lineNumber":122,"author":{"gitId":"francisyzy"},"content":"            returnString \u003d returnString.substring(0, returnString.length() - 6);","lastModifiedDate":"2023-02-06"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":124,"author":{"gitId":"francisyzy"},"content":"        return returnString + stringListRaw(tasks, isGui);","lastModifiedDate":"2023-02-06"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":126,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":127,"author":{"gitId":"francisyzy"},"content":"    private static String stringListRaw(ArrayList\u003cTask\u003e tasks, boolean isGui) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"francisyzy"},"content":"        assert tasks.size() !\u003d 0 : Views.EMPTY_LIST_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"francisyzy"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2023-02-06"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"francisyzy"},"content":"            returnString +\u003d ((i + 1) + \".\" + tasks.get(i)) + \"\\n\";","lastModifiedDate":"2023-02-06"},{"lineNumber":132,"author":{"gitId":"francisyzy"},"content":"            if (!isGui) {","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"francisyzy"},"content":"                returnString +\u003d \"      \";","lastModifiedDate":"2023-02-06"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":136,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"francisyzy"},"content":"            if (isGui) {","lastModifiedDate":"2023-02-04"},{"lineNumber":138,"author":{"gitId":"francisyzy"},"content":"                return returnString.substring(0, returnString.length() - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":139,"author":{"gitId":"francisyzy"},"content":"            } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":140,"author":{"gitId":"francisyzy"},"content":"                return returnString.substring(0, returnString.length() - 7);","lastModifiedDate":"2023-02-06"},{"lineNumber":141,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"francisyzy"},"content":"        } catch (java.lang.StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.EMPTY_LIST_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is marked done","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":150,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get the task","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"francisyzy"},"content":"     * @param taskNum int index of task in the ArrayList","lastModifiedDate":"2023-01-30"},{"lineNumber":152,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException when the task is not found in the list","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":154,"author":{"gitId":"francisyzy"},"content":"    public static void showMarkDone(TaskList tasks, int taskNum) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"francisyzy"},"content":"        printer(stringMarkDone(tasks, taskNum));","lastModifiedDate":"2023-02-01"},{"lineNumber":156,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":157,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":158,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":159,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is marked done","lastModifiedDate":"2023-02-06"},{"lineNumber":160,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":161,"author":{"gitId":"francisyzy"},"content":"     * @param tasks TaskList object to get the task","lastModifiedDate":"2023-02-06"},{"lineNumber":162,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException when the task is not found in the list","lastModifiedDate":"2023-02-06"},{"lineNumber":163,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":164,"author":{"gitId":"francisyzy"},"content":"    public static void showMarkDone(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"francisyzy"},"content":"        printer(stringMarkDone(tasks, false));","lastModifiedDate":"2023-02-06"},{"lineNumber":166,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":167,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":168,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":169,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is marked done","lastModifiedDate":"2023-02-01"},{"lineNumber":170,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":171,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get the task","lastModifiedDate":"2023-02-01"},{"lineNumber":172,"author":{"gitId":"francisyzy"},"content":"     * @param taskNum int index of task in the ArrayList","lastModifiedDate":"2023-02-01"},{"lineNumber":173,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of what the task looks like when its done","lastModifiedDate":"2023-02-01"},{"lineNumber":174,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException when the task is not found in the list","lastModifiedDate":"2023-02-01"},{"lineNumber":175,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":176,"author":{"gitId":"francisyzy"},"content":"    public static String stringMarkDone(TaskList tasks, int taskNum) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":177,"author":{"gitId":"francisyzy"},"content":"        return Views.MARK_DONE_STRING.str() + tasks.get(taskNum);","lastModifiedDate":"2023-02-12"},{"lineNumber":178,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":179,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":180,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":181,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is marked done","lastModifiedDate":"2023-02-06"},{"lineNumber":182,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":183,"author":{"gitId":"francisyzy"},"content":"     * @param tasks TaskList object to get the task","lastModifiedDate":"2023-02-06"},{"lineNumber":184,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of what the task looks like when its done","lastModifiedDate":"2023-02-06"},{"lineNumber":185,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException when the task is not found in the list","lastModifiedDate":"2023-02-06"},{"lineNumber":186,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":187,"author":{"gitId":"francisyzy"},"content":"    public static String stringMarkDone(ArrayList\u003cTask\u003e tasks, boolean isGui) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":188,"author":{"gitId":"francisyzy"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-02-06"},{"lineNumber":189,"author":{"gitId":"francisyzy"},"content":"            return Views.MARK_DONE_STRING.str() + stringListRaw(tasks, isGui);","lastModifiedDate":"2023-02-12"},{"lineNumber":190,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":191,"author":{"gitId":"francisyzy"},"content":"            return Views.MARK_MANY_DONE_STRING.str() + stringListRaw(tasks, isGui);","lastModifiedDate":"2023-02-12"},{"lineNumber":192,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":193,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":194,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":195,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":196,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is marked undone","lastModifiedDate":"2023-01-28"},{"lineNumber":197,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":198,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get the task","lastModifiedDate":"2023-01-28"},{"lineNumber":199,"author":{"gitId":"francisyzy"},"content":"     * @param taskNum int index of task in the ArrayList","lastModifiedDate":"2023-01-30"},{"lineNumber":200,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException when the task is not found in the list","lastModifiedDate":"2023-01-28"},{"lineNumber":201,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":202,"author":{"gitId":"francisyzy"},"content":"    public static void showUnmarkDone(TaskList tasks, int taskNum) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":203,"author":{"gitId":"francisyzy"},"content":"        printer(stringUnmarkDone(tasks, taskNum));","lastModifiedDate":"2023-02-01"},{"lineNumber":204,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":205,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":206,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":207,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is marked undone","lastModifiedDate":"2023-02-06"},{"lineNumber":208,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":209,"author":{"gitId":"francisyzy"},"content":"     * @param tasks TaskList object to get the task","lastModifiedDate":"2023-02-06"},{"lineNumber":210,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException when the task is not found in the list","lastModifiedDate":"2023-02-06"},{"lineNumber":211,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":212,"author":{"gitId":"francisyzy"},"content":"    public static void showUnmarkDone(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":213,"author":{"gitId":"francisyzy"},"content":"        printer(stringUnmarkDone(tasks, false));","lastModifiedDate":"2023-02-06"},{"lineNumber":214,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":215,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":216,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":217,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is marked undone","lastModifiedDate":"2023-02-01"},{"lineNumber":218,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":219,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get the task","lastModifiedDate":"2023-02-01"},{"lineNumber":220,"author":{"gitId":"francisyzy"},"content":"     * @param taskNum int index of task in the ArrayList","lastModifiedDate":"2023-02-01"},{"lineNumber":221,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of when task is undone","lastModifiedDate":"2023-02-01"},{"lineNumber":222,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException when the task is not found in the list","lastModifiedDate":"2023-02-01"},{"lineNumber":223,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":224,"author":{"gitId":"francisyzy"},"content":"    public static String stringUnmarkDone(TaskList tasks, int taskNum) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":225,"author":{"gitId":"francisyzy"},"content":"        return (Views.UNMARK_DONE_STRING.str() + tasks.get(taskNum));","lastModifiedDate":"2023-02-12"},{"lineNumber":226,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":227,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":228,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":229,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is marked undone","lastModifiedDate":"2023-02-06"},{"lineNumber":230,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":231,"author":{"gitId":"francisyzy"},"content":"     * @param tasks ArrayList object to get the task","lastModifiedDate":"2023-02-06"},{"lineNumber":232,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of when task is undone","lastModifiedDate":"2023-02-06"},{"lineNumber":233,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException when the task is not found in the list","lastModifiedDate":"2023-02-06"},{"lineNumber":234,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":235,"author":{"gitId":"francisyzy"},"content":"    public static String stringUnmarkDone(ArrayList\u003cTask\u003e tasks, boolean isGui) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":236,"author":{"gitId":"francisyzy"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-02-06"},{"lineNumber":237,"author":{"gitId":"francisyzy"},"content":"            return Views.UNMARK_DONE_STRING.str() + stringListRaw(tasks, isGui);","lastModifiedDate":"2023-02-12"},{"lineNumber":238,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":239,"author":{"gitId":"francisyzy"},"content":"            return Views.UNMARK_MANY_DONE_STRING.str() + stringListRaw(tasks, isGui);","lastModifiedDate":"2023-02-12"},{"lineNumber":240,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":241,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":242,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":243,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":244,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is newly added","lastModifiedDate":"2023-01-28"},{"lineNumber":245,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":246,"author":{"gitId":"francisyzy"},"content":"     * @param newTask new Task object to be printed","lastModifiedDate":"2023-01-28"},{"lineNumber":247,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":248,"author":{"gitId":"francisyzy"},"content":"    public static void showAdd(Task newTask) {","lastModifiedDate":"2023-02-12"},{"lineNumber":249,"author":{"gitId":"francisyzy"},"content":"        printer(stringAdd(newTask));","lastModifiedDate":"2023-02-01"},{"lineNumber":250,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":251,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":252,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":253,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is newly added","lastModifiedDate":"2023-02-01"},{"lineNumber":254,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":255,"author":{"gitId":"francisyzy"},"content":"     * @param newTask new Task object to be printed","lastModifiedDate":"2023-02-01"},{"lineNumber":256,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of new task added","lastModifiedDate":"2023-02-01"},{"lineNumber":257,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":258,"author":{"gitId":"francisyzy"},"content":"    public static String stringAdd(Task newTask) {","lastModifiedDate":"2023-02-12"},{"lineNumber":259,"author":{"gitId":"francisyzy"},"content":"        return \"added: \" + newTask;","lastModifiedDate":"2023-02-01"},{"lineNumber":260,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":261,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":262,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":263,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is deleted and show the number of tasks left","lastModifiedDate":"2023-02-06"},{"lineNumber":264,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is deleted String string the number of tasks left","lastModifiedDate":"2023-02-06"},{"lineNumber":265,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":266,"author":{"gitId":"francisyzy"},"content":"     * @param delTasks tasks that is deleted","lastModifiedDate":"2023-02-06"},{"lineNumber":267,"author":{"gitId":"francisyzy"},"content":"     * @param task     TaskList object to get the count","lastModifiedDate":"2023-02-06"},{"lineNumber":268,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-06"},{"lineNumber":269,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":270,"author":{"gitId":"francisyzy"},"content":"    public static void showDel(ArrayList\u003cTask\u003e delTasks, TaskList task) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":271,"author":{"gitId":"francisyzy"},"content":"        printer(stringDel(delTasks, task, false));","lastModifiedDate":"2023-02-06"},{"lineNumber":272,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":273,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":274,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":275,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is deleted and show the number of tasks left","lastModifiedDate":"2023-01-28"},{"lineNumber":276,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is deleted String string the number of tasks left","lastModifiedDate":"2023-02-01"},{"lineNumber":277,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":278,"author":{"gitId":"francisyzy"},"content":"     * @param delTask task that is deleted","lastModifiedDate":"2023-01-28"},{"lineNumber":279,"author":{"gitId":"francisyzy"},"content":"     * @param task    TaskList object to get the count","lastModifiedDate":"2023-01-28"},{"lineNumber":280,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":281,"author":{"gitId":"francisyzy"},"content":"    public static void showDel(Task delTask, TaskList task) {","lastModifiedDate":"2023-02-12"},{"lineNumber":282,"author":{"gitId":"francisyzy"},"content":"        printer(stringDel(delTask, task));","lastModifiedDate":"2023-02-01"},{"lineNumber":283,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":284,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":285,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":286,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is deleted and show the number of tasks left","lastModifiedDate":"2023-02-01"},{"lineNumber":287,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is deleted String string the number of tasks left","lastModifiedDate":"2023-02-01"},{"lineNumber":288,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":289,"author":{"gitId":"francisyzy"},"content":"     * @param delTask task that is deleted","lastModifiedDate":"2023-02-01"},{"lineNumber":290,"author":{"gitId":"francisyzy"},"content":"     * @param task    TaskList object to get the count","lastModifiedDate":"2023-02-01"},{"lineNumber":291,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of deleted task","lastModifiedDate":"2023-02-01"},{"lineNumber":292,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":293,"author":{"gitId":"francisyzy"},"content":"    public static String stringDel(Task delTask, TaskList task) {","lastModifiedDate":"2023-02-12"},{"lineNumber":294,"author":{"gitId":"francisyzy"},"content":"        String returnString \u003d Views.DELETE_DONE_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":295,"author":{"gitId":"francisyzy"},"content":"        returnString +\u003d delTask.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":296,"author":{"gitId":"francisyzy"},"content":"        returnString +\u003d \"\\n      \";","lastModifiedDate":"2023-01-22"},{"lineNumber":297,"author":{"gitId":"francisyzy"},"content":"        returnString +\u003d Views.TASK_COUNT_1_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":298,"author":{"gitId":"francisyzy"},"content":"        returnString +\u003d task.size();","lastModifiedDate":"2023-01-22"},{"lineNumber":299,"author":{"gitId":"francisyzy"},"content":"        returnString +\u003d Views.TASK_COUNT_2_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":300,"author":{"gitId":"francisyzy"},"content":"        return returnString;","lastModifiedDate":"2023-02-01"},{"lineNumber":301,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":302,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":303,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":304,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is deleted and show the number of tasks left","lastModifiedDate":"2023-02-06"},{"lineNumber":305,"author":{"gitId":"francisyzy"},"content":"     * Prints out the task that is deleted String string the number of tasks left","lastModifiedDate":"2023-02-06"},{"lineNumber":306,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":307,"author":{"gitId":"francisyzy"},"content":"     * @param delTask task that is deleted","lastModifiedDate":"2023-02-06"},{"lineNumber":308,"author":{"gitId":"francisyzy"},"content":"     * @param task    TaskList object to get the count","lastModifiedDate":"2023-02-06"},{"lineNumber":309,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of deleted task","lastModifiedDate":"2023-02-06"},{"lineNumber":310,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-06"},{"lineNumber":311,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":312,"author":{"gitId":"francisyzy"},"content":"    public static String stringDel(ArrayList\u003cTask\u003e delTask, TaskList task, Boolean isGui) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":313,"author":{"gitId":"francisyzy"},"content":"        String returnString \u003d Views.DELETE_DONE_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":314,"author":{"gitId":"francisyzy"},"content":"        if (delTask.size() \u003e 1) {","lastModifiedDate":"2023-02-06"},{"lineNumber":315,"author":{"gitId":"francisyzy"},"content":"            returnString \u003d Views.DELETE_MANY_DONE_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":316,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":317,"author":{"gitId":"francisyzy"},"content":"        returnString +\u003d stringListRaw(delTask, isGui);","lastModifiedDate":"2023-02-06"},{"lineNumber":318,"author":{"gitId":"francisyzy"},"content":"        returnString +\u003d \"\\n      \";","lastModifiedDate":"2023-02-06"},{"lineNumber":319,"author":{"gitId":"francisyzy"},"content":"        returnString +\u003d Views.TASK_COUNT_1_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":320,"author":{"gitId":"francisyzy"},"content":"        returnString +\u003d task.size();","lastModifiedDate":"2023-02-06"},{"lineNumber":321,"author":{"gitId":"francisyzy"},"content":"        returnString +\u003d Views.TASK_COUNT_2_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":322,"author":{"gitId":"francisyzy"},"content":"        return returnString;","lastModifiedDate":"2023-02-06"},{"lineNumber":323,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":324,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":325,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":326,"author":{"gitId":"francisyzy"},"content":"     * Prints the language the user has selected","lastModifiedDate":"2023-02-12"},{"lineNumber":327,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":328,"author":{"gitId":"francisyzy"},"content":"     * @param lang","lastModifiedDate":"2023-02-12"},{"lineNumber":329,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":330,"author":{"gitId":"francisyzy"},"content":"    public static void showSetLang(Languages lang) {","lastModifiedDate":"2023-02-12"},{"lineNumber":331,"author":{"gitId":"francisyzy"},"content":"        printer(stringSetLang(lang));","lastModifiedDate":"2023-02-12"},{"lineNumber":332,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":333,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":334,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":335,"author":{"gitId":"francisyzy"},"content":"     * Returns the language the user has selected","lastModifiedDate":"2023-02-12"},{"lineNumber":336,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":337,"author":{"gitId":"francisyzy"},"content":"     * @param lang","lastModifiedDate":"2023-02-12"},{"lineNumber":338,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of set language","lastModifiedDate":"2023-02-12"},{"lineNumber":339,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":340,"author":{"gitId":"francisyzy"},"content":"    public static String stringSetLang(Languages lang) {","lastModifiedDate":"2023-02-12"},{"lineNumber":341,"author":{"gitId":"francisyzy"},"content":"        return Views.SELECTED_LANG_STRING.str() + lang.toString();","lastModifiedDate":"2023-02-12"},{"lineNumber":342,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":343,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":344,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":345,"author":{"gitId":"francisyzy"},"content":"     * Prints the help message","lastModifiedDate":"2023-02-12"},{"lineNumber":346,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":347,"author":{"gitId":"francisyzy"},"content":"    public static void showHelp() {","lastModifiedDate":"2023-02-12"},{"lineNumber":348,"author":{"gitId":"francisyzy"},"content":"        printer(stringHelp(false));","lastModifiedDate":"2023-02-12"},{"lineNumber":349,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":350,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":351,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":352,"author":{"gitId":"francisyzy"},"content":"     * Prints the help message that the user has selected","lastModifiedDate":"2023-02-12"},{"lineNumber":353,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":354,"author":{"gitId":"francisyzy"},"content":"     * @param command that the user want to know more about","lastModifiedDate":"2023-02-12"},{"lineNumber":355,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":356,"author":{"gitId":"francisyzy"},"content":"    public static void showHelp(Commands command) {","lastModifiedDate":"2023-02-12"},{"lineNumber":357,"author":{"gitId":"francisyzy"},"content":"        printer(stringHelp(command));","lastModifiedDate":"2023-02-12"},{"lineNumber":358,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":359,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":360,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":361,"author":{"gitId":"francisyzy"},"content":"     * Returns the help message","lastModifiedDate":"2023-02-12"},{"lineNumber":362,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":363,"author":{"gitId":"francisyzy"},"content":"     * @param isGui format properly for GUI display vs CLI","lastModifiedDate":"2023-02-12"},{"lineNumber":364,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of help messages","lastModifiedDate":"2023-02-12"},{"lineNumber":365,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":366,"author":{"gitId":"francisyzy"},"content":"    public static String stringHelp(boolean isGui) {","lastModifiedDate":"2023-02-12"},{"lineNumber":367,"author":{"gitId":"francisyzy"},"content":"        return Commands.helpMessages(isGui);","lastModifiedDate":"2023-02-12"},{"lineNumber":368,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":369,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":370,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":371,"author":{"gitId":"francisyzy"},"content":"     * Returns the help message the user has selected","lastModifiedDate":"2023-02-12"},{"lineNumber":372,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":373,"author":{"gitId":"francisyzy"},"content":"     * @param command that the user want to know more about","lastModifiedDate":"2023-02-12"},{"lineNumber":374,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of command help message","lastModifiedDate":"2023-02-12"},{"lineNumber":375,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":376,"author":{"gitId":"francisyzy"},"content":"    public static String stringHelp(Commands command) {","lastModifiedDate":"2023-02-12"},{"lineNumber":377,"author":{"gitId":"francisyzy"},"content":"        return command.getExplanation();","lastModifiedDate":"2023-02-12"},{"lineNumber":378,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":379,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":380,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":381,"author":{"gitId":"francisyzy"},"content":"     * Prints the help message and inform user they didn\u0027t select","lastModifiedDate":"2023-02-12"},{"lineNumber":382,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":383,"author":{"gitId":"francisyzy"},"content":"    public static void showHelpError() {","lastModifiedDate":"2023-02-12"},{"lineNumber":384,"author":{"gitId":"francisyzy"},"content":"        printer(stringHelpError(false));","lastModifiedDate":"2023-02-12"},{"lineNumber":385,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":386,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":387,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":388,"author":{"gitId":"francisyzy"},"content":"     * Returns the help message and inform user they didn\u0027t select","lastModifiedDate":"2023-02-12"},{"lineNumber":389,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":390,"author":{"gitId":"francisyzy"},"content":"     * @param isGui format properly for GUI display vs CLI","lastModifiedDate":"2023-02-12"},{"lineNumber":391,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of set language","lastModifiedDate":"2023-02-12"},{"lineNumber":392,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":393,"author":{"gitId":"francisyzy"},"content":"    public static String stringHelpError(boolean isGui) {","lastModifiedDate":"2023-02-12"},{"lineNumber":394,"author":{"gitId":"francisyzy"},"content":"        return Views.CANNOT_FIND_STRING.str() + \" \" + Commands.helpMessages(isGui);","lastModifiedDate":"2023-02-12"},{"lineNumber":395,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":396,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":397,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":398,"author":{"gitId":"francisyzy"},"content":"     * Prints out the error given in as a String","lastModifiedDate":"2023-01-28"},{"lineNumber":399,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":400,"author":{"gitId":"francisyzy"},"content":"     * @param err","lastModifiedDate":"2023-01-28"},{"lineNumber":401,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":402,"author":{"gitId":"francisyzy"},"content":"    public static void showError(String err) {","lastModifiedDate":"2023-02-12"},{"lineNumber":403,"author":{"gitId":"francisyzy"},"content":"        printer(err);","lastModifiedDate":"2023-01-22"},{"lineNumber":404,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":405,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":406,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":407,"author":{"gitId":"francisyzy"},"content":"     * Prints out the error given in as a String","lastModifiedDate":"2023-02-03"},{"lineNumber":408,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":409,"author":{"gitId":"francisyzy"},"content":"     * @param err","lastModifiedDate":"2023-02-03"},{"lineNumber":410,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":411,"author":{"gitId":"francisyzy"},"content":"    public static void showError(Exception err) {","lastModifiedDate":"2023-02-12"},{"lineNumber":412,"author":{"gitId":"francisyzy"},"content":"        printer(err.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":413,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":414,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":415,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":416,"author":{"gitId":"francisyzy"},"content":"     * Prints out the error given in as a String","lastModifiedDate":"2023-02-03"},{"lineNumber":417,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":418,"author":{"gitId":"francisyzy"},"content":"     * @param err","lastModifiedDate":"2023-02-03"},{"lineNumber":419,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":420,"author":{"gitId":"francisyzy"},"content":"    public static void showError(Error err) {","lastModifiedDate":"2023-02-12"},{"lineNumber":421,"author":{"gitId":"francisyzy"},"content":"        printer(err.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":422,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":423,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":424,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":425,"author":{"gitId":"francisyzy"},"content":"     * Prints out the error given in as a String","lastModifiedDate":"2023-02-01"},{"lineNumber":426,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":427,"author":{"gitId":"francisyzy"},"content":"     * @param err","lastModifiedDate":"2023-02-01"},{"lineNumber":428,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of error","lastModifiedDate":"2023-02-01"},{"lineNumber":429,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":430,"author":{"gitId":"francisyzy"},"content":"    public static String stringError(String err) {","lastModifiedDate":"2023-02-12"},{"lineNumber":431,"author":{"gitId":"francisyzy"},"content":"        return err;","lastModifiedDate":"2023-02-01"},{"lineNumber":432,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":433,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":434,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":435,"author":{"gitId":"francisyzy"},"content":"     * Prints out the error given in as a String","lastModifiedDate":"2023-02-11"},{"lineNumber":436,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":437,"author":{"gitId":"francisyzy"},"content":"     * @param err","lastModifiedDate":"2023-02-11"},{"lineNumber":438,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of error","lastModifiedDate":"2023-02-11"},{"lineNumber":439,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":440,"author":{"gitId":"francisyzy"},"content":"    public static String stringError(Exception err) {","lastModifiedDate":"2023-02-11"},{"lineNumber":441,"author":{"gitId":"francisyzy"},"content":"        return err.getMessage();","lastModifiedDate":"2023-02-11"},{"lineNumber":442,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":443,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":444,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":445,"author":{"gitId":"francisyzy"},"content":"     * Printer method to print with lines and indents","lastModifiedDate":"2023-02-12"},{"lineNumber":446,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":447,"author":{"gitId":"francisyzy"},"content":"     * @param view enum","lastModifiedDate":"2023-02-12"},{"lineNumber":448,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":449,"author":{"gitId":"francisyzy"},"content":"    public static void printer(Views view) {","lastModifiedDate":"2023-02-12"},{"lineNumber":450,"author":{"gitId":"francisyzy"},"content":"        printer(view.str());","lastModifiedDate":"2023-02-12"},{"lineNumber":451,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":452,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":453,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":454,"author":{"gitId":"francisyzy"},"content":"     * Private method to print with lines and indents","lastModifiedDate":"2023-01-28"},{"lineNumber":455,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":456,"author":{"gitId":"francisyzy"},"content":"     * @param to of the event ending datePrint","lastModifiedDate":"2023-01-28"},{"lineNumber":457,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":458,"author":{"gitId":"francisyzy"},"content":"    private static void printer(String toPrint) {","lastModifiedDate":"2023-01-22"},{"lineNumber":459,"author":{"gitId":"francisyzy"},"content":"        System.out.println(\"    \" + Views.LINE_STRING.str());","lastModifiedDate":"2023-02-12"},{"lineNumber":460,"author":{"gitId":"francisyzy"},"content":"        System.out.println(\"      \" + toPrint);","lastModifiedDate":"2023-01-22"},{"lineNumber":461,"author":{"gitId":"francisyzy"},"content":"        System.out.println(\"    \" + Views.LINE_STRING.str());","lastModifiedDate":"2023-02-12"},{"lineNumber":462,"author":{"gitId":"francisyzy"},"content":"        System.out.println();","lastModifiedDate":"2023-01-22"},{"lineNumber":463,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":464,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":464}},{"path":"src/main/java/duke/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" * Command: Clears the task list","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        tasks.clear();","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        Ui.printer(Views.CLEAR_LIST_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * @return returns the UI text instead of printing","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    public String executeString(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        tasks.clear();","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        return Views.CLEAR_LIST_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":45}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":" * Abstract parent class for the other commands","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    public abstract void execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of what would have been printed to CLI","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    public abstract String executeString(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":36}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" * Command: creates a deadline Task","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    private String title;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    private String deadline;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     * Creates a deadline command given a title and deadline String","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * @param title    of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * @param deadline String input from the user","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    public DeadlineCommand(String... input) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"            this.title \u003d input[0];","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"            this.deadline \u003d input[1];","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        } catch (java.lang.ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.MISSING_ARGS_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        Task newTask \u003d new Deadline(this.title, this.deadline);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        Ui.showAdd(newTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"     * @return returns the UI text instead of printing","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    public String executeString(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        Task newTask \u003d new Deadline(this.title, this.deadline);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        return Ui.stringAdd(newTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":71}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":" * Command: Deletes the Task given","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    private int[] taskNumbers;","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     * Creates Delete Command","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * @param taskNumbers int[] index of task in the ArrayList","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    public DeleteCommand(int... taskNumbers) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        if (taskNumbers.length \u003d\u003d 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.NO_INT_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        assert taskNumbers.length !\u003d 0 : Views.NO_INT_ERR_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        this.taskNumbers \u003d taskNumbers;","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        Arrays.sort(this.taskNumbers);","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        if (taskNumbers.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            Task delTask \u003d tasks.get(0);","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"            execute(tasks, storage, 0);","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            Ui.showDel(delTask, tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"            ArrayList\u003cTask\u003e printTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"            for (int taskNum : taskNumbers) {","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"                printTasks.add(tasks.get(taskNum));","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"            executeMultiple(tasks, storage);","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"            Ui.showDel(printTasks, tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"     * Executes the command privately, abstract from previous two executes","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"     * @param taskNum task\u0027s number to operate on","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"    private void execute(TaskList tasks, Storage storage, int taskNum) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"        tasks.remove(taskNum);","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"     * Executes the command privately, abstract from previous two executes","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"     * @param taskNum task\u0027s number to operate on","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"    private void executeMultiple(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"        // Assume array is sorted in ascending order, remove delete the items one at the","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"        // time from the back, so that the correct order of items are being removed","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        for (int i \u003d taskNumbers.length - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"            int taskNum \u003d taskNumbers[i];","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"            execute(tasks, storage, taskNum);","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"     * @return returns the UI text instead of print[]ing","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"    public String executeString(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"        if (taskNumbers.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"            Task delTask \u003d tasks.get(0);","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"            execute(tasks, storage, 0);","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"            return Ui.stringDel(delTask, tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"            ArrayList\u003cTask\u003e printTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"            for (int taskNum : taskNumbers) {","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"                printTasks.add(tasks.get(taskNum));","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"            execute(tasks, storage);","lastModifiedDate":"2023-02-06"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"            return Ui.stringDel(printTasks, tasks, true);","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":117}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" * Command: Creates a Event Task","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    private String title;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    private String to;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    private String from;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     * Creates an event command with the given title and to and from","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * @param title of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     * @param to    of the event ending date","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     * @param from  of the event starting date","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    public EventCommand(String... input) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"            this.title \u003d input[0];","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"            this.to \u003d input[1];","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"            this.from \u003d input[2];","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        } catch (java.lang.ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.MISSING_ARGS_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        Task newTask \u003d new Event(this.title, this.to, this.from);","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        Ui.showAdd(newTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"     * @return returns the UI text instead of printing","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"    public String executeString(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        Task newTask \u003d new Event(this.title, this.to, this.from);","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        return Ui.stringAdd(newTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":74}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" * Command: Creates a command to exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        Ui.printer(Views.END_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     * @return returns the UI text instead of printing","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    public String executeString(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        return Views.END_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":43}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" * Command: Finds a list of task that matches the query","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    private String query;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     * Creates Find Command","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     * @param query string from user","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        this.query \u003d query;","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        ArrayList\u003cTask\u003e results \u003d tasks.search(query.split(\" \"));","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        Ui.showList(results, true);","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"     * @return returns the UI text instead of printing","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    public String executeString(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        ArrayList\u003cTask\u003e result \u003d tasks.search(query);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        return Ui.stringList(result, true, true);","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"francisyzy":59}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Commands;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" * Command: Returns the help message","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    private String query;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     * Creates Help Command","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * @param query string from user","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    public HelpCommand(String... query) {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        if (query.length \u003d\u003d 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"            this.query \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"            // Trims the input query, spilt it and take the first word","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"            this.query \u003d query[0].trim().split(\" \")[0];","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"            Ui.showHelp(getCommandFromQuery());","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        } catch (java.lang.NullPointerException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"            Ui.showHelp();","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"            Ui.showHelpError();","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"     * @return returns the UI text instead of printing","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    public String executeString(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"            return Ui.stringHelp(getCommandFromQuery());","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        } catch (java.lang.NullPointerException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"            return Ui.stringHelp(true);","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"            return Ui.stringHelpError(true);","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    private Commands getCommandFromQuery() {","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        Commands selectedLanguage \u003d Commands.valueOf(this.query.toUpperCase().trim());","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        return selectedLanguage;","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"francisyzy":74}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" * Command: to list out the commands","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.EMPTY_LIST_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        Ui.showList(tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     * @return returns the UI text instead of printing","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    public String executeString(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        return Ui.stringList(tasks, true, false);","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":47}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" * Command: Marks the Task as complete","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    private int[] taskNumbers;","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     * Takes in the task number to mark as complete","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * @param taskNumbers int index of task in the ArrayList","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public MarkCommand(int... taskNumbers) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        if (taskNumbers.length \u003d\u003d 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.NO_INT_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        assert taskNumbers.length !\u003d 0 : Views.NO_INT_ERR_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        this.taskNumbers \u003d taskNumbers;","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        if (taskNumbers.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            int taskNum \u003d taskNumbers[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            execute(tasks, storage, taskNum);","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            Ui.showMarkDone(tasks, taskNum);","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            ArrayList\u003cTask\u003e printTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"            for (int taskNum : taskNumbers) {","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"                execute(tasks, storage, taskNum);","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"                printTasks.add(tasks.get(taskNum));","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"            Ui.showMarkDone(printTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"     * Executes the command privately, abstract from previous two executes","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"     * @param taskNum task\u0027s number to operate on","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    private void execute(TaskList tasks, Storage storage, int taskNum) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        tasks.get(taskNum).markAsDone();","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"     * @return returns the UI text instead of printing","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"    public String executeString(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"        if (taskNumbers.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"            int taskNum \u003d taskNumbers[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"            execute(tasks, storage, taskNum);","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"            return Ui.stringMarkDone(tasks, taskNum);","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"            ArrayList\u003cTask\u003e printTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"            for (int taskNum : taskNumbers) {","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"                execute(tasks, storage, taskNum);","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"                printTasks.add(tasks.get(taskNum));","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"            return Ui.stringMarkDone(printTasks, true);","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":98}},{"path":"src/main/java/duke/command/SetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Commands;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Languages;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" * Command: Sets the language of Duke","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"public class SetCommand extends Command {","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    private String input;","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     * Creates Set Command","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * @param input string from user","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    public SetCommand(String input) {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        this.input \u003d input.replace(Commands.SET.cmd(), \"\");","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        Languages lang \u003d execute();","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        Ui.showSetLang(lang);","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    private Languages execute() throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            Languages selectedLanguage \u003d Languages.valueOf(this.input.toUpperCase().trim());","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            Duke.setLang(selectedLanguage);","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            return selectedLanguage;","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.INVALID_LANG_ERR_STRING.str() + Languages.listEnumStrings());","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     * @return returns the UI text instead of printing","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"    public String executeString(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        Languages lang \u003d execute();","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        return Ui.stringSetLang(lang);","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"francisyzy":70}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" * Command: Creates a Todo Task","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    private String title;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     * Creates a todo task command","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     * @param title of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    public TodoCommand(String... input) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"            this.title \u003d input[0];","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        } catch (java.lang.ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.MISSING_ARGS_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        Task newTask \u003d new Todo(this.title);","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        Ui.showAdd(newTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"     * @return returns the UI text instead of printing","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    public String executeString(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        Task newTask \u003d new Todo(this.title);","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        return Ui.stringAdd(newTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":68}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" * Command: mark the item as undone","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    private int[] taskNumbers;","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     * Creates the command to unmark task as done","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * @param taskNumbers int[] index of task in the ArrayList","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public UnmarkCommand(int... taskNumbers) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        if (taskNumbers.length \u003d\u003d 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.NO_INT_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        assert taskNumbers.length !\u003d 0 : Views.NO_INT_ERR_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        this.taskNumbers \u003d taskNumbers;","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        if (taskNumbers.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            int taskNum \u003d taskNumbers[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            execute(tasks, storage, taskNum);","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            Ui.showUnmarkDone(tasks, taskNum);","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            ArrayList\u003cTask\u003e printTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"            for (int taskNum : taskNumbers) {","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"                execute(tasks, storage, taskNum);","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"                printTasks.add(tasks.get(taskNum));","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"            Ui.showUnmarkDone(printTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"     * Executes the command privately, abstract from previous two executes","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"     * @param taskNum task\u0027s number to operate on","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    private void execute(TaskList tasks, Storage storage, int taskNum) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        tasks.get(taskNum).markAsUndone();","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"     * Executes the command","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"     * @param tasks   TaskList object to get and set the list","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"     * @param storage object required when command writes to file","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"     * @return returns the UI text instead of print[]ing","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"    public String executeString(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"        if (taskNumbers.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"            int taskNum \u003d taskNumbers[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"            execute(tasks, storage, taskNum);","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"            return Ui.stringUnmarkDone(tasks, taskNum);","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"            ArrayList\u003cTask\u003e printTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"            for (int taskNum : taskNumbers) {","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"                execute(tasks, storage, taskNum);","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"                printTasks.add(tasks.get(taskNum));","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"            return Ui.stringUnmarkDone(printTasks, true);","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"     * Checks if this command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"     * @return boolean True if the command will exit the program","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"francisyzy":98}},{"path":"src/main/java/duke/enums/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.enums;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":" * Command strings","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"public enum Commands {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    TODO(\"todo\",","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"            \"todo \u0027name\u0027\", \"To add a task with only a name.\"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    ),","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    DEADLINE(\"deadline\",","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"            \"deadline \u0027name\u0027 /by \u0027date\u0027\", \"To add a task with a deadline.\"","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    ),","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    EVENT(\"event\",","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"            \"event \u0027name\u0027 /from \u0027date\u0027 /to \u0027date\u0027\", \"To add an event with start and end time.\"","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    ),","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    BY(\"/by\",","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"            \"for deadline: /by \u0027date\u0027 in this format YYYY-MM-DDTHH:MM eg \u00272023-01-20T18:00\u0027\",","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"            \"To specify a deadline for a task in this format YYYY-MM-DDTHH:MM eg \u00272023-01-20T18:00\u0027\"","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    ),","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    FROM(\"/from\",","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"            \"for event: /from \u0027date\u0027 in this format YYYY-MM-DDTHH:MM eg \u00272023-01-20T18:00\u0027\",","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"            \"To specify the start date of an event in this format YYYY-MM-DDTHH:MM eg \u00272023-01-20T18:00\u0027\"","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    ),","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    TO(\"/to\",","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"            \"for event: /to \u0027date\u0027 in this format YYYY-MM-DDTHH:MM eg \u00272023-01-20T18:00\u0027\",","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"            \"To specify the end date of an event in this format YYYY-MM-DDTHH:MM eg \u00272023-01-20T18:00\u0027\"","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    ),","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    MARK(\"mark\",","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"            \"mark 1\", \"To mark a task as done by specifying its number.\"","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    ),","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    UNMARK(\"unmark\",","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            \"unmark 1\", \"To unmark a task as not done by specifying its number.\"","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    ),","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    DELETE(\"delete\",","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            \"delete 1\", \"To remove a task by specifying its number.\"","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"    ),","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"    DEL(\"del\",","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"            \"del 1\", \"To remove a task by specifying its number.\"","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    ),","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    FIND(\"find\",","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"            \"find \u0027name\u0027\", \"To find tasks with a specified name.\"","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"    ),","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    SET(\"set\",","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"            \"set \u0027language\u0027\", \"To set language for duke.\"","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"    ),","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"    HELP(\"help\",","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"            \"show this message\",","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"            \"To show the available commands and explanations.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"    private final String cmd;","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"    private final String example;","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"    private final String explanation;","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"     * @param cmd given in the enum","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"    Commands(String cmd, String example, String explanation) {","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"        this.example \u003d example;","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"        this.explanation \u003d explanation;","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"     * Change the command to the user input thing","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"     * @return String of the command","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"    public String cmd() {","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        return cmd;","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"     * Length of command useful for parsing commands","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"     * @return int Length of command","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"    public int len() {","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"        return cmd.length();","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"     * Get an example of how to use the command","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"     * @return example for the command","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"        return this.cmd + \": \" + this.example;","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"     * Get how to use the command","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"     * @return explanation for the command","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"    public String getExplanation() {","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"        return this.cmd + \": \" + this.explanation;","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"     * Returns a formatted string on all the commands","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"     * @param isGui","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"     * @return String with all the command inside","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"    public static String helpMessages(boolean isGui) {","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"francisyzy"},"content":"        String lineBreak \u003d \"\\n      \";","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"francisyzy"},"content":"        if (isGui) {","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"            lineBreak \u003d \"\\n\";","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"        String[] helpStrings \u003d Arrays.stream(Commands.values())","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"francisyzy"},"content":"                .map(Enum::toString)","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"francisyzy"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"francisyzy"},"content":"        String returnString \u003d Views.ALL_COMMAND_STRING.str() + lineBreak;","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"francisyzy"},"content":"        for (String helpString : helpStrings) {","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"            returnString +\u003d helpString + lineBreak;","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"francisyzy"},"content":"        return returnString.trim();","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"francisyzy":135}},{"path":"src/main/java/duke/enums/Languages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.enums;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":" * Language strings","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"public enum Languages {","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    ENG(),","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    PIRATE(),","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    SHAKESPEARE(),","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    LOLCAT();","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     * List out the available languages in one string","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * @return String of available enums","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    public static String listEnumStrings() {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        String[] languages \u003d Arrays.stream(Languages.values())","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"                .map(Enum::name)","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        for (String lang : languages) {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"            returnString +\u003d lang + \" \";","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        return returnString.trim();","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"francisyzy":29}},{"path":"src/main/java/duke/enums/Views.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.enums;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":" * Enum for every spoken line from Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"public enum Views {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    LINE_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"            \"____________________________________________________________\",","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"            \"____________________________________________________________\",","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"            \"____________________________________________________________\",","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"            \"____________________________________________________________\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    WELCOME_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"            \"Hello! I\u0027m Duke\\n      What can I do for grades?\",","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"            \"Ahoy! I\u0027m Duke\\n      What be ye needin\u0027 fer yer grades?\",","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"            \"Greetings! I am Duke\\n      How may I assist thee for thy grades?\",","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"            \"Heya! Ahm Duke\\n      Wut can Ah do for grades?\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    END_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"            \"Bye. Hope to see you again soon!\",","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"            \"Fare thee well! Hope to see ye again soon!\",","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"            \"Farewell. May we cross paths again soon!\",","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"            \"Bye. Hope ta see yu agen soon!\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    EMPTY_LIST_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"            \"Hey, the list is empty!\",","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"            \"Arrr, the list be empty!\",","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"            \"Verily, the list is devoid of content!\",","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"            \"Ey, da list is emp-teh!\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    CLEAR_LIST_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"            \"Ive cleared the list!\",","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"            \"I\u0027ve cleared the list, ye scallywag!\",","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"            \"Fear not, I have purged the list!\",","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"            \"Ahve cleared da list!\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    MARK_DONE_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"            \"Nice! I\u0027ve marked this task as done\\n       \",","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"            \"Well shiver me timbers! I\u0027ve marked this task as done\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"            \"Well done! I have marked this task as complete\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"            \"Nice! Ahve marked dis task as done\\n      \"),","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    MARK_MANY_DONE_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"            \"Nice! I\u0027ve marked these task as done:\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            \"Well shiver me timbers! I\u0027ve marked these tasks as done:\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            \"Well done! I have marked these tasks as complete:\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            \"Nice! Ahve marked dese tasks as done:\\n      \"),","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    UNMARK_DONE_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            \"OK, I\u0027ve marked this task as not done yet\\n       \",","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"            \"Aye aye, I\u0027ve marked this task as not done yet\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"            \"Fear not, I have marked this task as not yet completed\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"            \"OK, Ahve marked dis task as not done yet\\n      \"),","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    UNMARK_MANY_DONE_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"            \"OK, I\u0027ve marked these task as not done yet:\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"            \"Aye aye, I\u0027ve marked these tasks as not done yet:\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"            \"Fear not, I have marked these tasks as not yet completed:\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"            \"OK, Ahve marked dese tasks as not done yet:\\n      \"),","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    DELETE_DONE_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"            \"Noted. I\u0027ve removed this task:\\n       \",","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"            \"Avast. I\u0027ve removed this task:\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"            \"It shall be done. I have removed this task:\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"            \"Noted it down. Ahve removed dis task:\\n      \"),","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"    DELETE_MANY_DONE_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"            \"Noted. I\u0027ve removed the following tasks:\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"            \"Avast. I\u0027ve removed the following tasks:\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"            \"It shall be done. I have removed the following tasks:\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"            \"Noted it down. Ahve removed da following tasks:\\n      \"),","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"    ALL_COMMAND_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"            \"Here are all the commands:\",","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"            \"Here be all the commands:\",","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"            \"Thou commands be here:\",","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"            \"Here yu commands:\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"    TASK_COUNT_1_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"            \"Now you have \",","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"            \"Now ye have \",","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"            \"Thou hast \",","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"            \"Now yu have \"),","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"    TASK_COUNT_2_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"            \" tasks in the list.\",","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"            \" tasks on yer list.\",","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"            \" tasks in thy list.\",","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"            \" tasks in da list.\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"    LIST_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"            \"Here are the tasks in your list:\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"            \"Here be the tasks on yer list:\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"            \"Here are the tasks in thy list:\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"            \"Here are da tasks in yur list:\\n      \"),","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"    FOUND_LIST_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"            \"Here are the matching tasks in your list:\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"            \"Here be the matching tasks on yer list:\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"            \"Here are the matching tasks in thy list:\\n      \",","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"            \"Here are da matching tasks in yur list:\\n      \"),","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"    SELECTED_LANG_STRING(\"You have selected: \",","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"            \"You be selected: \",","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"            \"Thou art selected: \",","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"            \"Ey, yu da selected: \"),","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"    CANNOT_FIND_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"            \"Hey, I can\u0027t find what you\u0027re searching for\",","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"            \"Arrr, I can\u0027t find what ye be searchin\u0027 for\",","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"            \"Alack, I cannot find what thou art searching for\",","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"            \"Ey, Ah cant find wut yur searching fur\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"    MARKED_ERR_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"            \"Hey, the task you tried to mark is already marked\",","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"            \"Arrr, the task ye tried to mark be already marked\",","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"            \"Alack, the task thou attempted to mark is already marked\",","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"            \"Ey, da task yu tried ta mark is already marked\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"    UNMARKED_ERR_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"            \"Hey, the task you tried to unmark is already unmarked\",","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"            \"Arrr, the task ye tried to unmark be already unmarked\",","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"            \"Alack, the task thou attempted to unmark is already unmarked\",","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"            \"Ey, da task yu tried ta unmark is already unmarked\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"    NO_INT_ERR_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"            \"Hey, you did not enter any numbers\",","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"            \"Arrr, ye did not enter any numbers\",","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"            \"Alack, thou hast not entered any numbers\",","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"            \"Ey, yu did not enter any num-bers\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"    OUT_RANGE_ERR_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"            \"Hey, the number you\u0027ve entered is not valid\",","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"            \"Arrr, the number ye\u0027ve entered be not valid\",","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"            \"Alack, the number thou hast entered is not valid\",","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"            \"Ey, da number yuve entered is not valid\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"    UNKNOWN_ERR_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"            \"Hey, an unknown error happened, oh no\",","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"            \"Arrr, an unknown error happened, oh no\",","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"francisyzy"},"content":"            \"Alack, an unknown error has occurred, oh woe\",","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"francisyzy"},"content":"            \"Ey, an unknown error happened, oh no\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"    EMPTY_ERR_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"francisyzy"},"content":"            \"Hey, ☹ The description of a task cannot be empty.\",","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"            \"Arrr, ☹ The description of a task cannot be empty.\",","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"francisyzy"},"content":"            \"Alack, ☹ The description of a task cannot be empty.\",","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"francisyzy"},"content":"            \"Ey, ☹ Da description of a task cannot be emp-teh.\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"francisyzy"},"content":"    UNKNOWN_CMD_ERR_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"francisyzy"},"content":"            \"Hey, ☹ I\u0027m sorry, but I don\u0027t know what that means :-( type \u0027help\u0027\",","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"            \"Arrr, ☹ I\u0027m sorry, but I don\u0027t know what you be means :-( type \u0027help\u0027\",","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"francisyzy"},"content":"            \"Alack, ☹ I apologize, but I am not familiar with that command :-( type \u0027help\u0027\",","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"francisyzy"},"content":"            \"Ey, ☹ Ahm sorry, but Ah dont know wut dat means :-( type \u0027help\u0027\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"francisyzy"},"content":"    MISSING_ARGS_ERR_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"            \"Hey, ☹ I\u0027m sorry, but you are missing some arguments\",","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"            \"Arrr, ☹ I\u0027m sorry, but ye be missin\u0027 some arguments\",","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"francisyzy"},"content":"            \"Alack, ☹ I apologize, but thou art missing some arguments\",","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"francisyzy"},"content":"            \"Ey, ☹ Ahm sorry, but yu are missing sum arguments\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"francisyzy"},"content":"    LOAD_EXTRA_ERR_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"francisyzy"},"content":"            \"File load has error, ignoring that line of error\",","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"francisyzy"},"content":"            \"File load has error, ignorin\u0027 that line of error\",","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"francisyzy"},"content":"            \"The loading of the file hath errors, ignoring that line\",","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"francisyzy"},"content":"            \"File load has error, ignoring dat line of error\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"francisyzy"},"content":"    DATE_WRONG_ORDER_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"francisyzy"},"content":"            \"Hey, ☹ you seem to have ordered the /to and /from wrongly\",","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"francisyzy"},"content":"            \"Arrr, ☹ ye seem to have ordered the /to and /from wrongly\",","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"francisyzy"},"content":"            \"Alack, ☹ thou seem to have ordered the /to and /from incorrectly\",","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"francisyzy"},"content":"            \"Ey, ☹ yu seem ta have ordered da /to and /from wrongly\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"francisyzy"},"content":"    INVALID_LANG_ERR_STRING(","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"francisyzy"},"content":"            \"Hey, ☹ you seem to have entered an invalid language, available: \",","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"francisyzy"},"content":"            \"Arrr, ☹ ye seem to have entered an invalid language, available: \",","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"francisyzy"},"content":"            \"Alack, ☹ thou seem to have entered an invalid language, available: \",","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"francisyzy"},"content":"            \"Ey, ☹ yu seem ta have da an invalid language, available: \"),","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"francisyzy"},"content":"    DATE_PARSE_ERR_STRING(","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"francisyzy"},"content":"            \"Hey, ☹ please enter the date in this format YYYY-MM-DDTHH:MM like this: \u00272023-01-20T18:00\u0027\",","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"francisyzy"},"content":"            \"Arrr, ☹ please enter the date in this format YYYY-MM-DDTHH:MM like this: \u00272023-01-20T18:00\u0027\",","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"francisyzy"},"content":"            \"Alack, ☹ please enter the date in this format YYYY-MM-DDTHH:MM like this: \u00272023-01-20T18:00\u0027\",","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"francisyzy"},"content":"            \"Ey, ☹ please enter da date in dis format YYYY-MM-DDTHH:MM like dis: \u00272023-01-20T18:00\u0027\");","lastModifiedDate":"2023-02-12"},{"lineNumber":158,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":159,"author":{"gitId":"francisyzy"},"content":"    private final String englishString;","lastModifiedDate":"2023-01-18"},{"lineNumber":160,"author":{"gitId":"francisyzy"},"content":"    private final String pirateString;","lastModifiedDate":"2023-02-12"},{"lineNumber":161,"author":{"gitId":"francisyzy"},"content":"    private final String shakespeareString;","lastModifiedDate":"2023-02-12"},{"lineNumber":162,"author":{"gitId":"francisyzy"},"content":"    private final String lolcatString;","lastModifiedDate":"2023-02-12"},{"lineNumber":163,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":164,"author":{"gitId":"francisyzy"},"content":"    Views(String english, String pirate, String shakespeare, String lolcat) {","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"francisyzy"},"content":"        this.englishString \u003d english;","lastModifiedDate":"2023-01-18"},{"lineNumber":166,"author":{"gitId":"francisyzy"},"content":"        this.pirateString \u003d pirate;","lastModifiedDate":"2023-02-12"},{"lineNumber":167,"author":{"gitId":"francisyzy"},"content":"        this.shakespeareString \u003d shakespeare;","lastModifiedDate":"2023-02-12"},{"lineNumber":168,"author":{"gitId":"francisyzy"},"content":"        this.lolcatString \u003d lolcat;","lastModifiedDate":"2023-02-12"},{"lineNumber":169,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":171,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":172,"author":{"gitId":"francisyzy"},"content":"     * Return the string of the language set in Duke.java","lastModifiedDate":"2023-02-12"},{"lineNumber":173,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":174,"author":{"gitId":"francisyzy"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":175,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":176,"author":{"gitId":"francisyzy"},"content":"    public String str() {","lastModifiedDate":"2023-02-12"},{"lineNumber":177,"author":{"gitId":"francisyzy"},"content":"        switch (Duke.getLang()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":178,"author":{"gitId":"francisyzy"},"content":"        case PIRATE:","lastModifiedDate":"2023-02-12"},{"lineNumber":179,"author":{"gitId":"francisyzy"},"content":"            return pirateString;","lastModifiedDate":"2023-02-12"},{"lineNumber":180,"author":{"gitId":"francisyzy"},"content":"        case SHAKESPEARE:","lastModifiedDate":"2023-02-12"},{"lineNumber":181,"author":{"gitId":"francisyzy"},"content":"            return shakespeareString;","lastModifiedDate":"2023-02-12"},{"lineNumber":182,"author":{"gitId":"francisyzy"},"content":"        case LOLCAT:","lastModifiedDate":"2023-02-12"},{"lineNumber":183,"author":{"gitId":"francisyzy"},"content":"            return lolcatString;","lastModifiedDate":"2023-02-12"},{"lineNumber":184,"author":{"gitId":"francisyzy"},"content":"        default:","lastModifiedDate":"2023-02-12"},{"lineNumber":185,"author":{"gitId":"francisyzy"},"content":"            return englishString;","lastModifiedDate":"2023-01-18"},{"lineNumber":186,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":187,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":188,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"francisyzy":188}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.gui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":" * This control represents a dialog box consisting of an ImageView to represent","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":" * the speaker\u0027s face and a label","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    private static final Font dukeFont \u003d Font.font(\"Arial\", 12);","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    private static final Font dukeErrorFont \u003d Font.font(\"Arial\", FontWeight.BOLD, 12);","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    private static final Font userFont \u003d Font.font(\"Verdana\", 12);","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    private DialogBox(String text, Image img, Font font) {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        // Set the font for the dialog box","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        dialog.setFont(font);","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     * right.","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    private void flip() {","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        return new DialogBox(text, img, userFont);","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"    public static DialogBox getDukeDialog(String text, Image img, boolean isError) {","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        DialogBox db;","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        if (isError) {","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"            db \u003d new DialogBox(text, img, dukeErrorFont);","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"            db \u003d new DialogBox(text, img, dukeFont);","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"        db.flip();","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        return db;","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"francisyzy":77}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.gui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     * Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        String response;","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        boolean isError \u003d false;","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"            response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"            isError \u003d true;","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"            response \u003d Ui.stringError(e);","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"                DialogBox.getDukeDialog(response, dukeImage, isError));","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        // Exit gracefully","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        // Inspiration from https://github.com/nus-cs2103-AY2223S2/forum/issues/99","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        if (response.equals(Views.END_STRING.str())) {","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"            pause.setOnFinished(event -\u003e {","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"                Platform.exit();","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"                // It was not exiting. https://stackoverflow.com/a/20489749","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"                System.exit(0);","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"            });","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"            // start the pause","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"            pause.play();","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"francisyzy":81}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" * Deadline, task with a date","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     * Creates a Deadline","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     * Will try and parse it as date and throw exception when it cannot","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     * @param title of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * @param by    the deadline of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public Deadline(String title, String by) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        this(title, by, false);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * Creates a Deadline, with isDone field. Mostly used by Storage","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * @param title  of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     * @param by     the deadline of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     * @param isDone status of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    public Deadline(String title, String by, boolean isDone) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        super(title, isDone);","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"            this.by \u003d LocalDateTime.parse(by.replace(\"/by\", \"\").trim());","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.DATE_PARSE_ERR_STRING.str());","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"     * Method for formatting the Task to store in a txt file","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"     * @return String of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    public String toExport() {","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"     * Get a String representation to display to user of a Task","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"francisyzy":64}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" * Event object that has a to and from date object","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * Takes in title and from and to to create an event","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     * Will try and parse it as date and throw exception when it cannot","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * @param title of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * @param from  of the event starting date","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     * @param to    of the event ending date","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    public Event(String title, String from, String to) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        this(title, from, to, false);","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * This method sets the isDone status directly. Mostly used from Storage","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     * @param title  of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     * @param from   of the event starting date","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     * @param to     of the event ending date","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     * @param isDone status of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    public Event(String title, String from, String to, boolean isDone) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        super(title, isDone);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            this.from \u003d LocalDateTime.parse(from.replace(\"/from\", \"\").trim());","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            this.to \u003d LocalDateTime.parse(to.replace(\"/to\", \"\").trim());","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.DATE_PARSE_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        if (this.to.isBefore(this.from)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.DATE_WRONG_ORDER_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        assert this.to.isAfter(this.from) : Views.DATE_WRONG_ORDER_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     * Method for formatting the Task to store in a txt file","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"     * @return String of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"    public String toExport() {","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"     * Get a String representation to display to user of a Task","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"))","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"                + \" to: \"","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"                + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"francisyzy":74}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" * Abstract class for the Task. Every todo / deadline / event item is here","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    private String title;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"     * Creates a task, throws error if its empty string","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     * @param title of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    Task(String title) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        this(title, false);","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     * Creates a task, with isDone field. Mostly used by Storage","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     * @param title  of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     * @param isDone status of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    Task(String title, boolean isDone) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        if (title.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.EMPTY_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        assert title.trim().length() \u003e 0 : Views.EMPTY_ERR_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        this.title \u003d title.trim();","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     * Mark the task as done","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    public void markAsDone() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.MARKED_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"     * Mark the task as not done","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    public void markAsUndone() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        if (!this.isDone) {","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"            throw new DukeException(Views.UNMARKED_ERR_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"     * Getter for title of Task","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"     * @return String of the Task title","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"    public String getTitle() {","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        return this.title;","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"     * Method for formatting the Task to store in a txt file","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"     * @return String of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"    public String toExport() {","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"        return this.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"    public int compareTo(Task incoming) {","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        return this.title.compareTo(incoming.title);","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"     * Get a String representation to display to user of a Task","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"            returnString \u003d \"[X] \";","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"            returnString \u003d \"[ ] \";","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"        return returnString + title;","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"francisyzy":101}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":" * Todo, default and most generic of a Task item","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"     * Creates a Todo","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"     * @param title of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    public Todo(String title) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"        this(title, false);","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     * Creates a Todo, with isDone field. Mostly used by Storage","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * @param title  of the Task that that is being created","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     * @param isDone status of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    public Todo(String title, boolean isDone) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        super(title, isDone);","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * Get a String representation to display to user of a Task","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     * @return String representation of the Task","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"francisyzy":39}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"  style\u003d\"-fx-padding: 10;\"/\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"francisyzy":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #BFBFBF;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #F2F2F2;\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"francisyzy":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.command.ClearCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    public void testParserUnknown() {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"            Parser.parse(\"ASDF\");","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"            // Check if duke message is expected","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"            String expected \u003d Views.UNKNOWN_CMD_ERR_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"            Assertions.assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"            // Assertion failed, as expected","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"            return;","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        // If the code above didn\u0027t throw an DukeException, this line will be reached","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        fail(\"Expected an DukeException to be thrown\");","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    public void testParserExit() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        Command expected \u003d new ExitCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        Command actual \u003d Parser.parse(\"bye\");","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(expected.isExit(), actual.isExit());","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    public void testParserNotExit() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        Command expected \u003d new ClearCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        Command actual \u003d Parser.parse(\"clear\");","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(expected.isExit(), actual.isExit());","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    public void testHandleTaskFail() {","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"            Parser.handleTaskInput(\"ASDF\");","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"            // Check if duke message is expected","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"            String expected \u003d Views.UNKNOWN_CMD_ERR_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"            Assertions.assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"            // Assertion failed, as expected","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"            return;","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        // If the code above didn\u0027t throw an DukeException, this line will be reached","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        fail(\"Expected an DukeException to be thrown\");","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"    public void testHandleTask() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        String[] todoExpected \u003d { \" title\", null, null };","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"        String[] todo \u003d Parser.handleTaskInput(\"todo title\");","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertArrayEquals(todoExpected, todo);","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        String[] deadlineExpected \u003d { \" title \", \"/by tmr\", null };","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"        String[] deadline \u003d Parser.handleTaskInput(\"deadline title /by tmr\");","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertArrayEquals(deadlineExpected, deadline);","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        String[] eventExpected \u003d { \" test \", \"/from today \", \"/to tmr\" };","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        String[] event \u003d Parser.handleTaskInput(\"event test /from today /to tmr\");","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertArrayEquals(eventExpected, event);","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"    public void testSubtractIntFail() {","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"            Parser.parse(\"mark 0\");","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"            // Check if assert message is expected","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"            String expected \u003d Views.OUT_RANGE_ERR_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"            Assertions.assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"            // Assertion failed, as expected","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"            return;","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"        // If the code above didn\u0027t throw an DukeException, this line will be reached","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"        fail(\"Expected an DukeException to be thrown\");","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"    public void testGetNumbersFail() {","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"            Parser.parse(\"mark\");","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"            // Check if assert message is expected","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"            String expected \u003d Views.NO_INT_ERR_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"            Assertions.assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"            // Assertion failed, as expected","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"            return;","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"        // If the code above didn\u0027t throw an DukeException, this line will be reached","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"        fail(\"Expected an DukeException to be thrown\");","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"francisyzy":102}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class TaskListTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    public void testRemoveEmptyStrings() {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"        String[] expected \u003d { \"test\" };","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"        String[] actual \u003d TaskList.removeEmptyStrings(\"\", \"test\");","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertArrayEquals(expected, actual);","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"        // Test no empty string","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        actual \u003d TaskList.removeEmptyStrings(\"test\");","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertArrayEquals(expected, actual);","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public void testTaskListSize() throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        int expected \u003d 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        int actual \u003d list.size();","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(expected, actual);","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        list.add(new Todo(\"test\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        expected \u003d 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        actual \u003d list.size();","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(expected, actual);","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    public void testTaskListOutOfBoundFail() {","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"            new TaskList().get(0);","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"            // Check if duke message is expected","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            String expected \u003d Views.OUT_RANGE_ERR_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            Assertions.assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            // Assertion failed, as expected","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"            return;","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        // If the code above didn\u0027t throw an DukeException, this line will be reached","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        fail(\"Expected an DukeException to be thrown\");","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"francisyzy":50}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import java.util.Random;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"public class UiTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    public void testPrintBye() {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"        String expected \u003d \"    ____________________________________________________________\\n      Bye. Hope to\"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"                + \" see you again soon!\\n    ____________________________________________________________\\n\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        // Test","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"        Ui.printer(Views.END_STRING);","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        System.out.flush();","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        // Remove line breaks, both windows or unix styles","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        expected \u003d expected.replace(\"\\n\", \"\");","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        String actual \u003d outContent.toString().replace(\"\\n\", \"\");","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        actual \u003d actual.replace(\"\\r\", \"\");","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        // Assert output","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(expected, actual);","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    public void testPrintRandom() {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        String randomString \u003d \"\";","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            char c \u003d (char) (random.nextInt(26) + \u0027a\u0027);","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            randomString +\u003d c;","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        String expected \u003d \"    ____________________________________________________________\\n      \" + randomString","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"                + \"\\n    ____________________________________________________________\\n\\n\";","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        // Test","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        Ui.showError(randomString);","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        System.out.flush();","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        // Remove line breaks, both windows or unix styles","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        expected \u003d expected.replace(\"\\n\", \"\");","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        String actual \u003d outContent.toString().replace(\"\\n\", \"\");","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        actual \u003d actual.replace(\"\\r\", \"\");","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        // Assert output","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(expected, actual);","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"francisyzy":64}},{"path":"src/test/java/duke/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    public void testDeleteCommandExit() throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"        Command test \u003d new DeleteCommand(1);","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(false, test.isExit());","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    public void testDeleteCommandFail() {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"            new DeleteCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"            // Check if assert message is expected","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"            String expected \u003d \"Hey, you did not enter any numbers\";","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"            Assertions.assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"            // Assertion failed, as expected","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"            return;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        // If the code above didn\u0027t throw an DukeException, this line will be reached","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        fail(\"Expected an DukeException to be thrown\");","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"francisyzy":31}},{"path":"src/test/java/duke/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    public void testMarkCommandExit() throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"        Command test \u003d new MarkCommand(1);","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(false, test.isExit());","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    public void testMarkCommandFail() {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"            new MarkCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"            // Check if assert message is expected","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"            String expected \u003d \"Hey, you did not enter any numbers\";","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"            Assertions.assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"            // Assertion failed, as expected","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"            return;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        // If the code above didn\u0027t throw an DukeException, this line will be reached","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        fail(\"Expected an DukeException to be thrown\");","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"francisyzy":31}},{"path":"src/test/java/duke/command/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"public class TodoCommandTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    public void testTodoCommandExit() throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"        Command test \u003d new TodoCommand(\"TEST\");","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(false, test.isExit());","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"francisyzy":14}},{"path":"src/test/java/duke/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    public void testUnmarkCommandExit() throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"        Command test \u003d new UnmarkCommand(1);","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(false, test.isExit());","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    public void testUnmarkCommandFail() {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"            new UnmarkCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"            // Check if assert message is expected","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"            String expected \u003d \"Hey, you did not enter any numbers\";","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"            Assertions.assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"            // Assertion failed, as expected","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"            return;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        // If the code above didn\u0027t throw an DukeException, this line will be reached","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        fail(\"Expected an DukeException to be thrown\");","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"francisyzy":31}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.task;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    public void testDeadlineString() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"        String expected \u003d \"[D][ ] TEST (by: Jan 2 2023 1030)\";","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"        Task test \u003d new Deadline(\"TEST\", \"/by2023-01-02T10:30\");","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(expected, test.toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    public void testDeadlineMarkString() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        String expected \u003d \"[D][X] TEST (by: Jan 2 2023 1030)\";","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"        Task test \u003d new Deadline(\"TEST\", \"/by2023-01-02T10:30\");","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        test.markAsDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(expected, test.toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    public void testDeadlineTitleFail() {","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"            new Deadline(\"\", \"\");","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"            // Check if assert message is expected","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"            String expected \u003d Views.EMPTY_ERR_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"            Assertions.assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"            // Assertion failed, as expected","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"            return;","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        // If the code above didn\u0027t throw an DukeException, this line will be reached","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        fail(\"Expected an DukeException to be thrown\");","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    public void testDeadlineDateParseFail() {","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            new Deadline(\"TEST\", \"\");","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"            // Check if duke message is expected","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"            String expected \u003d \"Hey, ☹ please enter the date in this format YYYY-MM-DDTHH:MM \"","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"                    + \"like this: \u00272023-01-20T18:00\u0027\";","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"            Assertions.assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"            // Assertion failed, as expected","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"            return;","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        // If the code above didn\u0027t throw an DukeException, this line will be reached","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        fail(\"Expected an DukeException to be thrown\");","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"francisyzy":57}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.task;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class EventTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    public void testEventString() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"        String expected \u003d \"[E][ ] TEST (from: Jan 2 2023 1030 to: Jan 2 2023 1035)\";","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"        Task test \u003d new Event(\"TEST\", \"/from2023-01-02T10:30\", \"/to2023-01-02T10:35\");","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(expected, test.toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    public void testEventMarkString() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        String expected \u003d \"[E][X] TEST (from: Jan 2 2023 1030 to: Jan 2 2023 1035)\";","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"        Task test \u003d new Event(\"TEST\", \"/from2023-01-02T10:30\", \"/to2023-01-02T10:35\");","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        test.markAsDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(expected, test.toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    public void testEventTitleFail() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"            new Event(\"\", \"\", \"\");","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"            // Check if assert message is expected","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"            String expected \u003d Views.EMPTY_ERR_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"            Assertions.assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"            // Assertion failed, as expected","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"            return;","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        // If the code above didn\u0027t throw an DukeException, this line will be reached","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        fail(\"Expected an DukeException to be thrown\");","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    public void testEventDateParseFail() {","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            new Event(\"TEST\", \"\", \"\");","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"            // Check if duke message is expected","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"            String expected \u003d \"Hey, ☹ please enter the date in this format YYYY-MM-DDTHH:MM \"","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"                    + \"like this: \u00272023-01-20T18:00\u0027\";","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"            Assertions.assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"            // Assertion failed, as expected","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"            return;","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        // If the code above didn\u0027t throw an DukeException, this line will be reached","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        fail(\"Expected an DukeException to be thrown\");","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"    public void testEventDateOrderFail() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"            new Event(\"TEST\", \"2023-01-20T19:00\", \"2023-01-20T18:00\");","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"            // Check if assert message is expected","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"            String expected \u003d \"Hey, ☹ you seem to have ordered the /to and /from wrongly\";","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"            Assertions.assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"            // Assertion failed, as expected","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"            return;","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        // If the code above didn\u0027t throw an DukeException, this line will be reached","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        fail(\"Expected an DukeException to be thrown\");","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"francisyzy":72}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package duke.task;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import duke.enums.Views;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    public void testTodoString() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"        String expected \u003d \"[T][ ] TEST\";","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"        Task test \u003d new Todo(\"TEST\");","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(expected, test.toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    public void testTodoMarkString() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        String expected \u003d \"[T][X] TEST\";","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"        Task test \u003d new Todo(\"TEST\");","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        test.markAsDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        Assertions.assertEquals(expected, test.toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    public void testTodoFail() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"            new Todo(\"\");","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"            // Check if assert message is expected","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"            String expected \u003d Views.EMPTY_ERR_STRING.str();","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"            Assertions.assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"            // Assertion failed, as expected","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"            return;","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        // If the code above didn\u0027t throw an DukeException, this line will be reached","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        fail(\"Expected an DukeException to be thrown\");","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"francisyzy":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"clear","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"mark1","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"todo one","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"todotwo","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"mark2","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"unmark2","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"deadline ip project /by 2023-01-19T18:00","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"deadlineip project2 /by2023-01-20T18:00","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"deadlineip project2 /by tmr","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"delete1","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"event hack and roll /from 2023-01-14T12:30 /to 2023-01-15T12:30","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"eventhack and roll2 /from2023-01-24T12:30 /to2023-01-25T12:30","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"eventerror3 /from2023-01-30T12:30 /to2023-01-25T12:30","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"mark1","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"todo","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"event","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"deadline /by","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"event /from /to","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"deadline test","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"event test","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"del 1","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"del1","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"mark 1 2","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"unmark 1 2","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"del 1 2","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"del0","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"del0 -2","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"del-2","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"todo test one","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"todo one","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"todo test two","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"find test","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"find test one","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"find one","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"mark 1","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"mark 1","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"unmark 1","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"unmark 1","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"clear","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"asdf","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"set abc","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"set pirate","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"set shakespeare","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"set lolcat","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"list","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"francisyzy":61}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"java -enableassertions -classpath ..\\bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"francisyzy":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"java -enableassertions -classpath ../bin/ duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"# cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT ","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":33,"francisyzy":5}}]
