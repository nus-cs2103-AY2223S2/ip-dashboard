[{"path":"build-logic/build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"/*","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":" * This project uses @Incubating APIs which are subject to change.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"plugins {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"    // Support convention plugins written in Groovy. Convention plugins are build scripts in \u0027src/main\u0027 that automatically become available as plugins in the main build.","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"repositories {","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"    // Use the plugin portal to apply community plugins in convention plugins.","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"    gradlePluginPortal()","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":15}},{"path":"build-logic/settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"/*","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":" * This settings file is used to specify which projects to include in your build-logic build.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":" * This project uses @Incubating APIs which are subject to change.","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"rootProject.name \u003d \u0027duke-build-logic\u0027","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":8}},{"path":"build-logic/src/main/groovy/src.java-application-conventions.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"/*","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":" * This project uses @Incubating APIs which are subject to change.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"plugins {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"    // Apply the common convention plugin for shared build configuration between library and application projects.","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"    id \u0027src.java-common-conventions\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"    // Apply the application plugin to add support for building a CLI application in Java.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":13}},{"path":"build-logic/src/main/groovy/src.java-common-conventions.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"/*","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":" * This project uses @Incubating APIs which are subject to change.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"plugins {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"    // Apply the java Plugin to add support for Java.","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"repositories {","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"    // Use Maven Central for resolving dependencies.","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"    mavenCentral()","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"dependencies {","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"    constraints {","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"        // Define dependency versions as constraints","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"        implementation \u0027org.apache.commons:commons-text:1.9\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"testing {","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"    suites {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"        // Configure the built-in test suite","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"        test {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"            // Use JUnit Jupiter test framework","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"            useJUnitJupiter(\u00275.9.1\u0027)","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":32}},{"path":"build-logic/src/main/groovy/src.java-library-conventions.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"/*","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":" * This project uses @Incubating APIs which are subject to change.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"plugins {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"    // Apply the common convention plugin for shared build configuration between library and application projects.","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"    id \u0027src.java-common-conventions\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"    // Apply the java-library plugin for API and implementation separation.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"    id \u0027java-library\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":13}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"checkstyle {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"gekhro"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"gekhro":20,"-":40}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"/*","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":" * The settings file is used to specify which projects to include in your build.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":" * in the user manual at https://docs.gradle.org/7.6/userguide/multi_project_builds.html","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":" * This project uses @Incubating APIs which are subject to change.","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"pluginManagement {","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"    // Include \u0027plugins build\u0027 to define convention plugins.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"    includeBuild(\u0027build-logic\u0027)","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"rootProject.name \u003d \u0027duke\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"include(\u0027app\u0027, \u0027list\u0027, \u0027utilities\u0027)","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":17}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":" * It\u0027s a custom control that extends HBox and has a label and an image view.","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"    private void flip() {","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"gekhro"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"gekhro"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"gekhro"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"gekhro"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"gekhro"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"gekhro"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"gekhro"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"gekhro"},"content":"        db.flip();","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"gekhro"},"content":"        return db;","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"gekhro":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":" * Duke is a class that takes in a filepath and loads up the previous tasks if there are any","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"public class Duke {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"     * The constructor of Duke. It takes in a filepath and loads up the previous tasks if there are","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"     * any.","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"     * The function runs a loop that reads a command from the user, parses it, executes it, and then","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"     * checks if the command is an exit command","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"    public void run() {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"            try {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"                String fullCommand \u003d this.ui.readCommand();","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"            } finally {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"gekhro"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"gekhro"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"gekhro"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"gekhro"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"gekhro"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"gekhro"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"gekhro"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"gekhro":57}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":" * \u003e Child class of Exception that is made for custom duke exceptions","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"gekhro":9}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"public class Launcher {","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"gekhro":11}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"    private Duke duke \u003d new Duke(\"tasks.txt\");","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"            stage.show();","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"gekhro":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"gekhro"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"gekhro"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"gekhro"},"content":"        );","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"gekhro"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"gekhro":51}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import duke.commands.AddDeadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import duke.commands.AddEvent;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import duke.commands.AddTodo;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"import duke.commands.Bye;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"import duke.commands.Delete;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"import duke.commands.Find;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"import duke.commands.List;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"import duke.commands.Mark;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"import duke.commands.Unmark;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":" * The parse method takes in a string and returns a command object","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"public class Parser {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"    // private enum CommandType {","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"    //     DEADLINE,","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"    //     EVENT,","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"    //     BYE,","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"    //     LIST,","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"    //     MARK,","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"    //     UNMARK,","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"    //     DELETE,","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"    //     FIND","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"    //}","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"     * parse takes in the user input and returns a Command for the program to execute","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"     * @param input the user input","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"     * @return A command object","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"        String[] inputwords \u003d input.split(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"        String commandinput \u003d inputwords[0].toUpperCase();","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"        switch(commandinput) {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"        case \"TODO\":","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"            if (inputwords.length \u003c 2) {","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"                throw new DukeException(\"Description is missing\");","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"            return new AddTodo(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"gekhro"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"            if (inputwords.length \u003c 2) {","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"                throw new DukeException(\"Description is missing\");","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"gekhro"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"gekhro"},"content":"            return new AddDeadline(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"gekhro"},"content":"        case \"EVENT\":","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"gekhro"},"content":"            if (inputwords.length \u003c 2) {","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"gekhro"},"content":"                throw new DukeException(\"Description is missing\");","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"gekhro"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"gekhro"},"content":"            return new AddEvent(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"gekhro"},"content":"        case \"DELETE\":","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"gekhro"},"content":"            if (inputwords.length \u003c 2) {","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"gekhro"},"content":"                throw new DukeException(\"Index for delete command is missing\");","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"gekhro"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"gekhro"},"content":"            return new Delete(inputwords[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"gekhro"},"content":"        case \"MARK\":","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"gekhro"},"content":"            if (inputwords.length \u003c 2) {","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"gekhro"},"content":"                throw new DukeException(\"Index for mark command is missing\");","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"gekhro"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"gekhro"},"content":"            return new Mark(inputwords[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"gekhro"},"content":"        case \"UNMARK\":","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"gekhro"},"content":"            if (inputwords.length \u003c 2) {","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"gekhro"},"content":"                throw new DukeException(\"Index for unmark command is missing\");","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"gekhro"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"gekhro"},"content":"            return new Unmark(inputwords[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"gekhro"},"content":"        case \"BYE\":","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"gekhro"},"content":"            return new Bye();","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"gekhro"},"content":"        case \"LIST\":","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"gekhro"},"content":"            return new List();","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"gekhro"},"content":"        case \"FIND\":","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"gekhro"},"content":"            if (inputwords.length \u003c 2) {","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"gekhro"},"content":"                throw new DukeException(\"keyword for find command is missing\");","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"gekhro"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"gekhro"},"content":"            return new Find(inputwords[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"gekhro"},"content":"        default:","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"gekhro"},"content":"            throw new DukeException(\"invalid command\");","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":91}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import java.io.File;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":" * This class is used to load and save the task list","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"public class Storage {","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"    private File saveFile;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"     * Constructor for Duke object.","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"     * Creating a new file with the filepath given.","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"        this.saveFile \u003d new File(filepath);","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"     * Loading the task list from the file.","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"        if (saveFile.exists()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"            try {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"                ObjectInputStream objin \u003d new ObjectInputStream(new FileInputStream(saveFile));","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"                tasks \u003d (TaskList) objin.readObject();","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"                objin.close();","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"                System.out.println(\"File is empty\");","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"            return tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"        } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"            try {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"                throw new DukeException(\"unable to load save file\");","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"                System.out.println(\"Cant create file\");","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"            return tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"     * It creates a new ObjectOutputStream object, which is a stream that writes objects to a file. It","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"gekhro"},"content":"     * then writes the TaskList object to the file, and closes the stream","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"gekhro"},"content":"     * @param tasks the TaskList object that is to be saved","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"gekhro"},"content":"    public void saveTaskList(TaskList tasks) {","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"gekhro"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"gekhro"},"content":"            ObjectOutputStream objout \u003d new ObjectOutputStream(new FileOutputStream(saveFile));","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"gekhro"},"content":"            objout.writeObject(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"gekhro"},"content":"            objout.close();","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"gekhro"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"gekhro"},"content":"            System.out.println(\"could not create save file\");","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":60}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":" * This class creates a list of tasks and allows the user to add, remove, and list the tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"     * Creating a new ArrayList of tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"    public int size() {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"     * // Java","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"     * public String list() {","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"     *         StringBuilder listOfTasks \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"gekhro"},"content":"     *         for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"     *             listOfTasks.append(i + 1).append(\". \").append(this.tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"     *         }","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"gekhro"},"content":"     *         return listOfTasks.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"gekhro"},"content":"     *     }","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"gekhro"},"content":"     * @return A string of the tasks in the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"gekhro"},"content":"    public String list() {","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"gekhro"},"content":"        StringBuilder listOfTasks \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"gekhro"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"gekhro"},"content":"            listOfTasks.append(i + 1).append(\". \").append(this.tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"gekhro"},"content":"        return listOfTasks.toString();","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":60}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":" * It creates a new instance of the Ui class.","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"public class Ui {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"    public Ui() {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"     * It returns a string that contains a logo and a welcome message","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"     * @return A string","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"    public String showWelcome() {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"        return \"Hello i\u0027m\\n\" + logo + \"What can i do for you?\";","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"    public void showLine() {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"        System.out.println(\"____________________________________________\");","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"     * It reads a line of text from the console and returns it as a string","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"     * @return The next line of input from the user.","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"        return scan.nextLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"        return \"Unable to load tasks from storage\";","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"     * This function takes in a task and the number of tasks in the list, and returns a string that","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"gekhro"},"content":"     * prints out the task and the number of tasks in the list","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"     * @param t the task that was added","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"     * @param numberOfTasks the number of tasks in the list","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"gekhro"},"content":"    public String printAddedTask(Task t, int numberOfTasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"gekhro"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + t.toString()","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"gekhro"},"content":"            + \"\\n\" + \"Now you have \" + numberOfTasks + \" tasks in the list.\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"gekhro"},"content":"    public String printMarked(Task t) {","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"gekhro"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + t.toString();","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"gekhro"},"content":"    public String printUnmarked(Task t) {","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"gekhro"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + t.toString();","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"gekhro"},"content":"    public String printExitMessage() {","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"gekhro"},"content":"        return \"Bye. Hope to see you again!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"gekhro"},"content":"     * This function returns a string that contains the task that was removed, the number of tasks left","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"gekhro"},"content":"     * in the list, and a message that says \"Noted. I\u0027ve removed this task\"","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"gekhro"},"content":"     * @param t the task that was removed","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"gekhro"},"content":"     * @param numberOfTasks the number of tasks in the list after the removal","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"gekhro"},"content":"    public String printRemovedMessage(Task t, int numberOfTasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"gekhro"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"gekhro"},"content":"                + t.toString() + \"\\n\" + \"Now you have \" + numberOfTasks + \" tasks in the list.\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"gekhro"},"content":"    public String printFindTask() {","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"gekhro"},"content":"        return \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"gekhro"},"content":"    public String showError(String error) {","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"gekhro"},"content":"        return error;","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"gekhro"},"content":"    public String printErrorMessage() {","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"gekhro"},"content":"        return \"oops, something went wrong :(\";","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"gekhro"},"content":"    public String printInvalidCommandError() {","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"gekhro"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(((((\";","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"gekhro"},"content":"    public void message() {","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":89}},{"path":"src/main/java/duke/commands/AddDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke.commands;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":" * The AddDeadline class is a subclass of the Command class. It has two private fields, description and","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":" * due_by. It has a constructor that takes in a string input and splits the input into two parts, the","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":" * description and the due_by date. It has an execute method that takes in a TaskList, Ui and Storage","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":" * object. It creates a new Deadline task object and adds it to the TaskList. It then saves the TaskList to","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":" * the storage and prints out the new tasklist","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"public class AddDeadline extends Command {","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"    private String description;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"    private String dueBy;","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"     * A constructor that takes in a string input and splits the input into two parts, the","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"     *  description and the due_by date.","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"    public AddDeadline(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"            if (input.length() \u003c 9) {","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty\");","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"            this.description \u003d input.substring(9);","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"     * The function splits the input using \u0027/by\u0027, stores the split string in an arr of string, stores","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"     * the first index in the array as a task description, and creates a new Deadline object with the","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"     * description and due_by date","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"     *  @param tasks a list of tasks","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"     * @param ui a reference to the UI object","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"     * @param storage a Storage object that contains the methods to save the tasks to a file","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"     * @return","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"gekhro"},"content":"            //splits the input using \u0027/by\u0027, stores the split string in an arr of string","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"            String[] arrOfStr \u003d description.split(\"/by \");","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"gekhro"},"content":"            //stores the first index in the array as a task description","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"gekhro"},"content":"            if (arrOfStr.length \u003c 2) {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"gekhro"},"content":"                throw new DukeException(\"please indicate the deadline in the follow format: (deadline description) + \"","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"gekhro"},"content":"                + \"/by (deadline date in the format: YYYY-MM-DD)\");","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"gekhro"},"content":"            } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"gekhro"},"content":"                this.description \u003d arrOfStr[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"gekhro"},"content":"                this.dueBy \u003d arrOfStr[1];","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"gekhro"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"gekhro"},"content":"            Deadline d \u003d new Deadline(this.description, this.dueBy);","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"gekhro"},"content":"            tasks.add(d);","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"gekhro"},"content":"            storage.saveTaskList(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"gekhro"},"content":"            return ui.printAddedTask(d, tasks.size());","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"gekhro"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"gekhro"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":65}},{"path":"src/main/java/duke/commands/AddEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke.commands;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":" * \u003e This class is a command that adds an event to the calendar","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"public class AddEvent extends Command {","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"    private String description;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"    private String start;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"    private String end;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"     * This is the constructor of the class AddEvent. It takes in a string input and splits it into 3","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"     * parts, the description, start and end of the event.","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"    public AddEvent(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"            if (input.length() \u003c 6) {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"                throw new DukeException(\"OOPS!!! The description of an event cannot be empty\");","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"            this.description \u003d input.substring(6);","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"     * This function creates a new event object with the description, start and end time, adds it to","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"     * the task list, saves the task list to storage and prints the added task to the user","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"     *  @param tasks the list of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"     * @param ui the user interface","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"     * @param storage Storage","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"     * @return","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"            // Splitting the input into an array of strings using /from and /to to seperate the strings.","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"            String[] arrOfStr \u003d this.description.split(\"/from|/to\");","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"            if (arrOfStr.length \u003c 3) {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"gekhro"},"content":"                throw new DukeException(\"please indicate the event in the follow format: (event description) + \"","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"                 + \"/from (event start date/time) /to (event end date/time)\");","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"gekhro"},"content":"            } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"gekhro"},"content":"                //stores the first index in the array as the task description","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"gekhro"},"content":"                //second index as start of event and third index as end of event","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"gekhro"},"content":"                this.description \u003d arrOfStr[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"gekhro"},"content":"                this.start \u003d arrOfStr[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"gekhro"},"content":"                this.end \u003d arrOfStr[2];","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"gekhro"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"gekhro"},"content":"            Event e \u003d new Event(this.description, this.start, this.end);","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"gekhro"},"content":"            tasks.add(e);","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"gekhro"},"content":"            storage.saveTaskList(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"gekhro"},"content":"            return ui.printAddedTask(e, tasks.size());","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"gekhro"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"gekhro"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":63}},{"path":"src/main/java/duke/commands/AddTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke.commands;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":" * \u003e This class is a command that adds a todo to the task list","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"public class AddTodo extends Command {","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"    // A variable that stores the description of the task.","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"    private String description;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"     * This is the constructor of the class. It takes in a string as input and checks if the length of","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"     * the string is less than 5. If it is, it throws an exception. If not, it assigns the description","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"     * of the task to the string.","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"    public AddTodo(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"            if (input.length() \u003c 5) {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty\");","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"            this.description \u003d input.substring(5);","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"     * The function takes in a task list, a storage, and a ui, and then creates a new task object with","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"     * the description of the command, adds it to the task list, saves the task list, and prints the","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"     * added task","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"     * @param ui the user interface","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"     * @param storage Storage","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"     * @return","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"        Todo t \u003d new Todo(this.description);","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"        tasks.add(t);","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"        storage.saveTaskList(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"gekhro"},"content":"        return ui.printAddedTask(t, tasks.size());","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":47}},{"path":"src/main/java/duke/commands/Bye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke.commands;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":" * The Bye class is a subclass of Command as it is a type of command.","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":" * It implements the execute method and changes isExit method to return true so that duke will stop running","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"public class Bye extends Command {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"     * This function saves the task list to the storage and returns the exit message","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"     * @param ui the user interface","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"     * @param storage the storage object that is used to save the task list","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"     * @return The exit message.","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"        storage.saveTaskList(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"        return ui.printExitMessage();","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"        return true;","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":28}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke.commands;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":" * A Command is an object that can be executed to interact with duke.","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"        return false;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":18}},{"path":"src/main/java/duke/commands/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke.commands;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":" * The Delete class is a subclass of Command. It has a constructor that takes in a String index and","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":" * assigns it to the index variable. It has an execute method that takes in a TaskList, Ui and Storage","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":" * object. It removes the task at the index from the TaskList and prints a message to the user","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"public class Delete extends Command {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"    private int index;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"    private Task t;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"     * A constructor that takes in a String index and assigns it to the index variable.","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"    public Delete(String index) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"            this.index \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"            throw new DukeException(\"invalid index\");","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"     * This function removes a task from the task list","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"     * @param ui the user interface","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"     * @param storage the storage object","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"     * @return","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"        if (this.index \u003e tasks.size() - 1 || this.index \u003c 0) {","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"            throw new DukeException(\"Sorry, you used an invalid index\");","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"        this.t \u003d tasks.getTask(index);","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"        tasks.removeTask(index);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"        storage.saveTaskList(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"        return ui.printRemovedMessage(this.t, tasks.size());","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":43}},{"path":"src/main/java/duke/commands/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke.commands;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":" * Find is a subclass of Command that takes in a keyword and returns a string of all the tasks that","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":" * contain that keyword","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"public class Find extends Command {","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"    protected String keyword;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"    public Find(String input) {","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"        this.keyword \u003d input;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"     * The function takes in a tasklist, a ui and a storage, and returns a string of all the tasks that","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"     * contain the keyword","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"     * @param ui a reference to the UI object","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"     * @param storage This is the storage object that you will use to access the file system.","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"     * @return The matching tasks in the task list.","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"        StringBuilder matchingTasks \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"            Task currenttask \u003d tasks.getTask(i);","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"            String taskdescription \u003d currenttask.getDescription();","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"            if (taskdescription.contains(keyword)) {","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"                counter++;","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"                matchingTasks.append(counter).append(\". \").append(taskdescription).append(\"\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"        return matchingTasks.toString();","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"gekhro":38}},{"path":"src/main/java/duke/commands/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke.commands;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":" * \u003e This class is a Command and it is used to list the contents of the current directory","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"public class List extends Command {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"     * This function takes in a TaskList, Storage, and Ui object, and lists all the tasks in the TaskList","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"     * @param tasks The TaskList object that contains the list of tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"     * @param ui The UI object that is used to interact with the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"     * @param storage The storage object that contains the tasks.","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"     * @return","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"        return tasks.list();","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":20}},{"path":"src/main/java/duke/commands/Mark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke.commands;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":" * Mark is a subclass of Command. It has a constructor that takes in a String index and an execute","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":" * method that takes in a TaskList, Ui and Storage. The execute method marks the task at the given","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":" * index as done and saves the task list to storage","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"public class Mark extends Command {","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"    private int index;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"    private Task t;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"     * A constructor that takes in a String index and throws a DukeException if the index is not a","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"     * number.","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"    public Mark(String index) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"            this.index \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"            throw new DukeException(\"invalid index\");","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"     * The function takes in a task list, a user interface, and a storage, and then marks the task at","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"     * the index as done, saves the task list, and prints the marked task","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"     *  @param tasks the list of tasks","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"     * @param ui the user interface","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"     * @param storage Storage","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"     * @return","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"        if (this.index \u003e tasks.size() - 1 || this.index \u003c 0) {","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"            throw new DukeException(\"Sorry, you used an invalid index\");","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"        this.t \u003d tasks.getTask(this.index);","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"        this.t.markAsDone();","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"        storage.saveTaskList(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"gekhro"},"content":"        return ui.printMarked(this.t);","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":46}},{"path":"src/main/java/duke/commands/Unmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke.commands;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":" * The Unmark class is a subclass of Command. It has a constructor that takes in a String index and","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":" * assigns it to the instance variable index. It has an execute method that takes in a TaskList, Ui and","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":" * Storage object. It gets the task at the index from the TaskList and marks it as not done. It then","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":" * saves the TaskList to the Storage and prints the task that was unmarked","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"public class Unmark extends Command {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"    private int index;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"    private Task t;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"     * This is the constructor of the Unmark class. It takes in a String index and assigns it to the","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"     * instance variable index.","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"    public Unmark(String index) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"            this.index \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"            throw new DukeException(\"invalid index\");","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"     * This function is used to mark a task as not done","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"     *  @param tasks the list of tasks","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"     * @param ui the user interface","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"     * @param storage Storage","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"     * @return","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"        if (this.index \u003e tasks.size() - 1 || this.index \u003c 0) {","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"            throw new DukeException(\"Sorry, you used an invalid index\");","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"        this.t \u003d tasks.getTask(this.index);","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"        this.t.markAsNotDone();","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"        storage.saveTaskList(tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"gekhro"},"content":"        return ui.printUnmarked(this.t);","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"gekhro":46}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":" * Deadline is a subclass of Task that has a due_by date","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"    private LocalDate dueBy;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"    private String output;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"     * A constructor that takes in a description and a due_by date. It then parses the due_by date and","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"     * formats it to a new format. If the date is not in the correct format, it will throw a","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"     * DukeException.","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"    public Deadline(String description, String dueBy) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"            this.dueBy \u003d LocalDate.parse(dueBy);","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"            DateTimeFormatter newFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"            this.output \u003d this.dueBy.format(newFormat);","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"            throw new DukeException((\"Invalid deadline format, please input as YYYY-MM-DD with a space after /due_by\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"        return \"[D]\" + super.toString() + \" (due by: \" + this.output + \")\";","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"gekhro":35}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":" * The Event class extends the Task class and adds a start and end time to the description.","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"    protected String start;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"    protected String end;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"     * A constructor that takes in a description, start and end time and sets the description, start","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"     * and end time of the event.","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + this.start + \"to:\" + this.end + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"gekhro":24}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":" * It creates a class called Task that has two properties: description and isDone status.","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"    protected String description;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"     * If the task is done, return an X, otherwise return a space","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"     * @return The method is returning a String.","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"     * marks a task as done by changing isDone variable to true","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"     * This function sets the value of the isDone variable to false","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"        return this.description;","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"gekhro":45}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":" * The Todo class extends the Task class and overrides the toString method","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"gekhro":16}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"gekhro":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"gekhro":23}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"public class DukeTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"gekhro":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"todo borrow book","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"deadline return book /by monday 2pm","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"event party /from thurs 9am /to 10pm","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"list","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"bye","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"gekhro":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"java -classpath ..\\text-ui-test \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"gekhro":2,"-":19}},{"path":"data.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"gekhro":0}},{"path":"tasks.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"gekhro":0}}]
