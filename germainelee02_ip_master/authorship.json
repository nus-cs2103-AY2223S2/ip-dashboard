[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"germainelee02":2,"-":22}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"public enum Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"    TODO,","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"    DEADLINE,","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"    EVENT,","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"    BYE,","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"    LIST,","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"    MARK,","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"    UNMARK,","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"    DELETE;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    public static boolean contains(String str) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"        for (Command ac:values()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"            if (ac.name().equals(str.toUpperCase())) {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"                return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"germainelee02":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"import java.io.File;","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"    public Duke(String filePathName) {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"        TaskList tasks1;","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"        this.storage \u003d new Storage(filePathName);","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"            tasks1 \u003d new TaskList(storage.loadFromFile());","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"            tasks1 \u003d new TaskList();","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"        this.tasks \u003d tasks1;","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"     /**","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"     * creates the localdatetime by parsing the text string","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"     * @param dateTime the string representation of the local date time","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"     * @return the LocalDateTime object being created","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"    public static LocalDateTime createLocalDateTime(String dateTime) {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"        LocalDateTime date;","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"            String stringWithNoTrailingWhitespaces \u003d dateTime.trim();","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"            date \u003d LocalDateTime.parse(stringWithNoTrailingWhitespaces, FORMATTER);","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"            date \u003d null;","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"        return date;","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"germainelee02"},"content":"     * driver function","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"germainelee02"},"content":"    public void run() {","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"germainelee02"},"content":"        this.ui.greetings();","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"germainelee02"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"germainelee02"},"content":"        while (true) {","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"germainelee02"},"content":"            try {","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"germainelee02"},"content":"                String line \u003d input.nextLine();","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"germainelee02"},"content":"                String upperLine \u003d line.toUpperCase();","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"germainelee02"},"content":"                String command \u003d upperLine.split(\" \")[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"germainelee02"},"content":"                Command cm \u003d Parser.parseCommand(command);","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"germainelee02"},"content":"                String[] elemArr \u003d Parser.parseStartingElements(upperLine);","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"germainelee02"},"content":"                if (cm.equals(Command.BYE)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"germainelee02"},"content":"                    if (elemArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"germainelee02"},"content":"                        break;","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"germainelee02"},"content":"                    } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"germainelee02"},"content":"                        throw new DukeException(\"Did you mean to say bye? Type \u0027bye\u0027 to quit the program.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"germainelee02"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"germainelee02"},"content":"                } else if (cm.equals(Command.LIST)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"germainelee02"},"content":"                    if (elemArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"germainelee02"},"content":"                        this.ui.printList(this.tasks.getList());","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"germainelee02"},"content":"                    } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"germainelee02"},"content":"                        throw new DukeException(\"No argument in list allowed.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"germainelee02"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"germainelee02"},"content":"                } else if (cm.equals(Command.MARK)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"germainelee02"},"content":"                    if (elemArr.length !\u003d 2) {","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"germainelee02"},"content":"                        throw new DukeException(\"Wrong format. Format it as \u0027mark [index]\u0027\");","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"germainelee02"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"germainelee02"},"content":"                    if (!elemArr[1].chars().allMatch(Character::isDigit)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"germainelee02"},"content":"                        throw new DukeException(\"Index should be a number\");","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"germainelee02"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"germainelee02"},"content":"                    int idx \u003d Integer.parseInt(elemArr[1]) - 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"germainelee02"},"content":"                    if (idx \u003e\u003d this.tasks.getList().size() || idx \u003c 0) {","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"germainelee02"},"content":"                        throw new DukeException(\"This index doesn\u0027t exist.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"germainelee02"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":91,"author":{"gitId":"germainelee02"},"content":"                    Task markedTask \u003d this.tasks.markTaskInListDone(idx);","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"germainelee02"},"content":"                    this.ui.markResponse(markedTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"germainelee02"},"content":"                    this.storage.deleteFileAndRedo(this.tasks.getList());","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"germainelee02"},"content":"                } else if (cm.equals(Command.UNMARK)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"germainelee02"},"content":"                    if (elemArr.length !\u003d 2) {","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"germainelee02"},"content":"                        throw new DukeException(\"Wrong format. Format it as \u0027mark [index]\u0027\");","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"germainelee02"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"germainelee02"},"content":"                    if (!elemArr[1].chars().allMatch(Character::isDigit)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"germainelee02"},"content":"                        throw new DukeException(\"Index should be a number\");","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"germainelee02"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"germainelee02"},"content":"                    int idx \u003d Integer.parseInt(elemArr[1]) - 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"germainelee02"},"content":"                    if (idx \u003e\u003d this.tasks.getList().size() || idx \u003c 0) {","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"germainelee02"},"content":"                        throw new DukeException(\"This index doesn\u0027t exist.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"germainelee02"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":105,"author":{"gitId":"germainelee02"},"content":"                    Task unmarkedTask \u003d this.tasks.markTaskInListUndone(idx);","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"germainelee02"},"content":"                    this.ui.unmarkResponse(unmarkedTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"germainelee02"},"content":"                    this.storage.deleteFileAndRedo(this.tasks.getList());","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"germainelee02"},"content":"                } else if (cm.equals(Command.DELETE)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"germainelee02"},"content":"                    if (elemArr.length !\u003d 2) {","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"germainelee02"},"content":"                        throw new DukeException(\"Only one argument for delete allowed\");","lastModifiedDate":"2023-01-17"},{"lineNumber":111,"author":{"gitId":"germainelee02"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":112,"author":{"gitId":"germainelee02"},"content":"                    String idxStr \u003d elemArr[1];","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"germainelee02"},"content":"                    if (!idxStr.chars().allMatch(Character::isDigit)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":114,"author":{"gitId":"germainelee02"},"content":"                        throw new DukeException(\"Argument must be a digit\");","lastModifiedDate":"2023-01-17"},{"lineNumber":115,"author":{"gitId":"germainelee02"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":116,"author":{"gitId":"germainelee02"},"content":"                    int idx \u003d Integer.parseInt(idxStr) - 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":117,"author":{"gitId":"germainelee02"},"content":"                    if (idx \u003e\u003d this.tasks.getList().size() || idx \u003c 0) {","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"germainelee02"},"content":"                        throw new DukeException(\"This index doesn\u0027t exist.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":119,"author":{"gitId":"germainelee02"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":120,"author":{"gitId":"germainelee02"},"content":"                    Task removedTask \u003d this.tasks.removeItem(idx);","lastModifiedDate":"2023-01-23"},{"lineNumber":121,"author":{"gitId":"germainelee02"},"content":"                    this.ui.deleteItemResponse(removedTask, this.tasks.getList());","lastModifiedDate":"2023-01-23"},{"lineNumber":122,"author":{"gitId":"germainelee02"},"content":"                    this.storage.deleteFileAndRedo(this.tasks.getList());","lastModifiedDate":"2023-01-23"},{"lineNumber":123,"author":{"gitId":"germainelee02"},"content":"                } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":124,"author":{"gitId":"germainelee02"},"content":"                    Task addedTask \u003d this.tasks.addItem(line, Command.valueOf(command));","lastModifiedDate":"2023-01-23"},{"lineNumber":125,"author":{"gitId":"germainelee02"},"content":"                    this.storage.writeToFile(addedTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":126,"author":{"gitId":"germainelee02"},"content":"                    this.ui.addItemResponse(addedTask, this.tasks.getList());","lastModifiedDate":"2023-01-23"},{"lineNumber":127,"author":{"gitId":"germainelee02"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"germainelee02"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":129,"author":{"gitId":"germainelee02"},"content":"                this.ui.printWithLines(\" \" + e.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":130,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":131,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":132,"author":{"gitId":"germainelee02"},"content":"        this.ui.goodBye();","lastModifiedDate":"2023-01-23"},{"lineNumber":133,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":134,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":135,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":136,"author":{"gitId":"germainelee02"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-23"},{"lineNumber":137,"author":{"gitId":"germainelee02"},"content":"        String filePathName \u003d \".\" + File.separator + \"src\" + File.separator + \"main\" + File.separator + \"data\" + File.separator + \"duke\";","lastModifiedDate":"2023-01-23"},{"lineNumber":138,"author":{"gitId":"germainelee02"},"content":"        new Duke(filePathName).run();","lastModifiedDate":"2023-01-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":141,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"germainelee02":138,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"        return \"duke.Duke Exception: OOPS! \" + super.getMessage();","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"germainelee02":12}},{"path":"src/main/java/duke/taskers/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.taskers;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM uuuu h.mm a\");","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"    public Deadline(String desc, boolean isDone, LocalDateTime end) {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"        super(desc, isDone);","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"    public String statusStringForFile() {","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"        return String.format(\"DEADLINE / %s / %s\", super.stringFormatForFile(), this.end.format(FORMATTER));","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"     * overriding the toString function to contain the type of task being created","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"     * @return string of the deadline being created","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.end.format(FORMATTER) + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"germainelee02":28}},{"path":"src/main/java/duke/taskers/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.taskers;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM uuuu h.mm a\");","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    public Event(String desc, boolean isDone, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"        super(desc, isDone);","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"    public String statusStringForFile() {","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"        return String.format(\"EVENT / %s / %s / %s\", super.stringFormatForFile(), this.start.format(FORMATTER), this.end.format(FORMATTER));","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"     * returns the string of the event","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"     * @return the string of  the event","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.start.format(FORMATTER) + \" to: \" + this.end.format(FORMATTER) + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"germainelee02":31}},{"path":"src/main/java/duke/taskers/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.taskers;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"    private final String description;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"     * marks the task as done","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"     * unmarks the tast","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"    public String stringFormatForFile() {","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"        return ((this.isDone ? \"1\" : \"0\") + \" / \" + this.description.trim()).trim();","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"     * format for the task string","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"     * @return the string representing the task","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"        return (this.isDone ? \"[X]\" : \"[ ]\") + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"germainelee02":39}},{"path":"src/main/java/duke/taskers/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.taskers;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"    public Todo(String description,  boolean isDone) {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"    public String statusStringForFile() {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"        return String.format(\"TODO / %s\", super.stringFormatForFile());","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"     * string representation of the todo","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"     * @return todo string","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"germainelee02":22}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.util;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import duke.Command;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"public class Parser {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"    public static Command parseCommand(String command) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"        if (!Command.contains(command)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"            throw new DukeException(\"Sorry! I don\u0027t know what that means!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"        return Command.valueOf(command);","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"    public static String[] parseStartingElements(String elemString) {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"        return elemString.split(\" \");","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"    public static String parseTodo(String str) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"        return str.substring(4);","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"    public static String[] parseDeadline(String str) {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"        String temp \u003d str.substring(8);","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"        return temp.split(\"/by\");","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"    public static String[] parseEvent(String str) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"        String temp \u003d str.substring(5);","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"        String[] arr1 \u003d temp.split(\"/from\");","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"        if (arr1.length !\u003d 2) {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"            throw new DukeException(\"I don\u0027t know what that means. Format it as \u0027event [do something] /from [start date] /to [end date]\u0027\");","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"        String[] arr2 \u003d arr1[1].split(\"/to\");","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"        if (arr2.length !\u003d 2) {","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"            throw new DukeException(\"I don\u0027t know what that means. Format it as \u0027event [do something] /from [start date] /to [end date]\u0027\");","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"        return new String[] {arr1[0], arr2[0], arr2[1]};","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"germainelee02":41}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.util;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import duke.Command;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Event;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Todo;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"public class Storage {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"    private final String dirPath;","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"    private final File dukeFile;","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"        int lastIndexOfSlash \u003d this.filePath.lastIndexOf(File.separator);","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"        this.dirPath \u003d this.filePath.substring(0, lastIndexOfSlash);","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"        this.dukeFile \u003d new File(this.filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"     * the function that formats the task to store into the duke file","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"     * @param t the task to be appended to the file","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"     * @return the string representation to be appended to the file","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"    public static String taskStringFormatter(Task t) {","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"        String s \u003d \"\";","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"        if (t instanceof Todo) {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"            Todo todo \u003d (Todo) t;","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"            s \u003d todo.statusStringForFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"        } else if (t instanceof Deadline) {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"            Deadline deadline \u003d (Deadline) t;","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"            s \u003d deadline.statusStringForFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"            Event event \u003d (Event) t;","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"            s \u003d event.statusStringForFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"        return s;","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"germainelee02"},"content":"     * writes the tasks to the duke file","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"germainelee02"},"content":"     * @param item the task that is inserted into the duke file","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"germainelee02"},"content":"    public void writeToFile(Task item) {","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"germainelee02"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"germainelee02"},"content":"            String fileInputString \u003d taskStringFormatter(item);","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"germainelee02"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"germainelee02"},"content":"            fw.write(fileInputString + System.lineSeparator());","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"germainelee02"},"content":"            fw.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"germainelee02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"germainelee02"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"germainelee02"},"content":"     * loads all the items from the duke file","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"germainelee02"},"content":"    public ArrayList\u003cTask\u003e loadFromFile() throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"germainelee02"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"germainelee02"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"germainelee02"},"content":"            Files.createDirectories(Paths.get(this.dirPath));","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"germainelee02"},"content":"            this.dukeFile.createNewFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"germainelee02"},"content":"            Scanner sc \u003d new Scanner(this.dukeFile);","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"germainelee02"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"germainelee02"},"content":"                String str \u003d sc.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"germainelee02"},"content":"                String[] valueArr \u003d str.split(\"/\");","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"germainelee02"},"content":"                // throw exceptions here later if you want","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"germainelee02"},"content":"                String type \u003d valueArr[0].toUpperCase().trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"germainelee02"},"content":"                Command commandType \u003d Parser.parseCommand(type);","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"germainelee02"},"content":"                Task thisTask \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"germainelee02"},"content":"                boolean doneOrNot \u003d valueArr[1].equals(\"1\");","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"germainelee02"},"content":"                if (commandType.equals(Command.TODO)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"germainelee02"},"content":"                    thisTask \u003d new Todo(valueArr[2], doneOrNot);","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"germainelee02"},"content":"                } else if (commandType.equals(Command.DEADLINE)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"germainelee02"},"content":"                    LocalDateTime end \u003d Duke.createLocalDateTime(valueArr[3]);","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"germainelee02"},"content":"                    thisTask \u003d new Deadline(valueArr[2], doneOrNot, end);","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"germainelee02"},"content":"                } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"germainelee02"},"content":"                    LocalDateTime start \u003d Duke.createLocalDateTime(valueArr[3]);","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"germainelee02"},"content":"                    LocalDateTime end \u003d Duke.createLocalDateTime(valueArr[4]);","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"germainelee02"},"content":"                    thisTask \u003d new Event(valueArr[2], doneOrNot, start, end);","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"germainelee02"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"germainelee02"},"content":"                loadedTasks.add(thisTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"germainelee02"},"content":"            return loadedTasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"germainelee02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"germainelee02"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"germainelee02"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":111,"author":{"gitId":"germainelee02"},"content":"     * the function that deletes the entire duke file and re-inserts it with the current one.","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"germainelee02"},"content":"     * used for delete, mark and unmark when values are changed","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":114,"author":{"gitId":"germainelee02"},"content":"    public void deleteFileAndRedo(ArrayList\u003cTask\u003e listOfThings) {","lastModifiedDate":"2023-01-23"},{"lineNumber":115,"author":{"gitId":"germainelee02"},"content":"        if (this.dukeFile.delete()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":116,"author":{"gitId":"germainelee02"},"content":"            for (Task item : listOfThings) {","lastModifiedDate":"2023-01-23"},{"lineNumber":117,"author":{"gitId":"germainelee02"},"content":"                writeToFile(item);","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":119,"author":{"gitId":"germainelee02"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":120,"author":{"gitId":"germainelee02"},"content":"            System.out.println(\"File deletion failed\");","lastModifiedDate":"2023-01-23"},{"lineNumber":121,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":122,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":123,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":124,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":125,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"germainelee02":125}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.util;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import duke.Command;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Event;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Todo;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"public class TaskList {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"    private final ArrayList\u003cTask\u003e listOfThings;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"    public TaskList(ArrayList\u003cTask\u003e loadedTasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"        this.listOfThings \u003d loadedTasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"        this.listOfThings \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"        return this.listOfThings;","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"     * marks the task inside the list as done","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"     * @param index the index in the array of the task we want marked","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"     * @return the task that is marked","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"    public Task markTaskInListDone(int index) {","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"        this.listOfThings.get(index).markDone();","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"        return this.listOfThings.get(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"     * marks the task inside the list as undone","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"     * @param index the index in the array of the task we want unmarked","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"     * @return the task we just unmarked","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"    public Task markTaskInListUndone(int index) {","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"        this.listOfThings.get(index).markUndone();","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"        return this.listOfThings.get(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"germainelee02"},"content":"     * @param text the text containing the information of the command","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"germainelee02"},"content":"     * @param add type of add command use","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"germainelee02"},"content":"     * @throws DukeException when the format is wrong","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"germainelee02"},"content":"    public Task addItem(String text, Command add) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"germainelee02"},"content":"        Task addedItem \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"germainelee02"},"content":"        if (add.equals(Command.TODO)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"germainelee02"},"content":"            String contents \u003d Parser.parseTodo(text);","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"germainelee02"},"content":"            if (contents.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"The description of a todo cannot be empty\");","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"germainelee02"},"content":"            addedItem \u003d new Todo(contents, false);","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"germainelee02"},"content":"        } else if (add.equals(Command.DEADLINE)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"germainelee02"},"content":"            String[] arr \u003d Parser.parseDeadline(text);","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"germainelee02"},"content":"            if (arr.length !\u003d 2) {","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"I don\u0027t know what that means. Format it as \u0027deadline [do something] /by [date]\");","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"germainelee02"},"content":"            LocalDateTime end \u003d Duke.createLocalDateTime(arr[1]);","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"germainelee02"},"content":"            if (end !\u003d null) {","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"germainelee02"},"content":"                addedItem \u003d new Deadline(arr[0], false, end);","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"germainelee02"},"content":"            } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"Format date as YYYY-MM-DD HH:mm\");","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"germainelee02"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"germainelee02"},"content":"            String[] arr \u003d Parser.parseEvent(text);","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"germainelee02"},"content":"            if (arr.length !\u003d 3) {","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"I don\u0027t know what that means. Format it as \u0027event [do something] /from [start date] /to [end date]\u0027\");","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"germainelee02"},"content":"            LocalDateTime start \u003d Duke.createLocalDateTime(arr[1]);","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"germainelee02"},"content":"            LocalDateTime end \u003d Duke.createLocalDateTime(arr[2]);","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"germainelee02"},"content":"            if (start !\u003d null \u0026\u0026 end !\u003d null) {","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"germainelee02"},"content":"                addedItem \u003d new Event(arr[0], false, start, end);","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"germainelee02"},"content":"            } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"germainelee02"},"content":"                throw new DukeException(\"Format date as YYYY-MM-DD HH:mm\");","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"germainelee02"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"germainelee02"},"content":"        this.listOfThings.add(addedItem);","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"germainelee02"},"content":"        return addedItem;","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"germainelee02"},"content":"     * removes the item in the list","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"germainelee02"},"content":"     * @param index the index of the item to be removed","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"germainelee02"},"content":"    public Task removeItem(int index) {","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"germainelee02"},"content":"        return this.listOfThings.remove(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"germainelee02":107}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"package duke.util;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"import duke.taskers.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"public class Ui {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"     * iterates through the arraylist and prints out the elements inside","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"    public void printList(ArrayList\u003cTask\u003e arrList) {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"        String totalString \u003d \"\";","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"        totalString +\u003d \" Here are the tasks in your list:\";","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"        for (int i \u003d 0; i \u003c arrList.size(); i++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"            totalString +\u003d \"\\n     \" + (i+1) + \".\" + arrList.get(i).toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"        this.printWithLines(totalString);","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"germainelee02"},"content":"     * prints out the text with lines on top and below","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"germainelee02"},"content":"     * @param text the content that is to be printed out","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"germainelee02"},"content":"    public void printWithLines(String text) {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"germainelee02"},"content":"        System.out.println(\"    \" + text);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"germainelee02"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"germainelee02"},"content":"    public void greetings() {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"germainelee02"},"content":"        this.printWithLines(\" Hello! I\u0027m duke.Duke!\\n     What can I do for you today?\");","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"germainelee02"},"content":"    public void markResponse(Task t) {","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"germainelee02"},"content":"        String str \u003d \" Nice! I\u0027ve marked this task as done!:\\n\" + \"       \" + t.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"germainelee02"},"content":"        this.printWithLines(str);","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"germainelee02"},"content":"    public void unmarkResponse(Task t) {","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"germainelee02"},"content":"        String str \u003d \" OK, I\u0027ve marked this task as not done yet:\\n\" + \"       \" + t.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"germainelee02"},"content":"        this.printWithLines(str);","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"germainelee02"},"content":"    public void addItemResponse(Task t, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"germainelee02"},"content":"        String str \u003d \"  \" + t.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"germainelee02"},"content":"        str \u003d \" Got it. I\u0027ve added this task:\\n     \" + str;","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"germainelee02"},"content":"        this.printWithLines(str + listUpdate(arr));","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"germainelee02"},"content":"    public void goodBye() {","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"germainelee02"},"content":"        this.printWithLines(\" Bye! Hope to see you again soon!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"germainelee02"},"content":"    public void deleteItemResponse(Task t, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"germainelee02"},"content":"        String str \u003d \" Noted. I\u0027m removing this task:\\n       \" + t.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"germainelee02"},"content":"        this.printWithLines(str + listUpdate(arr));","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"germainelee02"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"germainelee02"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"germainelee02"},"content":"     * @return the string that updates the number of elements left in the string","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"germainelee02"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"germainelee02"},"content":"    public String listUpdate(ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"germainelee02"},"content":"        String plural \u003d \"\";","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"germainelee02"},"content":"        if (arr.size() \u003e 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"germainelee02"},"content":"            plural \u003d \"s\";","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"germainelee02"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"germainelee02"},"content":"        return \"\\n     Now you have \" + arr.size() + \" task\" + plural + \" in the list.\";","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"germainelee02"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"germainelee02"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"germainelee02":76}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"germainelee02"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"germainelee02"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"germainelee02"},"content":"event read book /from 2005-06-13 08:00 /to 2011-04-27 13:52","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"germainelee02"},"content":"deadline submit book report /by 2011-05-21 11:26","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"germainelee02"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"germainelee02"},"content":"mark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"germainelee02"},"content":"mark 3","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"germainelee02"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"germainelee02"},"content":"todo return book","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"germainelee02"},"content":"mark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"germainelee02"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"germainelee02"},"content":"unmark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"germainelee02"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"germainelee02"},"content":"unmark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"germainelee02"},"content":"deadline get chinese new year clothes /by 2017-01-05 10:32","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"germainelee02"},"content":"event chinese new year! /from 2008-01-01 03:43 /to 2010-03-22 11:39","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"germainelee02"},"content":"delete 3","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"germainelee02"},"content":"deadline get productive /by 2019-06-25 12:52","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"germainelee02"},"content":"bye","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"germainelee02"},"content":"","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"germainelee02":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"germainelee02"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"germainelee02":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"germainelee02"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"germainelee02":1,"-":33}}]
